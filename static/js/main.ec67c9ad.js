/*! For license information please see main.ec67c9ad.js.LICENSE.txt */
!function(){"use strict";var e={463:function(e,t,n){var r=n(791),i=n(296);function a(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var o=new Set,s={};function l(e,t){u(e,t),u(e+"Capture",t)}function u(e,t){for(s[e]=t,e=0;e<t.length;e++)o.add(t[e])}var c=!("undefined"===typeof window||"undefined"===typeof window.document||"undefined"===typeof window.document.createElement),d=Object.prototype.hasOwnProperty,f=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,h={},p={};function m(e,t,n,r,i,a,o){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=i,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=a,this.removeEmptyString=o}var v={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){v[e]=new m(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];v[t]=new m(t,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){v[e]=new m(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){v[e]=new m(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){v[e]=new m(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){v[e]=new m(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){v[e]=new m(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){v[e]=new m(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){v[e]=new m(e,5,!1,e.toLowerCase(),null,!1,!1)}));var g=/[\-:]([a-z])/g;function y(e){return e[1].toUpperCase()}function _(e,t,n,r){var i=v.hasOwnProperty(t)?v[t]:null;(null!==i?0!==i.type:r||!(2<t.length)||"o"!==t[0]&&"O"!==t[0]||"n"!==t[1]&&"N"!==t[1])&&(function(e,t,n,r){if(null===t||"undefined"===typeof t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,i,r)&&(n=null),r||null===i?function(e){return!!d.call(p,e)||!d.call(h,e)&&(f.test(e)?p[e]=!0:(h[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):i.mustUseProperty?e[i.propertyName]=null===n?3!==i.type&&"":n:(t=i.attributeName,r=i.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(i=i.type)||4===i&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(g,y);v[t]=new m(t,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(g,y);v[t]=new m(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(g,y);v[t]=new m(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){v[e]=new m(e,1,!1,e.toLowerCase(),null,!1,!1)})),v.xlinkHref=new m("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){v[e]=new m(e,1,!1,e.toLowerCase(),null,!0,!0)}));var x=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,b=Symbol.for("react.element"),S=Symbol.for("react.portal"),M=Symbol.for("react.fragment"),w=Symbol.for("react.strict_mode"),E=Symbol.for("react.profiler"),T=Symbol.for("react.provider"),k=Symbol.for("react.context"),C=Symbol.for("react.forward_ref"),L=Symbol.for("react.suspense"),A=Symbol.for("react.suspense_list"),P=Symbol.for("react.memo"),R=Symbol.for("react.lazy");Symbol.for("react.scope"),Symbol.for("react.debug_trace_mode");var D=Symbol.for("react.offscreen");Symbol.for("react.legacy_hidden"),Symbol.for("react.cache"),Symbol.for("react.tracing_marker");var N=Symbol.iterator;function I(e){return null===e||"object"!==typeof e?null:"function"===typeof(e=N&&e[N]||e["@@iterator"])?e:null}var O,z=Object.assign;function U(e){if(void 0===O)try{throw Error()}catch(n){var t=n.stack.trim().match(/\n( *(at )?)/);O=t&&t[1]||""}return"\n"+O+e}var F=!1;function B(e,t){if(!e||F)return"";F=!0;var n=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),"object"===typeof Reflect&&Reflect.construct){try{Reflect.construct(t,[])}catch(u){var r=u}Reflect.construct(e,[],t)}else{try{t.call()}catch(u){r=u}e.call(t.prototype)}else{try{throw Error()}catch(u){r=u}e()}}catch(u){if(u&&r&&"string"===typeof u.stack){for(var i=u.stack.split("\n"),a=r.stack.split("\n"),o=i.length-1,s=a.length-1;1<=o&&0<=s&&i[o]!==a[s];)s--;for(;1<=o&&0<=s;o--,s--)if(i[o]!==a[s]){if(1!==o||1!==s)do{if(o--,0>--s||i[o]!==a[s]){var l="\n"+i[o].replace(" at new "," at ");return e.displayName&&l.includes("<anonymous>")&&(l=l.replace("<anonymous>",e.displayName)),l}}while(1<=o&&0<=s);break}}}finally{F=!1,Error.prepareStackTrace=n}return(e=e?e.displayName||e.name:"")?U(e):""}function V(e){switch(e.tag){case 5:return U(e.type);case 16:return U("Lazy");case 13:return U("Suspense");case 19:return U("SuspenseList");case 0:case 2:case 15:return e=B(e.type,!1);case 11:return e=B(e.type.render,!1);case 1:return e=B(e.type,!0);default:return""}}function H(e){if(null==e)return null;if("function"===typeof e)return e.displayName||e.name||null;if("string"===typeof e)return e;switch(e){case M:return"Fragment";case S:return"Portal";case E:return"Profiler";case w:return"StrictMode";case L:return"Suspense";case A:return"SuspenseList"}if("object"===typeof e)switch(e.$$typeof){case k:return(e.displayName||"Context")+".Consumer";case T:return(e._context.displayName||"Context")+".Provider";case C:var t=e.render;return(e=e.displayName)||(e=""!==(e=t.displayName||t.name||"")?"ForwardRef("+e+")":"ForwardRef"),e;case P:return null!==(t=e.displayName||null)?t:H(e.type)||"Memo";case R:t=e._payload,e=e._init;try{return H(e(t))}catch(n){}}return null}function G(e){var t=e.type;switch(e.tag){case 24:return"Cache";case 9:return(t.displayName||"Context")+".Consumer";case 10:return(t._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return e=(e=t.render).displayName||e.name||"",t.displayName||(""!==e?"ForwardRef("+e+")":"ForwardRef");case 7:return"Fragment";case 5:return t;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return H(t);case 8:return t===w?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if("function"===typeof t)return t.displayName||t.name||null;if("string"===typeof t)return t}return null}function W(e){switch(typeof e){case"boolean":case"number":case"string":case"undefined":case"object":return e;default:return""}}function j(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function q(e){e._valueTracker||(e._valueTracker=function(e){var t=j(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&"undefined"!==typeof n&&"function"===typeof n.get&&"function"===typeof n.set){var i=n.get,a=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return i.call(this)},set:function(e){r=""+e,a.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function X(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=j(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}function Y(e){if("undefined"===typeof(e=e||("undefined"!==typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function Z(e,t){var n=t.checked;return z({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function K(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=W(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function Q(e,t){null!=(t=t.checked)&&_(e,"checked",t,!1)}function $(e,t){Q(e,t);var n=W(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?ee(e,t.type,n):t.hasOwnProperty("defaultValue")&&ee(e,t.type,W(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function J(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function ee(e,t,n){"number"===t&&Y(e.ownerDocument)===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}var te=Array.isArray;function ne(e,t,n,r){if(e=e.options,t){t={};for(var i=0;i<n.length;i++)t["$"+n[i]]=!0;for(n=0;n<e.length;n++)i=t.hasOwnProperty("$"+e[n].value),e[n].selected!==i&&(e[n].selected=i),i&&r&&(e[n].defaultSelected=!0)}else{for(n=""+W(n),t=null,i=0;i<e.length;i++){if(e[i].value===n)return e[i].selected=!0,void(r&&(e[i].defaultSelected=!0));null!==t||e[i].disabled||(t=e[i])}null!==t&&(t.selected=!0)}}function re(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(a(91));return z({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function ie(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(a(92));if(te(n)){if(1<n.length)throw Error(a(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:W(n)}}function ae(e,t){var n=W(t.value),r=W(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function oe(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}function se(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function le(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?se(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var ue,ce,de=(ce=function(e,t){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=t;else{for((ue=ue||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=ue.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,r){MSApp.execUnsafeLocalFunction((function(){return ce(e,t)}))}:ce);function fe(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var he={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},pe=["Webkit","ms","Moz","O"];function me(e,t,n){return null==t||"boolean"===typeof t||""===t?"":n||"number"!==typeof t||0===t||he.hasOwnProperty(e)&&he[e]?(""+t).trim():t+"px"}function ve(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),i=me(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,i):e[n]=i}}Object.keys(he).forEach((function(e){pe.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),he[t]=he[e]}))}));var ge=z({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function ye(e,t){if(t){if(ge[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(a(137,e));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(a(60));if("object"!==typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(a(61))}if(null!=t.style&&"object"!==typeof t.style)throw Error(a(62))}}function _e(e,t){if(-1===e.indexOf("-"))return"string"===typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var xe=null;function be(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var Se=null,Me=null,we=null;function Ee(e){if(e=_i(e)){if("function"!==typeof Se)throw Error(a(280));var t=e.stateNode;t&&(t=bi(t),Se(e.stateNode,e.type,t))}}function Te(e){Me?we?we.push(e):we=[e]:Me=e}function ke(){if(Me){var e=Me,t=we;if(we=Me=null,Ee(e),t)for(e=0;e<t.length;e++)Ee(t[e])}}function Ce(e,t){return e(t)}function Le(){}var Ae=!1;function Pe(e,t,n){if(Ae)return e(t,n);Ae=!0;try{return Ce(e,t,n)}finally{Ae=!1,(null!==Me||null!==we)&&(Le(),ke())}}function Re(e,t){var n=e.stateNode;if(null===n)return null;var r=bi(n);if(null===r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(n&&"function"!==typeof n)throw Error(a(231,t,typeof n));return n}var De=!1;if(c)try{var Ne={};Object.defineProperty(Ne,"passive",{get:function(){De=!0}}),window.addEventListener("test",Ne,Ne),window.removeEventListener("test",Ne,Ne)}catch(ce){De=!1}function Ie(e,t,n,r,i,a,o,s,l){var u=Array.prototype.slice.call(arguments,3);try{t.apply(n,u)}catch(c){this.onError(c)}}var Oe=!1,ze=null,Ue=!1,Fe=null,Be={onError:function(e){Oe=!0,ze=e}};function Ve(e,t,n,r,i,a,o,s,l){Oe=!1,ze=null,Ie.apply(Be,arguments)}function He(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!==(4098&(t=e).flags)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function Ge(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&(null!==(e=e.alternate)&&(t=e.memoizedState)),null!==t)return t.dehydrated}return null}function We(e){if(He(e)!==e)throw Error(a(188))}function je(e){return null!==(e=function(e){var t=e.alternate;if(!t){if(null===(t=He(e)))throw Error(a(188));return t!==e?null:e}for(var n=e,r=t;;){var i=n.return;if(null===i)break;var o=i.alternate;if(null===o){if(null!==(r=i.return)){n=r;continue}break}if(i.child===o.child){for(o=i.child;o;){if(o===n)return We(i),e;if(o===r)return We(i),t;o=o.sibling}throw Error(a(188))}if(n.return!==r.return)n=i,r=o;else{for(var s=!1,l=i.child;l;){if(l===n){s=!0,n=i,r=o;break}if(l===r){s=!0,r=i,n=o;break}l=l.sibling}if(!s){for(l=o.child;l;){if(l===n){s=!0,n=o,r=i;break}if(l===r){s=!0,r=o,n=i;break}l=l.sibling}if(!s)throw Error(a(189))}}if(n.alternate!==r)throw Error(a(190))}if(3!==n.tag)throw Error(a(188));return n.stateNode.current===n?e:t}(e))?qe(e):null}function qe(e){if(5===e.tag||6===e.tag)return e;for(e=e.child;null!==e;){var t=qe(e);if(null!==t)return t;e=e.sibling}return null}var Xe=i.unstable_scheduleCallback,Ye=i.unstable_cancelCallback,Ze=i.unstable_shouldYield,Ke=i.unstable_requestPaint,Qe=i.unstable_now,$e=i.unstable_getCurrentPriorityLevel,Je=i.unstable_ImmediatePriority,et=i.unstable_UserBlockingPriority,tt=i.unstable_NormalPriority,nt=i.unstable_LowPriority,rt=i.unstable_IdlePriority,it=null,at=null;var ot=Math.clz32?Math.clz32:function(e){return e>>>=0,0===e?32:31-(st(e)/lt|0)|0},st=Math.log,lt=Math.LN2;var ut=64,ct=4194304;function dt(e){switch(e&-e){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return 4194240&e;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return 130023424&e;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return e}}function ft(e,t){var n=e.pendingLanes;if(0===n)return 0;var r=0,i=e.suspendedLanes,a=e.pingedLanes,o=268435455&n;if(0!==o){var s=o&~i;0!==s?r=dt(s):0!==(a&=o)&&(r=dt(a))}else 0!==(o=n&~i)?r=dt(o):0!==a&&(r=dt(a));if(0===r)return 0;if(0!==t&&t!==r&&0===(t&i)&&((i=r&-r)>=(a=t&-t)||16===i&&0!==(4194240&a)))return t;if(0!==(4&r)&&(r|=16&n),0!==(t=e.entangledLanes))for(e=e.entanglements,t&=r;0<t;)i=1<<(n=31-ot(t)),r|=e[n],t&=~i;return r}function ht(e,t){switch(e){case 1:case 2:case 4:return t+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return t+5e3;default:return-1}}function pt(e){return 0!==(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function mt(){var e=ut;return 0===(4194240&(ut<<=1))&&(ut=64),e}function vt(e){for(var t=[],n=0;31>n;n++)t.push(e);return t}function gt(e,t,n){e.pendingLanes|=t,536870912!==t&&(e.suspendedLanes=0,e.pingedLanes=0),(e=e.eventTimes)[t=31-ot(t)]=n}function yt(e,t){var n=e.entangledLanes|=t;for(e=e.entanglements;n;){var r=31-ot(n),i=1<<r;i&t|e[r]&t&&(e[r]|=t),n&=~i}}var _t=0;function xt(e){return 1<(e&=-e)?4<e?0!==(268435455&e)?16:536870912:4:1}var bt,St,Mt,wt,Et,Tt=!1,kt=[],Ct=null,Lt=null,At=null,Pt=new Map,Rt=new Map,Dt=[],Nt="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function It(e,t){switch(e){case"focusin":case"focusout":Ct=null;break;case"dragenter":case"dragleave":Lt=null;break;case"mouseover":case"mouseout":At=null;break;case"pointerover":case"pointerout":Pt.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":Rt.delete(t.pointerId)}}function Ot(e,t,n,r,i,a){return null===e||e.nativeEvent!==a?(e={blockedOn:t,domEventName:n,eventSystemFlags:r,nativeEvent:a,targetContainers:[i]},null!==t&&(null!==(t=_i(t))&&St(t)),e):(e.eventSystemFlags|=r,t=e.targetContainers,null!==i&&-1===t.indexOf(i)&&t.push(i),e)}function zt(e){var t=yi(e.target);if(null!==t){var n=He(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=Ge(n)))return e.blockedOn=t,void Et(e.priority,(function(){Mt(n)}))}else if(3===t&&n.stateNode.current.memoizedState.isDehydrated)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function Ut(e){if(null!==e.blockedOn)return!1;for(var t=e.targetContainers;0<t.length;){var n=Zt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n)return null!==(t=_i(n))&&St(t),e.blockedOn=n,!1;var r=new(n=e.nativeEvent).constructor(n.type,n);xe=r,n.target.dispatchEvent(r),xe=null,t.shift()}return!0}function Ft(e,t,n){Ut(e)&&n.delete(t)}function Bt(){Tt=!1,null!==Ct&&Ut(Ct)&&(Ct=null),null!==Lt&&Ut(Lt)&&(Lt=null),null!==At&&Ut(At)&&(At=null),Pt.forEach(Ft),Rt.forEach(Ft)}function Vt(e,t){e.blockedOn===t&&(e.blockedOn=null,Tt||(Tt=!0,i.unstable_scheduleCallback(i.unstable_NormalPriority,Bt)))}function Ht(e){function t(t){return Vt(t,e)}if(0<kt.length){Vt(kt[0],e);for(var n=1;n<kt.length;n++){var r=kt[n];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==Ct&&Vt(Ct,e),null!==Lt&&Vt(Lt,e),null!==At&&Vt(At,e),Pt.forEach(t),Rt.forEach(t),n=0;n<Dt.length;n++)(r=Dt[n]).blockedOn===e&&(r.blockedOn=null);for(;0<Dt.length&&null===(n=Dt[0]).blockedOn;)zt(n),null===n.blockedOn&&Dt.shift()}var Gt=x.ReactCurrentBatchConfig,Wt=!0;function jt(e,t,n,r){var i=_t,a=Gt.transition;Gt.transition=null;try{_t=1,Xt(e,t,n,r)}finally{_t=i,Gt.transition=a}}function qt(e,t,n,r){var i=_t,a=Gt.transition;Gt.transition=null;try{_t=4,Xt(e,t,n,r)}finally{_t=i,Gt.transition=a}}function Xt(e,t,n,r){if(Wt){var i=Zt(e,t,n,r);if(null===i)Wr(e,t,r,Yt,n),It(e,r);else if(function(e,t,n,r,i){switch(t){case"focusin":return Ct=Ot(Ct,e,t,n,r,i),!0;case"dragenter":return Lt=Ot(Lt,e,t,n,r,i),!0;case"mouseover":return At=Ot(At,e,t,n,r,i),!0;case"pointerover":var a=i.pointerId;return Pt.set(a,Ot(Pt.get(a)||null,e,t,n,r,i)),!0;case"gotpointercapture":return a=i.pointerId,Rt.set(a,Ot(Rt.get(a)||null,e,t,n,r,i)),!0}return!1}(i,e,t,n,r))r.stopPropagation();else if(It(e,r),4&t&&-1<Nt.indexOf(e)){for(;null!==i;){var a=_i(i);if(null!==a&&bt(a),null===(a=Zt(e,t,n,r))&&Wr(e,t,r,Yt,n),a===i)break;i=a}null!==i&&r.stopPropagation()}else Wr(e,t,r,null,n)}}var Yt=null;function Zt(e,t,n,r){if(Yt=null,null!==(e=yi(e=be(r))))if(null===(t=He(e)))e=null;else if(13===(n=t.tag)){if(null!==(e=Ge(t)))return e;e=null}else if(3===n){if(t.stateNode.current.memoizedState.isDehydrated)return 3===t.tag?t.stateNode.containerInfo:null;e=null}else t!==e&&(e=null);return Yt=e,null}function Kt(e){switch(e){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch($e()){case Je:return 1;case et:return 4;case tt:case nt:return 16;case rt:return 536870912;default:return 16}default:return 16}}var Qt=null,$t=null,Jt=null;function en(){if(Jt)return Jt;var e,t,n=$t,r=n.length,i="value"in Qt?Qt.value:Qt.textContent,a=i.length;for(e=0;e<r&&n[e]===i[e];e++);var o=r-e;for(t=1;t<=o&&n[r-t]===i[a-t];t++);return Jt=i.slice(e,1<t?1-t:void 0)}function tn(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}function nn(){return!0}function rn(){return!1}function an(e){function t(t,n,r,i,a){for(var o in this._reactName=t,this._targetInst=r,this.type=n,this.nativeEvent=i,this.target=a,this.currentTarget=null,e)e.hasOwnProperty(o)&&(t=e[o],this[o]=t?t(i):i[o]);return this.isDefaultPrevented=(null!=i.defaultPrevented?i.defaultPrevented:!1===i.returnValue)?nn:rn,this.isPropagationStopped=rn,this}return z(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!==typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=nn)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!==typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=nn)},persist:function(){},isPersistent:nn}),t}var on,sn,ln,un={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},cn=an(un),dn=z({},un,{view:0,detail:0}),fn=an(dn),hn=z({},dn,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:En,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==ln&&(ln&&"mousemove"===e.type?(on=e.screenX-ln.screenX,sn=e.screenY-ln.screenY):sn=on=0,ln=e),on)},movementY:function(e){return"movementY"in e?e.movementY:sn}}),pn=an(hn),mn=an(z({},hn,{dataTransfer:0})),vn=an(z({},dn,{relatedTarget:0})),gn=an(z({},un,{animationName:0,elapsedTime:0,pseudoElement:0})),yn=z({},un,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),_n=an(yn),xn=an(z({},un,{data:0})),bn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Sn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Mn={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function wn(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Mn[e])&&!!t[e]}function En(){return wn}var Tn=z({},dn,{key:function(e){if(e.key){var t=bn[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=tn(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?Sn[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:En,charCode:function(e){return"keypress"===e.type?tn(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?tn(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),kn=an(Tn),Cn=an(z({},hn,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),Ln=an(z({},dn,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:En})),An=an(z({},un,{propertyName:0,elapsedTime:0,pseudoElement:0})),Pn=z({},hn,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0}),Rn=an(Pn),Dn=[9,13,27,32],Nn=c&&"CompositionEvent"in window,In=null;c&&"documentMode"in document&&(In=document.documentMode);var On=c&&"TextEvent"in window&&!In,zn=c&&(!Nn||In&&8<In&&11>=In),Un=String.fromCharCode(32),Fn=!1;function Bn(e,t){switch(e){case"keyup":return-1!==Dn.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Vn(e){return"object"===typeof(e=e.detail)&&"data"in e?e.data:null}var Hn=!1;var Gn={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Wn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Gn[e.type]:"textarea"===t}function jn(e,t,n,r){Te(r),0<(t=qr(t,"onChange")).length&&(n=new cn("onChange","change",null,n,r),e.push({event:n,listeners:t}))}var qn=null,Xn=null;function Yn(e){Ur(e,0)}function Zn(e){if(X(xi(e)))return e}function Kn(e,t){if("change"===e)return t}var Qn=!1;if(c){var $n;if(c){var Jn="oninput"in document;if(!Jn){var er=document.createElement("div");er.setAttribute("oninput","return;"),Jn="function"===typeof er.oninput}$n=Jn}else $n=!1;Qn=$n&&(!document.documentMode||9<document.documentMode)}function tr(){qn&&(qn.detachEvent("onpropertychange",nr),Xn=qn=null)}function nr(e){if("value"===e.propertyName&&Zn(Xn)){var t=[];jn(t,Xn,e,be(e)),Pe(Yn,t)}}function rr(e,t,n){"focusin"===e?(tr(),Xn=n,(qn=t).attachEvent("onpropertychange",nr)):"focusout"===e&&tr()}function ir(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Zn(Xn)}function ar(e,t){if("click"===e)return Zn(t)}function or(e,t){if("input"===e||"change"===e)return Zn(t)}var sr="function"===typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e===1/t)||e!==e&&t!==t};function lr(e,t){if(sr(e,t))return!0;if("object"!==typeof e||null===e||"object"!==typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++){var i=n[r];if(!d.call(t,i)||!sr(e[i],t[i]))return!1}return!0}function ur(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function cr(e,t){var n,r=ur(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=ur(r)}}function dr(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?dr(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function fr(){for(var e=window,t=Y();t instanceof e.HTMLIFrameElement;){try{var n="string"===typeof t.contentWindow.location.href}catch(r){n=!1}if(!n)break;t=Y((e=t.contentWindow).document)}return t}function hr(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}function pr(e){var t=fr(),n=e.focusedElem,r=e.selectionRange;if(t!==n&&n&&n.ownerDocument&&dr(n.ownerDocument.documentElement,n)){if(null!==r&&hr(n))if(t=r.start,void 0===(e=r.end)&&(e=t),"selectionStart"in n)n.selectionStart=t,n.selectionEnd=Math.min(e,n.value.length);else if((e=(t=n.ownerDocument||document)&&t.defaultView||window).getSelection){e=e.getSelection();var i=n.textContent.length,a=Math.min(r.start,i);r=void 0===r.end?a:Math.min(r.end,i),!e.extend&&a>r&&(i=r,r=a,a=i),i=cr(n,a);var o=cr(n,r);i&&o&&(1!==e.rangeCount||e.anchorNode!==i.node||e.anchorOffset!==i.offset||e.focusNode!==o.node||e.focusOffset!==o.offset)&&((t=t.createRange()).setStart(i.node,i.offset),e.removeAllRanges(),a>r?(e.addRange(t),e.extend(o.node,o.offset)):(t.setEnd(o.node,o.offset),e.addRange(t)))}for(t=[],e=n;e=e.parentNode;)1===e.nodeType&&t.push({element:e,left:e.scrollLeft,top:e.scrollTop});for("function"===typeof n.focus&&n.focus(),n=0;n<t.length;n++)(e=t[n]).element.scrollLeft=e.left,e.element.scrollTop=e.top}}var mr=c&&"documentMode"in document&&11>=document.documentMode,vr=null,gr=null,yr=null,_r=!1;function xr(e,t,n){var r=n.window===n?n.document:9===n.nodeType?n:n.ownerDocument;_r||null==vr||vr!==Y(r)||("selectionStart"in(r=vr)&&hr(r)?r={start:r.selectionStart,end:r.selectionEnd}:r={anchorNode:(r=(r.ownerDocument&&r.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:r.anchorOffset,focusNode:r.focusNode,focusOffset:r.focusOffset},yr&&lr(yr,r)||(yr=r,0<(r=qr(gr,"onSelect")).length&&(t=new cn("onSelect","select",null,t,n),e.push({event:t,listeners:r}),t.target=vr)))}function br(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var Sr={animationend:br("Animation","AnimationEnd"),animationiteration:br("Animation","AnimationIteration"),animationstart:br("Animation","AnimationStart"),transitionend:br("Transition","TransitionEnd")},Mr={},wr={};function Er(e){if(Mr[e])return Mr[e];if(!Sr[e])return e;var t,n=Sr[e];for(t in n)if(n.hasOwnProperty(t)&&t in wr)return Mr[e]=n[t];return e}c&&(wr=document.createElement("div").style,"AnimationEvent"in window||(delete Sr.animationend.animation,delete Sr.animationiteration.animation,delete Sr.animationstart.animation),"TransitionEvent"in window||delete Sr.transitionend.transition);var Tr=Er("animationend"),kr=Er("animationiteration"),Cr=Er("animationstart"),Lr=Er("transitionend"),Ar=new Map,Pr="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function Rr(e,t){Ar.set(e,t),l(t,[e])}for(var Dr=0;Dr<Pr.length;Dr++){var Nr=Pr[Dr];Rr(Nr.toLowerCase(),"on"+(Nr[0].toUpperCase()+Nr.slice(1)))}Rr(Tr,"onAnimationEnd"),Rr(kr,"onAnimationIteration"),Rr(Cr,"onAnimationStart"),Rr("dblclick","onDoubleClick"),Rr("focusin","onFocus"),Rr("focusout","onBlur"),Rr(Lr,"onTransitionEnd"),u("onMouseEnter",["mouseout","mouseover"]),u("onMouseLeave",["mouseout","mouseover"]),u("onPointerEnter",["pointerout","pointerover"]),u("onPointerLeave",["pointerout","pointerover"]),l("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),l("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),l("onBeforeInput",["compositionend","keypress","textInput","paste"]),l("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),l("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),l("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var Ir="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Or=new Set("cancel close invalid load scroll toggle".split(" ").concat(Ir));function zr(e,t,n){var r=e.type||"unknown-event";e.currentTarget=n,function(e,t,n,r,i,o,s,l,u){if(Ve.apply(this,arguments),Oe){if(!Oe)throw Error(a(198));var c=ze;Oe=!1,ze=null,Ue||(Ue=!0,Fe=c)}}(r,t,void 0,e),e.currentTarget=null}function Ur(e,t){t=0!==(4&t);for(var n=0;n<e.length;n++){var r=e[n],i=r.event;r=r.listeners;e:{var a=void 0;if(t)for(var o=r.length-1;0<=o;o--){var s=r[o],l=s.instance,u=s.currentTarget;if(s=s.listener,l!==a&&i.isPropagationStopped())break e;zr(i,s,u),a=l}else for(o=0;o<r.length;o++){if(l=(s=r[o]).instance,u=s.currentTarget,s=s.listener,l!==a&&i.isPropagationStopped())break e;zr(i,s,u),a=l}}}if(Ue)throw e=Fe,Ue=!1,Fe=null,e}function Fr(e,t){var n=t[mi];void 0===n&&(n=t[mi]=new Set);var r=e+"__bubble";n.has(r)||(Gr(t,e,2,!1),n.add(r))}function Br(e,t,n){var r=0;t&&(r|=4),Gr(n,e,r,t)}var Vr="_reactListening"+Math.random().toString(36).slice(2);function Hr(e){if(!e[Vr]){e[Vr]=!0,o.forEach((function(t){"selectionchange"!==t&&(Or.has(t)||Br(t,!1,e),Br(t,!0,e))}));var t=9===e.nodeType?e:e.ownerDocument;null===t||t[Vr]||(t[Vr]=!0,Br("selectionchange",!1,t))}}function Gr(e,t,n,r){switch(Kt(t)){case 1:var i=jt;break;case 4:i=qt;break;default:i=Xt}n=i.bind(null,t,n,e),i=void 0,!De||"touchstart"!==t&&"touchmove"!==t&&"wheel"!==t||(i=!0),r?void 0!==i?e.addEventListener(t,n,{capture:!0,passive:i}):e.addEventListener(t,n,!0):void 0!==i?e.addEventListener(t,n,{passive:i}):e.addEventListener(t,n,!1)}function Wr(e,t,n,r,i){var a=r;if(0===(1&t)&&0===(2&t)&&null!==r)e:for(;;){if(null===r)return;var o=r.tag;if(3===o||4===o){var s=r.stateNode.containerInfo;if(s===i||8===s.nodeType&&s.parentNode===i)break;if(4===o)for(o=r.return;null!==o;){var l=o.tag;if((3===l||4===l)&&((l=o.stateNode.containerInfo)===i||8===l.nodeType&&l.parentNode===i))return;o=o.return}for(;null!==s;){if(null===(o=yi(s)))return;if(5===(l=o.tag)||6===l){r=a=o;continue e}s=s.parentNode}}r=r.return}Pe((function(){var r=a,i=be(n),o=[];e:{var s=Ar.get(e);if(void 0!==s){var l=cn,u=e;switch(e){case"keypress":if(0===tn(n))break e;case"keydown":case"keyup":l=kn;break;case"focusin":u="focus",l=vn;break;case"focusout":u="blur",l=vn;break;case"beforeblur":case"afterblur":l=vn;break;case"click":if(2===n.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":l=pn;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":l=mn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":l=Ln;break;case Tr:case kr:case Cr:l=gn;break;case Lr:l=An;break;case"scroll":l=fn;break;case"wheel":l=Rn;break;case"copy":case"cut":case"paste":l=_n;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":l=Cn}var c=0!==(4&t),d=!c&&"scroll"===e,f=c?null!==s?s+"Capture":null:s;c=[];for(var h,p=r;null!==p;){var m=(h=p).stateNode;if(5===h.tag&&null!==m&&(h=m,null!==f&&(null!=(m=Re(p,f))&&c.push(jr(p,m,h)))),d)break;p=p.return}0<c.length&&(s=new l(s,u,null,n,i),o.push({event:s,listeners:c}))}}if(0===(7&t)){if(l="mouseout"===e||"pointerout"===e,(!(s="mouseover"===e||"pointerover"===e)||n===xe||!(u=n.relatedTarget||n.fromElement)||!yi(u)&&!u[pi])&&(l||s)&&(s=i.window===i?i:(s=i.ownerDocument)?s.defaultView||s.parentWindow:window,l?(l=r,null!==(u=(u=n.relatedTarget||n.toElement)?yi(u):null)&&(u!==(d=He(u))||5!==u.tag&&6!==u.tag)&&(u=null)):(l=null,u=r),l!==u)){if(c=pn,m="onMouseLeave",f="onMouseEnter",p="mouse","pointerout"!==e&&"pointerover"!==e||(c=Cn,m="onPointerLeave",f="onPointerEnter",p="pointer"),d=null==l?s:xi(l),h=null==u?s:xi(u),(s=new c(m,p+"leave",l,n,i)).target=d,s.relatedTarget=h,m=null,yi(i)===r&&((c=new c(f,p+"enter",u,n,i)).target=h,c.relatedTarget=d,m=c),d=m,l&&u)e:{for(f=u,p=0,h=c=l;h;h=Xr(h))p++;for(h=0,m=f;m;m=Xr(m))h++;for(;0<p-h;)c=Xr(c),p--;for(;0<h-p;)f=Xr(f),h--;for(;p--;){if(c===f||null!==f&&c===f.alternate)break e;c=Xr(c),f=Xr(f)}c=null}else c=null;null!==l&&Yr(o,s,l,c,!1),null!==u&&null!==d&&Yr(o,d,u,c,!0)}if("select"===(l=(s=r?xi(r):window).nodeName&&s.nodeName.toLowerCase())||"input"===l&&"file"===s.type)var v=Kn;else if(Wn(s))if(Qn)v=or;else{v=ir;var g=rr}else(l=s.nodeName)&&"input"===l.toLowerCase()&&("checkbox"===s.type||"radio"===s.type)&&(v=ar);switch(v&&(v=v(e,r))?jn(o,v,n,i):(g&&g(e,s,r),"focusout"===e&&(g=s._wrapperState)&&g.controlled&&"number"===s.type&&ee(s,"number",s.value)),g=r?xi(r):window,e){case"focusin":(Wn(g)||"true"===g.contentEditable)&&(vr=g,gr=r,yr=null);break;case"focusout":yr=gr=vr=null;break;case"mousedown":_r=!0;break;case"contextmenu":case"mouseup":case"dragend":_r=!1,xr(o,n,i);break;case"selectionchange":if(mr)break;case"keydown":case"keyup":xr(o,n,i)}var y;if(Nn)e:{switch(e){case"compositionstart":var _="onCompositionStart";break e;case"compositionend":_="onCompositionEnd";break e;case"compositionupdate":_="onCompositionUpdate";break e}_=void 0}else Hn?Bn(e,n)&&(_="onCompositionEnd"):"keydown"===e&&229===n.keyCode&&(_="onCompositionStart");_&&(zn&&"ko"!==n.locale&&(Hn||"onCompositionStart"!==_?"onCompositionEnd"===_&&Hn&&(y=en()):($t="value"in(Qt=i)?Qt.value:Qt.textContent,Hn=!0)),0<(g=qr(r,_)).length&&(_=new xn(_,e,null,n,i),o.push({event:_,listeners:g}),y?_.data=y:null!==(y=Vn(n))&&(_.data=y))),(y=On?function(e,t){switch(e){case"compositionend":return Vn(t);case"keypress":return 32!==t.which?null:(Fn=!0,Un);case"textInput":return(e=t.data)===Un&&Fn?null:e;default:return null}}(e,n):function(e,t){if(Hn)return"compositionend"===e||!Nn&&Bn(e,t)?(e=en(),Jt=$t=Qt=null,Hn=!1,e):null;switch(e){case"paste":default:return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return zn&&"ko"!==t.locale?null:t.data}}(e,n))&&(0<(r=qr(r,"onBeforeInput")).length&&(i=new xn("onBeforeInput","beforeinput",null,n,i),o.push({event:i,listeners:r}),i.data=y))}Ur(o,t)}))}function jr(e,t,n){return{instance:e,listener:t,currentTarget:n}}function qr(e,t){for(var n=t+"Capture",r=[];null!==e;){var i=e,a=i.stateNode;5===i.tag&&null!==a&&(i=a,null!=(a=Re(e,n))&&r.unshift(jr(e,a,i)),null!=(a=Re(e,t))&&r.push(jr(e,a,i))),e=e.return}return r}function Xr(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function Yr(e,t,n,r,i){for(var a=t._reactName,o=[];null!==n&&n!==r;){var s=n,l=s.alternate,u=s.stateNode;if(null!==l&&l===r)break;5===s.tag&&null!==u&&(s=u,i?null!=(l=Re(n,a))&&o.unshift(jr(n,l,s)):i||null!=(l=Re(n,a))&&o.push(jr(n,l,s))),n=n.return}0!==o.length&&e.push({event:t,listeners:o})}var Zr=/\r\n?/g,Kr=/\u0000|\uFFFD/g;function Qr(e){return("string"===typeof e?e:""+e).replace(Zr,"\n").replace(Kr,"")}function $r(e,t,n){if(t=Qr(t),Qr(e)!==t&&n)throw Error(a(425))}function Jr(){}var ei=null,ti=null;function ni(e,t){return"textarea"===e||"noscript"===e||"string"===typeof t.children||"number"===typeof t.children||"object"===typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var ri="function"===typeof setTimeout?setTimeout:void 0,ii="function"===typeof clearTimeout?clearTimeout:void 0,ai="function"===typeof Promise?Promise:void 0,oi="function"===typeof queueMicrotask?queueMicrotask:"undefined"!==typeof ai?function(e){return ai.resolve(null).then(e).catch(si)}:ri;function si(e){setTimeout((function(){throw e}))}function li(e,t){var n=t,r=0;do{var i=n.nextSibling;if(e.removeChild(n),i&&8===i.nodeType)if("/$"===(n=i.data)){if(0===r)return e.removeChild(i),void Ht(t);r--}else"$"!==n&&"$?"!==n&&"$!"!==n||r++;n=i}while(n);Ht(t)}function ui(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break;if(8===t){if("$"===(t=e.data)||"$!"===t||"$?"===t)break;if("/$"===t)return null}}return e}function ci(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var di=Math.random().toString(36).slice(2),fi="__reactFiber$"+di,hi="__reactProps$"+di,pi="__reactContainer$"+di,mi="__reactEvents$"+di,vi="__reactListeners$"+di,gi="__reactHandles$"+di;function yi(e){var t=e[fi];if(t)return t;for(var n=e.parentNode;n;){if(t=n[pi]||n[fi]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=ci(e);null!==e;){if(n=e[fi])return n;e=ci(e)}return t}n=(e=n).parentNode}return null}function _i(e){return!(e=e[fi]||e[pi])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function xi(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(a(33))}function bi(e){return e[hi]||null}var Si=[],Mi=-1;function wi(e){return{current:e}}function Ei(e){0>Mi||(e.current=Si[Mi],Si[Mi]=null,Mi--)}function Ti(e,t){Mi++,Si[Mi]=e.current,e.current=t}var ki={},Ci=wi(ki),Li=wi(!1),Ai=ki;function Pi(e,t){var n=e.type.contextTypes;if(!n)return ki;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var i,a={};for(i in n)a[i]=t[i];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=a),a}function Ri(e){return null!==(e=e.childContextTypes)&&void 0!==e}function Di(){Ei(Li),Ei(Ci)}function Ni(e,t,n){if(Ci.current!==ki)throw Error(a(168));Ti(Ci,t),Ti(Li,n)}function Ii(e,t,n){var r=e.stateNode;if(t=t.childContextTypes,"function"!==typeof r.getChildContext)return n;for(var i in r=r.getChildContext())if(!(i in t))throw Error(a(108,G(e)||"Unknown",i));return z({},n,r)}function Oi(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||ki,Ai=Ci.current,Ti(Ci,e),Ti(Li,Li.current),!0}function zi(e,t,n){var r=e.stateNode;if(!r)throw Error(a(169));n?(e=Ii(e,t,Ai),r.__reactInternalMemoizedMergedChildContext=e,Ei(Li),Ei(Ci),Ti(Ci,e)):Ei(Li),Ti(Li,n)}var Ui=null,Fi=!1,Bi=!1;function Vi(e){null===Ui?Ui=[e]:Ui.push(e)}function Hi(){if(!Bi&&null!==Ui){Bi=!0;var e=0,t=_t;try{var n=Ui;for(_t=1;e<n.length;e++){var r=n[e];do{r=r(!0)}while(null!==r)}Ui=null,Fi=!1}catch(i){throw null!==Ui&&(Ui=Ui.slice(e+1)),Xe(Je,Hi),i}finally{_t=t,Bi=!1}}return null}var Gi=[],Wi=0,ji=null,qi=0,Xi=[],Yi=0,Zi=null,Ki=1,Qi="";function $i(e,t){Gi[Wi++]=qi,Gi[Wi++]=ji,ji=e,qi=t}function Ji(e,t,n){Xi[Yi++]=Ki,Xi[Yi++]=Qi,Xi[Yi++]=Zi,Zi=e;var r=Ki;e=Qi;var i=32-ot(r)-1;r&=~(1<<i),n+=1;var a=32-ot(t)+i;if(30<a){var o=i-i%5;a=(r&(1<<o)-1).toString(32),r>>=o,i-=o,Ki=1<<32-ot(t)+i|n<<i|r,Qi=a+e}else Ki=1<<a|n<<i|r,Qi=e}function ea(e){null!==e.return&&($i(e,1),Ji(e,1,0))}function ta(e){for(;e===ji;)ji=Gi[--Wi],Gi[Wi]=null,qi=Gi[--Wi],Gi[Wi]=null;for(;e===Zi;)Zi=Xi[--Yi],Xi[Yi]=null,Qi=Xi[--Yi],Xi[Yi]=null,Ki=Xi[--Yi],Xi[Yi]=null}var na=null,ra=null,ia=!1,aa=null;function oa(e,t){var n=Pu(5,null,null,0);n.elementType="DELETED",n.stateNode=t,n.return=e,null===(t=e.deletions)?(e.deletions=[n],e.flags|=16):t.push(n)}function sa(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,na=e,ra=ui(t.firstChild),!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,na=e,ra=null,!0);case 13:return null!==(t=8!==t.nodeType?null:t)&&(n=null!==Zi?{id:Ki,overflow:Qi}:null,e.memoizedState={dehydrated:t,treeContext:n,retryLane:1073741824},(n=Pu(18,null,null,0)).stateNode=t,n.return=e,e.child=n,na=e,ra=null,!0);default:return!1}}function la(e){return 0!==(1&e.mode)&&0===(128&e.flags)}function ua(e){if(ia){var t=ra;if(t){var n=t;if(!sa(e,t)){if(la(e))throw Error(a(418));t=ui(n.nextSibling);var r=na;t&&sa(e,t)?oa(r,n):(e.flags=-4097&e.flags|2,ia=!1,na=e)}}else{if(la(e))throw Error(a(418));e.flags=-4097&e.flags|2,ia=!1,na=e}}}function ca(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;na=e}function da(e){if(e!==na)return!1;if(!ia)return ca(e),ia=!0,!1;var t;if((t=3!==e.tag)&&!(t=5!==e.tag)&&(t="head"!==(t=e.type)&&"body"!==t&&!ni(e.type,e.memoizedProps)),t&&(t=ra)){if(la(e))throw fa(),Error(a(418));for(;t;)oa(e,t),t=ui(t.nextSibling)}if(ca(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(a(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){ra=ui(e.nextSibling);break e}t--}else"$"!==n&&"$!"!==n&&"$?"!==n||t++}e=e.nextSibling}ra=null}}else ra=na?ui(e.stateNode.nextSibling):null;return!0}function fa(){for(var e=ra;e;)e=ui(e.nextSibling)}function ha(){ra=na=null,ia=!1}function pa(e){null===aa?aa=[e]:aa.push(e)}var ma=x.ReactCurrentBatchConfig;function va(e,t){if(e&&e.defaultProps){for(var n in t=z({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}return t}var ga=wi(null),ya=null,_a=null,xa=null;function ba(){xa=_a=ya=null}function Sa(e){var t=ga.current;Ei(ga),e._currentValue=t}function Ma(e,t,n){for(;null!==e;){var r=e.alternate;if((e.childLanes&t)!==t?(e.childLanes|=t,null!==r&&(r.childLanes|=t)):null!==r&&(r.childLanes&t)!==t&&(r.childLanes|=t),e===n)break;e=e.return}}function wa(e,t){ya=e,xa=_a=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!==(e.lanes&t)&&(xs=!0),e.firstContext=null)}function Ea(e){var t=e._currentValue;if(xa!==e)if(e={context:e,memoizedValue:t,next:null},null===_a){if(null===ya)throw Error(a(308));_a=e,ya.dependencies={lanes:0,firstContext:e}}else _a=_a.next=e;return t}var Ta=null;function ka(e){null===Ta?Ta=[e]:Ta.push(e)}function Ca(e,t,n,r){var i=t.interleaved;return null===i?(n.next=n,ka(t)):(n.next=i.next,i.next=n),t.interleaved=n,La(e,r)}function La(e,t){e.lanes|=t;var n=e.alternate;for(null!==n&&(n.lanes|=t),n=e,e=e.return;null!==e;)e.childLanes|=t,null!==(n=e.alternate)&&(n.childLanes|=t),n=e,e=e.return;return 3===n.tag?n.stateNode:null}var Aa=!1;function Pa(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function Ra(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function Da(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function Na(e,t,n){var r=e.updateQueue;if(null===r)return null;if(r=r.shared,0!==(2&Cl)){var i=r.pending;return null===i?t.next=t:(t.next=i.next,i.next=t),r.pending=t,La(e,n)}return null===(i=r.interleaved)?(t.next=t,ka(r)):(t.next=i.next,i.next=t),r.interleaved=t,La(e,n)}function Ia(e,t,n){if(null!==(t=t.updateQueue)&&(t=t.shared,0!==(4194240&n))){var r=t.lanes;n|=r&=e.pendingLanes,t.lanes=n,yt(e,n)}}function Oa(e,t){var n=e.updateQueue,r=e.alternate;if(null!==r&&n===(r=r.updateQueue)){var i=null,a=null;if(null!==(n=n.firstBaseUpdate)){do{var o={eventTime:n.eventTime,lane:n.lane,tag:n.tag,payload:n.payload,callback:n.callback,next:null};null===a?i=a=o:a=a.next=o,n=n.next}while(null!==n);null===a?i=a=t:a=a.next=t}else i=a=t;return n={baseState:r.baseState,firstBaseUpdate:i,lastBaseUpdate:a,shared:r.shared,effects:r.effects},void(e.updateQueue=n)}null===(e=n.lastBaseUpdate)?n.firstBaseUpdate=t:e.next=t,n.lastBaseUpdate=t}function za(e,t,n,r){var i=e.updateQueue;Aa=!1;var a=i.firstBaseUpdate,o=i.lastBaseUpdate,s=i.shared.pending;if(null!==s){i.shared.pending=null;var l=s,u=l.next;l.next=null,null===o?a=u:o.next=u,o=l;var c=e.alternate;null!==c&&((s=(c=c.updateQueue).lastBaseUpdate)!==o&&(null===s?c.firstBaseUpdate=u:s.next=u,c.lastBaseUpdate=l))}if(null!==a){var d=i.baseState;for(o=0,c=u=l=null,s=a;;){var f=s.lane,h=s.eventTime;if((r&f)===f){null!==c&&(c=c.next={eventTime:h,lane:0,tag:s.tag,payload:s.payload,callback:s.callback,next:null});e:{var p=e,m=s;switch(f=t,h=n,m.tag){case 1:if("function"===typeof(p=m.payload)){d=p.call(h,d,f);break e}d=p;break e;case 3:p.flags=-65537&p.flags|128;case 0:if(null===(f="function"===typeof(p=m.payload)?p.call(h,d,f):p)||void 0===f)break e;d=z({},d,f);break e;case 2:Aa=!0}}null!==s.callback&&0!==s.lane&&(e.flags|=64,null===(f=i.effects)?i.effects=[s]:f.push(s))}else h={eventTime:h,lane:f,tag:s.tag,payload:s.payload,callback:s.callback,next:null},null===c?(u=c=h,l=d):c=c.next=h,o|=f;if(null===(s=s.next)){if(null===(s=i.shared.pending))break;s=(f=s).next,f.next=null,i.lastBaseUpdate=f,i.shared.pending=null}}if(null===c&&(l=d),i.baseState=l,i.firstBaseUpdate=u,i.lastBaseUpdate=c,null!==(t=i.shared.interleaved)){i=t;do{o|=i.lane,i=i.next}while(i!==t)}else null===a&&(i.shared.lanes=0);Ol|=o,e.lanes=o,e.memoizedState=d}}function Ua(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var r=e[t],i=r.callback;if(null!==i){if(r.callback=null,r=n,"function"!==typeof i)throw Error(a(191,i));i.call(r)}}}var Fa=(new r.Component).refs;function Ba(e,t,n,r){n=null===(n=n(r,t=e.memoizedState))||void 0===n?t:z({},t,n),e.memoizedState=n,0===e.lanes&&(e.updateQueue.baseState=n)}var Va={isMounted:function(e){return!!(e=e._reactInternals)&&He(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternals;var r=eu(),i=tu(e),a=Da(r,i);a.payload=t,void 0!==n&&null!==n&&(a.callback=n),null!==(t=Na(e,a,i))&&(nu(t,e,i,r),Ia(t,e,i))},enqueueReplaceState:function(e,t,n){e=e._reactInternals;var r=eu(),i=tu(e),a=Da(r,i);a.tag=1,a.payload=t,void 0!==n&&null!==n&&(a.callback=n),null!==(t=Na(e,a,i))&&(nu(t,e,i,r),Ia(t,e,i))},enqueueForceUpdate:function(e,t){e=e._reactInternals;var n=eu(),r=tu(e),i=Da(n,r);i.tag=2,void 0!==t&&null!==t&&(i.callback=t),null!==(t=Na(e,i,r))&&(nu(t,e,r,n),Ia(t,e,r))}};function Ha(e,t,n,r,i,a,o){return"function"===typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,a,o):!t.prototype||!t.prototype.isPureReactComponent||(!lr(n,r)||!lr(i,a))}function Ga(e,t,n){var r=!1,i=ki,a=t.contextType;return"object"===typeof a&&null!==a?a=Ea(a):(i=Ri(t)?Ai:Ci.current,a=(r=null!==(r=t.contextTypes)&&void 0!==r)?Pi(e,i):ki),t=new t(n,a),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=Va,e.stateNode=t,t._reactInternals=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=i,e.__reactInternalMemoizedMaskedChildContext=a),t}function Wa(e,t,n,r){e=t.state,"function"===typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"===typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&Va.enqueueReplaceState(t,t.state,null)}function ja(e,t,n,r){var i=e.stateNode;i.props=n,i.state=e.memoizedState,i.refs=Fa,Pa(e);var a=t.contextType;"object"===typeof a&&null!==a?i.context=Ea(a):(a=Ri(t)?Ai:Ci.current,i.context=Pi(e,a)),i.state=e.memoizedState,"function"===typeof(a=t.getDerivedStateFromProps)&&(Ba(e,t,a,n),i.state=e.memoizedState),"function"===typeof t.getDerivedStateFromProps||"function"===typeof i.getSnapshotBeforeUpdate||"function"!==typeof i.UNSAFE_componentWillMount&&"function"!==typeof i.componentWillMount||(t=i.state,"function"===typeof i.componentWillMount&&i.componentWillMount(),"function"===typeof i.UNSAFE_componentWillMount&&i.UNSAFE_componentWillMount(),t!==i.state&&Va.enqueueReplaceState(i,i.state,null),za(e,n,i,r),i.state=e.memoizedState),"function"===typeof i.componentDidMount&&(e.flags|=4194308)}function qa(e,t,n){if(null!==(e=n.ref)&&"function"!==typeof e&&"object"!==typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(a(309));var r=n.stateNode}if(!r)throw Error(a(147,e));var i=r,o=""+e;return null!==t&&null!==t.ref&&"function"===typeof t.ref&&t.ref._stringRef===o?t.ref:(t=function(e){var t=i.refs;t===Fa&&(t=i.refs={}),null===e?delete t[o]:t[o]=e},t._stringRef=o,t)}if("string"!==typeof e)throw Error(a(284));if(!n._owner)throw Error(a(290,e))}return e}function Xa(e,t){throw e=Object.prototype.toString.call(t),Error(a(31,"[object Object]"===e?"object with keys {"+Object.keys(t).join(", ")+"}":e))}function Ya(e){return(0,e._init)(e._payload)}function Za(e){function t(t,n){if(e){var r=t.deletions;null===r?(t.deletions=[n],t.flags|=16):r.push(n)}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function i(e,t){return(e=Du(e,t)).index=0,e.sibling=null,e}function o(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.flags|=2,n):r:(t.flags|=2,n):(t.flags|=1048576,n)}function s(t){return e&&null===t.alternate&&(t.flags|=2),t}function l(e,t,n,r){return null===t||6!==t.tag?((t=zu(n,e.mode,r)).return=e,t):((t=i(t,n)).return=e,t)}function u(e,t,n,r){var a=n.type;return a===M?d(e,t,n.props.children,r,n.key):null!==t&&(t.elementType===a||"object"===typeof a&&null!==a&&a.$$typeof===R&&Ya(a)===t.type)?((r=i(t,n.props)).ref=qa(e,t,n),r.return=e,r):((r=Nu(n.type,n.key,n.props,null,e.mode,r)).ref=qa(e,t,n),r.return=e,r)}function c(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Uu(n,e.mode,r)).return=e,t):((t=i(t,n.children||[])).return=e,t)}function d(e,t,n,r,a){return null===t||7!==t.tag?((t=Iu(n,e.mode,r,a)).return=e,t):((t=i(t,n)).return=e,t)}function f(e,t,n){if("string"===typeof t&&""!==t||"number"===typeof t)return(t=zu(""+t,e.mode,n)).return=e,t;if("object"===typeof t&&null!==t){switch(t.$$typeof){case b:return(n=Nu(t.type,t.key,t.props,null,e.mode,n)).ref=qa(e,null,t),n.return=e,n;case S:return(t=Uu(t,e.mode,n)).return=e,t;case R:return f(e,(0,t._init)(t._payload),n)}if(te(t)||I(t))return(t=Iu(t,e.mode,n,null)).return=e,t;Xa(e,t)}return null}function h(e,t,n,r){var i=null!==t?t.key:null;if("string"===typeof n&&""!==n||"number"===typeof n)return null!==i?null:l(e,t,""+n,r);if("object"===typeof n&&null!==n){switch(n.$$typeof){case b:return n.key===i?u(e,t,n,r):null;case S:return n.key===i?c(e,t,n,r):null;case R:return h(e,t,(i=n._init)(n._payload),r)}if(te(n)||I(n))return null!==i?null:d(e,t,n,r,null);Xa(e,n)}return null}function p(e,t,n,r,i){if("string"===typeof r&&""!==r||"number"===typeof r)return l(t,e=e.get(n)||null,""+r,i);if("object"===typeof r&&null!==r){switch(r.$$typeof){case b:return u(t,e=e.get(null===r.key?n:r.key)||null,r,i);case S:return c(t,e=e.get(null===r.key?n:r.key)||null,r,i);case R:return p(e,t,n,(0,r._init)(r._payload),i)}if(te(r)||I(r))return d(t,e=e.get(n)||null,r,i,null);Xa(t,r)}return null}function m(i,a,s,l){for(var u=null,c=null,d=a,m=a=0,v=null;null!==d&&m<s.length;m++){d.index>m?(v=d,d=null):v=d.sibling;var g=h(i,d,s[m],l);if(null===g){null===d&&(d=v);break}e&&d&&null===g.alternate&&t(i,d),a=o(g,a,m),null===c?u=g:c.sibling=g,c=g,d=v}if(m===s.length)return n(i,d),ia&&$i(i,m),u;if(null===d){for(;m<s.length;m++)null!==(d=f(i,s[m],l))&&(a=o(d,a,m),null===c?u=d:c.sibling=d,c=d);return ia&&$i(i,m),u}for(d=r(i,d);m<s.length;m++)null!==(v=p(d,i,m,s[m],l))&&(e&&null!==v.alternate&&d.delete(null===v.key?m:v.key),a=o(v,a,m),null===c?u=v:c.sibling=v,c=v);return e&&d.forEach((function(e){return t(i,e)})),ia&&$i(i,m),u}function v(i,s,l,u){var c=I(l);if("function"!==typeof c)throw Error(a(150));if(null==(l=c.call(l)))throw Error(a(151));for(var d=c=null,m=s,v=s=0,g=null,y=l.next();null!==m&&!y.done;v++,y=l.next()){m.index>v?(g=m,m=null):g=m.sibling;var _=h(i,m,y.value,u);if(null===_){null===m&&(m=g);break}e&&m&&null===_.alternate&&t(i,m),s=o(_,s,v),null===d?c=_:d.sibling=_,d=_,m=g}if(y.done)return n(i,m),ia&&$i(i,v),c;if(null===m){for(;!y.done;v++,y=l.next())null!==(y=f(i,y.value,u))&&(s=o(y,s,v),null===d?c=y:d.sibling=y,d=y);return ia&&$i(i,v),c}for(m=r(i,m);!y.done;v++,y=l.next())null!==(y=p(m,i,v,y.value,u))&&(e&&null!==y.alternate&&m.delete(null===y.key?v:y.key),s=o(y,s,v),null===d?c=y:d.sibling=y,d=y);return e&&m.forEach((function(e){return t(i,e)})),ia&&$i(i,v),c}return function e(r,a,o,l){if("object"===typeof o&&null!==o&&o.type===M&&null===o.key&&(o=o.props.children),"object"===typeof o&&null!==o){switch(o.$$typeof){case b:e:{for(var u=o.key,c=a;null!==c;){if(c.key===u){if((u=o.type)===M){if(7===c.tag){n(r,c.sibling),(a=i(c,o.props.children)).return=r,r=a;break e}}else if(c.elementType===u||"object"===typeof u&&null!==u&&u.$$typeof===R&&Ya(u)===c.type){n(r,c.sibling),(a=i(c,o.props)).ref=qa(r,c,o),a.return=r,r=a;break e}n(r,c);break}t(r,c),c=c.sibling}o.type===M?((a=Iu(o.props.children,r.mode,l,o.key)).return=r,r=a):((l=Nu(o.type,o.key,o.props,null,r.mode,l)).ref=qa(r,a,o),l.return=r,r=l)}return s(r);case S:e:{for(c=o.key;null!==a;){if(a.key===c){if(4===a.tag&&a.stateNode.containerInfo===o.containerInfo&&a.stateNode.implementation===o.implementation){n(r,a.sibling),(a=i(a,o.children||[])).return=r,r=a;break e}n(r,a);break}t(r,a),a=a.sibling}(a=Uu(o,r.mode,l)).return=r,r=a}return s(r);case R:return e(r,a,(c=o._init)(o._payload),l)}if(te(o))return m(r,a,o,l);if(I(o))return v(r,a,o,l);Xa(r,o)}return"string"===typeof o&&""!==o||"number"===typeof o?(o=""+o,null!==a&&6===a.tag?(n(r,a.sibling),(a=i(a,o)).return=r,r=a):(n(r,a),(a=zu(o,r.mode,l)).return=r,r=a),s(r)):n(r,a)}}var Ka=Za(!0),Qa=Za(!1),$a={},Ja=wi($a),eo=wi($a),to=wi($a);function no(e){if(e===$a)throw Error(a(174));return e}function ro(e,t){switch(Ti(to,t),Ti(eo,e),Ti(Ja,$a),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:le(null,"");break;default:t=le(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}Ei(Ja),Ti(Ja,t)}function io(){Ei(Ja),Ei(eo),Ei(to)}function ao(e){no(to.current);var t=no(Ja.current),n=le(t,e.type);t!==n&&(Ti(eo,e),Ti(Ja,n))}function oo(e){eo.current===e&&(Ei(Ja),Ei(eo))}var so=wi(0);function lo(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!==(128&t.flags))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var uo=[];function co(){for(var e=0;e<uo.length;e++)uo[e]._workInProgressVersionPrimary=null;uo.length=0}var fo=x.ReactCurrentDispatcher,ho=x.ReactCurrentBatchConfig,po=0,mo=null,vo=null,go=null,yo=!1,_o=!1,xo=0,bo=0;function So(){throw Error(a(321))}function Mo(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!sr(e[n],t[n]))return!1;return!0}function wo(e,t,n,r,i,o){if(po=o,mo=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,fo.current=null===e||null===e.memoizedState?ss:ls,e=n(r,i),_o){o=0;do{if(_o=!1,xo=0,25<=o)throw Error(a(301));o+=1,go=vo=null,t.updateQueue=null,fo.current=us,e=n(r,i)}while(_o)}if(fo.current=os,t=null!==vo&&null!==vo.next,po=0,go=vo=mo=null,yo=!1,t)throw Error(a(300));return e}function Eo(){var e=0!==xo;return xo=0,e}function To(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===go?mo.memoizedState=go=e:go=go.next=e,go}function ko(){if(null===vo){var e=mo.alternate;e=null!==e?e.memoizedState:null}else e=vo.next;var t=null===go?mo.memoizedState:go.next;if(null!==t)go=t,vo=e;else{if(null===e)throw Error(a(310));e={memoizedState:(vo=e).memoizedState,baseState:vo.baseState,baseQueue:vo.baseQueue,queue:vo.queue,next:null},null===go?mo.memoizedState=go=e:go=go.next=e}return go}function Co(e,t){return"function"===typeof t?t(e):t}function Lo(e){var t=ko(),n=t.queue;if(null===n)throw Error(a(311));n.lastRenderedReducer=e;var r=vo,i=r.baseQueue,o=n.pending;if(null!==o){if(null!==i){var s=i.next;i.next=o.next,o.next=s}r.baseQueue=i=o,n.pending=null}if(null!==i){o=i.next,r=r.baseState;var l=s=null,u=null,c=o;do{var d=c.lane;if((po&d)===d)null!==u&&(u=u.next={lane:0,action:c.action,hasEagerState:c.hasEagerState,eagerState:c.eagerState,next:null}),r=c.hasEagerState?c.eagerState:e(r,c.action);else{var f={lane:d,action:c.action,hasEagerState:c.hasEagerState,eagerState:c.eagerState,next:null};null===u?(l=u=f,s=r):u=u.next=f,mo.lanes|=d,Ol|=d}c=c.next}while(null!==c&&c!==o);null===u?s=r:u.next=l,sr(r,t.memoizedState)||(xs=!0),t.memoizedState=r,t.baseState=s,t.baseQueue=u,n.lastRenderedState=r}if(null!==(e=n.interleaved)){i=e;do{o=i.lane,mo.lanes|=o,Ol|=o,i=i.next}while(i!==e)}else null===i&&(n.lanes=0);return[t.memoizedState,n.dispatch]}function Ao(e){var t=ko(),n=t.queue;if(null===n)throw Error(a(311));n.lastRenderedReducer=e;var r=n.dispatch,i=n.pending,o=t.memoizedState;if(null!==i){n.pending=null;var s=i=i.next;do{o=e(o,s.action),s=s.next}while(s!==i);sr(o,t.memoizedState)||(xs=!0),t.memoizedState=o,null===t.baseQueue&&(t.baseState=o),n.lastRenderedState=o}return[o,r]}function Po(){}function Ro(e,t){var n=mo,r=ko(),i=t(),o=!sr(r.memoizedState,i);if(o&&(r.memoizedState=i,xs=!0),r=r.queue,Wo(Io.bind(null,n,r,e),[e]),r.getSnapshot!==t||o||null!==go&&1&go.memoizedState.tag){if(n.flags|=2048,Fo(9,No.bind(null,n,r,i,t),void 0,null),null===Ll)throw Error(a(349));0!==(30&po)||Do(n,t,i)}return i}function Do(e,t,n){e.flags|=16384,e={getSnapshot:t,value:n},null===(t=mo.updateQueue)?(t={lastEffect:null,stores:null},mo.updateQueue=t,t.stores=[e]):null===(n=t.stores)?t.stores=[e]:n.push(e)}function No(e,t,n,r){t.value=n,t.getSnapshot=r,Oo(t)&&zo(e)}function Io(e,t,n){return n((function(){Oo(t)&&zo(e)}))}function Oo(e){var t=e.getSnapshot;e=e.value;try{var n=t();return!sr(e,n)}catch(r){return!0}}function zo(e){var t=La(e,1);null!==t&&nu(t,e,1,-1)}function Uo(e){var t=To();return"function"===typeof e&&(e=e()),t.memoizedState=t.baseState=e,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:Co,lastRenderedState:e},t.queue=e,e=e.dispatch=ns.bind(null,mo,e),[t.memoizedState,e]}function Fo(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===(t=mo.updateQueue)?(t={lastEffect:null,stores:null},mo.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(r=n.next,n.next=e,e.next=r,t.lastEffect=e),e}function Bo(){return ko().memoizedState}function Vo(e,t,n,r){var i=To();mo.flags|=e,i.memoizedState=Fo(1|t,n,void 0,void 0===r?null:r)}function Ho(e,t,n,r){var i=ko();r=void 0===r?null:r;var a=void 0;if(null!==vo){var o=vo.memoizedState;if(a=o.destroy,null!==r&&Mo(r,o.deps))return void(i.memoizedState=Fo(t,n,a,r))}mo.flags|=e,i.memoizedState=Fo(1|t,n,a,r)}function Go(e,t){return Vo(8390656,8,e,t)}function Wo(e,t){return Ho(2048,8,e,t)}function jo(e,t){return Ho(4,2,e,t)}function qo(e,t){return Ho(4,4,e,t)}function Xo(e,t){return"function"===typeof t?(e=e(),t(e),function(){t(null)}):null!==t&&void 0!==t?(e=e(),t.current=e,function(){t.current=null}):void 0}function Yo(e,t,n){return n=null!==n&&void 0!==n?n.concat([e]):null,Ho(4,4,Xo.bind(null,t,e),n)}function Zo(){}function Ko(e,t){var n=ko();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&Mo(t,r[1])?r[0]:(n.memoizedState=[e,t],e)}function Qo(e,t){var n=ko();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&Mo(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)}function $o(e,t,n){return 0===(21&po)?(e.baseState&&(e.baseState=!1,xs=!0),e.memoizedState=n):(sr(n,t)||(n=mt(),mo.lanes|=n,Ol|=n,e.baseState=!0),t)}function Jo(e,t){var n=_t;_t=0!==n&&4>n?n:4,e(!0);var r=ho.transition;ho.transition={};try{e(!1),t()}finally{_t=n,ho.transition=r}}function es(){return ko().memoizedState}function ts(e,t,n){var r=tu(e);if(n={lane:r,action:n,hasEagerState:!1,eagerState:null,next:null},rs(e))is(t,n);else if(null!==(n=Ca(e,t,n,r))){nu(n,e,r,eu()),as(n,t,r)}}function ns(e,t,n){var r=tu(e),i={lane:r,action:n,hasEagerState:!1,eagerState:null,next:null};if(rs(e))is(t,i);else{var a=e.alternate;if(0===e.lanes&&(null===a||0===a.lanes)&&null!==(a=t.lastRenderedReducer))try{var o=t.lastRenderedState,s=a(o,n);if(i.hasEagerState=!0,i.eagerState=s,sr(s,o)){var l=t.interleaved;return null===l?(i.next=i,ka(t)):(i.next=l.next,l.next=i),void(t.interleaved=i)}}catch(u){}null!==(n=Ca(e,t,i,r))&&(nu(n,e,r,i=eu()),as(n,t,r))}}function rs(e){var t=e.alternate;return e===mo||null!==t&&t===mo}function is(e,t){_o=yo=!0;var n=e.pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}function as(e,t,n){if(0!==(4194240&n)){var r=t.lanes;n|=r&=e.pendingLanes,t.lanes=n,yt(e,n)}}var os={readContext:Ea,useCallback:So,useContext:So,useEffect:So,useImperativeHandle:So,useInsertionEffect:So,useLayoutEffect:So,useMemo:So,useReducer:So,useRef:So,useState:So,useDebugValue:So,useDeferredValue:So,useTransition:So,useMutableSource:So,useSyncExternalStore:So,useId:So,unstable_isNewReconciler:!1},ss={readContext:Ea,useCallback:function(e,t){return To().memoizedState=[e,void 0===t?null:t],e},useContext:Ea,useEffect:Go,useImperativeHandle:function(e,t,n){return n=null!==n&&void 0!==n?n.concat([e]):null,Vo(4194308,4,Xo.bind(null,t,e),n)},useLayoutEffect:function(e,t){return Vo(4194308,4,e,t)},useInsertionEffect:function(e,t){return Vo(4,2,e,t)},useMemo:function(e,t){var n=To();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=To();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:e,lastRenderedState:t},r.queue=e,e=e.dispatch=ts.bind(null,mo,e),[r.memoizedState,e]},useRef:function(e){return e={current:e},To().memoizedState=e},useState:Uo,useDebugValue:Zo,useDeferredValue:function(e){return To().memoizedState=e},useTransition:function(){var e=Uo(!1),t=e[0];return e=Jo.bind(null,e[1]),To().memoizedState=e,[t,e]},useMutableSource:function(){},useSyncExternalStore:function(e,t,n){var r=mo,i=To();if(ia){if(void 0===n)throw Error(a(407));n=n()}else{if(n=t(),null===Ll)throw Error(a(349));0!==(30&po)||Do(r,t,n)}i.memoizedState=n;var o={value:n,getSnapshot:t};return i.queue=o,Go(Io.bind(null,r,o,e),[e]),r.flags|=2048,Fo(9,No.bind(null,r,o,n,t),void 0,null),n},useId:function(){var e=To(),t=Ll.identifierPrefix;if(ia){var n=Qi;t=":"+t+"R"+(n=(Ki&~(1<<32-ot(Ki)-1)).toString(32)+n),0<(n=xo++)&&(t+="H"+n.toString(32)),t+=":"}else t=":"+t+"r"+(n=bo++).toString(32)+":";return e.memoizedState=t},unstable_isNewReconciler:!1},ls={readContext:Ea,useCallback:Ko,useContext:Ea,useEffect:Wo,useImperativeHandle:Yo,useInsertionEffect:jo,useLayoutEffect:qo,useMemo:Qo,useReducer:Lo,useRef:Bo,useState:function(){return Lo(Co)},useDebugValue:Zo,useDeferredValue:function(e){return $o(ko(),vo.memoizedState,e)},useTransition:function(){return[Lo(Co)[0],ko().memoizedState]},useMutableSource:Po,useSyncExternalStore:Ro,useId:es,unstable_isNewReconciler:!1},us={readContext:Ea,useCallback:Ko,useContext:Ea,useEffect:Wo,useImperativeHandle:Yo,useInsertionEffect:jo,useLayoutEffect:qo,useMemo:Qo,useReducer:Ao,useRef:Bo,useState:function(){return Ao(Co)},useDebugValue:Zo,useDeferredValue:function(e){var t=ko();return null===vo?t.memoizedState=e:$o(t,vo.memoizedState,e)},useTransition:function(){return[Ao(Co)[0],ko().memoizedState]},useMutableSource:Po,useSyncExternalStore:Ro,useId:es,unstable_isNewReconciler:!1};function cs(e,t){try{var n="",r=t;do{n+=V(r),r=r.return}while(r);var i=n}catch(a){i="\nError generating stack: "+a.message+"\n"+a.stack}return{value:e,source:t,stack:i,digest:null}}function ds(e,t,n){return{value:e,source:null,stack:null!=n?n:null,digest:null!=t?t:null}}function fs(e,t){try{console.error(t.value)}catch(n){setTimeout((function(){throw n}))}}var hs="function"===typeof WeakMap?WeakMap:Map;function ps(e,t,n){(n=Da(-1,n)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){Wl||(Wl=!0,jl=r),fs(0,t)},n}function ms(e,t,n){(n=Da(-1,n)).tag=3;var r=e.type.getDerivedStateFromError;if("function"===typeof r){var i=t.value;n.payload=function(){return r(i)},n.callback=function(){fs(0,t)}}var a=e.stateNode;return null!==a&&"function"===typeof a.componentDidCatch&&(n.callback=function(){fs(0,t),"function"!==typeof r&&(null===ql?ql=new Set([this]):ql.add(this));var e=t.stack;this.componentDidCatch(t.value,{componentStack:null!==e?e:""})}),n}function vs(e,t,n){var r=e.pingCache;if(null===r){r=e.pingCache=new hs;var i=new Set;r.set(t,i)}else void 0===(i=r.get(t))&&(i=new Set,r.set(t,i));i.has(n)||(i.add(n),e=Eu.bind(null,e,t,n),t.then(e,e))}function gs(e){do{var t;if((t=13===e.tag)&&(t=null===(t=e.memoizedState)||null!==t.dehydrated),t)return e;e=e.return}while(null!==e);return null}function ys(e,t,n,r,i){return 0===(1&e.mode)?(e===t?e.flags|=65536:(e.flags|=128,n.flags|=131072,n.flags&=-52805,1===n.tag&&(null===n.alternate?n.tag=17:((t=Da(-1,1)).tag=2,Na(n,t,1))),n.lanes|=1),e):(e.flags|=65536,e.lanes=i,e)}var _s=x.ReactCurrentOwner,xs=!1;function bs(e,t,n,r){t.child=null===e?Qa(t,null,n,r):Ka(t,e.child,n,r)}function Ss(e,t,n,r,i){n=n.render;var a=t.ref;return wa(t,i),r=wo(e,t,n,r,a,i),n=Eo(),null===e||xs?(ia&&n&&ea(t),t.flags|=1,bs(e,t,r,i),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~i,Ws(e,t,i))}function Ms(e,t,n,r,i){if(null===e){var a=n.type;return"function"!==typeof a||Ru(a)||void 0!==a.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=Nu(n.type,null,r,t,t.mode,i)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=a,ws(e,t,a,r,i))}if(a=e.child,0===(e.lanes&i)){var o=a.memoizedProps;if((n=null!==(n=n.compare)?n:lr)(o,r)&&e.ref===t.ref)return Ws(e,t,i)}return t.flags|=1,(e=Du(a,r)).ref=t.ref,e.return=t,t.child=e}function ws(e,t,n,r,i){if(null!==e){var a=e.memoizedProps;if(lr(a,r)&&e.ref===t.ref){if(xs=!1,t.pendingProps=r=a,0===(e.lanes&i))return t.lanes=e.lanes,Ws(e,t,i);0!==(131072&e.flags)&&(xs=!0)}}return ks(e,t,n,r,i)}function Es(e,t,n){var r=t.pendingProps,i=r.children,a=null!==e?e.memoizedState:null;if("hidden"===r.mode)if(0===(1&t.mode))t.memoizedState={baseLanes:0,cachePool:null,transitions:null},Ti(Dl,Rl),Rl|=n;else{if(0===(1073741824&n))return e=null!==a?a.baseLanes|n:n,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e,cachePool:null,transitions:null},t.updateQueue=null,Ti(Dl,Rl),Rl|=e,null;t.memoizedState={baseLanes:0,cachePool:null,transitions:null},r=null!==a?a.baseLanes:n,Ti(Dl,Rl),Rl|=r}else null!==a?(r=a.baseLanes|n,t.memoizedState=null):r=n,Ti(Dl,Rl),Rl|=r;return bs(e,t,i,n),t.child}function Ts(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.flags|=512,t.flags|=2097152)}function ks(e,t,n,r,i){var a=Ri(n)?Ai:Ci.current;return a=Pi(t,a),wa(t,i),n=wo(e,t,n,r,a,i),r=Eo(),null===e||xs?(ia&&r&&ea(t),t.flags|=1,bs(e,t,n,i),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~i,Ws(e,t,i))}function Cs(e,t,n,r,i){if(Ri(n)){var a=!0;Oi(t)}else a=!1;if(wa(t,i),null===t.stateNode)Gs(e,t),Ga(t,n,r),ja(t,n,r,i),r=!0;else if(null===e){var o=t.stateNode,s=t.memoizedProps;o.props=s;var l=o.context,u=n.contextType;"object"===typeof u&&null!==u?u=Ea(u):u=Pi(t,u=Ri(n)?Ai:Ci.current);var c=n.getDerivedStateFromProps,d="function"===typeof c||"function"===typeof o.getSnapshotBeforeUpdate;d||"function"!==typeof o.UNSAFE_componentWillReceiveProps&&"function"!==typeof o.componentWillReceiveProps||(s!==r||l!==u)&&Wa(t,o,r,u),Aa=!1;var f=t.memoizedState;o.state=f,za(t,r,o,i),l=t.memoizedState,s!==r||f!==l||Li.current||Aa?("function"===typeof c&&(Ba(t,n,c,r),l=t.memoizedState),(s=Aa||Ha(t,n,s,r,f,l,u))?(d||"function"!==typeof o.UNSAFE_componentWillMount&&"function"!==typeof o.componentWillMount||("function"===typeof o.componentWillMount&&o.componentWillMount(),"function"===typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount()),"function"===typeof o.componentDidMount&&(t.flags|=4194308)):("function"===typeof o.componentDidMount&&(t.flags|=4194308),t.memoizedProps=r,t.memoizedState=l),o.props=r,o.state=l,o.context=u,r=s):("function"===typeof o.componentDidMount&&(t.flags|=4194308),r=!1)}else{o=t.stateNode,Ra(e,t),s=t.memoizedProps,u=t.type===t.elementType?s:va(t.type,s),o.props=u,d=t.pendingProps,f=o.context,"object"===typeof(l=n.contextType)&&null!==l?l=Ea(l):l=Pi(t,l=Ri(n)?Ai:Ci.current);var h=n.getDerivedStateFromProps;(c="function"===typeof h||"function"===typeof o.getSnapshotBeforeUpdate)||"function"!==typeof o.UNSAFE_componentWillReceiveProps&&"function"!==typeof o.componentWillReceiveProps||(s!==d||f!==l)&&Wa(t,o,r,l),Aa=!1,f=t.memoizedState,o.state=f,za(t,r,o,i);var p=t.memoizedState;s!==d||f!==p||Li.current||Aa?("function"===typeof h&&(Ba(t,n,h,r),p=t.memoizedState),(u=Aa||Ha(t,n,u,r,f,p,l)||!1)?(c||"function"!==typeof o.UNSAFE_componentWillUpdate&&"function"!==typeof o.componentWillUpdate||("function"===typeof o.componentWillUpdate&&o.componentWillUpdate(r,p,l),"function"===typeof o.UNSAFE_componentWillUpdate&&o.UNSAFE_componentWillUpdate(r,p,l)),"function"===typeof o.componentDidUpdate&&(t.flags|=4),"function"===typeof o.getSnapshotBeforeUpdate&&(t.flags|=1024)):("function"!==typeof o.componentDidUpdate||s===e.memoizedProps&&f===e.memoizedState||(t.flags|=4),"function"!==typeof o.getSnapshotBeforeUpdate||s===e.memoizedProps&&f===e.memoizedState||(t.flags|=1024),t.memoizedProps=r,t.memoizedState=p),o.props=r,o.state=p,o.context=l,r=u):("function"!==typeof o.componentDidUpdate||s===e.memoizedProps&&f===e.memoizedState||(t.flags|=4),"function"!==typeof o.getSnapshotBeforeUpdate||s===e.memoizedProps&&f===e.memoizedState||(t.flags|=1024),r=!1)}return Ls(e,t,n,r,a,i)}function Ls(e,t,n,r,i,a){Ts(e,t);var o=0!==(128&t.flags);if(!r&&!o)return i&&zi(t,n,!1),Ws(e,t,a);r=t.stateNode,_s.current=t;var s=o&&"function"!==typeof n.getDerivedStateFromError?null:r.render();return t.flags|=1,null!==e&&o?(t.child=Ka(t,e.child,null,a),t.child=Ka(t,null,s,a)):bs(e,t,s,a),t.memoizedState=r.state,i&&zi(t,n,!0),t.child}function As(e){var t=e.stateNode;t.pendingContext?Ni(0,t.pendingContext,t.pendingContext!==t.context):t.context&&Ni(0,t.context,!1),ro(e,t.containerInfo)}function Ps(e,t,n,r,i){return ha(),pa(i),t.flags|=256,bs(e,t,n,r),t.child}var Rs,Ds,Ns,Is={dehydrated:null,treeContext:null,retryLane:0};function Os(e){return{baseLanes:e,cachePool:null,transitions:null}}function zs(e,t,n){var r,i=t.pendingProps,o=so.current,s=!1,l=0!==(128&t.flags);if((r=l)||(r=(null===e||null!==e.memoizedState)&&0!==(2&o)),r?(s=!0,t.flags&=-129):null!==e&&null===e.memoizedState||(o|=1),Ti(so,1&o),null===e)return ua(t),null!==(e=t.memoizedState)&&null!==(e=e.dehydrated)?(0===(1&t.mode)?t.lanes=1:"$!"===e.data?t.lanes=8:t.lanes=1073741824,null):(l=i.children,e=i.fallback,s?(i=t.mode,s=t.child,l={mode:"hidden",children:l},0===(1&i)&&null!==s?(s.childLanes=0,s.pendingProps=l):s=Ou(l,i,0,null),e=Iu(e,i,n,null),s.return=t,e.return=t,s.sibling=e,t.child=s,t.child.memoizedState=Os(n),t.memoizedState=Is,e):Us(t,l));if(null!==(o=e.memoizedState)&&null!==(r=o.dehydrated))return function(e,t,n,r,i,o,s){if(n)return 256&t.flags?(t.flags&=-257,Fs(e,t,s,r=ds(Error(a(422))))):null!==t.memoizedState?(t.child=e.child,t.flags|=128,null):(o=r.fallback,i=t.mode,r=Ou({mode:"visible",children:r.children},i,0,null),(o=Iu(o,i,s,null)).flags|=2,r.return=t,o.return=t,r.sibling=o,t.child=r,0!==(1&t.mode)&&Ka(t,e.child,null,s),t.child.memoizedState=Os(s),t.memoizedState=Is,o);if(0===(1&t.mode))return Fs(e,t,s,null);if("$!"===i.data){if(r=i.nextSibling&&i.nextSibling.dataset)var l=r.dgst;return r=l,Fs(e,t,s,r=ds(o=Error(a(419)),r,void 0))}if(l=0!==(s&e.childLanes),xs||l){if(null!==(r=Ll)){switch(s&-s){case 4:i=2;break;case 16:i=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:i=32;break;case 536870912:i=268435456;break;default:i=0}0!==(i=0!==(i&(r.suspendedLanes|s))?0:i)&&i!==o.retryLane&&(o.retryLane=i,La(e,i),nu(r,e,i,-1))}return mu(),Fs(e,t,s,r=ds(Error(a(421))))}return"$?"===i.data?(t.flags|=128,t.child=e.child,t=ku.bind(null,e),i._reactRetry=t,null):(e=o.treeContext,ra=ui(i.nextSibling),na=t,ia=!0,aa=null,null!==e&&(Xi[Yi++]=Ki,Xi[Yi++]=Qi,Xi[Yi++]=Zi,Ki=e.id,Qi=e.overflow,Zi=t),t=Us(t,r.children),t.flags|=4096,t)}(e,t,l,i,r,o,n);if(s){s=i.fallback,l=t.mode,r=(o=e.child).sibling;var u={mode:"hidden",children:i.children};return 0===(1&l)&&t.child!==o?((i=t.child).childLanes=0,i.pendingProps=u,t.deletions=null):(i=Du(o,u)).subtreeFlags=14680064&o.subtreeFlags,null!==r?s=Du(r,s):(s=Iu(s,l,n,null)).flags|=2,s.return=t,i.return=t,i.sibling=s,t.child=i,i=s,s=t.child,l=null===(l=e.child.memoizedState)?Os(n):{baseLanes:l.baseLanes|n,cachePool:null,transitions:l.transitions},s.memoizedState=l,s.childLanes=e.childLanes&~n,t.memoizedState=Is,i}return e=(s=e.child).sibling,i=Du(s,{mode:"visible",children:i.children}),0===(1&t.mode)&&(i.lanes=n),i.return=t,i.sibling=null,null!==e&&(null===(n=t.deletions)?(t.deletions=[e],t.flags|=16):n.push(e)),t.child=i,t.memoizedState=null,i}function Us(e,t){return(t=Ou({mode:"visible",children:t},e.mode,0,null)).return=e,e.child=t}function Fs(e,t,n,r){return null!==r&&pa(r),Ka(t,e.child,null,n),(e=Us(t,t.pendingProps.children)).flags|=2,t.memoizedState=null,e}function Bs(e,t,n){e.lanes|=t;var r=e.alternate;null!==r&&(r.lanes|=t),Ma(e.return,t,n)}function Vs(e,t,n,r,i){var a=e.memoizedState;null===a?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:r,tail:n,tailMode:i}:(a.isBackwards=t,a.rendering=null,a.renderingStartTime=0,a.last=r,a.tail=n,a.tailMode=i)}function Hs(e,t,n){var r=t.pendingProps,i=r.revealOrder,a=r.tail;if(bs(e,t,r.children,n),0!==(2&(r=so.current)))r=1&r|2,t.flags|=128;else{if(null!==e&&0!==(128&e.flags))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Bs(e,n,t);else if(19===e.tag)Bs(e,n,t);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(Ti(so,r),0===(1&t.mode))t.memoizedState=null;else switch(i){case"forwards":for(n=t.child,i=null;null!==n;)null!==(e=n.alternate)&&null===lo(e)&&(i=n),n=n.sibling;null===(n=i)?(i=t.child,t.child=null):(i=n.sibling,n.sibling=null),Vs(t,!1,i,n,a);break;case"backwards":for(n=null,i=t.child,t.child=null;null!==i;){if(null!==(e=i.alternate)&&null===lo(e)){t.child=i;break}e=i.sibling,i.sibling=n,n=i,i=e}Vs(t,!0,n,null,a);break;case"together":Vs(t,!1,null,null,void 0);break;default:t.memoizedState=null}return t.child}function Gs(e,t){0===(1&t.mode)&&null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2)}function Ws(e,t,n){if(null!==e&&(t.dependencies=e.dependencies),Ol|=t.lanes,0===(n&t.childLanes))return null;if(null!==e&&t.child!==e.child)throw Error(a(153));if(null!==t.child){for(n=Du(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Du(e,e.pendingProps)).return=t;n.sibling=null}return t.child}function js(e,t){if(!ia)switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var r=null;null!==n;)null!==n.alternate&&(r=n),n=n.sibling;null===r?t||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function qs(e){var t=null!==e.alternate&&e.alternate.child===e.child,n=0,r=0;if(t)for(var i=e.child;null!==i;)n|=i.lanes|i.childLanes,r|=14680064&i.subtreeFlags,r|=14680064&i.flags,i.return=e,i=i.sibling;else for(i=e.child;null!==i;)n|=i.lanes|i.childLanes,r|=i.subtreeFlags,r|=i.flags,i.return=e,i=i.sibling;return e.subtreeFlags|=r,e.childLanes=n,t}function Xs(e,t,n){var r=t.pendingProps;switch(ta(t),t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return qs(t),null;case 1:case 17:return Ri(t.type)&&Di(),qs(t),null;case 3:return r=t.stateNode,io(),Ei(Li),Ei(Ci),co(),r.pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),null!==e&&null!==e.child||(da(t)?t.flags|=4:null===e||e.memoizedState.isDehydrated&&0===(256&t.flags)||(t.flags|=1024,null!==aa&&(ou(aa),aa=null))),qs(t),null;case 5:oo(t);var i=no(to.current);if(n=t.type,null!==e&&null!=t.stateNode)Ds(e,t,n,r),e.ref!==t.ref&&(t.flags|=512,t.flags|=2097152);else{if(!r){if(null===t.stateNode)throw Error(a(166));return qs(t),null}if(e=no(Ja.current),da(t)){r=t.stateNode,n=t.type;var o=t.memoizedProps;switch(r[fi]=t,r[hi]=o,e=0!==(1&t.mode),n){case"dialog":Fr("cancel",r),Fr("close",r);break;case"iframe":case"object":case"embed":Fr("load",r);break;case"video":case"audio":for(i=0;i<Ir.length;i++)Fr(Ir[i],r);break;case"source":Fr("error",r);break;case"img":case"image":case"link":Fr("error",r),Fr("load",r);break;case"details":Fr("toggle",r);break;case"input":K(r,o),Fr("invalid",r);break;case"select":r._wrapperState={wasMultiple:!!o.multiple},Fr("invalid",r);break;case"textarea":ie(r,o),Fr("invalid",r)}for(var l in ye(n,o),i=null,o)if(o.hasOwnProperty(l)){var u=o[l];"children"===l?"string"===typeof u?r.textContent!==u&&(!0!==o.suppressHydrationWarning&&$r(r.textContent,u,e),i=["children",u]):"number"===typeof u&&r.textContent!==""+u&&(!0!==o.suppressHydrationWarning&&$r(r.textContent,u,e),i=["children",""+u]):s.hasOwnProperty(l)&&null!=u&&"onScroll"===l&&Fr("scroll",r)}switch(n){case"input":q(r),J(r,o,!0);break;case"textarea":q(r),oe(r);break;case"select":case"option":break;default:"function"===typeof o.onClick&&(r.onclick=Jr)}r=i,t.updateQueue=r,null!==r&&(t.flags|=4)}else{l=9===i.nodeType?i:i.ownerDocument,"http://www.w3.org/1999/xhtml"===e&&(e=se(n)),"http://www.w3.org/1999/xhtml"===e?"script"===n?((e=l.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"===typeof r.is?e=l.createElement(n,{is:r.is}):(e=l.createElement(n),"select"===n&&(l=e,r.multiple?l.multiple=!0:r.size&&(l.size=r.size))):e=l.createElementNS(e,n),e[fi]=t,e[hi]=r,Rs(e,t),t.stateNode=e;e:{switch(l=_e(n,r),n){case"dialog":Fr("cancel",e),Fr("close",e),i=r;break;case"iframe":case"object":case"embed":Fr("load",e),i=r;break;case"video":case"audio":for(i=0;i<Ir.length;i++)Fr(Ir[i],e);i=r;break;case"source":Fr("error",e),i=r;break;case"img":case"image":case"link":Fr("error",e),Fr("load",e),i=r;break;case"details":Fr("toggle",e),i=r;break;case"input":K(e,r),i=Z(e,r),Fr("invalid",e);break;case"option":default:i=r;break;case"select":e._wrapperState={wasMultiple:!!r.multiple},i=z({},r,{value:void 0}),Fr("invalid",e);break;case"textarea":ie(e,r),i=re(e,r),Fr("invalid",e)}for(o in ye(n,i),u=i)if(u.hasOwnProperty(o)){var c=u[o];"style"===o?ve(e,c):"dangerouslySetInnerHTML"===o?null!=(c=c?c.__html:void 0)&&de(e,c):"children"===o?"string"===typeof c?("textarea"!==n||""!==c)&&fe(e,c):"number"===typeof c&&fe(e,""+c):"suppressContentEditableWarning"!==o&&"suppressHydrationWarning"!==o&&"autoFocus"!==o&&(s.hasOwnProperty(o)?null!=c&&"onScroll"===o&&Fr("scroll",e):null!=c&&_(e,o,c,l))}switch(n){case"input":q(e),J(e,r,!1);break;case"textarea":q(e),oe(e);break;case"option":null!=r.value&&e.setAttribute("value",""+W(r.value));break;case"select":e.multiple=!!r.multiple,null!=(o=r.value)?ne(e,!!r.multiple,o,!1):null!=r.defaultValue&&ne(e,!!r.multiple,r.defaultValue,!0);break;default:"function"===typeof i.onClick&&(e.onclick=Jr)}switch(n){case"button":case"input":case"select":case"textarea":r=!!r.autoFocus;break e;case"img":r=!0;break e;default:r=!1}}r&&(t.flags|=4)}null!==t.ref&&(t.flags|=512,t.flags|=2097152)}return qs(t),null;case 6:if(e&&null!=t.stateNode)Ns(0,t,e.memoizedProps,r);else{if("string"!==typeof r&&null===t.stateNode)throw Error(a(166));if(n=no(to.current),no(Ja.current),da(t)){if(r=t.stateNode,n=t.memoizedProps,r[fi]=t,(o=r.nodeValue!==n)&&null!==(e=na))switch(e.tag){case 3:$r(r.nodeValue,n,0!==(1&e.mode));break;case 5:!0!==e.memoizedProps.suppressHydrationWarning&&$r(r.nodeValue,n,0!==(1&e.mode))}o&&(t.flags|=4)}else(r=(9===n.nodeType?n:n.ownerDocument).createTextNode(r))[fi]=t,t.stateNode=r}return qs(t),null;case 13:if(Ei(so),r=t.memoizedState,null===e||null!==e.memoizedState&&null!==e.memoizedState.dehydrated){if(ia&&null!==ra&&0!==(1&t.mode)&&0===(128&t.flags))fa(),ha(),t.flags|=98560,o=!1;else if(o=da(t),null!==r&&null!==r.dehydrated){if(null===e){if(!o)throw Error(a(318));if(!(o=null!==(o=t.memoizedState)?o.dehydrated:null))throw Error(a(317));o[fi]=t}else ha(),0===(128&t.flags)&&(t.memoizedState=null),t.flags|=4;qs(t),o=!1}else null!==aa&&(ou(aa),aa=null),o=!0;if(!o)return 65536&t.flags?t:null}return 0!==(128&t.flags)?(t.lanes=n,t):((r=null!==r)!==(null!==e&&null!==e.memoizedState)&&r&&(t.child.flags|=8192,0!==(1&t.mode)&&(null===e||0!==(1&so.current)?0===Nl&&(Nl=3):mu())),null!==t.updateQueue&&(t.flags|=4),qs(t),null);case 4:return io(),null===e&&Hr(t.stateNode.containerInfo),qs(t),null;case 10:return Sa(t.type._context),qs(t),null;case 19:if(Ei(so),null===(o=t.memoizedState))return qs(t),null;if(r=0!==(128&t.flags),null===(l=o.rendering))if(r)js(o,!1);else{if(0!==Nl||null!==e&&0!==(128&e.flags))for(e=t.child;null!==e;){if(null!==(l=lo(e))){for(t.flags|=128,js(o,!1),null!==(r=l.updateQueue)&&(t.updateQueue=r,t.flags|=4),t.subtreeFlags=0,r=n,n=t.child;null!==n;)e=r,(o=n).flags&=14680066,null===(l=o.alternate)?(o.childLanes=0,o.lanes=e,o.child=null,o.subtreeFlags=0,o.memoizedProps=null,o.memoizedState=null,o.updateQueue=null,o.dependencies=null,o.stateNode=null):(o.childLanes=l.childLanes,o.lanes=l.lanes,o.child=l.child,o.subtreeFlags=0,o.deletions=null,o.memoizedProps=l.memoizedProps,o.memoizedState=l.memoizedState,o.updateQueue=l.updateQueue,o.type=l.type,e=l.dependencies,o.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),n=n.sibling;return Ti(so,1&so.current|2),t.child}e=e.sibling}null!==o.tail&&Qe()>Hl&&(t.flags|=128,r=!0,js(o,!1),t.lanes=4194304)}else{if(!r)if(null!==(e=lo(l))){if(t.flags|=128,r=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.flags|=4),js(o,!0),null===o.tail&&"hidden"===o.tailMode&&!l.alternate&&!ia)return qs(t),null}else 2*Qe()-o.renderingStartTime>Hl&&1073741824!==n&&(t.flags|=128,r=!0,js(o,!1),t.lanes=4194304);o.isBackwards?(l.sibling=t.child,t.child=l):(null!==(n=o.last)?n.sibling=l:t.child=l,o.last=l)}return null!==o.tail?(t=o.tail,o.rendering=t,o.tail=t.sibling,o.renderingStartTime=Qe(),t.sibling=null,n=so.current,Ti(so,r?1&n|2:1&n),t):(qs(t),null);case 22:case 23:return du(),r=null!==t.memoizedState,null!==e&&null!==e.memoizedState!==r&&(t.flags|=8192),r&&0!==(1&t.mode)?0!==(1073741824&Rl)&&(qs(t),6&t.subtreeFlags&&(t.flags|=8192)):qs(t),null;case 24:case 25:return null}throw Error(a(156,t.tag))}function Ys(e,t){switch(ta(t),t.tag){case 1:return Ri(t.type)&&Di(),65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 3:return io(),Ei(Li),Ei(Ci),co(),0!==(65536&(e=t.flags))&&0===(128&e)?(t.flags=-65537&e|128,t):null;case 5:return oo(t),null;case 13:if(Ei(so),null!==(e=t.memoizedState)&&null!==e.dehydrated){if(null===t.alternate)throw Error(a(340));ha()}return 65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 19:return Ei(so),null;case 4:return io(),null;case 10:return Sa(t.type._context),null;case 22:case 23:return du(),null;default:return null}}Rs=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Ds=function(e,t,n,r){var i=e.memoizedProps;if(i!==r){e=t.stateNode,no(Ja.current);var a,o=null;switch(n){case"input":i=Z(e,i),r=Z(e,r),o=[];break;case"select":i=z({},i,{value:void 0}),r=z({},r,{value:void 0}),o=[];break;case"textarea":i=re(e,i),r=re(e,r),o=[];break;default:"function"!==typeof i.onClick&&"function"===typeof r.onClick&&(e.onclick=Jr)}for(c in ye(n,r),n=null,i)if(!r.hasOwnProperty(c)&&i.hasOwnProperty(c)&&null!=i[c])if("style"===c){var l=i[c];for(a in l)l.hasOwnProperty(a)&&(n||(n={}),n[a]="")}else"dangerouslySetInnerHTML"!==c&&"children"!==c&&"suppressContentEditableWarning"!==c&&"suppressHydrationWarning"!==c&&"autoFocus"!==c&&(s.hasOwnProperty(c)?o||(o=[]):(o=o||[]).push(c,null));for(c in r){var u=r[c];if(l=null!=i?i[c]:void 0,r.hasOwnProperty(c)&&u!==l&&(null!=u||null!=l))if("style"===c)if(l){for(a in l)!l.hasOwnProperty(a)||u&&u.hasOwnProperty(a)||(n||(n={}),n[a]="");for(a in u)u.hasOwnProperty(a)&&l[a]!==u[a]&&(n||(n={}),n[a]=u[a])}else n||(o||(o=[]),o.push(c,n)),n=u;else"dangerouslySetInnerHTML"===c?(u=u?u.__html:void 0,l=l?l.__html:void 0,null!=u&&l!==u&&(o=o||[]).push(c,u)):"children"===c?"string"!==typeof u&&"number"!==typeof u||(o=o||[]).push(c,""+u):"suppressContentEditableWarning"!==c&&"suppressHydrationWarning"!==c&&(s.hasOwnProperty(c)?(null!=u&&"onScroll"===c&&Fr("scroll",e),o||l===u||(o=[])):(o=o||[]).push(c,u))}n&&(o=o||[]).push("style",n);var c=o;(t.updateQueue=c)&&(t.flags|=4)}},Ns=function(e,t,n,r){n!==r&&(t.flags|=4)};var Zs=!1,Ks=!1,Qs="function"===typeof WeakSet?WeakSet:Set,$s=null;function Js(e,t){var n=e.ref;if(null!==n)if("function"===typeof n)try{n(null)}catch(r){wu(e,t,r)}else n.current=null}function el(e,t,n){try{n()}catch(r){wu(e,t,r)}}var tl=!1;function nl(e,t,n){var r=t.updateQueue;if(null!==(r=null!==r?r.lastEffect:null)){var i=r=r.next;do{if((i.tag&e)===e){var a=i.destroy;i.destroy=void 0,void 0!==a&&el(t,n,a)}i=i.next}while(i!==r)}}function rl(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var r=n.create;n.destroy=r()}n=n.next}while(n!==t)}}function il(e){var t=e.ref;if(null!==t){var n=e.stateNode;e.tag,e=n,"function"===typeof t?t(e):t.current=e}}function al(e){var t=e.alternate;null!==t&&(e.alternate=null,al(t)),e.child=null,e.deletions=null,e.sibling=null,5===e.tag&&(null!==(t=e.stateNode)&&(delete t[fi],delete t[hi],delete t[mi],delete t[vi],delete t[gi])),e.stateNode=null,e.return=null,e.dependencies=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.stateNode=null,e.updateQueue=null}function ol(e){return 5===e.tag||3===e.tag||4===e.tag}function sl(e){e:for(;;){for(;null===e.sibling;){if(null===e.return||ol(e.return))return null;e=e.return}for(e.sibling.return=e.return,e=e.sibling;5!==e.tag&&6!==e.tag&&18!==e.tag;){if(2&e.flags)continue e;if(null===e.child||4===e.tag)continue e;e.child.return=e,e=e.child}if(!(2&e.flags))return e.stateNode}}function ll(e,t,n){var r=e.tag;if(5===r||6===r)e=e.stateNode,t?8===n.nodeType?n.parentNode.insertBefore(e,t):n.insertBefore(e,t):(8===n.nodeType?(t=n.parentNode).insertBefore(e,n):(t=n).appendChild(e),null!==(n=n._reactRootContainer)&&void 0!==n||null!==t.onclick||(t.onclick=Jr));else if(4!==r&&null!==(e=e.child))for(ll(e,t,n),e=e.sibling;null!==e;)ll(e,t,n),e=e.sibling}function ul(e,t,n){var r=e.tag;if(5===r||6===r)e=e.stateNode,t?n.insertBefore(e,t):n.appendChild(e);else if(4!==r&&null!==(e=e.child))for(ul(e,t,n),e=e.sibling;null!==e;)ul(e,t,n),e=e.sibling}var cl=null,dl=!1;function fl(e,t,n){for(n=n.child;null!==n;)hl(e,t,n),n=n.sibling}function hl(e,t,n){if(at&&"function"===typeof at.onCommitFiberUnmount)try{at.onCommitFiberUnmount(it,n)}catch(s){}switch(n.tag){case 5:Ks||Js(n,t);case 6:var r=cl,i=dl;cl=null,fl(e,t,n),dl=i,null!==(cl=r)&&(dl?(e=cl,n=n.stateNode,8===e.nodeType?e.parentNode.removeChild(n):e.removeChild(n)):cl.removeChild(n.stateNode));break;case 18:null!==cl&&(dl?(e=cl,n=n.stateNode,8===e.nodeType?li(e.parentNode,n):1===e.nodeType&&li(e,n),Ht(e)):li(cl,n.stateNode));break;case 4:r=cl,i=dl,cl=n.stateNode.containerInfo,dl=!0,fl(e,t,n),cl=r,dl=i;break;case 0:case 11:case 14:case 15:if(!Ks&&(null!==(r=n.updateQueue)&&null!==(r=r.lastEffect))){i=r=r.next;do{var a=i,o=a.destroy;a=a.tag,void 0!==o&&(0!==(2&a)||0!==(4&a))&&el(n,t,o),i=i.next}while(i!==r)}fl(e,t,n);break;case 1:if(!Ks&&(Js(n,t),"function"===typeof(r=n.stateNode).componentWillUnmount))try{r.props=n.memoizedProps,r.state=n.memoizedState,r.componentWillUnmount()}catch(s){wu(n,t,s)}fl(e,t,n);break;case 21:fl(e,t,n);break;case 22:1&n.mode?(Ks=(r=Ks)||null!==n.memoizedState,fl(e,t,n),Ks=r):fl(e,t,n);break;default:fl(e,t,n)}}function pl(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new Qs),t.forEach((function(t){var r=Cu.bind(null,e,t);n.has(t)||(n.add(t),t.then(r,r))}))}}function ml(e,t){var n=t.deletions;if(null!==n)for(var r=0;r<n.length;r++){var i=n[r];try{var o=e,s=t,l=s;e:for(;null!==l;){switch(l.tag){case 5:cl=l.stateNode,dl=!1;break e;case 3:case 4:cl=l.stateNode.containerInfo,dl=!0;break e}l=l.return}if(null===cl)throw Error(a(160));hl(o,s,i),cl=null,dl=!1;var u=i.alternate;null!==u&&(u.return=null),i.return=null}catch(c){wu(i,t,c)}}if(12854&t.subtreeFlags)for(t=t.child;null!==t;)vl(t,e),t=t.sibling}function vl(e,t){var n=e.alternate,r=e.flags;switch(e.tag){case 0:case 11:case 14:case 15:if(ml(t,e),gl(e),4&r){try{nl(3,e,e.return),rl(3,e)}catch(v){wu(e,e.return,v)}try{nl(5,e,e.return)}catch(v){wu(e,e.return,v)}}break;case 1:ml(t,e),gl(e),512&r&&null!==n&&Js(n,n.return);break;case 5:if(ml(t,e),gl(e),512&r&&null!==n&&Js(n,n.return),32&e.flags){var i=e.stateNode;try{fe(i,"")}catch(v){wu(e,e.return,v)}}if(4&r&&null!=(i=e.stateNode)){var o=e.memoizedProps,s=null!==n?n.memoizedProps:o,l=e.type,u=e.updateQueue;if(e.updateQueue=null,null!==u)try{"input"===l&&"radio"===o.type&&null!=o.name&&Q(i,o),_e(l,s);var c=_e(l,o);for(s=0;s<u.length;s+=2){var d=u[s],f=u[s+1];"style"===d?ve(i,f):"dangerouslySetInnerHTML"===d?de(i,f):"children"===d?fe(i,f):_(i,d,f,c)}switch(l){case"input":$(i,o);break;case"textarea":ae(i,o);break;case"select":var h=i._wrapperState.wasMultiple;i._wrapperState.wasMultiple=!!o.multiple;var p=o.value;null!=p?ne(i,!!o.multiple,p,!1):h!==!!o.multiple&&(null!=o.defaultValue?ne(i,!!o.multiple,o.defaultValue,!0):ne(i,!!o.multiple,o.multiple?[]:"",!1))}i[hi]=o}catch(v){wu(e,e.return,v)}}break;case 6:if(ml(t,e),gl(e),4&r){if(null===e.stateNode)throw Error(a(162));i=e.stateNode,o=e.memoizedProps;try{i.nodeValue=o}catch(v){wu(e,e.return,v)}}break;case 3:if(ml(t,e),gl(e),4&r&&null!==n&&n.memoizedState.isDehydrated)try{Ht(t.containerInfo)}catch(v){wu(e,e.return,v)}break;case 4:default:ml(t,e),gl(e);break;case 13:ml(t,e),gl(e),8192&(i=e.child).flags&&(o=null!==i.memoizedState,i.stateNode.isHidden=o,!o||null!==i.alternate&&null!==i.alternate.memoizedState||(Vl=Qe())),4&r&&pl(e);break;case 22:if(d=null!==n&&null!==n.memoizedState,1&e.mode?(Ks=(c=Ks)||d,ml(t,e),Ks=c):ml(t,e),gl(e),8192&r){if(c=null!==e.memoizedState,(e.stateNode.isHidden=c)&&!d&&0!==(1&e.mode))for($s=e,d=e.child;null!==d;){for(f=$s=d;null!==$s;){switch(p=(h=$s).child,h.tag){case 0:case 11:case 14:case 15:nl(4,h,h.return);break;case 1:Js(h,h.return);var m=h.stateNode;if("function"===typeof m.componentWillUnmount){r=h,n=h.return;try{t=r,m.props=t.memoizedProps,m.state=t.memoizedState,m.componentWillUnmount()}catch(v){wu(r,n,v)}}break;case 5:Js(h,h.return);break;case 22:if(null!==h.memoizedState){bl(f);continue}}null!==p?(p.return=h,$s=p):bl(f)}d=d.sibling}e:for(d=null,f=e;;){if(5===f.tag){if(null===d){d=f;try{i=f.stateNode,c?"function"===typeof(o=i.style).setProperty?o.setProperty("display","none","important"):o.display="none":(l=f.stateNode,s=void 0!==(u=f.memoizedProps.style)&&null!==u&&u.hasOwnProperty("display")?u.display:null,l.style.display=me("display",s))}catch(v){wu(e,e.return,v)}}}else if(6===f.tag){if(null===d)try{f.stateNode.nodeValue=c?"":f.memoizedProps}catch(v){wu(e,e.return,v)}}else if((22!==f.tag&&23!==f.tag||null===f.memoizedState||f===e)&&null!==f.child){f.child.return=f,f=f.child;continue}if(f===e)break e;for(;null===f.sibling;){if(null===f.return||f.return===e)break e;d===f&&(d=null),f=f.return}d===f&&(d=null),f.sibling.return=f.return,f=f.sibling}}break;case 19:ml(t,e),gl(e),4&r&&pl(e);case 21:}}function gl(e){var t=e.flags;if(2&t){try{e:{for(var n=e.return;null!==n;){if(ol(n)){var r=n;break e}n=n.return}throw Error(a(160))}switch(r.tag){case 5:var i=r.stateNode;32&r.flags&&(fe(i,""),r.flags&=-33),ul(e,sl(e),i);break;case 3:case 4:var o=r.stateNode.containerInfo;ll(e,sl(e),o);break;default:throw Error(a(161))}}catch(s){wu(e,e.return,s)}e.flags&=-3}4096&t&&(e.flags&=-4097)}function yl(e,t,n){$s=e,_l(e,t,n)}function _l(e,t,n){for(var r=0!==(1&e.mode);null!==$s;){var i=$s,a=i.child;if(22===i.tag&&r){var o=null!==i.memoizedState||Zs;if(!o){var s=i.alternate,l=null!==s&&null!==s.memoizedState||Ks;s=Zs;var u=Ks;if(Zs=o,(Ks=l)&&!u)for($s=i;null!==$s;)l=(o=$s).child,22===o.tag&&null!==o.memoizedState?Sl(i):null!==l?(l.return=o,$s=l):Sl(i);for(;null!==a;)$s=a,_l(a,t,n),a=a.sibling;$s=i,Zs=s,Ks=u}xl(e)}else 0!==(8772&i.subtreeFlags)&&null!==a?(a.return=i,$s=a):xl(e)}}function xl(e){for(;null!==$s;){var t=$s;if(0!==(8772&t.flags)){var n=t.alternate;try{if(0!==(8772&t.flags))switch(t.tag){case 0:case 11:case 15:Ks||rl(5,t);break;case 1:var r=t.stateNode;if(4&t.flags&&!Ks)if(null===n)r.componentDidMount();else{var i=t.elementType===t.type?n.memoizedProps:va(t.type,n.memoizedProps);r.componentDidUpdate(i,n.memoizedState,r.__reactInternalSnapshotBeforeUpdate)}var o=t.updateQueue;null!==o&&Ua(t,o,r);break;case 3:var s=t.updateQueue;if(null!==s){if(n=null,null!==t.child)switch(t.child.tag){case 5:case 1:n=t.child.stateNode}Ua(t,s,n)}break;case 5:var l=t.stateNode;if(null===n&&4&t.flags){n=l;var u=t.memoizedProps;switch(t.type){case"button":case"input":case"select":case"textarea":u.autoFocus&&n.focus();break;case"img":u.src&&(n.src=u.src)}}break;case 6:case 4:case 12:case 19:case 17:case 21:case 22:case 23:case 25:break;case 13:if(null===t.memoizedState){var c=t.alternate;if(null!==c){var d=c.memoizedState;if(null!==d){var f=d.dehydrated;null!==f&&Ht(f)}}}break;default:throw Error(a(163))}Ks||512&t.flags&&il(t)}catch(h){wu(t,t.return,h)}}if(t===e){$s=null;break}if(null!==(n=t.sibling)){n.return=t.return,$s=n;break}$s=t.return}}function bl(e){for(;null!==$s;){var t=$s;if(t===e){$s=null;break}var n=t.sibling;if(null!==n){n.return=t.return,$s=n;break}$s=t.return}}function Sl(e){for(;null!==$s;){var t=$s;try{switch(t.tag){case 0:case 11:case 15:var n=t.return;try{rl(4,t)}catch(l){wu(t,n,l)}break;case 1:var r=t.stateNode;if("function"===typeof r.componentDidMount){var i=t.return;try{r.componentDidMount()}catch(l){wu(t,i,l)}}var a=t.return;try{il(t)}catch(l){wu(t,a,l)}break;case 5:var o=t.return;try{il(t)}catch(l){wu(t,o,l)}}}catch(l){wu(t,t.return,l)}if(t===e){$s=null;break}var s=t.sibling;if(null!==s){s.return=t.return,$s=s;break}$s=t.return}}var Ml,wl=Math.ceil,El=x.ReactCurrentDispatcher,Tl=x.ReactCurrentOwner,kl=x.ReactCurrentBatchConfig,Cl=0,Ll=null,Al=null,Pl=0,Rl=0,Dl=wi(0),Nl=0,Il=null,Ol=0,zl=0,Ul=0,Fl=null,Bl=null,Vl=0,Hl=1/0,Gl=null,Wl=!1,jl=null,ql=null,Xl=!1,Yl=null,Zl=0,Kl=0,Ql=null,$l=-1,Jl=0;function eu(){return 0!==(6&Cl)?Qe():-1!==$l?$l:$l=Qe()}function tu(e){return 0===(1&e.mode)?1:0!==(2&Cl)&&0!==Pl?Pl&-Pl:null!==ma.transition?(0===Jl&&(Jl=mt()),Jl):0!==(e=_t)?e:e=void 0===(e=window.event)?16:Kt(e.type)}function nu(e,t,n,r){if(50<Kl)throw Kl=0,Ql=null,Error(a(185));gt(e,n,r),0!==(2&Cl)&&e===Ll||(e===Ll&&(0===(2&Cl)&&(zl|=n),4===Nl&&su(e,Pl)),ru(e,r),1===n&&0===Cl&&0===(1&t.mode)&&(Hl=Qe()+500,Fi&&Hi()))}function ru(e,t){var n=e.callbackNode;!function(e,t){for(var n=e.suspendedLanes,r=e.pingedLanes,i=e.expirationTimes,a=e.pendingLanes;0<a;){var o=31-ot(a),s=1<<o,l=i[o];-1===l?0!==(s&n)&&0===(s&r)||(i[o]=ht(s,t)):l<=t&&(e.expiredLanes|=s),a&=~s}}(e,t);var r=ft(e,e===Ll?Pl:0);if(0===r)null!==n&&Ye(n),e.callbackNode=null,e.callbackPriority=0;else if(t=r&-r,e.callbackPriority!==t){if(null!=n&&Ye(n),1===t)0===e.tag?function(e){Fi=!0,Vi(e)}(lu.bind(null,e)):Vi(lu.bind(null,e)),oi((function(){0===(6&Cl)&&Hi()})),n=null;else{switch(xt(r)){case 1:n=Je;break;case 4:n=et;break;case 16:default:n=tt;break;case 536870912:n=rt}n=Lu(n,iu.bind(null,e))}e.callbackPriority=t,e.callbackNode=n}}function iu(e,t){if($l=-1,Jl=0,0!==(6&Cl))throw Error(a(327));var n=e.callbackNode;if(Su()&&e.callbackNode!==n)return null;var r=ft(e,e===Ll?Pl:0);if(0===r)return null;if(0!==(30&r)||0!==(r&e.expiredLanes)||t)t=vu(e,r);else{t=r;var i=Cl;Cl|=2;var o=pu();for(Ll===e&&Pl===t||(Gl=null,Hl=Qe()+500,fu(e,t));;)try{yu();break}catch(l){hu(e,l)}ba(),El.current=o,Cl=i,null!==Al?t=0:(Ll=null,Pl=0,t=Nl)}if(0!==t){if(2===t&&(0!==(i=pt(e))&&(r=i,t=au(e,i))),1===t)throw n=Il,fu(e,0),su(e,r),ru(e,Qe()),n;if(6===t)su(e,r);else{if(i=e.current.alternate,0===(30&r)&&!function(e){for(var t=e;;){if(16384&t.flags){var n=t.updateQueue;if(null!==n&&null!==(n=n.stores))for(var r=0;r<n.length;r++){var i=n[r],a=i.getSnapshot;i=i.value;try{if(!sr(a(),i))return!1}catch(s){return!1}}}if(n=t.child,16384&t.subtreeFlags&&null!==n)n.return=t,t=n;else{if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return!0;t=t.return}t.sibling.return=t.return,t=t.sibling}}return!0}(i)&&(2===(t=vu(e,r))&&(0!==(o=pt(e))&&(r=o,t=au(e,o))),1===t))throw n=Il,fu(e,0),su(e,r),ru(e,Qe()),n;switch(e.finishedWork=i,e.finishedLanes=r,t){case 0:case 1:throw Error(a(345));case 2:case 5:bu(e,Bl,Gl);break;case 3:if(su(e,r),(130023424&r)===r&&10<(t=Vl+500-Qe())){if(0!==ft(e,0))break;if(((i=e.suspendedLanes)&r)!==r){eu(),e.pingedLanes|=e.suspendedLanes&i;break}e.timeoutHandle=ri(bu.bind(null,e,Bl,Gl),t);break}bu(e,Bl,Gl);break;case 4:if(su(e,r),(4194240&r)===r)break;for(t=e.eventTimes,i=-1;0<r;){var s=31-ot(r);o=1<<s,(s=t[s])>i&&(i=s),r&=~o}if(r=i,10<(r=(120>(r=Qe()-r)?120:480>r?480:1080>r?1080:1920>r?1920:3e3>r?3e3:4320>r?4320:1960*wl(r/1960))-r)){e.timeoutHandle=ri(bu.bind(null,e,Bl,Gl),r);break}bu(e,Bl,Gl);break;default:throw Error(a(329))}}}return ru(e,Qe()),e.callbackNode===n?iu.bind(null,e):null}function au(e,t){var n=Fl;return e.current.memoizedState.isDehydrated&&(fu(e,t).flags|=256),2!==(e=vu(e,t))&&(t=Bl,Bl=n,null!==t&&ou(t)),e}function ou(e){null===Bl?Bl=e:Bl.push.apply(Bl,e)}function su(e,t){for(t&=~Ul,t&=~zl,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var n=31-ot(t),r=1<<n;e[n]=-1,t&=~r}}function lu(e){if(0!==(6&Cl))throw Error(a(327));Su();var t=ft(e,0);if(0===(1&t))return ru(e,Qe()),null;var n=vu(e,t);if(0!==e.tag&&2===n){var r=pt(e);0!==r&&(t=r,n=au(e,r))}if(1===n)throw n=Il,fu(e,0),su(e,t),ru(e,Qe()),n;if(6===n)throw Error(a(345));return e.finishedWork=e.current.alternate,e.finishedLanes=t,bu(e,Bl,Gl),ru(e,Qe()),null}function uu(e,t){var n=Cl;Cl|=1;try{return e(t)}finally{0===(Cl=n)&&(Hl=Qe()+500,Fi&&Hi())}}function cu(e){null!==Yl&&0===Yl.tag&&0===(6&Cl)&&Su();var t=Cl;Cl|=1;var n=kl.transition,r=_t;try{if(kl.transition=null,_t=1,e)return e()}finally{_t=r,kl.transition=n,0===(6&(Cl=t))&&Hi()}}function du(){Rl=Dl.current,Ei(Dl)}function fu(e,t){e.finishedWork=null,e.finishedLanes=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,ii(n)),null!==Al)for(n=Al.return;null!==n;){var r=n;switch(ta(r),r.tag){case 1:null!==(r=r.type.childContextTypes)&&void 0!==r&&Di();break;case 3:io(),Ei(Li),Ei(Ci),co();break;case 5:oo(r);break;case 4:io();break;case 13:case 19:Ei(so);break;case 10:Sa(r.type._context);break;case 22:case 23:du()}n=n.return}if(Ll=e,Al=e=Du(e.current,null),Pl=Rl=t,Nl=0,Il=null,Ul=zl=Ol=0,Bl=Fl=null,null!==Ta){for(t=0;t<Ta.length;t++)if(null!==(r=(n=Ta[t]).interleaved)){n.interleaved=null;var i=r.next,a=n.pending;if(null!==a){var o=a.next;a.next=i,r.next=o}n.pending=r}Ta=null}return e}function hu(e,t){for(;;){var n=Al;try{if(ba(),fo.current=os,yo){for(var r=mo.memoizedState;null!==r;){var i=r.queue;null!==i&&(i.pending=null),r=r.next}yo=!1}if(po=0,go=vo=mo=null,_o=!1,xo=0,Tl.current=null,null===n||null===n.return){Nl=1,Il=t,Al=null;break}e:{var o=e,s=n.return,l=n,u=t;if(t=Pl,l.flags|=32768,null!==u&&"object"===typeof u&&"function"===typeof u.then){var c=u,d=l,f=d.tag;if(0===(1&d.mode)&&(0===f||11===f||15===f)){var h=d.alternate;h?(d.updateQueue=h.updateQueue,d.memoizedState=h.memoizedState,d.lanes=h.lanes):(d.updateQueue=null,d.memoizedState=null)}var p=gs(s);if(null!==p){p.flags&=-257,ys(p,s,l,0,t),1&p.mode&&vs(o,c,t),u=c;var m=(t=p).updateQueue;if(null===m){var v=new Set;v.add(u),t.updateQueue=v}else m.add(u);break e}if(0===(1&t)){vs(o,c,t),mu();break e}u=Error(a(426))}else if(ia&&1&l.mode){var g=gs(s);if(null!==g){0===(65536&g.flags)&&(g.flags|=256),ys(g,s,l,0,t),pa(cs(u,l));break e}}o=u=cs(u,l),4!==Nl&&(Nl=2),null===Fl?Fl=[o]:Fl.push(o),o=s;do{switch(o.tag){case 3:o.flags|=65536,t&=-t,o.lanes|=t,Oa(o,ps(0,u,t));break e;case 1:l=u;var y=o.type,_=o.stateNode;if(0===(128&o.flags)&&("function"===typeof y.getDerivedStateFromError||null!==_&&"function"===typeof _.componentDidCatch&&(null===ql||!ql.has(_)))){o.flags|=65536,t&=-t,o.lanes|=t,Oa(o,ms(o,l,t));break e}}o=o.return}while(null!==o)}xu(n)}catch(x){t=x,Al===n&&null!==n&&(Al=n=n.return);continue}break}}function pu(){var e=El.current;return El.current=os,null===e?os:e}function mu(){0!==Nl&&3!==Nl&&2!==Nl||(Nl=4),null===Ll||0===(268435455&Ol)&&0===(268435455&zl)||su(Ll,Pl)}function vu(e,t){var n=Cl;Cl|=2;var r=pu();for(Ll===e&&Pl===t||(Gl=null,fu(e,t));;)try{gu();break}catch(i){hu(e,i)}if(ba(),Cl=n,El.current=r,null!==Al)throw Error(a(261));return Ll=null,Pl=0,Nl}function gu(){for(;null!==Al;)_u(Al)}function yu(){for(;null!==Al&&!Ze();)_u(Al)}function _u(e){var t=Ml(e.alternate,e,Rl);e.memoizedProps=e.pendingProps,null===t?xu(e):Al=t,Tl.current=null}function xu(e){var t=e;do{var n=t.alternate;if(e=t.return,0===(32768&t.flags)){if(null!==(n=Xs(n,t,Rl)))return void(Al=n)}else{if(null!==(n=Ys(n,t)))return n.flags&=32767,void(Al=n);if(null===e)return Nl=6,void(Al=null);e.flags|=32768,e.subtreeFlags=0,e.deletions=null}if(null!==(t=t.sibling))return void(Al=t);Al=t=e}while(null!==t);0===Nl&&(Nl=5)}function bu(e,t,n){var r=_t,i=kl.transition;try{kl.transition=null,_t=1,function(e,t,n,r){do{Su()}while(null!==Yl);if(0!==(6&Cl))throw Error(a(327));n=e.finishedWork;var i=e.finishedLanes;if(null===n)return null;if(e.finishedWork=null,e.finishedLanes=0,n===e.current)throw Error(a(177));e.callbackNode=null,e.callbackPriority=0;var o=n.lanes|n.childLanes;if(function(e,t){var n=e.pendingLanes&~t;e.pendingLanes=t,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=t,e.mutableReadLanes&=t,e.entangledLanes&=t,t=e.entanglements;var r=e.eventTimes;for(e=e.expirationTimes;0<n;){var i=31-ot(n),a=1<<i;t[i]=0,r[i]=-1,e[i]=-1,n&=~a}}(e,o),e===Ll&&(Al=Ll=null,Pl=0),0===(2064&n.subtreeFlags)&&0===(2064&n.flags)||Xl||(Xl=!0,Lu(tt,(function(){return Su(),null}))),o=0!==(15990&n.flags),0!==(15990&n.subtreeFlags)||o){o=kl.transition,kl.transition=null;var s=_t;_t=1;var l=Cl;Cl|=4,Tl.current=null,function(e,t){if(ei=Wt,hr(e=fr())){if("selectionStart"in e)var n={start:e.selectionStart,end:e.selectionEnd};else e:{var r=(n=(n=e.ownerDocument)&&n.defaultView||window).getSelection&&n.getSelection();if(r&&0!==r.rangeCount){n=r.anchorNode;var i=r.anchorOffset,o=r.focusNode;r=r.focusOffset;try{n.nodeType,o.nodeType}catch(b){n=null;break e}var s=0,l=-1,u=-1,c=0,d=0,f=e,h=null;t:for(;;){for(var p;f!==n||0!==i&&3!==f.nodeType||(l=s+i),f!==o||0!==r&&3!==f.nodeType||(u=s+r),3===f.nodeType&&(s+=f.nodeValue.length),null!==(p=f.firstChild);)h=f,f=p;for(;;){if(f===e)break t;if(h===n&&++c===i&&(l=s),h===o&&++d===r&&(u=s),null!==(p=f.nextSibling))break;h=(f=h).parentNode}f=p}n=-1===l||-1===u?null:{start:l,end:u}}else n=null}n=n||{start:0,end:0}}else n=null;for(ti={focusedElem:e,selectionRange:n},Wt=!1,$s=t;null!==$s;)if(e=(t=$s).child,0!==(1028&t.subtreeFlags)&&null!==e)e.return=t,$s=e;else for(;null!==$s;){t=$s;try{var m=t.alternate;if(0!==(1024&t.flags))switch(t.tag){case 0:case 11:case 15:case 5:case 6:case 4:case 17:break;case 1:if(null!==m){var v=m.memoizedProps,g=m.memoizedState,y=t.stateNode,_=y.getSnapshotBeforeUpdate(t.elementType===t.type?v:va(t.type,v),g);y.__reactInternalSnapshotBeforeUpdate=_}break;case 3:var x=t.stateNode.containerInfo;1===x.nodeType?x.textContent="":9===x.nodeType&&x.documentElement&&x.removeChild(x.documentElement);break;default:throw Error(a(163))}}catch(b){wu(t,t.return,b)}if(null!==(e=t.sibling)){e.return=t.return,$s=e;break}$s=t.return}m=tl,tl=!1}(e,n),vl(n,e),pr(ti),Wt=!!ei,ti=ei=null,e.current=n,yl(n,e,i),Ke(),Cl=l,_t=s,kl.transition=o}else e.current=n;if(Xl&&(Xl=!1,Yl=e,Zl=i),o=e.pendingLanes,0===o&&(ql=null),function(e){if(at&&"function"===typeof at.onCommitFiberRoot)try{at.onCommitFiberRoot(it,e,void 0,128===(128&e.current.flags))}catch(t){}}(n.stateNode),ru(e,Qe()),null!==t)for(r=e.onRecoverableError,n=0;n<t.length;n++)i=t[n],r(i.value,{componentStack:i.stack,digest:i.digest});if(Wl)throw Wl=!1,e=jl,jl=null,e;0!==(1&Zl)&&0!==e.tag&&Su(),o=e.pendingLanes,0!==(1&o)?e===Ql?Kl++:(Kl=0,Ql=e):Kl=0,Hi()}(e,t,n,r)}finally{kl.transition=i,_t=r}return null}function Su(){if(null!==Yl){var e=xt(Zl),t=kl.transition,n=_t;try{if(kl.transition=null,_t=16>e?16:e,null===Yl)var r=!1;else{if(e=Yl,Yl=null,Zl=0,0!==(6&Cl))throw Error(a(331));var i=Cl;for(Cl|=4,$s=e.current;null!==$s;){var o=$s,s=o.child;if(0!==(16&$s.flags)){var l=o.deletions;if(null!==l){for(var u=0;u<l.length;u++){var c=l[u];for($s=c;null!==$s;){var d=$s;switch(d.tag){case 0:case 11:case 15:nl(8,d,o)}var f=d.child;if(null!==f)f.return=d,$s=f;else for(;null!==$s;){var h=(d=$s).sibling,p=d.return;if(al(d),d===c){$s=null;break}if(null!==h){h.return=p,$s=h;break}$s=p}}}var m=o.alternate;if(null!==m){var v=m.child;if(null!==v){m.child=null;do{var g=v.sibling;v.sibling=null,v=g}while(null!==v)}}$s=o}}if(0!==(2064&o.subtreeFlags)&&null!==s)s.return=o,$s=s;else e:for(;null!==$s;){if(0!==(2048&(o=$s).flags))switch(o.tag){case 0:case 11:case 15:nl(9,o,o.return)}var y=o.sibling;if(null!==y){y.return=o.return,$s=y;break e}$s=o.return}}var _=e.current;for($s=_;null!==$s;){var x=(s=$s).child;if(0!==(2064&s.subtreeFlags)&&null!==x)x.return=s,$s=x;else e:for(s=_;null!==$s;){if(0!==(2048&(l=$s).flags))try{switch(l.tag){case 0:case 11:case 15:rl(9,l)}}catch(S){wu(l,l.return,S)}if(l===s){$s=null;break e}var b=l.sibling;if(null!==b){b.return=l.return,$s=b;break e}$s=l.return}}if(Cl=i,Hi(),at&&"function"===typeof at.onPostCommitFiberRoot)try{at.onPostCommitFiberRoot(it,e)}catch(S){}r=!0}return r}finally{_t=n,kl.transition=t}}return!1}function Mu(e,t,n){e=Na(e,t=ps(0,t=cs(n,t),1),1),t=eu(),null!==e&&(gt(e,1,t),ru(e,t))}function wu(e,t,n){if(3===e.tag)Mu(e,e,n);else for(;null!==t;){if(3===t.tag){Mu(t,e,n);break}if(1===t.tag){var r=t.stateNode;if("function"===typeof t.type.getDerivedStateFromError||"function"===typeof r.componentDidCatch&&(null===ql||!ql.has(r))){t=Na(t,e=ms(t,e=cs(n,e),1),1),e=eu(),null!==t&&(gt(t,1,e),ru(t,e));break}}t=t.return}}function Eu(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),t=eu(),e.pingedLanes|=e.suspendedLanes&n,Ll===e&&(Pl&n)===n&&(4===Nl||3===Nl&&(130023424&Pl)===Pl&&500>Qe()-Vl?fu(e,0):Ul|=n),ru(e,t)}function Tu(e,t){0===t&&(0===(1&e.mode)?t=1:(t=ct,0===(130023424&(ct<<=1))&&(ct=4194304)));var n=eu();null!==(e=La(e,t))&&(gt(e,t,n),ru(e,n))}function ku(e){var t=e.memoizedState,n=0;null!==t&&(n=t.retryLane),Tu(e,n)}function Cu(e,t){var n=0;switch(e.tag){case 13:var r=e.stateNode,i=e.memoizedState;null!==i&&(n=i.retryLane);break;case 19:r=e.stateNode;break;default:throw Error(a(314))}null!==r&&r.delete(t),Tu(e,n)}function Lu(e,t){return Xe(e,t)}function Au(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function Pu(e,t,n,r){return new Au(e,t,n,r)}function Ru(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Du(e,t){var n=e.alternate;return null===n?((n=Pu(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.type=e.type,n.flags=0,n.subtreeFlags=0,n.deletions=null),n.flags=14680064&e.flags,n.childLanes=e.childLanes,n.lanes=e.lanes,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Nu(e,t,n,r,i,o){var s=2;if(r=e,"function"===typeof e)Ru(e)&&(s=1);else if("string"===typeof e)s=5;else e:switch(e){case M:return Iu(n.children,i,o,t);case w:s=8,i|=8;break;case E:return(e=Pu(12,n,t,2|i)).elementType=E,e.lanes=o,e;case L:return(e=Pu(13,n,t,i)).elementType=L,e.lanes=o,e;case A:return(e=Pu(19,n,t,i)).elementType=A,e.lanes=o,e;case D:return Ou(n,i,o,t);default:if("object"===typeof e&&null!==e)switch(e.$$typeof){case T:s=10;break e;case k:s=9;break e;case C:s=11;break e;case P:s=14;break e;case R:s=16,r=null;break e}throw Error(a(130,null==e?e:typeof e,""))}return(t=Pu(s,n,t,i)).elementType=e,t.type=r,t.lanes=o,t}function Iu(e,t,n,r){return(e=Pu(7,e,r,t)).lanes=n,e}function Ou(e,t,n,r){return(e=Pu(22,e,r,t)).elementType=D,e.lanes=n,e.stateNode={isHidden:!1},e}function zu(e,t,n){return(e=Pu(6,e,null,t)).lanes=n,e}function Uu(e,t,n){return(t=Pu(4,null!==e.children?e.children:[],e.key,t)).lanes=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Fu(e,t,n,r,i){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=vt(0),this.expirationTimes=vt(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=vt(0),this.identifierPrefix=r,this.onRecoverableError=i,this.mutableSourceEagerHydrationData=null}function Bu(e,t,n,r,i,a,o,s,l){return e=new Fu(e,t,n,s,l),1===t?(t=1,!0===a&&(t|=8)):t=0,a=Pu(3,null,null,t),e.current=a,a.stateNode=e,a.memoizedState={element:r,isDehydrated:n,cache:null,transitions:null,pendingSuspenseBoundaries:null},Pa(a),e}function Vu(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:S,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}function Hu(e){if(!e)return ki;e:{if(He(e=e._reactInternals)!==e||1!==e.tag)throw Error(a(170));var t=e;do{switch(t.tag){case 3:t=t.stateNode.context;break e;case 1:if(Ri(t.type)){t=t.stateNode.__reactInternalMemoizedMergedChildContext;break e}}t=t.return}while(null!==t);throw Error(a(171))}if(1===e.tag){var n=e.type;if(Ri(n))return Ii(e,n,t)}return t}function Gu(e,t,n,r,i,a,o,s,l){return(e=Bu(n,r,!0,e,0,a,0,s,l)).context=Hu(null),n=e.current,(a=Da(r=eu(),i=tu(n))).callback=void 0!==t&&null!==t?t:null,Na(n,a,i),e.current.lanes=i,gt(e,i,r),ru(e,r),e}function Wu(e,t,n,r){var i=t.current,a=eu(),o=tu(i);return n=Hu(n),null===t.context?t.context=n:t.pendingContext=n,(t=Da(a,o)).payload={element:e},null!==(r=void 0===r?null:r)&&(t.callback=r),null!==(e=Na(i,t,o))&&(nu(e,i,o,a),Ia(e,i,o)),o}function ju(e){return(e=e.current).child?(e.child.tag,e.child.stateNode):null}function qu(e,t){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var n=e.retryLane;e.retryLane=0!==n&&n<t?n:t}}function Xu(e,t){qu(e,t),(e=e.alternate)&&qu(e,t)}Ml=function(e,t,n){if(null!==e)if(e.memoizedProps!==t.pendingProps||Li.current)xs=!0;else{if(0===(e.lanes&n)&&0===(128&t.flags))return xs=!1,function(e,t,n){switch(t.tag){case 3:As(t),ha();break;case 5:ao(t);break;case 1:Ri(t.type)&&Oi(t);break;case 4:ro(t,t.stateNode.containerInfo);break;case 10:var r=t.type._context,i=t.memoizedProps.value;Ti(ga,r._currentValue),r._currentValue=i;break;case 13:if(null!==(r=t.memoizedState))return null!==r.dehydrated?(Ti(so,1&so.current),t.flags|=128,null):0!==(n&t.child.childLanes)?zs(e,t,n):(Ti(so,1&so.current),null!==(e=Ws(e,t,n))?e.sibling:null);Ti(so,1&so.current);break;case 19:if(r=0!==(n&t.childLanes),0!==(128&e.flags)){if(r)return Hs(e,t,n);t.flags|=128}if(null!==(i=t.memoizedState)&&(i.rendering=null,i.tail=null,i.lastEffect=null),Ti(so,so.current),r)break;return null;case 22:case 23:return t.lanes=0,Es(e,t,n)}return Ws(e,t,n)}(e,t,n);xs=0!==(131072&e.flags)}else xs=!1,ia&&0!==(1048576&t.flags)&&Ji(t,qi,t.index);switch(t.lanes=0,t.tag){case 2:var r=t.type;Gs(e,t),e=t.pendingProps;var i=Pi(t,Ci.current);wa(t,n),i=wo(null,t,r,e,i,n);var o=Eo();return t.flags|=1,"object"===typeof i&&null!==i&&"function"===typeof i.render&&void 0===i.$$typeof?(t.tag=1,t.memoizedState=null,t.updateQueue=null,Ri(r)?(o=!0,Oi(t)):o=!1,t.memoizedState=null!==i.state&&void 0!==i.state?i.state:null,Pa(t),i.updater=Va,t.stateNode=i,i._reactInternals=t,ja(t,r,e,n),t=Ls(null,t,r,!0,o,n)):(t.tag=0,ia&&o&&ea(t),bs(null,t,i,n),t=t.child),t;case 16:r=t.elementType;e:{switch(Gs(e,t),e=t.pendingProps,r=(i=r._init)(r._payload),t.type=r,i=t.tag=function(e){if("function"===typeof e)return Ru(e)?1:0;if(void 0!==e&&null!==e){if((e=e.$$typeof)===C)return 11;if(e===P)return 14}return 2}(r),e=va(r,e),i){case 0:t=ks(null,t,r,e,n);break e;case 1:t=Cs(null,t,r,e,n);break e;case 11:t=Ss(null,t,r,e,n);break e;case 14:t=Ms(null,t,r,va(r.type,e),n);break e}throw Error(a(306,r,""))}return t;case 0:return r=t.type,i=t.pendingProps,ks(e,t,r,i=t.elementType===r?i:va(r,i),n);case 1:return r=t.type,i=t.pendingProps,Cs(e,t,r,i=t.elementType===r?i:va(r,i),n);case 3:e:{if(As(t),null===e)throw Error(a(387));r=t.pendingProps,i=(o=t.memoizedState).element,Ra(e,t),za(t,r,null,n);var s=t.memoizedState;if(r=s.element,o.isDehydrated){if(o={element:r,isDehydrated:!1,cache:s.cache,pendingSuspenseBoundaries:s.pendingSuspenseBoundaries,transitions:s.transitions},t.updateQueue.baseState=o,t.memoizedState=o,256&t.flags){t=Ps(e,t,r,n,i=cs(Error(a(423)),t));break e}if(r!==i){t=Ps(e,t,r,n,i=cs(Error(a(424)),t));break e}for(ra=ui(t.stateNode.containerInfo.firstChild),na=t,ia=!0,aa=null,n=Qa(t,null,r,n),t.child=n;n;)n.flags=-3&n.flags|4096,n=n.sibling}else{if(ha(),r===i){t=Ws(e,t,n);break e}bs(e,t,r,n)}t=t.child}return t;case 5:return ao(t),null===e&&ua(t),r=t.type,i=t.pendingProps,o=null!==e?e.memoizedProps:null,s=i.children,ni(r,i)?s=null:null!==o&&ni(r,o)&&(t.flags|=32),Ts(e,t),bs(e,t,s,n),t.child;case 6:return null===e&&ua(t),null;case 13:return zs(e,t,n);case 4:return ro(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=Ka(t,null,r,n):bs(e,t,r,n),t.child;case 11:return r=t.type,i=t.pendingProps,Ss(e,t,r,i=t.elementType===r?i:va(r,i),n);case 7:return bs(e,t,t.pendingProps,n),t.child;case 8:case 12:return bs(e,t,t.pendingProps.children,n),t.child;case 10:e:{if(r=t.type._context,i=t.pendingProps,o=t.memoizedProps,s=i.value,Ti(ga,r._currentValue),r._currentValue=s,null!==o)if(sr(o.value,s)){if(o.children===i.children&&!Li.current){t=Ws(e,t,n);break e}}else for(null!==(o=t.child)&&(o.return=t);null!==o;){var l=o.dependencies;if(null!==l){s=o.child;for(var u=l.firstContext;null!==u;){if(u.context===r){if(1===o.tag){(u=Da(-1,n&-n)).tag=2;var c=o.updateQueue;if(null!==c){var d=(c=c.shared).pending;null===d?u.next=u:(u.next=d.next,d.next=u),c.pending=u}}o.lanes|=n,null!==(u=o.alternate)&&(u.lanes|=n),Ma(o.return,n,t),l.lanes|=n;break}u=u.next}}else if(10===o.tag)s=o.type===t.type?null:o.child;else if(18===o.tag){if(null===(s=o.return))throw Error(a(341));s.lanes|=n,null!==(l=s.alternate)&&(l.lanes|=n),Ma(s,n,t),s=o.sibling}else s=o.child;if(null!==s)s.return=o;else for(s=o;null!==s;){if(s===t){s=null;break}if(null!==(o=s.sibling)){o.return=s.return,s=o;break}s=s.return}o=s}bs(e,t,i.children,n),t=t.child}return t;case 9:return i=t.type,r=t.pendingProps.children,wa(t,n),r=r(i=Ea(i)),t.flags|=1,bs(e,t,r,n),t.child;case 14:return i=va(r=t.type,t.pendingProps),Ms(e,t,r,i=va(r.type,i),n);case 15:return ws(e,t,t.type,t.pendingProps,n);case 17:return r=t.type,i=t.pendingProps,i=t.elementType===r?i:va(r,i),Gs(e,t),t.tag=1,Ri(r)?(e=!0,Oi(t)):e=!1,wa(t,n),Ga(t,r,i),ja(t,r,i,n),Ls(null,t,r,!0,e,n);case 19:return Hs(e,t,n);case 22:return Es(e,t,n)}throw Error(a(156,t.tag))};var Yu="function"===typeof reportError?reportError:function(e){console.error(e)};function Zu(e){this._internalRoot=e}function Ku(e){this._internalRoot=e}function Qu(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType)}function $u(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Ju(){}function ec(e,t,n,r,i){var a=n._reactRootContainer;if(a){var o=a;if("function"===typeof i){var s=i;i=function(){var e=ju(o);s.call(e)}}Wu(t,o,e,i)}else o=function(e,t,n,r,i){if(i){if("function"===typeof r){var a=r;r=function(){var e=ju(o);a.call(e)}}var o=Gu(t,r,e,0,null,!1,0,"",Ju);return e._reactRootContainer=o,e[pi]=o.current,Hr(8===e.nodeType?e.parentNode:e),cu(),o}for(;i=e.lastChild;)e.removeChild(i);if("function"===typeof r){var s=r;r=function(){var e=ju(l);s.call(e)}}var l=Bu(e,0,!1,null,0,!1,0,"",Ju);return e._reactRootContainer=l,e[pi]=l.current,Hr(8===e.nodeType?e.parentNode:e),cu((function(){Wu(t,l,n,r)})),l}(n,t,e,i,r);return ju(o)}Ku.prototype.render=Zu.prototype.render=function(e){var t=this._internalRoot;if(null===t)throw Error(a(409));Wu(e,t,null,null)},Ku.prototype.unmount=Zu.prototype.unmount=function(){var e=this._internalRoot;if(null!==e){this._internalRoot=null;var t=e.containerInfo;cu((function(){Wu(null,e,null,null)})),t[pi]=null}},Ku.prototype.unstable_scheduleHydration=function(e){if(e){var t=wt();e={blockedOn:null,target:e,priority:t};for(var n=0;n<Dt.length&&0!==t&&t<Dt[n].priority;n++);Dt.splice(n,0,e),0===n&&zt(e)}},bt=function(e){switch(e.tag){case 3:var t=e.stateNode;if(t.current.memoizedState.isDehydrated){var n=dt(t.pendingLanes);0!==n&&(yt(t,1|n),ru(t,Qe()),0===(6&Cl)&&(Hl=Qe()+500,Hi()))}break;case 13:cu((function(){var t=La(e,1);if(null!==t){var n=eu();nu(t,e,1,n)}})),Xu(e,1)}},St=function(e){if(13===e.tag){var t=La(e,134217728);if(null!==t)nu(t,e,134217728,eu());Xu(e,134217728)}},Mt=function(e){if(13===e.tag){var t=tu(e),n=La(e,t);if(null!==n)nu(n,e,t,eu());Xu(e,t)}},wt=function(){return _t},Et=function(e,t){var n=_t;try{return _t=e,t()}finally{_t=n}},Se=function(e,t,n){switch(t){case"input":if($(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var i=bi(r);if(!i)throw Error(a(90));X(r),$(r,i)}}}break;case"textarea":ae(e,n);break;case"select":null!=(t=n.value)&&ne(e,!!n.multiple,t,!1)}},Ce=uu,Le=cu;var tc={usingClientEntryPoint:!1,Events:[_i,xi,bi,Te,ke,uu]},nc={findFiberByHostInstance:yi,bundleType:0,version:"18.2.0",rendererPackageName:"react-dom"},rc={bundleType:nc.bundleType,version:nc.version,rendererPackageName:nc.rendererPackageName,rendererConfig:nc.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:x.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=je(e))?null:e.stateNode},findFiberByHostInstance:nc.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.2.0-next-9e3b772b8-20220608"};if("undefined"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var ic=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!ic.isDisabled&&ic.supportsFiber)try{it=ic.inject(rc),at=ic}catch(ce){}}t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=tc,t.createPortal=function(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Qu(t))throw Error(a(200));return Vu(e,t,null,n)},t.createRoot=function(e,t){if(!Qu(e))throw Error(a(299));var n=!1,r="",i=Yu;return null!==t&&void 0!==t&&(!0===t.unstable_strictMode&&(n=!0),void 0!==t.identifierPrefix&&(r=t.identifierPrefix),void 0!==t.onRecoverableError&&(i=t.onRecoverableError)),t=Bu(e,1,!1,null,0,n,0,r,i),e[pi]=t.current,Hr(8===e.nodeType?e.parentNode:e),new Zu(t)},t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternals;if(void 0===t){if("function"===typeof e.render)throw Error(a(188));throw e=Object.keys(e).join(","),Error(a(268,e))}return e=null===(e=je(t))?null:e.stateNode},t.flushSync=function(e){return cu(e)},t.hydrate=function(e,t,n){if(!$u(t))throw Error(a(200));return ec(null,e,t,!0,n)},t.hydrateRoot=function(e,t,n){if(!Qu(e))throw Error(a(405));var r=null!=n&&n.hydratedSources||null,i=!1,o="",s=Yu;if(null!==n&&void 0!==n&&(!0===n.unstable_strictMode&&(i=!0),void 0!==n.identifierPrefix&&(o=n.identifierPrefix),void 0!==n.onRecoverableError&&(s=n.onRecoverableError)),t=Gu(t,null,e,1,null!=n?n:null,i,0,o,s),e[pi]=t.current,Hr(e),r)for(e=0;e<r.length;e++)i=(i=(n=r[e])._getVersion)(n._source),null==t.mutableSourceEagerHydrationData?t.mutableSourceEagerHydrationData=[n,i]:t.mutableSourceEagerHydrationData.push(n,i);return new Ku(t)},t.render=function(e,t,n){if(!$u(t))throw Error(a(200));return ec(null,e,t,!1,n)},t.unmountComponentAtNode=function(e){if(!$u(e))throw Error(a(40));return!!e._reactRootContainer&&(cu((function(){ec(null,null,e,!1,(function(){e._reactRootContainer=null,e[pi]=null}))})),!0)},t.unstable_batchedUpdates=uu,t.unstable_renderSubtreeIntoContainer=function(e,t,n,r){if(!$u(n))throw Error(a(200));if(null==e||void 0===e._reactInternals)throw Error(a(38));return ec(e,t,n,!1,r)},t.version="18.2.0-next-9e3b772b8-20220608"},250:function(e,t,n){var r=n(164);t.createRoot=r.createRoot,t.hydrateRoot=r.hydrateRoot},164:function(e,t,n){!function e(){if("undefined"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(t){console.error(t)}}(),e.exports=n(463)},374:function(e,t,n){var r=n(791),i=Symbol.for("react.element"),a=Symbol.for("react.fragment"),o=Object.prototype.hasOwnProperty,s=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,l={key:!0,ref:!0,__self:!0,__source:!0};function u(e,t,n){var r,a={},u=null,c=null;for(r in void 0!==n&&(u=""+n),void 0!==t.key&&(u=""+t.key),void 0!==t.ref&&(c=t.ref),t)o.call(t,r)&&!l.hasOwnProperty(r)&&(a[r]=t[r]);if(e&&e.defaultProps)for(r in t=e.defaultProps)void 0===a[r]&&(a[r]=t[r]);return{$$typeof:i,type:e,key:u,ref:c,props:a,_owner:s.current}}t.jsx=u},117:function(e,t){var n=Symbol.for("react.element"),r=Symbol.for("react.portal"),i=Symbol.for("react.fragment"),a=Symbol.for("react.strict_mode"),o=Symbol.for("react.profiler"),s=Symbol.for("react.provider"),l=Symbol.for("react.context"),u=Symbol.for("react.forward_ref"),c=Symbol.for("react.suspense"),d=Symbol.for("react.memo"),f=Symbol.for("react.lazy"),h=Symbol.iterator;var p={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},m=Object.assign,v={};function g(e,t,n){this.props=e,this.context=t,this.refs=v,this.updater=n||p}function y(){}function _(e,t,n){this.props=e,this.context=t,this.refs=v,this.updater=n||p}g.prototype.isReactComponent={},g.prototype.setState=function(e,t){if("object"!==typeof e&&"function"!==typeof e&&null!=e)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,e,t,"setState")},g.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},y.prototype=g.prototype;var x=_.prototype=new y;x.constructor=_,m(x,g.prototype),x.isPureReactComponent=!0;var b=Array.isArray,S=Object.prototype.hasOwnProperty,M={current:null},w={key:!0,ref:!0,__self:!0,__source:!0};function E(e,t,r){var i,a={},o=null,s=null;if(null!=t)for(i in void 0!==t.ref&&(s=t.ref),void 0!==t.key&&(o=""+t.key),t)S.call(t,i)&&!w.hasOwnProperty(i)&&(a[i]=t[i]);var l=arguments.length-2;if(1===l)a.children=r;else if(1<l){for(var u=Array(l),c=0;c<l;c++)u[c]=arguments[c+2];a.children=u}if(e&&e.defaultProps)for(i in l=e.defaultProps)void 0===a[i]&&(a[i]=l[i]);return{$$typeof:n,type:e,key:o,ref:s,props:a,_owner:M.current}}function T(e){return"object"===typeof e&&null!==e&&e.$$typeof===n}var k=/\/+/g;function C(e,t){return"object"===typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return t[e]}))}(""+e.key):t.toString(36)}function L(e,t,i,a,o){var s=typeof e;"undefined"!==s&&"boolean"!==s||(e=null);var l=!1;if(null===e)l=!0;else switch(s){case"string":case"number":l=!0;break;case"object":switch(e.$$typeof){case n:case r:l=!0}}if(l)return o=o(l=e),e=""===a?"."+C(l,0):a,b(o)?(i="",null!=e&&(i=e.replace(k,"$&/")+"/"),L(o,t,i,"",(function(e){return e}))):null!=o&&(T(o)&&(o=function(e,t){return{$$typeof:n,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(o,i+(!o.key||l&&l.key===o.key?"":(""+o.key).replace(k,"$&/")+"/")+e)),t.push(o)),1;if(l=0,a=""===a?".":a+":",b(e))for(var u=0;u<e.length;u++){var c=a+C(s=e[u],u);l+=L(s,t,i,c,o)}else if(c=function(e){return null===e||"object"!==typeof e?null:"function"===typeof(e=h&&e[h]||e["@@iterator"])?e:null}(e),"function"===typeof c)for(e=c.call(e),u=0;!(s=e.next()).done;)l+=L(s=s.value,t,i,c=a+C(s,u++),o);else if("object"===s)throw t=String(e),Error("Objects are not valid as a React child (found: "+("[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t)+"). If you meant to render a collection of children, use an array instead.");return l}function A(e,t,n){if(null==e)return e;var r=[],i=0;return L(e,r,"","",(function(e){return t.call(n,e,i++)})),r}function P(e){if(-1===e._status){var t=e._result;(t=t()).then((function(t){0!==e._status&&-1!==e._status||(e._status=1,e._result=t)}),(function(t){0!==e._status&&-1!==e._status||(e._status=2,e._result=t)})),-1===e._status&&(e._status=0,e._result=t)}if(1===e._status)return e._result.default;throw e._result}var R={current:null},D={transition:null},N={ReactCurrentDispatcher:R,ReactCurrentBatchConfig:D,ReactCurrentOwner:M};t.Children={map:A,forEach:function(e,t,n){A(e,(function(){t.apply(this,arguments)}),n)},count:function(e){var t=0;return A(e,(function(){t++})),t},toArray:function(e){return A(e,(function(e){return e}))||[]},only:function(e){if(!T(e))throw Error("React.Children.only expected to receive a single React element child.");return e}},t.Component=g,t.Fragment=i,t.Profiler=o,t.PureComponent=_,t.StrictMode=a,t.Suspense=c,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=N,t.cloneElement=function(e,t,r){if(null===e||void 0===e)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+e+".");var i=m({},e.props),a=e.key,o=e.ref,s=e._owner;if(null!=t){if(void 0!==t.ref&&(o=t.ref,s=M.current),void 0!==t.key&&(a=""+t.key),e.type&&e.type.defaultProps)var l=e.type.defaultProps;for(u in t)S.call(t,u)&&!w.hasOwnProperty(u)&&(i[u]=void 0===t[u]&&void 0!==l?l[u]:t[u])}var u=arguments.length-2;if(1===u)i.children=r;else if(1<u){l=Array(u);for(var c=0;c<u;c++)l[c]=arguments[c+2];i.children=l}return{$$typeof:n,type:e.type,key:a,ref:o,props:i,_owner:s}},t.createContext=function(e){return(e={$$typeof:l,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null}).Provider={$$typeof:s,_context:e},e.Consumer=e},t.createElement=E,t.createFactory=function(e){var t=E.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:u,render:e}},t.isValidElement=T,t.lazy=function(e){return{$$typeof:f,_payload:{_status:-1,_result:e},_init:P}},t.memo=function(e,t){return{$$typeof:d,type:e,compare:void 0===t?null:t}},t.startTransition=function(e){var t=D.transition;D.transition={};try{e()}finally{D.transition=t}},t.unstable_act=function(){throw Error("act(...) is not supported in production builds of React.")},t.useCallback=function(e,t){return R.current.useCallback(e,t)},t.useContext=function(e){return R.current.useContext(e)},t.useDebugValue=function(){},t.useDeferredValue=function(e){return R.current.useDeferredValue(e)},t.useEffect=function(e,t){return R.current.useEffect(e,t)},t.useId=function(){return R.current.useId()},t.useImperativeHandle=function(e,t,n){return R.current.useImperativeHandle(e,t,n)},t.useInsertionEffect=function(e,t){return R.current.useInsertionEffect(e,t)},t.useLayoutEffect=function(e,t){return R.current.useLayoutEffect(e,t)},t.useMemo=function(e,t){return R.current.useMemo(e,t)},t.useReducer=function(e,t,n){return R.current.useReducer(e,t,n)},t.useRef=function(e){return R.current.useRef(e)},t.useState=function(e){return R.current.useState(e)},t.useSyncExternalStore=function(e,t,n){return R.current.useSyncExternalStore(e,t,n)},t.useTransition=function(){return R.current.useTransition()},t.version="18.2.0"},791:function(e,t,n){e.exports=n(117)},184:function(e,t,n){e.exports=n(374)},813:function(e,t){function n(e,t){var n=e.length;e.push(t);e:for(;0<n;){var r=n-1>>>1,i=e[r];if(!(0<a(i,t)))break e;e[r]=t,e[n]=i,n=r}}function r(e){return 0===e.length?null:e[0]}function i(e){if(0===e.length)return null;var t=e[0],n=e.pop();if(n!==t){e[0]=n;e:for(var r=0,i=e.length,o=i>>>1;r<o;){var s=2*(r+1)-1,l=e[s],u=s+1,c=e[u];if(0>a(l,n))u<i&&0>a(c,l)?(e[r]=c,e[u]=n,r=u):(e[r]=l,e[s]=n,r=s);else{if(!(u<i&&0>a(c,n)))break e;e[r]=c,e[u]=n,r=u}}}return t}function a(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}if("object"===typeof performance&&"function"===typeof performance.now){var o=performance;t.unstable_now=function(){return o.now()}}else{var s=Date,l=s.now();t.unstable_now=function(){return s.now()-l}}var u=[],c=[],d=1,f=null,h=3,p=!1,m=!1,v=!1,g="function"===typeof setTimeout?setTimeout:null,y="function"===typeof clearTimeout?clearTimeout:null,_="undefined"!==typeof setImmediate?setImmediate:null;function x(e){for(var t=r(c);null!==t;){if(null===t.callback)i(c);else{if(!(t.startTime<=e))break;i(c),t.sortIndex=t.expirationTime,n(u,t)}t=r(c)}}function b(e){if(v=!1,x(e),!m)if(null!==r(u))m=!0,D(S);else{var t=r(c);null!==t&&N(b,t.startTime-e)}}function S(e,n){m=!1,v&&(v=!1,y(T),T=-1),p=!0;var a=h;try{for(x(n),f=r(u);null!==f&&(!(f.expirationTime>n)||e&&!L());){var o=f.callback;if("function"===typeof o){f.callback=null,h=f.priorityLevel;var s=o(f.expirationTime<=n);n=t.unstable_now(),"function"===typeof s?f.callback=s:f===r(u)&&i(u),x(n)}else i(u);f=r(u)}if(null!==f)var l=!0;else{var d=r(c);null!==d&&N(b,d.startTime-n),l=!1}return l}finally{f=null,h=a,p=!1}}"undefined"!==typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);var M,w=!1,E=null,T=-1,k=5,C=-1;function L(){return!(t.unstable_now()-C<k)}function A(){if(null!==E){var e=t.unstable_now();C=e;var n=!0;try{n=E(!0,e)}finally{n?M():(w=!1,E=null)}}else w=!1}if("function"===typeof _)M=function(){_(A)};else if("undefined"!==typeof MessageChannel){var P=new MessageChannel,R=P.port2;P.port1.onmessage=A,M=function(){R.postMessage(null)}}else M=function(){g(A,0)};function D(e){E=e,w||(w=!0,M())}function N(e,n){T=g((function(){e(t.unstable_now())}),n)}t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){m||p||(m=!0,D(S))},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):k=0<e?Math.floor(1e3/e):5},t.unstable_getCurrentPriorityLevel=function(){return h},t.unstable_getFirstCallbackNode=function(){return r(u)},t.unstable_next=function(e){switch(h){case 1:case 2:case 3:var t=3;break;default:t=h}var n=h;h=t;try{return e()}finally{h=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=function(){},t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=h;h=e;try{return t()}finally{h=n}},t.unstable_scheduleCallback=function(e,i,a){var o=t.unstable_now();switch("object"===typeof a&&null!==a?a="number"===typeof(a=a.delay)&&0<a?o+a:o:a=o,e){case 1:var s=-1;break;case 2:s=250;break;case 5:s=1073741823;break;case 4:s=1e4;break;default:s=5e3}return e={id:d++,callback:i,priorityLevel:e,startTime:a,expirationTime:s=a+s,sortIndex:-1},a>o?(e.sortIndex=a,n(c,e),null===r(u)&&e===r(c)&&(v?(y(T),T=-1):v=!0,N(b,a-o))):(e.sortIndex=s,n(u,e),m||p||(m=!0,D(S))),e},t.unstable_shouldYield=L,t.unstable_wrapCallback=function(e){var t=h;return function(){var n=h;h=t;try{return e.apply(this,arguments)}finally{h=n}}}},296:function(e,t,n){e.exports=n(813)}},t={};function n(r){var i=t[r];if(void 0!==i)return i.exports;var a=t[r]={exports:{}};return e[r](a,a.exports,n),a.exports}!function(){var e,t=n(791),r=n(250);function i(e){return i=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},i(e)}function a(e,t){return a=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},a(e,t)}function o(){if("undefined"===typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"===typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}function s(e,t,n){return o()?Reflect.construct.bind():function(e,t,n){var r=[null];r.push.apply(r,t);var i=new(Function.bind.apply(e,r));return n&&a(i,n.prototype),i},s.apply(null,arguments)}function l(e){var t="function"===typeof Map?new Map:void 0;return function(e){if(null===e||(e,-1===Function.toString.call(n).indexOf("[native code]")))return e;var n;if("function"!==typeof e)throw new TypeError("Super expression must either be null or a function");if("undefined"!==typeof t){if(t.has(e))return t.get(e);t.set(e,r)}function r(){return s(e,arguments,i(this).constructor)}return r.prototype=Object.create(e.prototype,{constructor:{value:r,enumerable:!1,writable:!0,configurable:!0}}),a(r,e)},l(e)}function u(e,t,n,r,i,a,o){try{var s=e[a](o),l=s.value}catch(u){return void n(u)}s.done?t(l):Promise.resolve(l).then(r,i)}function c(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function d(e,t){if(e){if("string"===typeof e)return c(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?c(e,t):void 0}}function f(e,t){var n="undefined"!==typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!n){if(Array.isArray(e)||(n=d(e))||t&&e&&"number"===typeof e.length){n&&(e=n);var r=0,i=function(){};return{s:i,n:function(){return r>=e.length?{done:!0}:{done:!1,value:e[r++]}},e:function(e){throw e},f:i}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,o=!0,s=!1;return{s:function(){n=n.call(e)},n:function(){var e=n.next();return o=e.done,e},e:function(e){s=!0,a=e},f:function(){try{o||null==n.return||n.return()}finally{if(s)throw a}}}}function h(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,i,a,o,s=[],l=!0,u=!1;try{if(a=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;l=!1}else for(;!(l=(r=a.call(n)).done)&&(s.push(r.value),s.length!==t);l=!0);}catch(c){u=!0,i=c}finally{try{if(!l&&null!=n.return&&(o=n.return(),Object(o)!==o))return}finally{if(u)throw i}}return s}}(e,t)||d(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function p(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=i(e)););return e}function m(){return m="undefined"!==typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=p(e,t);if(r){var i=Object.getOwnPropertyDescriptor(r,t);return i.get?i.get.call(arguments.length<3?e:n):i.value}},m.apply(this,arguments)}function v(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function g(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&a(e,t)}function y(e){return y="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},y(e)}function _(e,t){if(t&&("object"===y(t)||"function"===typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return v(e)}function x(e){var t=o();return function(){var n,r=i(e);if(t){var a=i(this).constructor;n=Reflect.construct(r,arguments,a)}else n=r.apply(this,arguments);return _(this,n)}}function b(e){var t=function(e,t){if("object"!==y(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,t||"default");if("object"!==y(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"===y(t)?t:String(t)}function S(e,t,n){return(t=b(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function M(){M=function(){return e};var e={},t=Object.prototype,n=t.hasOwnProperty,r=Object.defineProperty||function(e,t,n){e[t]=n.value},i="function"==typeof Symbol?Symbol:{},a=i.iterator||"@@iterator",o=i.asyncIterator||"@@asyncIterator",s=i.toStringTag||"@@toStringTag";function l(e,t,n){return Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{l({},"")}catch(A){l=function(e,t,n){return e[t]=n}}function u(e,t,n,i){var a=t&&t.prototype instanceof f?t:f,o=Object.create(a.prototype),s=new k(i||[]);return r(o,"_invoke",{value:S(e,n,s)}),o}function c(e,t,n){try{return{type:"normal",arg:e.call(t,n)}}catch(A){return{type:"throw",arg:A}}}e.wrap=u;var d={};function f(){}function h(){}function p(){}var m={};l(m,a,(function(){return this}));var v=Object.getPrototypeOf,g=v&&v(v(C([])));g&&g!==t&&n.call(g,a)&&(m=g);var _=p.prototype=f.prototype=Object.create(m);function x(e){["next","throw","return"].forEach((function(t){l(e,t,(function(e){return this._invoke(t,e)}))}))}function b(e,t){function i(r,a,o,s){var l=c(e[r],e,a);if("throw"!==l.type){var u=l.arg,d=u.value;return d&&"object"==y(d)&&n.call(d,"__await")?t.resolve(d.__await).then((function(e){i("next",e,o,s)}),(function(e){i("throw",e,o,s)})):t.resolve(d).then((function(e){u.value=e,o(u)}),(function(e){return i("throw",e,o,s)}))}s(l.arg)}var a;r(this,"_invoke",{value:function(e,n){function r(){return new t((function(t,r){i(e,n,t,r)}))}return a=a?a.then(r,r):r()}})}function S(e,t,n){var r="suspendedStart";return function(i,a){if("executing"===r)throw new Error("Generator is already running");if("completed"===r){if("throw"===i)throw a;return L()}for(n.method=i,n.arg=a;;){var o=n.delegate;if(o){var s=w(o,n);if(s){if(s===d)continue;return s}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if("suspendedStart"===r)throw r="completed",n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);r="executing";var l=c(e,t,n);if("normal"===l.type){if(r=n.done?"completed":"suspendedYield",l.arg===d)continue;return{value:l.arg,done:n.done}}"throw"===l.type&&(r="completed",n.method="throw",n.arg=l.arg)}}}function w(e,t){var n=t.method,r=e.iterator[n];if(void 0===r)return t.delegate=null,"throw"===n&&e.iterator.return&&(t.method="return",t.arg=void 0,w(e,t),"throw"===t.method)||"return"!==n&&(t.method="throw",t.arg=new TypeError("The iterator does not provide a '"+n+"' method")),d;var i=c(r,e.iterator,t.arg);if("throw"===i.type)return t.method="throw",t.arg=i.arg,t.delegate=null,d;var a=i.arg;return a?a.done?(t[e.resultName]=a.value,t.next=e.nextLoc,"return"!==t.method&&(t.method="next",t.arg=void 0),t.delegate=null,d):a:(t.method="throw",t.arg=new TypeError("iterator result is not an object"),t.delegate=null,d)}function E(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function T(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function k(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(E,this),this.reset(!0)}function C(e){if(e){var t=e[a];if(t)return t.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var r=-1,i=function t(){for(;++r<e.length;)if(n.call(e,r))return t.value=e[r],t.done=!1,t;return t.value=void 0,t.done=!0,t};return i.next=i}}return{next:L}}function L(){return{value:void 0,done:!0}}return h.prototype=p,r(_,"constructor",{value:p,configurable:!0}),r(p,"constructor",{value:h,configurable:!0}),h.displayName=l(p,s,"GeneratorFunction"),e.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===h||"GeneratorFunction"===(t.displayName||t.name))},e.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,p):(e.__proto__=p,l(e,s,"GeneratorFunction")),e.prototype=Object.create(_),e},e.awrap=function(e){return{__await:e}},x(b.prototype),l(b.prototype,o,(function(){return this})),e.AsyncIterator=b,e.async=function(t,n,r,i,a){void 0===a&&(a=Promise);var o=new b(u(t,n,r,i),a);return e.isGeneratorFunction(n)?o:o.next().then((function(e){return e.done?e.value:o.next()}))},x(_),l(_,s,"Generator"),l(_,a,(function(){return this})),l(_,"toString",(function(){return"[object Generator]"})),e.keys=function(e){var t=Object(e),n=[];for(var r in t)n.push(r);return n.reverse(),function e(){for(;n.length;){var r=n.pop();if(r in t)return e.value=r,e.done=!1,e}return e.done=!0,e}},e.values=C,k.prototype={constructor:k,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(T),!e)for(var t in this)"t"===t.charAt(0)&&n.call(this,t)&&!isNaN(+t.slice(1))&&(this[t]=void 0)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var t=this;function r(n,r){return o.type="throw",o.arg=e,t.next=n,r&&(t.method="next",t.arg=void 0),!!r}for(var i=this.tryEntries.length-1;i>=0;--i){var a=this.tryEntries[i],o=a.completion;if("root"===a.tryLoc)return r("end");if(a.tryLoc<=this.prev){var s=n.call(a,"catchLoc"),l=n.call(a,"finallyLoc");if(s&&l){if(this.prev<a.catchLoc)return r(a.catchLoc,!0);if(this.prev<a.finallyLoc)return r(a.finallyLoc)}else if(s){if(this.prev<a.catchLoc)return r(a.catchLoc,!0)}else{if(!l)throw new Error("try statement without catch or finally");if(this.prev<a.finallyLoc)return r(a.finallyLoc)}}}},abrupt:function(e,t){for(var r=this.tryEntries.length-1;r>=0;--r){var i=this.tryEntries[r];if(i.tryLoc<=this.prev&&n.call(i,"finallyLoc")&&this.prev<i.finallyLoc){var a=i;break}}a&&("break"===e||"continue"===e)&&a.tryLoc<=t&&t<=a.finallyLoc&&(a=null);var o=a?a.completion:{};return o.type=e,o.arg=t,a?(this.method="next",this.next=a.finallyLoc,d):this.complete(o)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),d},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.finallyLoc===e)return this.complete(n.completion,n.afterLoc),T(n),d}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.tryLoc===e){var r=n.completion;if("throw"===r.type){var i=r.arg;T(n)}return i}}throw new Error("illegal catch attempt")},delegateYield:function(e,t,n){return this.delegate={iterator:C(e),resultName:t,nextLoc:n},"next"===this.method&&(this.arg=void 0),d}},e}function w(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function E(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,b(r.key),r)}}function T(e,t,n){return t&&E(e.prototype,t),n&&E(e,n),Object.defineProperty(e,"prototype",{writable:!1}),e}var k="148",C=0,L=1,A=2,P=0,R=1,D=2,N=3,I=100,O=301,z=302,U=303,F=304,B=306,V=1e3,H=1001,G=1002,W=1003,j=1004,q=1005,X=1006,Y=1008,Z=1009,K=1012,Q=1014,$=1015,J=1016,ee=1020,te=1023,ne=1026,re=1027,ie=33776,ae=33777,oe=33778,se=33779,le=35840,ue=35841,ce=35842,de=35843,fe=37492,he=37496,pe=37808,me=37809,ve=37810,ge=37811,ye=37812,_e=37813,xe=37814,be=37815,Se=37816,Me=37817,we=37818,Ee=37819,Te=37820,ke=37821,Ce=36492,Le=2300,Ae=2301,Pe=2302,Re=2400,De=2401,Ne=2402,Ie=3e3,Oe=3001,ze="srgb",Ue="srgb-linear",Fe=7680,Be=35044,Ve="300 es",He=1035,Ge=function(){function e(){w(this,e)}return T(e,[{key:"addEventListener",value:function(e,t){void 0===this._listeners&&(this._listeners={});var n=this._listeners;void 0===n[e]&&(n[e]=[]),-1===n[e].indexOf(t)&&n[e].push(t)}},{key:"hasEventListener",value:function(e,t){if(void 0===this._listeners)return!1;var n=this._listeners;return void 0!==n[e]&&-1!==n[e].indexOf(t)}},{key:"removeEventListener",value:function(e,t){if(void 0!==this._listeners){var n=this._listeners[e];if(void 0!==n){var r=n.indexOf(t);-1!==r&&n.splice(r,1)}}}},{key:"dispatchEvent",value:function(e){if(void 0!==this._listeners){var t=this._listeners[e.type];if(void 0!==t){e.target=this;for(var n=t.slice(0),r=0,i=n.length;r<i;r++)n[r].call(this,e);e.target=null}}}}]),e}(),We=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"],je=Math.PI/180,qe=180/Math.PI;function Xe(){var e=4294967295*Math.random()|0,t=4294967295*Math.random()|0,n=4294967295*Math.random()|0,r=4294967295*Math.random()|0;return(We[255&e]+We[e>>8&255]+We[e>>16&255]+We[e>>24&255]+"-"+We[255&t]+We[t>>8&255]+"-"+We[t>>16&15|64]+We[t>>24&255]+"-"+We[63&n|128]+We[n>>8&255]+"-"+We[n>>16&255]+We[n>>24&255]+We[255&r]+We[r>>8&255]+We[r>>16&255]+We[r>>24&255]).toLowerCase()}function Ye(e,t,n){return Math.max(t,Math.min(n,e))}function Ze(e,t){return(e%t+t)%t}function Ke(e,t,n){return(1-n)*e+n*t}function Qe(e){return 0===(e&e-1)&&0!==e}function $e(e){return Math.pow(2,Math.floor(Math.log(e)/Math.LN2))}function Je(e,t){switch(t.constructor){case Float32Array:return e;case Uint16Array:return e/65535;case Uint8Array:return e/255;case Int16Array:return Math.max(e/32767,-1);case Int8Array:return Math.max(e/127,-1);default:throw new Error("Invalid component type.")}}function et(e,t){switch(t.constructor){case Float32Array:return e;case Uint16Array:return Math.round(65535*e);case Uint8Array:return Math.round(255*e);case Int16Array:return Math.round(32767*e);case Int8Array:return Math.round(127*e);default:throw new Error("Invalid component type.")}}var tt=function(e){function t(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;w(this,t),t.prototype.isVector2=!0,this.x=e,this.y=n}return T(t,[{key:"width",get:function(){return this.x},set:function(e){this.x=e}},{key:"height",get:function(){return this.y},set:function(e){this.y=e}},{key:"set",value:function(e,t){return this.x=e,this.y=t,this}},{key:"setScalar",value:function(e){return this.x=e,this.y=e,this}},{key:"setX",value:function(e){return this.x=e,this}},{key:"setY",value:function(e){return this.y=e,this}},{key:"setComponent",value:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}},{key:"getComponent",value:function(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}},{key:"clone",value:function(){return new this.constructor(this.x,this.y)}},{key:"copy",value:function(e){return this.x=e.x,this.y=e.y,this}},{key:"add",value:function(e){return this.x+=e.x,this.y+=e.y,this}},{key:"addScalar",value:function(e){return this.x+=e,this.y+=e,this}},{key:"addVectors",value:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}},{key:"addScaledVector",value:function(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}},{key:"sub",value:function(e){return this.x-=e.x,this.y-=e.y,this}},{key:"subScalar",value:function(e){return this.x-=e,this.y-=e,this}},{key:"subVectors",value:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}},{key:"multiply",value:function(e){return this.x*=e.x,this.y*=e.y,this}},{key:"multiplyScalar",value:function(e){return this.x*=e,this.y*=e,this}},{key:"divide",value:function(e){return this.x/=e.x,this.y/=e.y,this}},{key:"divideScalar",value:function(e){return this.multiplyScalar(1/e)}},{key:"applyMatrix3",value:function(e){var t=this.x,n=this.y,r=e.elements;return this.x=r[0]*t+r[3]*n+r[6],this.y=r[1]*t+r[4]*n+r[7],this}},{key:"min",value:function(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}},{key:"max",value:function(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}},{key:"clamp",value:function(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}},{key:"clampScalar",value:function(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}},{key:"clampLength",value:function(e,t){var n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}},{key:"floor",value:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}},{key:"ceil",value:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}},{key:"round",value:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}},{key:"roundToZero",value:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}},{key:"negate",value:function(){return this.x=-this.x,this.y=-this.y,this}},{key:"dot",value:function(e){return this.x*e.x+this.y*e.y}},{key:"cross",value:function(e){return this.x*e.y-this.y*e.x}},{key:"lengthSq",value:function(){return this.x*this.x+this.y*this.y}},{key:"length",value:function(){return Math.sqrt(this.x*this.x+this.y*this.y)}},{key:"manhattanLength",value:function(){return Math.abs(this.x)+Math.abs(this.y)}},{key:"normalize",value:function(){return this.divideScalar(this.length()||1)}},{key:"angle",value:function(){var e=Math.atan2(-this.y,-this.x)+Math.PI;return e}},{key:"distanceTo",value:function(e){return Math.sqrt(this.distanceToSquared(e))}},{key:"distanceToSquared",value:function(e){var t=this.x-e.x,n=this.y-e.y;return t*t+n*n}},{key:"manhattanDistanceTo",value:function(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}},{key:"setLength",value:function(e){return this.normalize().multiplyScalar(e)}},{key:"lerp",value:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}},{key:"lerpVectors",value:function(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}},{key:"equals",value:function(e){return e.x===this.x&&e.y===this.y}},{key:"fromArray",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return this.x=e[t],this.y=e[t+1],this}},{key:"toArray",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return e[t]=this.x,e[t+1]=this.y,e}},{key:"fromBufferAttribute",value:function(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}},{key:"rotateAround",value:function(e,t){var n=Math.cos(t),r=Math.sin(t),i=this.x-e.x,a=this.y-e.y;return this.x=i*n-a*r+e.x,this.y=i*r+a*n+e.y,this}},{key:"random",value:function(){return this.x=Math.random(),this.y=Math.random(),this}},{key:Symbol.iterator,value:M().mark((function e(){return M().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.x;case 2:return e.next=4,this.y;case 4:case"end":return e.stop()}}),e,this)}))}]),t}(),nt=function(){function e(){w(this,e),e.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1]}return T(e,[{key:"set",value:function(e,t,n,r,i,a,o,s,l){var u=this.elements;return u[0]=e,u[1]=r,u[2]=o,u[3]=t,u[4]=i,u[5]=s,u[6]=n,u[7]=a,u[8]=l,this}},{key:"identity",value:function(){return this.set(1,0,0,0,1,0,0,0,1),this}},{key:"copy",value:function(e){var t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}},{key:"extractBasis",value:function(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}},{key:"setFromMatrix4",value:function(e){var t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}},{key:"multiply",value:function(e){return this.multiplyMatrices(this,e)}},{key:"premultiply",value:function(e){return this.multiplyMatrices(e,this)}},{key:"multiplyMatrices",value:function(e,t){var n=e.elements,r=t.elements,i=this.elements,a=n[0],o=n[3],s=n[6],l=n[1],u=n[4],c=n[7],d=n[2],f=n[5],h=n[8],p=r[0],m=r[3],v=r[6],g=r[1],y=r[4],_=r[7],x=r[2],b=r[5],S=r[8];return i[0]=a*p+o*g+s*x,i[3]=a*m+o*y+s*b,i[6]=a*v+o*_+s*S,i[1]=l*p+u*g+c*x,i[4]=l*m+u*y+c*b,i[7]=l*v+u*_+c*S,i[2]=d*p+f*g+h*x,i[5]=d*m+f*y+h*b,i[8]=d*v+f*_+h*S,this}},{key:"multiplyScalar",value:function(e){var t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}},{key:"determinant",value:function(){var e=this.elements,t=e[0],n=e[1],r=e[2],i=e[3],a=e[4],o=e[5],s=e[6],l=e[7],u=e[8];return t*a*u-t*o*l-n*i*u+n*o*s+r*i*l-r*a*s}},{key:"invert",value:function(){var e=this.elements,t=e[0],n=e[1],r=e[2],i=e[3],a=e[4],o=e[5],s=e[6],l=e[7],u=e[8],c=u*a-o*l,d=o*s-u*i,f=l*i-a*s,h=t*c+n*d+r*f;if(0===h)return this.set(0,0,0,0,0,0,0,0,0);var p=1/h;return e[0]=c*p,e[1]=(r*l-u*n)*p,e[2]=(o*n-r*a)*p,e[3]=d*p,e[4]=(u*t-r*s)*p,e[5]=(r*i-o*t)*p,e[6]=f*p,e[7]=(n*s-l*t)*p,e[8]=(a*t-n*i)*p,this}},{key:"transpose",value:function(){var e,t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}},{key:"getNormalMatrix",value:function(e){return this.setFromMatrix4(e).invert().transpose()}},{key:"transposeIntoArray",value:function(e){var t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}},{key:"setUvTransform",value:function(e,t,n,r,i,a,o){var s=Math.cos(i),l=Math.sin(i);return this.set(n*s,n*l,-n*(s*a+l*o)+a+e,-r*l,r*s,-r*(-l*a+s*o)+o+t,0,0,1),this}},{key:"scale",value:function(e,t){return this.premultiply(rt.makeScale(e,t)),this}},{key:"rotate",value:function(e){return this.premultiply(rt.makeRotation(-e)),this}},{key:"translate",value:function(e,t){return this.premultiply(rt.makeTranslation(e,t)),this}},{key:"makeTranslation",value:function(e,t){return this.set(1,0,e,0,1,t,0,0,1),this}},{key:"makeRotation",value:function(e){var t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,n,t,0,0,0,1),this}},{key:"makeScale",value:function(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}},{key:"equals",value:function(e){for(var t=this.elements,n=e.elements,r=0;r<9;r++)if(t[r]!==n[r])return!1;return!0}},{key:"fromArray",value:function(e){for(var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=0;n<9;n++)this.elements[n]=e[n+t];return this}},{key:"toArray",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}},{key:"clone",value:function(){return(new this.constructor).fromArray(this.elements)}}]),e}(),rt=new nt;function it(e){for(var t=e.length-1;t>=0;--t)if(e[t]>=65535)return!0;return!1}Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array;function at(e){return document.createElementNS("http://www.w3.org/1999/xhtml",e)}function ot(e){return e<.04045?.0773993808*e:Math.pow(.9478672986*e+.0521327014,2.4)}function st(e){return e<.0031308?12.92*e:1.055*Math.pow(e,.41666)-.055}var lt=(S(e={},ze,S({},Ue,ot)),S(e,Ue,S({},ze,st)),e),ut={legacyMode:!0,get workingColorSpace(){return Ue},set workingColorSpace(e){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(e,t,n){if(this.legacyMode||t===n||!t||!n)return e;if(lt[t]&&void 0!==lt[t][n]){var r=lt[t][n];return e.r=r(e.r),e.g=r(e.g),e.b=r(e.b),e}throw new Error("Unsupported color space conversion.")},fromWorkingColorSpace:function(e,t){return this.convert(e,this.workingColorSpace,t)},toWorkingColorSpace:function(e,t){return this.convert(e,t,this.workingColorSpace)}},ct={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},dt={r:0,g:0,b:0},ft={h:0,s:0,l:0},ht={h:0,s:0,l:0};function pt(e,t,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?e+6*(t-e)*n:n<.5?t:n<2/3?e+6*(t-e)*(2/3-n):e}function mt(e,t){return t.r=e.r,t.g=e.g,t.b=e.b,t}var vt,gt=function(e){function t(e,n,r){return w(this,t),this.isColor=!0,this.r=1,this.g=1,this.b=1,void 0===n&&void 0===r?this.set(e):this.setRGB(e,n,r)}return T(t,[{key:"set",value:function(e){return e&&e.isColor?this.copy(e):"number"===typeof e?this.setHex(e):"string"===typeof e&&this.setStyle(e),this}},{key:"setScalar",value:function(e){return this.r=e,this.g=e,this.b=e,this}},{key:"setHex",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:ze;return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(255&e)/255,ut.toWorkingColorSpace(this,t),this}},{key:"setRGB",value:function(e,t,n){var r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:ut.workingColorSpace;return this.r=e,this.g=t,this.b=n,ut.toWorkingColorSpace(this,r),this}},{key:"setHSL",value:function(e,t,n){var r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:ut.workingColorSpace;if(e=Ze(e,1),t=Ye(t,0,1),n=Ye(n,0,1),0===t)this.r=this.g=this.b=n;else{var i=n<=.5?n*(1+t):n+t-n*t,a=2*n-i;this.r=pt(a,i,e+1/3),this.g=pt(a,i,e),this.b=pt(a,i,e-1/3)}return ut.toWorkingColorSpace(this,r),this}},{key:"setStyle",value:function(e){var t,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:ze;function r(t){void 0!==t&&parseFloat(t)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}if(t=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(e)){var i,a=t[1],o=t[2];switch(a){case"rgb":case"rgba":if(i=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return this.r=Math.min(255,parseInt(i[1],10))/255,this.g=Math.min(255,parseInt(i[2],10))/255,this.b=Math.min(255,parseInt(i[3],10))/255,ut.toWorkingColorSpace(this,n),r(i[4]),this;if(i=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return this.r=Math.min(100,parseInt(i[1],10))/100,this.g=Math.min(100,parseInt(i[2],10))/100,this.b=Math.min(100,parseInt(i[3],10))/100,ut.toWorkingColorSpace(this,n),r(i[4]),this;break;case"hsl":case"hsla":if(i=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o)){var s=parseFloat(i[1])/360,l=parseFloat(i[2])/100,u=parseFloat(i[3])/100;return r(i[4]),this.setHSL(s,l,u,n)}}}else if(t=/^\#([A-Fa-f\d]+)$/.exec(e)){var c=t[1],d=c.length;if(3===d)return this.r=parseInt(c.charAt(0)+c.charAt(0),16)/255,this.g=parseInt(c.charAt(1)+c.charAt(1),16)/255,this.b=parseInt(c.charAt(2)+c.charAt(2),16)/255,ut.toWorkingColorSpace(this,n),this;if(6===d)return this.r=parseInt(c.charAt(0)+c.charAt(1),16)/255,this.g=parseInt(c.charAt(2)+c.charAt(3),16)/255,this.b=parseInt(c.charAt(4)+c.charAt(5),16)/255,ut.toWorkingColorSpace(this,n),this}return e&&e.length>0?this.setColorName(e,n):this}},{key:"setColorName",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:ze,n=ct[e.toLowerCase()];return void 0!==n?this.setHex(n,t):console.warn("THREE.Color: Unknown color "+e),this}},{key:"clone",value:function(){return new this.constructor(this.r,this.g,this.b)}},{key:"copy",value:function(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}},{key:"copySRGBToLinear",value:function(e){return this.r=ot(e.r),this.g=ot(e.g),this.b=ot(e.b),this}},{key:"copyLinearToSRGB",value:function(e){return this.r=st(e.r),this.g=st(e.g),this.b=st(e.b),this}},{key:"convertSRGBToLinear",value:function(){return this.copySRGBToLinear(this),this}},{key:"convertLinearToSRGB",value:function(){return this.copyLinearToSRGB(this),this}},{key:"getHex",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:ze;return ut.fromWorkingColorSpace(mt(this,dt),e),Ye(255*dt.r,0,255)<<16^Ye(255*dt.g,0,255)<<8^Ye(255*dt.b,0,255)<<0}},{key:"getHexString",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:ze;return("000000"+this.getHex(e).toString(16)).slice(-6)}},{key:"getHSL",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:ut.workingColorSpace;ut.fromWorkingColorSpace(mt(this,dt),t);var n,r,i=dt.r,a=dt.g,o=dt.b,s=Math.max(i,a,o),l=Math.min(i,a,o),u=(l+s)/2;if(l===s)n=0,r=0;else{var c=s-l;switch(r=u<=.5?c/(s+l):c/(2-s-l),s){case i:n=(a-o)/c+(a<o?6:0);break;case a:n=(o-i)/c+2;break;case o:n=(i-a)/c+4}n/=6}return e.h=n,e.s=r,e.l=u,e}},{key:"getRGB",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:ut.workingColorSpace;return ut.fromWorkingColorSpace(mt(this,dt),t),e.r=dt.r,e.g=dt.g,e.b=dt.b,e}},{key:"getStyle",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:ze;return ut.fromWorkingColorSpace(mt(this,dt),e),e!==ze?"color(".concat(e," ").concat(dt.r," ").concat(dt.g," ").concat(dt.b,")"):"rgb(".concat(255*dt.r|0,",").concat(255*dt.g|0,",").concat(255*dt.b|0,")")}},{key:"offsetHSL",value:function(e,t,n){return this.getHSL(ft),ft.h+=e,ft.s+=t,ft.l+=n,this.setHSL(ft.h,ft.s,ft.l),this}},{key:"add",value:function(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}},{key:"addColors",value:function(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}},{key:"addScalar",value:function(e){return this.r+=e,this.g+=e,this.b+=e,this}},{key:"sub",value:function(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}},{key:"multiply",value:function(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}},{key:"multiplyScalar",value:function(e){return this.r*=e,this.g*=e,this.b*=e,this}},{key:"lerp",value:function(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}},{key:"lerpColors",value:function(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}},{key:"lerpHSL",value:function(e,t){this.getHSL(ft),e.getHSL(ht);var n=Ke(ft.h,ht.h,t),r=Ke(ft.s,ht.s,t),i=Ke(ft.l,ht.l,t);return this.setHSL(n,r,i),this}},{key:"equals",value:function(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}},{key:"fromArray",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}},{key:"toArray",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}},{key:"fromBufferAttribute",value:function(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}},{key:"toJSON",value:function(){return this.getHex()}},{key:Symbol.iterator,value:M().mark((function e(){return M().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.r;case 2:return e.next=4,this.g;case 4:return e.next=6,this.b;case 6:case"end":return e.stop()}}),e,this)}))}]),t}();gt.NAMES=ct;var yt=function(){function e(){w(this,e)}return T(e,null,[{key:"getDataURL",value:function(e){if(/^data:/i.test(e.src))return e.src;if("undefined"==typeof HTMLCanvasElement)return e.src;var t;if(e instanceof HTMLCanvasElement)t=e;else{void 0===vt&&(vt=at("canvas")),vt.width=e.width,vt.height=e.height;var n=vt.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=vt}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}},{key:"sRGBToLinear",value:function(e){if("undefined"!==typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!==typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!==typeof ImageBitmap&&e instanceof ImageBitmap){var t=at("canvas");t.width=e.width,t.height=e.height;var n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);for(var r=n.getImageData(0,0,e.width,e.height),i=r.data,a=0;a<i.length;a++)i[a]=255*ot(i[a]/255);return n.putImageData(r,0,0),t}if(e.data){for(var o=e.data.slice(0),s=0;s<o.length;s++)o instanceof Uint8Array||o instanceof Uint8ClampedArray?o[s]=Math.floor(255*ot(o[s]/255)):o[s]=ot(o[s]);return{data:o,width:e.width,height:e.height}}return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}]),e}(),_t=function(){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;w(this,e),this.isSource=!0,this.uuid=Xe(),this.data=t,this.version=0}return T(e,[{key:"needsUpdate",set:function(e){!0===e&&this.version++}},{key:"toJSON",value:function(e){var t=void 0===e||"string"===typeof e;if(!t&&void 0!==e.images[this.uuid])return e.images[this.uuid];var n={uuid:this.uuid,url:""},r=this.data;if(null!==r){var i;if(Array.isArray(r)){i=[];for(var a=0,o=r.length;a<o;a++)r[a].isDataTexture?i.push(xt(r[a].image)):i.push(xt(r[a]))}else i=xt(r);n.url=i}return t||(e.images[this.uuid]=n),n}}]),e}();function xt(e){return"undefined"!==typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!==typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!==typeof ImageBitmap&&e instanceof ImageBitmap?yt.getDataURL(e):e.data?{data:Array.from(e.data),width:e.width,height:e.height,type:e.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}var bt=0,St=function(e){g(n,e);var t=x(n);function n(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:n.DEFAULT_IMAGE,i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:n.DEFAULT_MAPPING,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:H,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:H,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:X,l=arguments.length>5&&void 0!==arguments[5]?arguments[5]:Y,u=arguments.length>6&&void 0!==arguments[6]?arguments[6]:te,c=arguments.length>7&&void 0!==arguments[7]?arguments[7]:Z,d=arguments.length>8&&void 0!==arguments[8]?arguments[8]:n.DEFAULT_ANISOTROPY,f=arguments.length>9&&void 0!==arguments[9]?arguments[9]:Ie;return w(this,n),(e=t.call(this)).isTexture=!0,Object.defineProperty(v(e),"id",{value:bt++}),e.uuid=Xe(),e.name="",e.source=new _t(r),e.mipmaps=[],e.mapping=i,e.wrapS=a,e.wrapT=o,e.magFilter=s,e.minFilter=l,e.anisotropy=d,e.format=u,e.internalFormat=null,e.type=c,e.offset=new tt(0,0),e.repeat=new tt(1,1),e.center=new tt(0,0),e.rotation=0,e.matrixAutoUpdate=!0,e.matrix=new nt,e.generateMipmaps=!0,e.premultiplyAlpha=!1,e.flipY=!0,e.unpackAlignment=4,e.encoding=f,e.userData={},e.version=0,e.onUpdate=null,e.isRenderTargetTexture=!1,e.needsPMREMUpdate=!1,e}return T(n,[{key:"image",get:function(){return this.source.data},set:function(e){this.source.data=e}},{key:"updateMatrix",value:function(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}},{key:"clone",value:function(){return(new this.constructor).copy(this)}},{key:"copy",value:function(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}},{key:"toJSON",value:function(e){var t=void 0===e||"string"===typeof e;if(!t&&void 0!==e.textures[this.uuid])return e.textures[this.uuid];var n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}},{key:"dispose",value:function(){this.dispatchEvent({type:"dispose"})}},{key:"transformUv",value:function(e){if(300!==this.mapping)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case V:e.x=e.x-Math.floor(e.x);break;case H:e.x=e.x<0?0:1;break;case G:1===Math.abs(Math.floor(e.x)%2)?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x)}if(e.y<0||e.y>1)switch(this.wrapT){case V:e.y=e.y-Math.floor(e.y);break;case H:e.y=e.y<0?0:1;break;case G:1===Math.abs(Math.floor(e.y)%2)?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y)}return this.flipY&&(e.y=1-e.y),e}},{key:"needsUpdate",set:function(e){!0===e&&(this.version++,this.source.needsUpdate=!0)}}]),n}(Ge);St.DEFAULT_IMAGE=null,St.DEFAULT_MAPPING=300,St.DEFAULT_ANISOTROPY=1;var Mt=function(e){function t(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;w(this,t),t.prototype.isVector4=!0,this.x=e,this.y=n,this.z=r,this.w=i}return T(t,[{key:"width",get:function(){return this.z},set:function(e){this.z=e}},{key:"height",get:function(){return this.w},set:function(e){this.w=e}},{key:"set",value:function(e,t,n,r){return this.x=e,this.y=t,this.z=n,this.w=r,this}},{key:"setScalar",value:function(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}},{key:"setX",value:function(e){return this.x=e,this}},{key:"setY",value:function(e){return this.y=e,this}},{key:"setZ",value:function(e){return this.z=e,this}},{key:"setW",value:function(e){return this.w=e,this}},{key:"setComponent",value:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}},{key:"getComponent",value:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}},{key:"clone",value:function(){return new this.constructor(this.x,this.y,this.z,this.w)}},{key:"copy",value:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=void 0!==e.w?e.w:1,this}},{key:"add",value:function(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}},{key:"addScalar",value:function(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}},{key:"addVectors",value:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}},{key:"addScaledVector",value:function(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}},{key:"sub",value:function(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}},{key:"subScalar",value:function(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}},{key:"subVectors",value:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}},{key:"multiply",value:function(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}},{key:"multiplyScalar",value:function(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}},{key:"applyMatrix4",value:function(e){var t=this.x,n=this.y,r=this.z,i=this.w,a=e.elements;return this.x=a[0]*t+a[4]*n+a[8]*r+a[12]*i,this.y=a[1]*t+a[5]*n+a[9]*r+a[13]*i,this.z=a[2]*t+a[6]*n+a[10]*r+a[14]*i,this.w=a[3]*t+a[7]*n+a[11]*r+a[15]*i,this}},{key:"divideScalar",value:function(e){return this.multiplyScalar(1/e)}},{key:"setAxisAngleFromQuaternion",value:function(e){this.w=2*Math.acos(e.w);var t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}},{key:"setAxisAngleFromRotationMatrix",value:function(e){var t,n,r,i,a=.01,o=.1,s=e.elements,l=s[0],u=s[4],c=s[8],d=s[1],f=s[5],h=s[9],p=s[2],m=s[6],v=s[10];if(Math.abs(u-d)<a&&Math.abs(c-p)<a&&Math.abs(h-m)<a){if(Math.abs(u+d)<o&&Math.abs(c+p)<o&&Math.abs(h+m)<o&&Math.abs(l+f+v-3)<o)return this.set(1,0,0,0),this;t=Math.PI;var g=(l+1)/2,y=(f+1)/2,_=(v+1)/2,x=(u+d)/4,b=(c+p)/4,S=(h+m)/4;return g>y&&g>_?g<a?(n=0,r=.707106781,i=.707106781):(r=x/(n=Math.sqrt(g)),i=b/n):y>_?y<a?(n=.707106781,r=0,i=.707106781):(n=x/(r=Math.sqrt(y)),i=S/r):_<a?(n=.707106781,r=.707106781,i=0):(n=b/(i=Math.sqrt(_)),r=S/i),this.set(n,r,i,t),this}var M=Math.sqrt((m-h)*(m-h)+(c-p)*(c-p)+(d-u)*(d-u));return Math.abs(M)<.001&&(M=1),this.x=(m-h)/M,this.y=(c-p)/M,this.z=(d-u)/M,this.w=Math.acos((l+f+v-1)/2),this}},{key:"min",value:function(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}},{key:"max",value:function(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}},{key:"clamp",value:function(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}},{key:"clampScalar",value:function(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}},{key:"clampLength",value:function(e,t){var n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}},{key:"floor",value:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}},{key:"ceil",value:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}},{key:"round",value:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}},{key:"roundToZero",value:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}},{key:"negate",value:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}},{key:"dot",value:function(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}},{key:"lengthSq",value:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}},{key:"length",value:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}},{key:"manhattanLength",value:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}},{key:"normalize",value:function(){return this.divideScalar(this.length()||1)}},{key:"setLength",value:function(e){return this.normalize().multiplyScalar(e)}},{key:"lerp",value:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}},{key:"lerpVectors",value:function(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}},{key:"equals",value:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}},{key:"fromArray",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}},{key:"toArray",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}},{key:"fromBufferAttribute",value:function(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}},{key:"random",value:function(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}},{key:Symbol.iterator,value:M().mark((function e(){return M().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.x;case 2:return e.next=4,this.y;case 4:return e.next=6,this.z;case 6:return e.next=8,this.w;case 8:case"end":return e.stop()}}),e,this)}))}]),t}(),wt=function(e){g(n,e);var t=x(n);function n(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};w(this,n),(e=t.call(this)).isWebGLRenderTarget=!0,e.width=r,e.height=i,e.depth=1,e.scissor=new Mt(0,0,r,i),e.scissorTest=!1,e.viewport=new Mt(0,0,r,i);var o={width:r,height:i,depth:1};return e.texture=new St(o,a.mapping,a.wrapS,a.wrapT,a.magFilter,a.minFilter,a.format,a.type,a.anisotropy,a.encoding),e.texture.isRenderTargetTexture=!0,e.texture.flipY=!1,e.texture.generateMipmaps=void 0!==a.generateMipmaps&&a.generateMipmaps,e.texture.internalFormat=void 0!==a.internalFormat?a.internalFormat:null,e.texture.minFilter=void 0!==a.minFilter?a.minFilter:X,e.depthBuffer=void 0===a.depthBuffer||a.depthBuffer,e.stencilBuffer=void 0!==a.stencilBuffer&&a.stencilBuffer,e.depthTexture=void 0!==a.depthTexture?a.depthTexture:null,e.samples=void 0!==a.samples?a.samples:0,e}return T(n,[{key:"setSize",value:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;this.width===e&&this.height===t&&this.depth===n||(this.width=e,this.height=t,this.depth=n,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}},{key:"clone",value:function(){return(new this.constructor).copy(this)}},{key:"copy",value:function(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.isRenderTargetTexture=!0;var t=Object.assign({},e.texture.image);return this.texture.source=new _t(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,null!==e.depthTexture&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}},{key:"dispose",value:function(){this.dispatchEvent({type:"dispose"})}}]),n}(Ge),Et=function(e){g(n,e);var t=x(n);function n(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;return w(this,n),(e=t.call(this,null)).isDataArrayTexture=!0,e.image={data:r,width:i,height:a,depth:o},e.magFilter=W,e.minFilter=W,e.wrapR=H,e.generateMipmaps=!1,e.flipY=!1,e.unpackAlignment=1,e}return T(n)}(St),Tt=function(e){g(n,e);var t=x(n);function n(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;return w(this,n),(e=t.call(this,null)).isData3DTexture=!0,e.image={data:r,width:i,height:a,depth:o},e.magFilter=W,e.minFilter=W,e.wrapR=H,e.generateMipmaps=!1,e.flipY=!1,e.unpackAlignment=1,e}return T(n)}(St),kt=function(e){function t(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;w(this,t),this.isQuaternion=!0,this._x=e,this._y=n,this._z=r,this._w=i}return T(t,[{key:"x",get:function(){return this._x},set:function(e){this._x=e,this._onChangeCallback()}},{key:"y",get:function(){return this._y},set:function(e){this._y=e,this._onChangeCallback()}},{key:"z",get:function(){return this._z},set:function(e){this._z=e,this._onChangeCallback()}},{key:"w",get:function(){return this._w},set:function(e){this._w=e,this._onChangeCallback()}},{key:"set",value:function(e,t,n,r){return this._x=e,this._y=t,this._z=n,this._w=r,this._onChangeCallback(),this}},{key:"clone",value:function(){return new this.constructor(this._x,this._y,this._z,this._w)}},{key:"copy",value:function(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}},{key:"setFromEuler",value:function(e,t){var n=e._x,r=e._y,i=e._z,a=e._order,o=Math.cos,s=Math.sin,l=o(n/2),u=o(r/2),c=o(i/2),d=s(n/2),f=s(r/2),h=s(i/2);switch(a){case"XYZ":this._x=d*u*c+l*f*h,this._y=l*f*c-d*u*h,this._z=l*u*h+d*f*c,this._w=l*u*c-d*f*h;break;case"YXZ":this._x=d*u*c+l*f*h,this._y=l*f*c-d*u*h,this._z=l*u*h-d*f*c,this._w=l*u*c+d*f*h;break;case"ZXY":this._x=d*u*c-l*f*h,this._y=l*f*c+d*u*h,this._z=l*u*h+d*f*c,this._w=l*u*c-d*f*h;break;case"ZYX":this._x=d*u*c-l*f*h,this._y=l*f*c+d*u*h,this._z=l*u*h-d*f*c,this._w=l*u*c+d*f*h;break;case"YZX":this._x=d*u*c+l*f*h,this._y=l*f*c+d*u*h,this._z=l*u*h-d*f*c,this._w=l*u*c-d*f*h;break;case"XZY":this._x=d*u*c-l*f*h,this._y=l*f*c-d*u*h,this._z=l*u*h+d*f*c,this._w=l*u*c+d*f*h;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+a)}return!1!==t&&this._onChangeCallback(),this}},{key:"setFromAxisAngle",value:function(e,t){var n=t/2,r=Math.sin(n);return this._x=e.x*r,this._y=e.y*r,this._z=e.z*r,this._w=Math.cos(n),this._onChangeCallback(),this}},{key:"setFromRotationMatrix",value:function(e){var t=e.elements,n=t[0],r=t[4],i=t[8],a=t[1],o=t[5],s=t[9],l=t[2],u=t[6],c=t[10],d=n+o+c;if(d>0){var f=.5/Math.sqrt(d+1);this._w=.25/f,this._x=(u-s)*f,this._y=(i-l)*f,this._z=(a-r)*f}else if(n>o&&n>c){var h=2*Math.sqrt(1+n-o-c);this._w=(u-s)/h,this._x=.25*h,this._y=(r+a)/h,this._z=(i+l)/h}else if(o>c){var p=2*Math.sqrt(1+o-n-c);this._w=(i-l)/p,this._x=(r+a)/p,this._y=.25*p,this._z=(s+u)/p}else{var m=2*Math.sqrt(1+c-n-o);this._w=(a-r)/m,this._x=(i+l)/m,this._y=(s+u)/m,this._z=.25*m}return this._onChangeCallback(),this}},{key:"setFromUnitVectors",value:function(e,t){var n=e.dot(t)+1;return n<Number.EPSILON?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}},{key:"angleTo",value:function(e){return 2*Math.acos(Math.abs(Ye(this.dot(e),-1,1)))}},{key:"rotateTowards",value:function(e,t){var n=this.angleTo(e);if(0===n)return this;var r=Math.min(1,t/n);return this.slerp(e,r),this}},{key:"identity",value:function(){return this.set(0,0,0,1)}},{key:"invert",value:function(){return this.conjugate()}},{key:"conjugate",value:function(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}},{key:"dot",value:function(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}},{key:"lengthSq",value:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}},{key:"length",value:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}},{key:"normalize",value:function(){var e=this.length();return 0===e?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}},{key:"multiply",value:function(e){return this.multiplyQuaternions(this,e)}},{key:"premultiply",value:function(e){return this.multiplyQuaternions(e,this)}},{key:"multiplyQuaternions",value:function(e,t){var n=e._x,r=e._y,i=e._z,a=e._w,o=t._x,s=t._y,l=t._z,u=t._w;return this._x=n*u+a*o+r*l-i*s,this._y=r*u+a*s+i*o-n*l,this._z=i*u+a*l+n*s-r*o,this._w=a*u-n*o-r*s-i*l,this._onChangeCallback(),this}},{key:"slerp",value:function(e,t){if(0===t)return this;if(1===t)return this.copy(e);var n=this._x,r=this._y,i=this._z,a=this._w,o=a*e._w+n*e._x+r*e._y+i*e._z;if(o<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,o=-o):this.copy(e),o>=1)return this._w=a,this._x=n,this._y=r,this._z=i,this;var s=1-o*o;if(s<=Number.EPSILON){var l=1-t;return this._w=l*a+t*this._w,this._x=l*n+t*this._x,this._y=l*r+t*this._y,this._z=l*i+t*this._z,this.normalize(),this._onChangeCallback(),this}var u=Math.sqrt(s),c=Math.atan2(u,o),d=Math.sin((1-t)*c)/u,f=Math.sin(t*c)/u;return this._w=a*d+this._w*f,this._x=n*d+this._x*f,this._y=r*d+this._y*f,this._z=i*d+this._z*f,this._onChangeCallback(),this}},{key:"slerpQuaternions",value:function(e,t,n){return this.copy(e).slerp(t,n)}},{key:"random",value:function(){var e=Math.random(),t=Math.sqrt(1-e),n=Math.sqrt(e),r=2*Math.PI*Math.random(),i=2*Math.PI*Math.random();return this.set(t*Math.cos(r),n*Math.sin(i),n*Math.cos(i),t*Math.sin(r))}},{key:"equals",value:function(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}},{key:"fromArray",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}},{key:"toArray",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}},{key:"fromBufferAttribute",value:function(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}},{key:"_onChange",value:function(e){return this._onChangeCallback=e,this}},{key:"_onChangeCallback",value:function(){}},{key:Symbol.iterator,value:M().mark((function e(){return M().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this._x;case 2:return e.next=4,this._y;case 4:return e.next=6,this._z;case 6:return e.next=8,this._w;case 8:case"end":return e.stop()}}),e,this)}))}],[{key:"slerpFlat",value:function(e,t,n,r,i,a,o){var s=n[r+0],l=n[r+1],u=n[r+2],c=n[r+3],d=i[a+0],f=i[a+1],h=i[a+2],p=i[a+3];if(0===o)return e[t+0]=s,e[t+1]=l,e[t+2]=u,void(e[t+3]=c);if(1===o)return e[t+0]=d,e[t+1]=f,e[t+2]=h,void(e[t+3]=p);if(c!==p||s!==d||l!==f||u!==h){var m=1-o,v=s*d+l*f+u*h+c*p,g=v>=0?1:-1,y=1-v*v;if(y>Number.EPSILON){var _=Math.sqrt(y),x=Math.atan2(_,v*g);m=Math.sin(m*x)/_,o=Math.sin(o*x)/_}var b=o*g;if(s=s*m+d*b,l=l*m+f*b,u=u*m+h*b,c=c*m+p*b,m===1-o){var S=1/Math.sqrt(s*s+l*l+u*u+c*c);s*=S,l*=S,u*=S,c*=S}}e[t]=s,e[t+1]=l,e[t+2]=u,e[t+3]=c}},{key:"multiplyQuaternionsFlat",value:function(e,t,n,r,i,a){var o=n[r],s=n[r+1],l=n[r+2],u=n[r+3],c=i[a],d=i[a+1],f=i[a+2],h=i[a+3];return e[t]=o*h+u*c+s*f-l*d,e[t+1]=s*h+u*d+l*c-o*f,e[t+2]=l*h+u*f+o*d-s*c,e[t+3]=u*h-o*c-s*d-l*f,e}}]),t}(),Ct=function(e){function t(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;w(this,t),t.prototype.isVector3=!0,this.x=e,this.y=n,this.z=r}return T(t,[{key:"set",value:function(e,t,n){return void 0===n&&(n=this.z),this.x=e,this.y=t,this.z=n,this}},{key:"setScalar",value:function(e){return this.x=e,this.y=e,this.z=e,this}},{key:"setX",value:function(e){return this.x=e,this}},{key:"setY",value:function(e){return this.y=e,this}},{key:"setZ",value:function(e){return this.z=e,this}},{key:"setComponent",value:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}},{key:"getComponent",value:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}},{key:"clone",value:function(){return new this.constructor(this.x,this.y,this.z)}},{key:"copy",value:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}},{key:"add",value:function(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}},{key:"addScalar",value:function(e){return this.x+=e,this.y+=e,this.z+=e,this}},{key:"addVectors",value:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}},{key:"addScaledVector",value:function(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}},{key:"sub",value:function(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}},{key:"subScalar",value:function(e){return this.x-=e,this.y-=e,this.z-=e,this}},{key:"subVectors",value:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}},{key:"multiply",value:function(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}},{key:"multiplyScalar",value:function(e){return this.x*=e,this.y*=e,this.z*=e,this}},{key:"multiplyVectors",value:function(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}},{key:"applyEuler",value:function(e){return this.applyQuaternion(At.setFromEuler(e))}},{key:"applyAxisAngle",value:function(e,t){return this.applyQuaternion(At.setFromAxisAngle(e,t))}},{key:"applyMatrix3",value:function(e){var t=this.x,n=this.y,r=this.z,i=e.elements;return this.x=i[0]*t+i[3]*n+i[6]*r,this.y=i[1]*t+i[4]*n+i[7]*r,this.z=i[2]*t+i[5]*n+i[8]*r,this}},{key:"applyNormalMatrix",value:function(e){return this.applyMatrix3(e).normalize()}},{key:"applyMatrix4",value:function(e){var t=this.x,n=this.y,r=this.z,i=e.elements,a=1/(i[3]*t+i[7]*n+i[11]*r+i[15]);return this.x=(i[0]*t+i[4]*n+i[8]*r+i[12])*a,this.y=(i[1]*t+i[5]*n+i[9]*r+i[13])*a,this.z=(i[2]*t+i[6]*n+i[10]*r+i[14])*a,this}},{key:"applyQuaternion",value:function(e){var t=this.x,n=this.y,r=this.z,i=e.x,a=e.y,o=e.z,s=e.w,l=s*t+a*r-o*n,u=s*n+o*t-i*r,c=s*r+i*n-a*t,d=-i*t-a*n-o*r;return this.x=l*s+d*-i+u*-o-c*-a,this.y=u*s+d*-a+c*-i-l*-o,this.z=c*s+d*-o+l*-a-u*-i,this}},{key:"project",value:function(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}},{key:"unproject",value:function(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}},{key:"transformDirection",value:function(e){var t=this.x,n=this.y,r=this.z,i=e.elements;return this.x=i[0]*t+i[4]*n+i[8]*r,this.y=i[1]*t+i[5]*n+i[9]*r,this.z=i[2]*t+i[6]*n+i[10]*r,this.normalize()}},{key:"divide",value:function(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}},{key:"divideScalar",value:function(e){return this.multiplyScalar(1/e)}},{key:"min",value:function(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}},{key:"max",value:function(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}},{key:"clamp",value:function(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}},{key:"clampScalar",value:function(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}},{key:"clampLength",value:function(e,t){var n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}},{key:"floor",value:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}},{key:"ceil",value:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}},{key:"round",value:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}},{key:"roundToZero",value:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}},{key:"negate",value:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}},{key:"dot",value:function(e){return this.x*e.x+this.y*e.y+this.z*e.z}},{key:"lengthSq",value:function(){return this.x*this.x+this.y*this.y+this.z*this.z}},{key:"length",value:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}},{key:"manhattanLength",value:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}},{key:"normalize",value:function(){return this.divideScalar(this.length()||1)}},{key:"setLength",value:function(e){return this.normalize().multiplyScalar(e)}},{key:"lerp",value:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}},{key:"lerpVectors",value:function(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}},{key:"cross",value:function(e){return this.crossVectors(this,e)}},{key:"crossVectors",value:function(e,t){var n=e.x,r=e.y,i=e.z,a=t.x,o=t.y,s=t.z;return this.x=r*s-i*o,this.y=i*a-n*s,this.z=n*o-r*a,this}},{key:"projectOnVector",value:function(e){var t=e.lengthSq();if(0===t)return this.set(0,0,0);var n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}},{key:"projectOnPlane",value:function(e){return Lt.copy(this).projectOnVector(e),this.sub(Lt)}},{key:"reflect",value:function(e){return this.sub(Lt.copy(e).multiplyScalar(2*this.dot(e)))}},{key:"angleTo",value:function(e){var t=Math.sqrt(this.lengthSq()*e.lengthSq());if(0===t)return Math.PI/2;var n=this.dot(e)/t;return Math.acos(Ye(n,-1,1))}},{key:"distanceTo",value:function(e){return Math.sqrt(this.distanceToSquared(e))}},{key:"distanceToSquared",value:function(e){var t=this.x-e.x,n=this.y-e.y,r=this.z-e.z;return t*t+n*n+r*r}},{key:"manhattanDistanceTo",value:function(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}},{key:"setFromSpherical",value:function(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}},{key:"setFromSphericalCoords",value:function(e,t,n){var r=Math.sin(t)*e;return this.x=r*Math.sin(n),this.y=Math.cos(t)*e,this.z=r*Math.cos(n),this}},{key:"setFromCylindrical",value:function(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}},{key:"setFromCylindricalCoords",value:function(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}},{key:"setFromMatrixPosition",value:function(e){var t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}},{key:"setFromMatrixScale",value:function(e){var t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),r=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=r,this}},{key:"setFromMatrixColumn",value:function(e,t){return this.fromArray(e.elements,4*t)}},{key:"setFromMatrix3Column",value:function(e,t){return this.fromArray(e.elements,3*t)}},{key:"setFromEuler",value:function(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}},{key:"equals",value:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}},{key:"fromArray",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}},{key:"toArray",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}},{key:"fromBufferAttribute",value:function(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}},{key:"random",value:function(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}},{key:"randomDirection",value:function(){var e=2*(Math.random()-.5),t=Math.random()*Math.PI*2,n=Math.sqrt(1-Math.pow(e,2));return this.x=n*Math.cos(t),this.y=n*Math.sin(t),this.z=e,this}},{key:Symbol.iterator,value:M().mark((function e(){return M().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.x;case 2:return e.next=4,this.y;case 4:return e.next=6,this.z;case 6:case"end":return e.stop()}}),e,this)}))}]),t}(),Lt=new Ct,At=new kt,Pt=function(){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Ct(1/0,1/0,1/0),n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Ct(-1/0,-1/0,-1/0);w(this,e),this.isBox3=!0,this.min=t,this.max=n}return T(e,[{key:"set",value:function(e,t){return this.min.copy(e),this.max.copy(t),this}},{key:"setFromArray",value:function(e){for(var t=1/0,n=1/0,r=1/0,i=-1/0,a=-1/0,o=-1/0,s=0,l=e.length;s<l;s+=3){var u=e[s],c=e[s+1],d=e[s+2];u<t&&(t=u),c<n&&(n=c),d<r&&(r=d),u>i&&(i=u),c>a&&(a=c),d>o&&(o=d)}return this.min.set(t,n,r),this.max.set(i,a,o),this}},{key:"setFromBufferAttribute",value:function(e){for(var t=1/0,n=1/0,r=1/0,i=-1/0,a=-1/0,o=-1/0,s=0,l=e.count;s<l;s++){var u=e.getX(s),c=e.getY(s),d=e.getZ(s);u<t&&(t=u),c<n&&(n=c),d<r&&(r=d),u>i&&(i=u),c>a&&(a=c),d>o&&(o=d)}return this.min.set(t,n,r),this.max.set(i,a,o),this}},{key:"setFromPoints",value:function(e){this.makeEmpty();for(var t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}},{key:"setFromCenterAndSize",value:function(e,t){var n=Dt.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}},{key:"setFromObject",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return this.makeEmpty(),this.expandByObject(e,t)}},{key:"clone",value:function(){return(new this.constructor).copy(this)}},{key:"copy",value:function(e){return this.min.copy(e.min),this.max.copy(e.max),this}},{key:"makeEmpty",value:function(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}},{key:"isEmpty",value:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}},{key:"getCenter",value:function(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}},{key:"getSize",value:function(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}},{key:"expandByPoint",value:function(e){return this.min.min(e),this.max.max(e),this}},{key:"expandByVector",value:function(e){return this.min.sub(e),this.max.add(e),this}},{key:"expandByScalar",value:function(e){return this.min.addScalar(-e),this.max.addScalar(e),this}},{key:"expandByObject",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];e.updateWorldMatrix(!1,!1);var n=e.geometry;if(void 0!==n)if(t&&void 0!=n.attributes&&void 0!==n.attributes.position)for(var r=n.attributes.position,i=0,a=r.count;i<a;i++)Dt.fromBufferAttribute(r,i).applyMatrix4(e.matrixWorld),this.expandByPoint(Dt);else null===n.boundingBox&&n.computeBoundingBox(),Nt.copy(n.boundingBox),Nt.applyMatrix4(e.matrixWorld),this.union(Nt);for(var o=e.children,s=0,l=o.length;s<l;s++)this.expandByObject(o[s],t);return this}},{key:"containsPoint",value:function(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}},{key:"containsBox",value:function(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}},{key:"getParameter",value:function(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}},{key:"intersectsBox",value:function(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}},{key:"intersectsSphere",value:function(e){return this.clampPoint(e.center,Dt),Dt.distanceToSquared(e.center)<=e.radius*e.radius}},{key:"intersectsPlane",value:function(e){var t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}},{key:"intersectsTriangle",value:function(e){if(this.isEmpty())return!1;this.getCenter(Vt),Ht.subVectors(this.max,Vt),It.subVectors(e.a,Vt),Ot.subVectors(e.b,Vt),zt.subVectors(e.c,Vt),Ut.subVectors(Ot,It),Ft.subVectors(zt,Ot),Bt.subVectors(It,zt);var t=[0,-Ut.z,Ut.y,0,-Ft.z,Ft.y,0,-Bt.z,Bt.y,Ut.z,0,-Ut.x,Ft.z,0,-Ft.x,Bt.z,0,-Bt.x,-Ut.y,Ut.x,0,-Ft.y,Ft.x,0,-Bt.y,Bt.x,0];return!!jt(t,It,Ot,zt,Ht)&&(!!jt(t=[1,0,0,0,1,0,0,0,1],It,Ot,zt,Ht)&&(Gt.crossVectors(Ut,Ft),jt(t=[Gt.x,Gt.y,Gt.z],It,Ot,zt,Ht)))}},{key:"clampPoint",value:function(e,t){return t.copy(e).clamp(this.min,this.max)}},{key:"distanceToPoint",value:function(e){return Dt.copy(e).clamp(this.min,this.max).sub(e).length()}},{key:"getBoundingSphere",value:function(e){return this.getCenter(e.center),e.radius=.5*this.getSize(Dt).length(),e}},{key:"intersect",value:function(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}},{key:"union",value:function(e){return this.min.min(e.min),this.max.max(e.max),this}},{key:"applyMatrix4",value:function(e){return this.isEmpty()||(Rt[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),Rt[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),Rt[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),Rt[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),Rt[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),Rt[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),Rt[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),Rt[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(Rt)),this}},{key:"translate",value:function(e){return this.min.add(e),this.max.add(e),this}},{key:"equals",value:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}]),e}(),Rt=[new Ct,new Ct,new Ct,new Ct,new Ct,new Ct,new Ct,new Ct],Dt=new Ct,Nt=new Pt,It=new Ct,Ot=new Ct,zt=new Ct,Ut=new Ct,Ft=new Ct,Bt=new Ct,Vt=new Ct,Ht=new Ct,Gt=new Ct,Wt=new Ct;function jt(e,t,n,r,i){for(var a=0,o=e.length-3;a<=o;a+=3){Wt.fromArray(e,a);var s=i.x*Math.abs(Wt.x)+i.y*Math.abs(Wt.y)+i.z*Math.abs(Wt.z),l=t.dot(Wt),u=n.dot(Wt),c=r.dot(Wt);if(Math.max(-Math.max(l,u,c),Math.min(l,u,c))>s)return!1}return!0}var qt=new Pt,Xt=new Ct,Yt=new Ct,Zt=function(){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Ct,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;w(this,e),this.center=t,this.radius=n}return T(e,[{key:"set",value:function(e,t){return this.center.copy(e),this.radius=t,this}},{key:"setFromPoints",value:function(e,t){var n=this.center;void 0!==t?n.copy(t):qt.setFromPoints(e).getCenter(n);for(var r=0,i=0,a=e.length;i<a;i++)r=Math.max(r,n.distanceToSquared(e[i]));return this.radius=Math.sqrt(r),this}},{key:"copy",value:function(e){return this.center.copy(e.center),this.radius=e.radius,this}},{key:"isEmpty",value:function(){return this.radius<0}},{key:"makeEmpty",value:function(){return this.center.set(0,0,0),this.radius=-1,this}},{key:"containsPoint",value:function(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}},{key:"distanceToPoint",value:function(e){return e.distanceTo(this.center)-this.radius}},{key:"intersectsSphere",value:function(e){var t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}},{key:"intersectsBox",value:function(e){return e.intersectsSphere(this)}},{key:"intersectsPlane",value:function(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}},{key:"clampPoint",value:function(e,t){var n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}},{key:"getBoundingBox",value:function(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}},{key:"applyMatrix4",value:function(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}},{key:"translate",value:function(e){return this.center.add(e),this}},{key:"expandByPoint",value:function(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;Xt.subVectors(e,this.center);var t=Xt.lengthSq();if(t>this.radius*this.radius){var n=Math.sqrt(t),r=.5*(n-this.radius);this.center.addScaledVector(Xt,r/n),this.radius+=r}return this}},{key:"union",value:function(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(!0===this.center.equals(e.center)?this.radius=Math.max(this.radius,e.radius):(Yt.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(Xt.copy(e.center).add(Yt)),this.expandByPoint(Xt.copy(e.center).sub(Yt))),this)}},{key:"equals",value:function(e){return e.center.equals(this.center)&&e.radius===this.radius}},{key:"clone",value:function(){return(new this.constructor).copy(this)}}]),e}(),Kt=new Ct,Qt=new Ct,$t=new Ct,Jt=new Ct,en=new Ct,tn=new Ct,nn=new Ct,rn=function(){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Ct,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Ct(0,0,-1);w(this,e),this.origin=t,this.direction=n}return T(e,[{key:"set",value:function(e,t){return this.origin.copy(e),this.direction.copy(t),this}},{key:"copy",value:function(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}},{key:"at",value:function(e,t){return t.copy(this.direction).multiplyScalar(e).add(this.origin)}},{key:"lookAt",value:function(e){return this.direction.copy(e).sub(this.origin).normalize(),this}},{key:"recast",value:function(e){return this.origin.copy(this.at(e,Kt)),this}},{key:"closestPointToPoint",value:function(e,t){t.subVectors(e,this.origin);var n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.direction).multiplyScalar(n).add(this.origin)}},{key:"distanceToPoint",value:function(e){return Math.sqrt(this.distanceSqToPoint(e))}},{key:"distanceSqToPoint",value:function(e){var t=Kt.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(Kt.copy(this.direction).multiplyScalar(t).add(this.origin),Kt.distanceToSquared(e))}},{key:"distanceSqToSegment",value:function(e,t,n,r){Qt.copy(e).add(t).multiplyScalar(.5),$t.copy(t).sub(e).normalize(),Jt.copy(this.origin).sub(Qt);var i,a,o,s,l=.5*e.distanceTo(t),u=-this.direction.dot($t),c=Jt.dot(this.direction),d=-Jt.dot($t),f=Jt.lengthSq(),h=Math.abs(1-u*u);if(h>0)if(a=u*c-d,s=l*h,(i=u*d-c)>=0)if(a>=-s)if(a<=s){var p=1/h;o=(i*=p)*(i+u*(a*=p)+2*c)+a*(u*i+a+2*d)+f}else a=l,o=-(i=Math.max(0,-(u*a+c)))*i+a*(a+2*d)+f;else a=-l,o=-(i=Math.max(0,-(u*a+c)))*i+a*(a+2*d)+f;else a<=-s?o=-(i=Math.max(0,-(-u*l+c)))*i+(a=i>0?-l:Math.min(Math.max(-l,-d),l))*(a+2*d)+f:a<=s?(i=0,o=(a=Math.min(Math.max(-l,-d),l))*(a+2*d)+f):o=-(i=Math.max(0,-(u*l+c)))*i+(a=i>0?l:Math.min(Math.max(-l,-d),l))*(a+2*d)+f;else a=u>0?-l:l,o=-(i=Math.max(0,-(u*a+c)))*i+a*(a+2*d)+f;return n&&n.copy(this.direction).multiplyScalar(i).add(this.origin),r&&r.copy($t).multiplyScalar(a).add(Qt),o}},{key:"intersectSphere",value:function(e,t){Kt.subVectors(e.center,this.origin);var n=Kt.dot(this.direction),r=Kt.dot(Kt)-n*n,i=e.radius*e.radius;if(r>i)return null;var a=Math.sqrt(i-r),o=n-a,s=n+a;return o<0&&s<0?null:o<0?this.at(s,t):this.at(o,t)}},{key:"intersectsSphere",value:function(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}},{key:"distanceToPlane",value:function(e){var t=e.normal.dot(this.direction);if(0===t)return 0===e.distanceToPoint(this.origin)?0:null;var n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}},{key:"intersectPlane",value:function(e,t){var n=this.distanceToPlane(e);return null===n?null:this.at(n,t)}},{key:"intersectsPlane",value:function(e){var t=e.distanceToPoint(this.origin);return 0===t||e.normal.dot(this.direction)*t<0}},{key:"intersectBox",value:function(e,t){var n,r,i,a,o,s,l=1/this.direction.x,u=1/this.direction.y,c=1/this.direction.z,d=this.origin;return l>=0?(n=(e.min.x-d.x)*l,r=(e.max.x-d.x)*l):(n=(e.max.x-d.x)*l,r=(e.min.x-d.x)*l),u>=0?(i=(e.min.y-d.y)*u,a=(e.max.y-d.y)*u):(i=(e.max.y-d.y)*u,a=(e.min.y-d.y)*u),n>a||i>r?null:((i>n||isNaN(n))&&(n=i),(a<r||isNaN(r))&&(r=a),c>=0?(o=(e.min.z-d.z)*c,s=(e.max.z-d.z)*c):(o=(e.max.z-d.z)*c,s=(e.min.z-d.z)*c),n>s||o>r?null:((o>n||n!==n)&&(n=o),(s<r||r!==r)&&(r=s),r<0?null:this.at(n>=0?n:r,t)))}},{key:"intersectsBox",value:function(e){return null!==this.intersectBox(e,Kt)}},{key:"intersectTriangle",value:function(e,t,n,r,i){en.subVectors(t,e),tn.subVectors(n,e),nn.crossVectors(en,tn);var a,o=this.direction.dot(nn);if(o>0){if(r)return null;a=1}else{if(!(o<0))return null;a=-1,o=-o}Jt.subVectors(this.origin,e);var s=a*this.direction.dot(tn.crossVectors(Jt,tn));if(s<0)return null;var l=a*this.direction.dot(en.cross(Jt));if(l<0)return null;if(s+l>o)return null;var u=-a*Jt.dot(nn);return u<0?null:this.at(u/o,i)}},{key:"applyMatrix4",value:function(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}},{key:"equals",value:function(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}},{key:"clone",value:function(){return(new this.constructor).copy(this)}}]),e}(),an=function(){function e(){w(this,e),e.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]}return T(e,[{key:"set",value:function(e,t,n,r,i,a,o,s,l,u,c,d,f,h,p,m){var v=this.elements;return v[0]=e,v[4]=t,v[8]=n,v[12]=r,v[1]=i,v[5]=a,v[9]=o,v[13]=s,v[2]=l,v[6]=u,v[10]=c,v[14]=d,v[3]=f,v[7]=h,v[11]=p,v[15]=m,this}},{key:"identity",value:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}},{key:"clone",value:function(){return(new e).fromArray(this.elements)}},{key:"copy",value:function(e){var t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}},{key:"copyPosition",value:function(e){var t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}},{key:"setFromMatrix3",value:function(e){var t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}},{key:"extractBasis",value:function(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}},{key:"makeBasis",value:function(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}},{key:"extractRotation",value:function(e){var t=this.elements,n=e.elements,r=1/on.setFromMatrixColumn(e,0).length(),i=1/on.setFromMatrixColumn(e,1).length(),a=1/on.setFromMatrixColumn(e,2).length();return t[0]=n[0]*r,t[1]=n[1]*r,t[2]=n[2]*r,t[3]=0,t[4]=n[4]*i,t[5]=n[5]*i,t[6]=n[6]*i,t[7]=0,t[8]=n[8]*a,t[9]=n[9]*a,t[10]=n[10]*a,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}},{key:"makeRotationFromEuler",value:function(e){var t=this.elements,n=e.x,r=e.y,i=e.z,a=Math.cos(n),o=Math.sin(n),s=Math.cos(r),l=Math.sin(r),u=Math.cos(i),c=Math.sin(i);if("XYZ"===e.order){var d=a*u,f=a*c,h=o*u,p=o*c;t[0]=s*u,t[4]=-s*c,t[8]=l,t[1]=f+h*l,t[5]=d-p*l,t[9]=-o*s,t[2]=p-d*l,t[6]=h+f*l,t[10]=a*s}else if("YXZ"===e.order){var m=s*u,v=s*c,g=l*u,y=l*c;t[0]=m+y*o,t[4]=g*o-v,t[8]=a*l,t[1]=a*c,t[5]=a*u,t[9]=-o,t[2]=v*o-g,t[6]=y+m*o,t[10]=a*s}else if("ZXY"===e.order){var _=s*u,x=s*c,b=l*u,S=l*c;t[0]=_-S*o,t[4]=-a*c,t[8]=b+x*o,t[1]=x+b*o,t[5]=a*u,t[9]=S-_*o,t[2]=-a*l,t[6]=o,t[10]=a*s}else if("ZYX"===e.order){var M=a*u,w=a*c,E=o*u,T=o*c;t[0]=s*u,t[4]=E*l-w,t[8]=M*l+T,t[1]=s*c,t[5]=T*l+M,t[9]=w*l-E,t[2]=-l,t[6]=o*s,t[10]=a*s}else if("YZX"===e.order){var k=a*s,C=a*l,L=o*s,A=o*l;t[0]=s*u,t[4]=A-k*c,t[8]=L*c+C,t[1]=c,t[5]=a*u,t[9]=-o*u,t[2]=-l*u,t[6]=C*c+L,t[10]=k-A*c}else if("XZY"===e.order){var P=a*s,R=a*l,D=o*s,N=o*l;t[0]=s*u,t[4]=-c,t[8]=l*u,t[1]=P*c+N,t[5]=a*u,t[9]=R*c-D,t[2]=D*c-R,t[6]=o*u,t[10]=N*c+P}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}},{key:"makeRotationFromQuaternion",value:function(e){return this.compose(ln,e,un)}},{key:"lookAt",value:function(e,t,n){var r=this.elements;return fn.subVectors(e,t),0===fn.lengthSq()&&(fn.z=1),fn.normalize(),cn.crossVectors(n,fn),0===cn.lengthSq()&&(1===Math.abs(n.z)?fn.x+=1e-4:fn.z+=1e-4,fn.normalize(),cn.crossVectors(n,fn)),cn.normalize(),dn.crossVectors(fn,cn),r[0]=cn.x,r[4]=dn.x,r[8]=fn.x,r[1]=cn.y,r[5]=dn.y,r[9]=fn.y,r[2]=cn.z,r[6]=dn.z,r[10]=fn.z,this}},{key:"multiply",value:function(e){return this.multiplyMatrices(this,e)}},{key:"premultiply",value:function(e){return this.multiplyMatrices(e,this)}},{key:"multiplyMatrices",value:function(e,t){var n=e.elements,r=t.elements,i=this.elements,a=n[0],o=n[4],s=n[8],l=n[12],u=n[1],c=n[5],d=n[9],f=n[13],h=n[2],p=n[6],m=n[10],v=n[14],g=n[3],y=n[7],_=n[11],x=n[15],b=r[0],S=r[4],M=r[8],w=r[12],E=r[1],T=r[5],k=r[9],C=r[13],L=r[2],A=r[6],P=r[10],R=r[14],D=r[3],N=r[7],I=r[11],O=r[15];return i[0]=a*b+o*E+s*L+l*D,i[4]=a*S+o*T+s*A+l*N,i[8]=a*M+o*k+s*P+l*I,i[12]=a*w+o*C+s*R+l*O,i[1]=u*b+c*E+d*L+f*D,i[5]=u*S+c*T+d*A+f*N,i[9]=u*M+c*k+d*P+f*I,i[13]=u*w+c*C+d*R+f*O,i[2]=h*b+p*E+m*L+v*D,i[6]=h*S+p*T+m*A+v*N,i[10]=h*M+p*k+m*P+v*I,i[14]=h*w+p*C+m*R+v*O,i[3]=g*b+y*E+_*L+x*D,i[7]=g*S+y*T+_*A+x*N,i[11]=g*M+y*k+_*P+x*I,i[15]=g*w+y*C+_*R+x*O,this}},{key:"multiplyScalar",value:function(e){var t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}},{key:"determinant",value:function(){var e=this.elements,t=e[0],n=e[4],r=e[8],i=e[12],a=e[1],o=e[5],s=e[9],l=e[13],u=e[2],c=e[6],d=e[10],f=e[14];return e[3]*(+i*s*c-r*l*c-i*o*d+n*l*d+r*o*f-n*s*f)+e[7]*(+t*s*f-t*l*d+i*a*d-r*a*f+r*l*u-i*s*u)+e[11]*(+t*l*c-t*o*f-i*a*c+n*a*f+i*o*u-n*l*u)+e[15]*(-r*o*u-t*s*c+t*o*d+r*a*c-n*a*d+n*s*u)}},{key:"transpose",value:function(){var e,t=this.elements;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}},{key:"setPosition",value:function(e,t,n){var r=this.elements;return e.isVector3?(r[12]=e.x,r[13]=e.y,r[14]=e.z):(r[12]=e,r[13]=t,r[14]=n),this}},{key:"invert",value:function(){var e=this.elements,t=e[0],n=e[1],r=e[2],i=e[3],a=e[4],o=e[5],s=e[6],l=e[7],u=e[8],c=e[9],d=e[10],f=e[11],h=e[12],p=e[13],m=e[14],v=e[15],g=c*m*l-p*d*l+p*s*f-o*m*f-c*s*v+o*d*v,y=h*d*l-u*m*l-h*s*f+a*m*f+u*s*v-a*d*v,_=u*p*l-h*c*l+h*o*f-a*p*f-u*o*v+a*c*v,x=h*c*s-u*p*s-h*o*d+a*p*d+u*o*m-a*c*m,b=t*g+n*y+r*_+i*x;if(0===b)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);var S=1/b;return e[0]=g*S,e[1]=(p*d*i-c*m*i-p*r*f+n*m*f+c*r*v-n*d*v)*S,e[2]=(o*m*i-p*s*i+p*r*l-n*m*l-o*r*v+n*s*v)*S,e[3]=(c*s*i-o*d*i-c*r*l+n*d*l+o*r*f-n*s*f)*S,e[4]=y*S,e[5]=(u*m*i-h*d*i+h*r*f-t*m*f-u*r*v+t*d*v)*S,e[6]=(h*s*i-a*m*i-h*r*l+t*m*l+a*r*v-t*s*v)*S,e[7]=(a*d*i-u*s*i+u*r*l-t*d*l-a*r*f+t*s*f)*S,e[8]=_*S,e[9]=(h*c*i-u*p*i-h*n*f+t*p*f+u*n*v-t*c*v)*S,e[10]=(a*p*i-h*o*i+h*n*l-t*p*l-a*n*v+t*o*v)*S,e[11]=(u*o*i-a*c*i-u*n*l+t*c*l+a*n*f-t*o*f)*S,e[12]=x*S,e[13]=(u*p*r-h*c*r+h*n*d-t*p*d-u*n*m+t*c*m)*S,e[14]=(h*o*r-a*p*r-h*n*s+t*p*s+a*n*m-t*o*m)*S,e[15]=(a*c*r-u*o*r+u*n*s-t*c*s-a*n*d+t*o*d)*S,this}},{key:"scale",value:function(e){var t=this.elements,n=e.x,r=e.y,i=e.z;return t[0]*=n,t[4]*=r,t[8]*=i,t[1]*=n,t[5]*=r,t[9]*=i,t[2]*=n,t[6]*=r,t[10]*=i,t[3]*=n,t[7]*=r,t[11]*=i,this}},{key:"getMaxScaleOnAxis",value:function(){var e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],r=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,r))}},{key:"makeTranslation",value:function(e,t,n){return this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}},{key:"makeRotationX",value:function(e){var t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}},{key:"makeRotationY",value:function(e){var t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}},{key:"makeRotationZ",value:function(e){var t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}},{key:"makeRotationAxis",value:function(e,t){var n=Math.cos(t),r=Math.sin(t),i=1-n,a=e.x,o=e.y,s=e.z,l=i*a,u=i*o;return this.set(l*a+n,l*o-r*s,l*s+r*o,0,l*o+r*s,u*o+n,u*s-r*a,0,l*s-r*o,u*s+r*a,i*s*s+n,0,0,0,0,1),this}},{key:"makeScale",value:function(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}},{key:"makeShear",value:function(e,t,n,r,i,a){return this.set(1,n,i,0,e,1,a,0,t,r,1,0,0,0,0,1),this}},{key:"compose",value:function(e,t,n){var r=this.elements,i=t._x,a=t._y,o=t._z,s=t._w,l=i+i,u=a+a,c=o+o,d=i*l,f=i*u,h=i*c,p=a*u,m=a*c,v=o*c,g=s*l,y=s*u,_=s*c,x=n.x,b=n.y,S=n.z;return r[0]=(1-(p+v))*x,r[1]=(f+_)*x,r[2]=(h-y)*x,r[3]=0,r[4]=(f-_)*b,r[5]=(1-(d+v))*b,r[6]=(m+g)*b,r[7]=0,r[8]=(h+y)*S,r[9]=(m-g)*S,r[10]=(1-(d+p))*S,r[11]=0,r[12]=e.x,r[13]=e.y,r[14]=e.z,r[15]=1,this}},{key:"decompose",value:function(e,t,n){var r=this.elements,i=on.set(r[0],r[1],r[2]).length(),a=on.set(r[4],r[5],r[6]).length(),o=on.set(r[8],r[9],r[10]).length();this.determinant()<0&&(i=-i),e.x=r[12],e.y=r[13],e.z=r[14],sn.copy(this);var s=1/i,l=1/a,u=1/o;return sn.elements[0]*=s,sn.elements[1]*=s,sn.elements[2]*=s,sn.elements[4]*=l,sn.elements[5]*=l,sn.elements[6]*=l,sn.elements[8]*=u,sn.elements[9]*=u,sn.elements[10]*=u,t.setFromRotationMatrix(sn),n.x=i,n.y=a,n.z=o,this}},{key:"makePerspective",value:function(e,t,n,r,i,a){var o=this.elements,s=2*i/(t-e),l=2*i/(n-r),u=(t+e)/(t-e),c=(n+r)/(n-r),d=-(a+i)/(a-i),f=-2*a*i/(a-i);return o[0]=s,o[4]=0,o[8]=u,o[12]=0,o[1]=0,o[5]=l,o[9]=c,o[13]=0,o[2]=0,o[6]=0,o[10]=d,o[14]=f,o[3]=0,o[7]=0,o[11]=-1,o[15]=0,this}},{key:"makeOrthographic",value:function(e,t,n,r,i,a){var o=this.elements,s=1/(t-e),l=1/(n-r),u=1/(a-i),c=(t+e)*s,d=(n+r)*l,f=(a+i)*u;return o[0]=2*s,o[4]=0,o[8]=0,o[12]=-c,o[1]=0,o[5]=2*l,o[9]=0,o[13]=-d,o[2]=0,o[6]=0,o[10]=-2*u,o[14]=-f,o[3]=0,o[7]=0,o[11]=0,o[15]=1,this}},{key:"equals",value:function(e){for(var t=this.elements,n=e.elements,r=0;r<16;r++)if(t[r]!==n[r])return!1;return!0}},{key:"fromArray",value:function(e){for(var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=0;n<16;n++)this.elements[n]=e[n+t];return this}},{key:"toArray",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}]),e}(),on=new Ct,sn=new an,ln=new Ct(0,0,0),un=new Ct(1,1,1),cn=new Ct,dn=new Ct,fn=new Ct,hn=new an,pn=new kt,mn=function(e){function t(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:t.DefaultOrder;w(this,t),this.isEuler=!0,this._x=e,this._y=n,this._z=r,this._order=i}return T(t,[{key:"x",get:function(){return this._x},set:function(e){this._x=e,this._onChangeCallback()}},{key:"y",get:function(){return this._y},set:function(e){this._y=e,this._onChangeCallback()}},{key:"z",get:function(){return this._z},set:function(e){this._z=e,this._onChangeCallback()}},{key:"order",get:function(){return this._order},set:function(e){this._order=e,this._onChangeCallback()}},{key:"set",value:function(e,t,n){var r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:this._order;return this._x=e,this._y=t,this._z=n,this._order=r,this._onChangeCallback(),this}},{key:"clone",value:function(){return new this.constructor(this._x,this._y,this._z,this._order)}},{key:"copy",value:function(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}},{key:"setFromRotationMatrix",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this._order,n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],r=e.elements,i=r[0],a=r[4],o=r[8],s=r[1],l=r[5],u=r[9],c=r[2],d=r[6],f=r[10];switch(t){case"XYZ":this._y=Math.asin(Ye(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-u,f),this._z=Math.atan2(-a,i)):(this._x=Math.atan2(d,l),this._z=0);break;case"YXZ":this._x=Math.asin(-Ye(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(o,f),this._z=Math.atan2(s,l)):(this._y=Math.atan2(-c,i),this._z=0);break;case"ZXY":this._x=Math.asin(Ye(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(-c,f),this._z=Math.atan2(-a,l)):(this._y=0,this._z=Math.atan2(s,i));break;case"ZYX":this._y=Math.asin(-Ye(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(d,f),this._z=Math.atan2(s,i)):(this._x=0,this._z=Math.atan2(-a,l));break;case"YZX":this._z=Math.asin(Ye(s,-1,1)),Math.abs(s)<.9999999?(this._x=Math.atan2(-u,l),this._y=Math.atan2(-c,i)):(this._x=0,this._y=Math.atan2(o,f));break;case"XZY":this._z=Math.asin(-Ye(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(d,l),this._y=Math.atan2(o,i)):(this._x=Math.atan2(-u,f),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,!0===n&&this._onChangeCallback(),this}},{key:"setFromQuaternion",value:function(e,t,n){return hn.makeRotationFromQuaternion(e),this.setFromRotationMatrix(hn,t,n)}},{key:"setFromVector3",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this._order;return this.set(e.x,e.y,e.z,t)}},{key:"reorder",value:function(e){return pn.setFromEuler(this),this.setFromQuaternion(pn,e)}},{key:"equals",value:function(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}},{key:"fromArray",value:function(e){return this._x=e[0],this._y=e[1],this._z=e[2],void 0!==e[3]&&(this._order=e[3]),this._onChangeCallback(),this}},{key:"toArray",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}},{key:"_onChange",value:function(e){return this._onChangeCallback=e,this}},{key:"_onChangeCallback",value:function(){}},{key:Symbol.iterator,value:M().mark((function e(){return M().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this._x;case 2:return e.next=4,this._y;case 4:return e.next=6,this._z;case 6:return e.next=8,this._order;case 8:case"end":return e.stop()}}),e,this)}))},{key:"toVector3",value:function(){console.error("THREE.Euler: .toVector3() has been removed. Use Vector3.setFromEuler() instead")}}]),t}();mn.DefaultOrder="XYZ",mn.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];var vn=function(){function e(){w(this,e),this.mask=1}return T(e,[{key:"set",value:function(e){this.mask=(1<<e|0)>>>0}},{key:"enable",value:function(e){this.mask|=1<<e|0}},{key:"enableAll",value:function(){this.mask=-1}},{key:"toggle",value:function(e){this.mask^=1<<e|0}},{key:"disable",value:function(e){this.mask&=~(1<<e|0)}},{key:"disableAll",value:function(){this.mask=0}},{key:"test",value:function(e){return 0!==(this.mask&e.mask)}},{key:"isEnabled",value:function(e){return 0!==(this.mask&(1<<e|0))}}]),e}(),gn=0,yn=new Ct,_n=new kt,xn=new an,bn=new Ct,Sn=new Ct,Mn=new Ct,wn=new kt,En=new Ct(1,0,0),Tn=new Ct(0,1,0),kn=new Ct(0,0,1),Cn={type:"added"},Ln={type:"removed"},An=function(e){g(n,e);var t=x(n);function n(){var e;w(this,n),(e=t.call(this)).isObject3D=!0,Object.defineProperty(v(e),"id",{value:gn++}),e.uuid=Xe(),e.name="",e.type="Object3D",e.parent=null,e.children=[],e.up=n.DefaultUp.clone();var r=new Ct,i=new mn,a=new kt,o=new Ct(1,1,1);return i._onChange((function(){a.setFromEuler(i,!1)})),a._onChange((function(){i.setFromQuaternion(a,void 0,!1)})),Object.defineProperties(v(e),{position:{configurable:!0,enumerable:!0,value:r},rotation:{configurable:!0,enumerable:!0,value:i},quaternion:{configurable:!0,enumerable:!0,value:a},scale:{configurable:!0,enumerable:!0,value:o},modelViewMatrix:{value:new an},normalMatrix:{value:new nt}}),e.matrix=new an,e.matrixWorld=new an,e.matrixAutoUpdate=n.DefaultMatrixAutoUpdate,e.matrixWorldNeedsUpdate=!1,e.matrixWorldAutoUpdate=n.DefaultMatrixWorldAutoUpdate,e.layers=new vn,e.visible=!0,e.castShadow=!1,e.receiveShadow=!1,e.frustumCulled=!0,e.renderOrder=0,e.animations=[],e.userData={},e}return T(n,[{key:"onBeforeRender",value:function(){}},{key:"onAfterRender",value:function(){}},{key:"applyMatrix4",value:function(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}},{key:"applyQuaternion",value:function(e){return this.quaternion.premultiply(e),this}},{key:"setRotationFromAxisAngle",value:function(e,t){this.quaternion.setFromAxisAngle(e,t)}},{key:"setRotationFromEuler",value:function(e){this.quaternion.setFromEuler(e,!0)}},{key:"setRotationFromMatrix",value:function(e){this.quaternion.setFromRotationMatrix(e)}},{key:"setRotationFromQuaternion",value:function(e){this.quaternion.copy(e)}},{key:"rotateOnAxis",value:function(e,t){return _n.setFromAxisAngle(e,t),this.quaternion.multiply(_n),this}},{key:"rotateOnWorldAxis",value:function(e,t){return _n.setFromAxisAngle(e,t),this.quaternion.premultiply(_n),this}},{key:"rotateX",value:function(e){return this.rotateOnAxis(En,e)}},{key:"rotateY",value:function(e){return this.rotateOnAxis(Tn,e)}},{key:"rotateZ",value:function(e){return this.rotateOnAxis(kn,e)}},{key:"translateOnAxis",value:function(e,t){return yn.copy(e).applyQuaternion(this.quaternion),this.position.add(yn.multiplyScalar(t)),this}},{key:"translateX",value:function(e){return this.translateOnAxis(En,e)}},{key:"translateY",value:function(e){return this.translateOnAxis(Tn,e)}},{key:"translateZ",value:function(e){return this.translateOnAxis(kn,e)}},{key:"localToWorld",value:function(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}},{key:"worldToLocal",value:function(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(xn.copy(this.matrixWorld).invert())}},{key:"lookAt",value:function(e,t,n){e.isVector3?bn.copy(e):bn.set(e,t,n);var r=this.parent;this.updateWorldMatrix(!0,!1),Sn.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?xn.lookAt(Sn,bn,this.up):xn.lookAt(bn,Sn,this.up),this.quaternion.setFromRotationMatrix(xn),r&&(xn.extractRotation(r.matrixWorld),_n.setFromRotationMatrix(xn),this.quaternion.premultiply(_n.invert()))}},{key:"add",value:function(e){if(arguments.length>1){for(var t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(null!==e.parent&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(Cn)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}},{key:"remove",value:function(e){if(arguments.length>1){for(var t=0;t<arguments.length;t++)this.remove(arguments[t]);return this}var n=this.children.indexOf(e);return-1!==n&&(e.parent=null,this.children.splice(n,1),e.dispatchEvent(Ln)),this}},{key:"removeFromParent",value:function(){var e=this.parent;return null!==e&&e.remove(this),this}},{key:"clear",value:function(){for(var e=0;e<this.children.length;e++){var t=this.children[e];t.parent=null,t.dispatchEvent(Ln)}return this.children.length=0,this}},{key:"attach",value:function(e){return this.updateWorldMatrix(!0,!1),xn.copy(this.matrixWorld).invert(),null!==e.parent&&(e.parent.updateWorldMatrix(!0,!1),xn.multiply(e.parent.matrixWorld)),e.applyMatrix4(xn),this.add(e),e.updateWorldMatrix(!1,!0),this}},{key:"getObjectById",value:function(e){return this.getObjectByProperty("id",e)}},{key:"getObjectByName",value:function(e){return this.getObjectByProperty("name",e)}},{key:"getObjectByProperty",value:function(e,t){if(this[e]===t)return this;for(var n=0,r=this.children.length;n<r;n++){var i=this.children[n].getObjectByProperty(e,t);if(void 0!==i)return i}}},{key:"getObjectsByProperty",value:function(e,t){var n=[];this[e]===t&&n.push(this);for(var r=0,i=this.children.length;r<i;r++){var a=this.children[r].getObjectsByProperty(e,t);a.length>0&&(n=n.concat(a))}return n}},{key:"getWorldPosition",value:function(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}},{key:"getWorldQuaternion",value:function(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Sn,e,Mn),e}},{key:"getWorldScale",value:function(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Sn,wn,e),e}},{key:"getWorldDirection",value:function(e){this.updateWorldMatrix(!0,!1);var t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}},{key:"raycast",value:function(){}},{key:"traverse",value:function(e){e(this);for(var t=this.children,n=0,r=t.length;n<r;n++)t[n].traverse(e)}},{key:"traverseVisible",value:function(e){if(!1!==this.visible){e(this);for(var t=this.children,n=0,r=t.length;n<r;n++)t[n].traverseVisible(e)}}},{key:"traverseAncestors",value:function(e){var t=this.parent;null!==t&&(e(t),t.traverseAncestors(e))}},{key:"updateMatrix",value:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}},{key:"updateMatrixWorld",value:function(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);for(var t=this.children,n=0,r=t.length;n<r;n++){var i=t[n];!0!==i.matrixWorldAutoUpdate&&!0!==e||i.updateMatrixWorld(e)}}},{key:"updateWorldMatrix",value:function(e,t){var n=this.parent;if(!0===e&&null!==n&&!0===n.matrixWorldAutoUpdate&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===t)for(var r=this.children,i=0,a=r.length;i<a;i++){var o=r[i];!0===o.matrixWorldAutoUpdate&&o.updateWorldMatrix(!1,!0)}}},{key:"toJSON",value:function(e){var t=void 0===e||"string"===typeof e,n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});var r={};function i(t,n){return void 0===t[n.uuid]&&(t[n.uuid]=n.toJSON(e)),n.uuid}if(r.uuid=this.uuid,r.type=this.type,""!==this.name&&(r.name=this.name),!0===this.castShadow&&(r.castShadow=!0),!0===this.receiveShadow&&(r.receiveShadow=!0),!1===this.visible&&(r.visible=!1),!1===this.frustumCulled&&(r.frustumCulled=!1),0!==this.renderOrder&&(r.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(r.userData=this.userData),r.layers=this.layers.mask,r.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(r.matrixAutoUpdate=!1),this.isInstancedMesh&&(r.type="InstancedMesh",r.count=this.count,r.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor&&(r.instanceColor=this.instanceColor.toJSON())),this.isScene)this.background&&(this.background.isColor?r.background=this.background.toJSON():this.background.isTexture&&(r.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&!0!==this.environment.isRenderTargetTexture&&(r.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){r.geometry=i(e.geometries,this.geometry);var a=this.geometry.parameters;if(void 0!==a&&void 0!==a.shapes){var o=a.shapes;if(Array.isArray(o))for(var s=0,l=o.length;s<l;s++){var u=o[s];i(e.shapes,u)}else i(e.shapes,o)}}if(this.isSkinnedMesh&&(r.bindMode=this.bindMode,r.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(i(e.skeletons,this.skeleton),r.skeleton=this.skeleton.uuid)),void 0!==this.material)if(Array.isArray(this.material)){for(var c=[],d=0,f=this.material.length;d<f;d++)c.push(i(e.materials,this.material[d]));r.material=c}else r.material=i(e.materials,this.material);if(this.children.length>0){r.children=[];for(var h=0;h<this.children.length;h++)r.children.push(this.children[h].toJSON(e).object)}if(this.animations.length>0){r.animations=[];for(var p=0;p<this.animations.length;p++){var m=this.animations[p];r.animations.push(i(e.animations,m))}}if(t){var v=w(e.geometries),g=w(e.materials),y=w(e.textures),_=w(e.images),x=w(e.shapes),b=w(e.skeletons),S=w(e.animations),M=w(e.nodes);v.length>0&&(n.geometries=v),g.length>0&&(n.materials=g),y.length>0&&(n.textures=y),_.length>0&&(n.images=_),x.length>0&&(n.shapes=x),b.length>0&&(n.skeletons=b),S.length>0&&(n.animations=S),M.length>0&&(n.nodes=M)}return n.object=r,n;function w(e){var t=[];for(var n in e){var r=e[n];delete r.metadata,t.push(r)}return t}}},{key:"clone",value:function(e){return(new this.constructor).copy(this,e)}},{key:"copy",value:function(e){var t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.userData=JSON.parse(JSON.stringify(e.userData)),!0===t)for(var n=0;n<e.children.length;n++){var r=e.children[n];this.add(r.clone())}return this}}]),n}(Ge);An.DefaultUp=new Ct(0,1,0),An.DefaultMatrixAutoUpdate=!0,An.DefaultMatrixWorldAutoUpdate=!0;var Pn=new Ct,Rn=new Ct,Dn=new Ct,Nn=new Ct,In=new Ct,On=new Ct,zn=new Ct,Un=new Ct,Fn=new Ct,Bn=new Ct,Vn=function(){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Ct,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Ct,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new Ct;w(this,e),this.a=t,this.b=n,this.c=r}return T(e,[{key:"set",value:function(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}},{key:"setFromPointsAndIndices",value:function(e,t,n,r){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[r]),this}},{key:"setFromAttributeAndIndices",value:function(e,t,n,r){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,r),this}},{key:"clone",value:function(){return(new this.constructor).copy(this)}},{key:"copy",value:function(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}},{key:"getArea",value:function(){return Pn.subVectors(this.c,this.b),Rn.subVectors(this.a,this.b),.5*Pn.cross(Rn).length()}},{key:"getMidpoint",value:function(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}},{key:"getNormal",value:function(t){return e.getNormal(this.a,this.b,this.c,t)}},{key:"getPlane",value:function(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}},{key:"getBarycoord",value:function(t,n){return e.getBarycoord(t,this.a,this.b,this.c,n)}},{key:"getUV",value:function(t,n,r,i,a){return e.getUV(t,this.a,this.b,this.c,n,r,i,a)}},{key:"containsPoint",value:function(t){return e.containsPoint(t,this.a,this.b,this.c)}},{key:"isFrontFacing",value:function(t){return e.isFrontFacing(this.a,this.b,this.c,t)}},{key:"intersectsBox",value:function(e){return e.intersectsTriangle(this)}},{key:"closestPointToPoint",value:function(e,t){var n,r,i=this.a,a=this.b,o=this.c;In.subVectors(a,i),On.subVectors(o,i),Un.subVectors(e,i);var s=In.dot(Un),l=On.dot(Un);if(s<=0&&l<=0)return t.copy(i);Fn.subVectors(e,a);var u=In.dot(Fn),c=On.dot(Fn);if(u>=0&&c<=u)return t.copy(a);var d=s*c-u*l;if(d<=0&&s>=0&&u<=0)return n=s/(s-u),t.copy(i).addScaledVector(In,n);Bn.subVectors(e,o);var f=In.dot(Bn),h=On.dot(Bn);if(h>=0&&f<=h)return t.copy(o);var p=f*l-s*h;if(p<=0&&l>=0&&h<=0)return r=l/(l-h),t.copy(i).addScaledVector(On,r);var m=u*h-f*c;if(m<=0&&c-u>=0&&f-h>=0)return zn.subVectors(o,a),r=(c-u)/(c-u+(f-h)),t.copy(a).addScaledVector(zn,r);var v=1/(m+p+d);return n=p*v,r=d*v,t.copy(i).addScaledVector(In,n).addScaledVector(On,r)}},{key:"equals",value:function(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}],[{key:"getNormal",value:function(e,t,n,r){r.subVectors(n,t),Pn.subVectors(e,t),r.cross(Pn);var i=r.lengthSq();return i>0?r.multiplyScalar(1/Math.sqrt(i)):r.set(0,0,0)}},{key:"getBarycoord",value:function(e,t,n,r,i){Pn.subVectors(r,t),Rn.subVectors(n,t),Dn.subVectors(e,t);var a=Pn.dot(Pn),o=Pn.dot(Rn),s=Pn.dot(Dn),l=Rn.dot(Rn),u=Rn.dot(Dn),c=a*l-o*o;if(0===c)return i.set(-2,-1,-1);var d=1/c,f=(l*s-o*u)*d,h=(a*u-o*s)*d;return i.set(1-f-h,h,f)}},{key:"containsPoint",value:function(e,t,n,r){return this.getBarycoord(e,t,n,r,Nn),Nn.x>=0&&Nn.y>=0&&Nn.x+Nn.y<=1}},{key:"getUV",value:function(e,t,n,r,i,a,o,s){return this.getBarycoord(e,t,n,r,Nn),s.set(0,0),s.addScaledVector(i,Nn.x),s.addScaledVector(a,Nn.y),s.addScaledVector(o,Nn.z),s}},{key:"isFrontFacing",value:function(e,t,n,r){return Pn.subVectors(n,t),Rn.subVectors(e,t),Pn.cross(Rn).dot(r)<0}}]),e}(),Hn=0,Gn=function(e){g(n,e);var t=x(n);function n(){var e;return w(this,n),(e=t.call(this)).isMaterial=!0,Object.defineProperty(v(e),"id",{value:Hn++}),e.uuid=Xe(),e.name="",e.type="Material",e.blending=1,e.side=0,e.vertexColors=!1,e.opacity=1,e.transparent=!1,e.blendSrc=204,e.blendDst=205,e.blendEquation=I,e.blendSrcAlpha=null,e.blendDstAlpha=null,e.blendEquationAlpha=null,e.depthFunc=3,e.depthTest=!0,e.depthWrite=!0,e.stencilWriteMask=255,e.stencilFunc=519,e.stencilRef=0,e.stencilFuncMask=255,e.stencilFail=Fe,e.stencilZFail=Fe,e.stencilZPass=Fe,e.stencilWrite=!1,e.clippingPlanes=null,e.clipIntersection=!1,e.clipShadows=!1,e.shadowSide=null,e.colorWrite=!0,e.precision=null,e.polygonOffset=!1,e.polygonOffsetFactor=0,e.polygonOffsetUnits=0,e.dithering=!1,e.alphaToCoverage=!1,e.premultipliedAlpha=!1,e.visible=!0,e.toneMapped=!0,e.userData={},e.version=0,e._alphaTest=0,e}return T(n,[{key:"alphaTest",get:function(){return this._alphaTest},set:function(e){this._alphaTest>0!==e>0&&this.version++,this._alphaTest=e}},{key:"onBuild",value:function(){}},{key:"onBeforeRender",value:function(){}},{key:"onBeforeCompile",value:function(){}},{key:"customProgramCacheKey",value:function(){return this.onBeforeCompile.toString()}},{key:"setValues",value:function(e){if(void 0!==e)for(var t in e){var n=e[t];if(void 0!==n){var r=this[t];void 0!==r?r&&r.isColor?r.set(n):r&&r.isVector3&&n&&n.isVector3?r.copy(n):this[t]=n:console.warn("THREE."+this.type+": '"+t+"' is not a property of this material.")}else console.warn("THREE.Material: '"+t+"' parameter is undefined.")}}},{key:"toJSON",value:function(e){var t=void 0===e||"string"===typeof e;t&&(e={textures:{},images:{}});var n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};function r(e){var t=[];for(var n in e){var r=e[n];delete r.metadata,t.push(r)}return t}if(n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),void 0!==this.roughness&&(n.roughness=this.roughness),void 0!==this.metalness&&(n.metalness=this.metalness),void 0!==this.sheen&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),void 0!==this.sheenRoughness&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),void 0!==this.specularIntensity&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),void 0!==this.shininess&&(n.shininess=this.shininess),void 0!==this.clearcoat&&(n.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),void 0!==this.iridescence&&(n.iridescence=this.iridescence),void 0!==this.iridescenceIOR&&(n.iridescenceIOR=this.iridescenceIOR),void 0!==this.iridescenceThicknessRange&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,void 0!==this.combine&&(n.combine=this.combine)),void 0!==this.envMapIntensity&&(n.envMapIntensity=this.envMapIntensity),void 0!==this.reflectivity&&(n.reflectivity=this.reflectivity),void 0!==this.refractionRatio&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),void 0!==this.transmission&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),void 0!==this.thickness&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),void 0!==this.attenuationDistance&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),void 0!==this.attenuationColor&&(n.attenuationColor=this.attenuationColor.getHex()),void 0!==this.size&&(n.size=this.size),null!==this.shadowSide&&(n.shadowSide=this.shadowSide),void 0!==this.sizeAttenuation&&(n.sizeAttenuation=this.sizeAttenuation),1!==this.blending&&(n.blending=this.blending),0!==this.side&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),!0===this.transparent&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.colorWrite=this.colorWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,void 0!==this.rotation&&0!==this.rotation&&(n.rotation=this.rotation),!0===this.polygonOffset&&(n.polygonOffset=!0),0!==this.polygonOffsetFactor&&(n.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(n.polygonOffsetUnits=this.polygonOffsetUnits),void 0!==this.linewidth&&1!==this.linewidth&&(n.linewidth=this.linewidth),void 0!==this.dashSize&&(n.dashSize=this.dashSize),void 0!==this.gapSize&&(n.gapSize=this.gapSize),void 0!==this.scale&&(n.scale=this.scale),!0===this.dithering&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),!0===this.alphaToCoverage&&(n.alphaToCoverage=this.alphaToCoverage),!0===this.premultipliedAlpha&&(n.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(n.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(n.wireframeLinejoin=this.wireframeLinejoin),!0===this.flatShading&&(n.flatShading=this.flatShading),!1===this.visible&&(n.visible=!1),!1===this.toneMapped&&(n.toneMapped=!1),!1===this.fog&&(n.fog=!1),Object.keys(this.userData).length>0&&(n.userData=this.userData),t){var i=r(e.textures),a=r(e.images);i.length>0&&(n.textures=i),a.length>0&&(n.images=a)}return n}},{key:"clone",value:function(){return(new this.constructor).copy(this)}},{key:"copy",value:function(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;var t=e.clippingPlanes,n=null;if(null!==t){var r=t.length;n=new Array(r);for(var i=0;i!==r;++i)n[i]=t[i].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}},{key:"dispose",value:function(){this.dispatchEvent({type:"dispose"})}},{key:"needsUpdate",set:function(e){!0===e&&this.version++}}]),n}(Ge),Wn=function(e){g(n,e);var t=x(n);function n(e){var r;return w(this,n),(r=t.call(this)).isMeshBasicMaterial=!0,r.type="MeshBasicMaterial",r.color=new gt(16777215),r.map=null,r.lightMap=null,r.lightMapIntensity=1,r.aoMap=null,r.aoMapIntensity=1,r.specularMap=null,r.alphaMap=null,r.envMap=null,r.combine=0,r.reflectivity=1,r.refractionRatio=.98,r.wireframe=!1,r.wireframeLinewidth=1,r.wireframeLinecap="round",r.wireframeLinejoin="round",r.fog=!0,r.setValues(e),r}return T(n,[{key:"copy",value:function(e){return m(i(n.prototype),"copy",this).call(this,e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}]),n}(Gn),jn=new Ct,qn=new tt,Xn=function(){function e(t,n){var r=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(w(this,e),Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=t,this.itemSize=n,this.count=void 0!==t?t.length/n:0,this.normalized=r,this.usage=Be,this.updateRange={offset:0,count:-1},this.version=0}return T(e,[{key:"onUploadCallback",value:function(){}},{key:"needsUpdate",set:function(e){!0===e&&this.version++}},{key:"setUsage",value:function(e){return this.usage=e,this}},{key:"copy",value:function(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this}},{key:"copyAt",value:function(e,t,n){e*=this.itemSize,n*=t.itemSize;for(var r=0,i=this.itemSize;r<i;r++)this.array[e+r]=t.array[n+r];return this}},{key:"copyArray",value:function(e){return this.array.set(e),this}},{key:"applyMatrix3",value:function(e){if(2===this.itemSize)for(var t=0,n=this.count;t<n;t++)qn.fromBufferAttribute(this,t),qn.applyMatrix3(e),this.setXY(t,qn.x,qn.y);else if(3===this.itemSize)for(var r=0,i=this.count;r<i;r++)jn.fromBufferAttribute(this,r),jn.applyMatrix3(e),this.setXYZ(r,jn.x,jn.y,jn.z);return this}},{key:"applyMatrix4",value:function(e){for(var t=0,n=this.count;t<n;t++)jn.fromBufferAttribute(this,t),jn.applyMatrix4(e),this.setXYZ(t,jn.x,jn.y,jn.z);return this}},{key:"applyNormalMatrix",value:function(e){for(var t=0,n=this.count;t<n;t++)jn.fromBufferAttribute(this,t),jn.applyNormalMatrix(e),this.setXYZ(t,jn.x,jn.y,jn.z);return this}},{key:"transformDirection",value:function(e){for(var t=0,n=this.count;t<n;t++)jn.fromBufferAttribute(this,t),jn.transformDirection(e),this.setXYZ(t,jn.x,jn.y,jn.z);return this}},{key:"set",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return this.array.set(e,t),this}},{key:"getX",value:function(e){var t=this.array[e*this.itemSize];return this.normalized&&(t=Je(t,this.array)),t}},{key:"setX",value:function(e,t){return this.normalized&&(t=et(t,this.array)),this.array[e*this.itemSize]=t,this}},{key:"getY",value:function(e){var t=this.array[e*this.itemSize+1];return this.normalized&&(t=Je(t,this.array)),t}},{key:"setY",value:function(e,t){return this.normalized&&(t=et(t,this.array)),this.array[e*this.itemSize+1]=t,this}},{key:"getZ",value:function(e){var t=this.array[e*this.itemSize+2];return this.normalized&&(t=Je(t,this.array)),t}},{key:"setZ",value:function(e,t){return this.normalized&&(t=et(t,this.array)),this.array[e*this.itemSize+2]=t,this}},{key:"getW",value:function(e){var t=this.array[e*this.itemSize+3];return this.normalized&&(t=Je(t,this.array)),t}},{key:"setW",value:function(e,t){return this.normalized&&(t=et(t,this.array)),this.array[e*this.itemSize+3]=t,this}},{key:"setXY",value:function(e,t,n){return e*=this.itemSize,this.normalized&&(t=et(t,this.array),n=et(n,this.array)),this.array[e+0]=t,this.array[e+1]=n,this}},{key:"setXYZ",value:function(e,t,n,r){return e*=this.itemSize,this.normalized&&(t=et(t,this.array),n=et(n,this.array),r=et(r,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=r,this}},{key:"setXYZW",value:function(e,t,n,r,i){return e*=this.itemSize,this.normalized&&(t=et(t,this.array),n=et(n,this.array),r=et(r,this.array),i=et(i,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=r,this.array[e+3]=i,this}},{key:"onUpload",value:function(e){return this.onUploadCallback=e,this}},{key:"clone",value:function(){return new this.constructor(this.array,this.itemSize).copy(this)}},{key:"toJSON",value:function(){var e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return""!==this.name&&(e.name=this.name),this.usage!==Be&&(e.usage=this.usage),0===this.updateRange.offset&&-1===this.updateRange.count||(e.updateRange=this.updateRange),e}},{key:"copyColorsArray",value:function(){console.error("THREE.BufferAttribute: copyColorsArray() was removed in r144.")}},{key:"copyVector2sArray",value:function(){console.error("THREE.BufferAttribute: copyVector2sArray() was removed in r144.")}},{key:"copyVector3sArray",value:function(){console.error("THREE.BufferAttribute: copyVector3sArray() was removed in r144.")}},{key:"copyVector4sArray",value:function(){console.error("THREE.BufferAttribute: copyVector4sArray() was removed in r144.")}}]),e}(),Yn=function(e){g(n,e);var t=x(n);function n(e,r,i){return w(this,n),t.call(this,new Uint16Array(e),r,i)}return T(n)}(Xn),Zn=function(e){g(n,e);var t=x(n);function n(e,r,i){return w(this,n),t.call(this,new Uint32Array(e),r,i)}return T(n)}(Xn),Kn=function(e){g(n,e);var t=x(n);function n(e,r,i){return w(this,n),t.call(this,new Float32Array(e),r,i)}return T(n)}(Xn),Qn=0,$n=new an,Jn=new An,er=new Ct,tr=new Pt,nr=new Pt,rr=new Ct,ir=function(e){g(n,e);var t=x(n);function n(){var e;return w(this,n),(e=t.call(this)).isBufferGeometry=!0,Object.defineProperty(v(e),"id",{value:Qn++}),e.uuid=Xe(),e.name="",e.type="BufferGeometry",e.index=null,e.attributes={},e.morphAttributes={},e.morphTargetsRelative=!1,e.groups=[],e.boundingBox=null,e.boundingSphere=null,e.drawRange={start:0,count:1/0},e.userData={},e}return T(n,[{key:"getIndex",value:function(){return this.index}},{key:"setIndex",value:function(e){return Array.isArray(e)?this.index=new(it(e)?Zn:Yn)(e,1):this.index=e,this}},{key:"getAttribute",value:function(e){return this.attributes[e]}},{key:"setAttribute",value:function(e,t){return this.attributes[e]=t,this}},{key:"deleteAttribute",value:function(e){return delete this.attributes[e],this}},{key:"hasAttribute",value:function(e){return void 0!==this.attributes[e]}},{key:"addGroup",value:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;this.groups.push({start:e,count:t,materialIndex:n})}},{key:"clearGroups",value:function(){this.groups=[]}},{key:"setDrawRange",value:function(e,t){this.drawRange.start=e,this.drawRange.count=t}},{key:"applyMatrix4",value:function(e){var t=this.attributes.position;void 0!==t&&(t.applyMatrix4(e),t.needsUpdate=!0);var n=this.attributes.normal;if(void 0!==n){var r=(new nt).getNormalMatrix(e);n.applyNormalMatrix(r),n.needsUpdate=!0}var i=this.attributes.tangent;return void 0!==i&&(i.transformDirection(e),i.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}},{key:"applyQuaternion",value:function(e){return $n.makeRotationFromQuaternion(e),this.applyMatrix4($n),this}},{key:"rotateX",value:function(e){return $n.makeRotationX(e),this.applyMatrix4($n),this}},{key:"rotateY",value:function(e){return $n.makeRotationY(e),this.applyMatrix4($n),this}},{key:"rotateZ",value:function(e){return $n.makeRotationZ(e),this.applyMatrix4($n),this}},{key:"translate",value:function(e,t,n){return $n.makeTranslation(e,t,n),this.applyMatrix4($n),this}},{key:"scale",value:function(e,t,n){return $n.makeScale(e,t,n),this.applyMatrix4($n),this}},{key:"lookAt",value:function(e){return Jn.lookAt(e),Jn.updateMatrix(),this.applyMatrix4(Jn.matrix),this}},{key:"center",value:function(){return this.computeBoundingBox(),this.boundingBox.getCenter(er).negate(),this.translate(er.x,er.y,er.z),this}},{key:"setFromPoints",value:function(e){for(var t=[],n=0,r=e.length;n<r;n++){var i=e[n];t.push(i.x,i.y,i.z||0)}return this.setAttribute("position",new Kn(t,3)),this}},{key:"computeBoundingBox",value:function(){null===this.boundingBox&&(this.boundingBox=new Pt);var e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingBox.set(new Ct(-1/0,-1/0,-1/0),new Ct(1/0,1/0,1/0));if(void 0!==e){if(this.boundingBox.setFromBufferAttribute(e),t)for(var n=0,r=t.length;n<r;n++){var i=t[n];tr.setFromBufferAttribute(i),this.morphTargetsRelative?(rr.addVectors(this.boundingBox.min,tr.min),this.boundingBox.expandByPoint(rr),rr.addVectors(this.boundingBox.max,tr.max),this.boundingBox.expandByPoint(rr)):(this.boundingBox.expandByPoint(tr.min),this.boundingBox.expandByPoint(tr.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}},{key:"computeBoundingSphere",value:function(){null===this.boundingSphere&&(this.boundingSphere=new Zt);var e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingSphere.set(new Ct,1/0);if(e){var n=this.boundingSphere.center;if(tr.setFromBufferAttribute(e),t)for(var r=0,i=t.length;r<i;r++){var a=t[r];nr.setFromBufferAttribute(a),this.morphTargetsRelative?(rr.addVectors(tr.min,nr.min),tr.expandByPoint(rr),rr.addVectors(tr.max,nr.max),tr.expandByPoint(rr)):(tr.expandByPoint(nr.min),tr.expandByPoint(nr.max))}tr.getCenter(n);for(var o=0,s=0,l=e.count;s<l;s++)rr.fromBufferAttribute(e,s),o=Math.max(o,n.distanceToSquared(rr));if(t)for(var u=0,c=t.length;u<c;u++)for(var d=t[u],f=this.morphTargetsRelative,h=0,p=d.count;h<p;h++)rr.fromBufferAttribute(d,h),f&&(er.fromBufferAttribute(e,h),rr.add(er)),o=Math.max(o,n.distanceToSquared(rr));this.boundingSphere.radius=Math.sqrt(o),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}},{key:"computeTangents",value:function(){var e=this.index,t=this.attributes;if(null!==e&&void 0!==t.position&&void 0!==t.normal&&void 0!==t.uv){var n=e.array,r=t.position.array,i=t.normal.array,a=t.uv.array,o=r.length/3;!1===this.hasAttribute("tangent")&&this.setAttribute("tangent",new Xn(new Float32Array(4*o),4));for(var s=this.getAttribute("tangent").array,l=[],u=[],c=0;c<o;c++)l[c]=new Ct,u[c]=new Ct;var d=new Ct,f=new Ct,h=new Ct,p=new tt,m=new tt,v=new tt,g=new Ct,y=new Ct,_=this.groups;0===_.length&&(_=[{start:0,count:n.length}]);for(var x=0,b=_.length;x<b;++x)for(var S=_[x],M=S.start,w=M,E=M+S.count;w<E;w+=3)O(n[w+0],n[w+1],n[w+2]);for(var T=new Ct,k=new Ct,C=new Ct,L=new Ct,A=0,P=_.length;A<P;++A)for(var R=_[A],D=R.start,N=D,I=D+R.count;N<I;N+=3)z(n[N+0]),z(n[N+1]),z(n[N+2])}else console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");function O(e,t,n){d.fromArray(r,3*e),f.fromArray(r,3*t),h.fromArray(r,3*n),p.fromArray(a,2*e),m.fromArray(a,2*t),v.fromArray(a,2*n),f.sub(d),h.sub(d),m.sub(p),v.sub(p);var i=1/(m.x*v.y-v.x*m.y);isFinite(i)&&(g.copy(f).multiplyScalar(v.y).addScaledVector(h,-m.y).multiplyScalar(i),y.copy(h).multiplyScalar(m.x).addScaledVector(f,-v.x).multiplyScalar(i),l[e].add(g),l[t].add(g),l[n].add(g),u[e].add(y),u[t].add(y),u[n].add(y))}function z(e){C.fromArray(i,3*e),L.copy(C);var t=l[e];T.copy(t),T.sub(C.multiplyScalar(C.dot(t))).normalize(),k.crossVectors(L,t);var n=k.dot(u[e])<0?-1:1;s[4*e]=T.x,s[4*e+1]=T.y,s[4*e+2]=T.z,s[4*e+3]=n}}},{key:"computeVertexNormals",value:function(){var e=this.index,t=this.getAttribute("position");if(void 0!==t){var n=this.getAttribute("normal");if(void 0===n)n=new Xn(new Float32Array(3*t.count),3),this.setAttribute("normal",n);else for(var r=0,i=n.count;r<i;r++)n.setXYZ(r,0,0,0);var a=new Ct,o=new Ct,s=new Ct,l=new Ct,u=new Ct,c=new Ct,d=new Ct,f=new Ct;if(e)for(var h=0,p=e.count;h<p;h+=3){var m=e.getX(h+0),v=e.getX(h+1),g=e.getX(h+2);a.fromBufferAttribute(t,m),o.fromBufferAttribute(t,v),s.fromBufferAttribute(t,g),d.subVectors(s,o),f.subVectors(a,o),d.cross(f),l.fromBufferAttribute(n,m),u.fromBufferAttribute(n,v),c.fromBufferAttribute(n,g),l.add(d),u.add(d),c.add(d),n.setXYZ(m,l.x,l.y,l.z),n.setXYZ(v,u.x,u.y,u.z),n.setXYZ(g,c.x,c.y,c.z)}else for(var y=0,_=t.count;y<_;y+=3)a.fromBufferAttribute(t,y+0),o.fromBufferAttribute(t,y+1),s.fromBufferAttribute(t,y+2),d.subVectors(s,o),f.subVectors(a,o),d.cross(f),n.setXYZ(y+0,d.x,d.y,d.z),n.setXYZ(y+1,d.x,d.y,d.z),n.setXYZ(y+2,d.x,d.y,d.z);this.normalizeNormals(),n.needsUpdate=!0}}},{key:"merge",value:function(){return console.error("THREE.BufferGeometry.merge() has been removed. Use THREE.BufferGeometryUtils.mergeBufferGeometries() instead."),this}},{key:"normalizeNormals",value:function(){for(var e=this.attributes.normal,t=0,n=e.count;t<n;t++)rr.fromBufferAttribute(e,t),rr.normalize(),e.setXYZ(t,rr.x,rr.y,rr.z)}},{key:"toNonIndexed",value:function(){function e(e,t){for(var n=e.array,r=e.itemSize,i=e.normalized,a=new n.constructor(t.length*r),o=0,s=0,l=0,u=t.length;l<u;l++){o=e.isInterleavedBufferAttribute?t[l]*e.data.stride+e.offset:t[l]*r;for(var c=0;c<r;c++)a[s++]=n[o++]}return new Xn(a,r,i)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;var t=new n,r=this.index.array,i=this.attributes;for(var a in i){var o=e(i[a],r);t.setAttribute(a,o)}var s=this.morphAttributes;for(var l in s){for(var u=[],c=s[l],d=0,f=c.length;d<f;d++){var h=e(c[d],r);u.push(h)}t.morphAttributes[l]=u}t.morphTargetsRelative=this.morphTargetsRelative;for(var p=this.groups,m=0,v=p.length;m<v;m++){var g=p[m];t.addGroup(g.start,g.count,g.materialIndex)}return t}},{key:"toJSON",value:function(){var e={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,""!==this.name&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),void 0!==this.parameters){var t=this.parameters;for(var n in t)void 0!==t[n]&&(e[n]=t[n]);return e}e.data={attributes:{}};var r=this.index;null!==r&&(e.data.index={type:r.array.constructor.name,array:Array.prototype.slice.call(r.array)});var i=this.attributes;for(var a in i){var o=i[a];e.data.attributes[a]=o.toJSON(e.data)}var s={},l=!1;for(var u in this.morphAttributes){for(var c=this.morphAttributes[u],d=[],f=0,h=c.length;f<h;f++){var p=c[f];d.push(p.toJSON(e.data))}d.length>0&&(s[u]=d,l=!0)}l&&(e.data.morphAttributes=s,e.data.morphTargetsRelative=this.morphTargetsRelative);var m=this.groups;m.length>0&&(e.data.groups=JSON.parse(JSON.stringify(m)));var v=this.boundingSphere;return null!==v&&(e.data.boundingSphere={center:v.center.toArray(),radius:v.radius}),e}},{key:"clone",value:function(){return(new this.constructor).copy(this)}},{key:"copy",value:function(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;var t={};this.name=e.name;var n=e.index;null!==n&&this.setIndex(n.clone(t));var r=e.attributes;for(var i in r){var a=r[i];this.setAttribute(i,a.clone(t))}var o=e.morphAttributes;for(var s in o){for(var l=[],u=o[s],c=0,d=u.length;c<d;c++)l.push(u[c].clone(t));this.morphAttributes[s]=l}this.morphTargetsRelative=e.morphTargetsRelative;for(var f=e.groups,h=0,p=f.length;h<p;h++){var m=f[h];this.addGroup(m.start,m.count,m.materialIndex)}var v=e.boundingBox;null!==v&&(this.boundingBox=v.clone());var g=e.boundingSphere;return null!==g&&(this.boundingSphere=g.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,void 0!==e.parameters&&(this.parameters=Object.assign({},e.parameters)),this}},{key:"dispose",value:function(){this.dispatchEvent({type:"dispose"})}}]),n}(Ge),ar=new an,or=new rn,sr=new Zt,lr=new Ct,ur=new Ct,cr=new Ct,dr=new Ct,fr=new Ct,hr=new tt,pr=new tt,mr=new tt,vr=new Ct,gr=new Ct,yr=function(e){g(n,e);var t=x(n);function n(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new ir,i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Wn;return w(this,n),(e=t.call(this)).isMesh=!0,e.type="Mesh",e.geometry=r,e.material=i,e.updateMorphTargets(),e}return T(n,[{key:"copy",value:function(e,t){return m(i(n.prototype),"copy",this).call(this,e,t),void 0!==e.morphTargetInfluences&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),void 0!==e.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this}},{key:"updateMorphTargets",value:function(){var e=this.geometry.morphAttributes,t=Object.keys(e);if(t.length>0){var n=e[t[0]];if(void 0!==n){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(var r=0,i=n.length;r<i;r++){var a=n[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=r}}}}},{key:"getVertexPosition",value:function(e,t){var n=this.geometry,r=n.attributes.position,i=n.morphAttributes.position,a=n.morphTargetsRelative;t.fromBufferAttribute(r,e);var o=this.morphTargetInfluences;if(i&&o){fr.set(0,0,0);for(var s=0,l=i.length;s<l;s++){var u=o[s],c=i[s];0!==u&&(dr.fromBufferAttribute(c,e),a?fr.addScaledVector(dr,u):fr.addScaledVector(dr.sub(t),u))}t.add(fr)}return this.isSkinnedMesh&&this.boneTransform(e,t),t}},{key:"raycast",value:function(e,t){var n=this.geometry,r=this.material,i=this.matrixWorld;if(void 0!==r&&(null===n.boundingSphere&&n.computeBoundingSphere(),sr.copy(n.boundingSphere),sr.applyMatrix4(i),!1!==e.ray.intersectsSphere(sr)&&(ar.copy(i).invert(),or.copy(e.ray).applyMatrix4(ar),null===n.boundingBox||!1!==or.intersectsBox(n.boundingBox)))){var a,o=n.index,s=n.attributes.position,l=n.attributes.uv,u=n.attributes.uv2,c=n.groups,d=n.drawRange;if(null!==o)if(Array.isArray(r))for(var f=0,h=c.length;f<h;f++)for(var p=c[f],m=r[p.materialIndex],v=Math.max(p.start,d.start),g=Math.min(o.count,Math.min(p.start+p.count,d.start+d.count));v<g;v+=3){var y=o.getX(v),_=o.getX(v+1),x=o.getX(v+2);(a=_r(this,m,e,or,l,u,y,_,x))&&(a.faceIndex=Math.floor(v/3),a.face.materialIndex=p.materialIndex,t.push(a))}else for(var b=Math.max(0,d.start),S=Math.min(o.count,d.start+d.count);b<S;b+=3){var M=o.getX(b),w=o.getX(b+1),E=o.getX(b+2);(a=_r(this,r,e,or,l,u,M,w,E))&&(a.faceIndex=Math.floor(b/3),t.push(a))}else if(void 0!==s)if(Array.isArray(r))for(var T=0,k=c.length;T<k;T++)for(var C=c[T],L=r[C.materialIndex],A=Math.max(C.start,d.start),P=Math.min(s.count,Math.min(C.start+C.count,d.start+d.count));A<P;A+=3){(a=_r(this,L,e,or,l,u,A,A+1,A+2))&&(a.faceIndex=Math.floor(A/3),a.face.materialIndex=C.materialIndex,t.push(a))}else for(var R=Math.max(0,d.start),D=Math.min(s.count,d.start+d.count);R<D;R+=3){(a=_r(this,r,e,or,l,u,R,R+1,R+2))&&(a.faceIndex=Math.floor(R/3),t.push(a))}}}}]),n}(An);function _r(e,t,n,r,i,a,o,s,l){e.getVertexPosition(o,lr),e.getVertexPosition(s,ur),e.getVertexPosition(l,cr);var u=function(e,t,n,r,i,a,o,s){if(null===(1===t.side?r.intersectTriangle(o,a,i,!0,s):r.intersectTriangle(i,a,o,0===t.side,s)))return null;gr.copy(s),gr.applyMatrix4(e.matrixWorld);var l=n.ray.origin.distanceTo(gr);return l<n.near||l>n.far?null:{distance:l,point:gr.clone(),object:e}}(e,t,n,r,lr,ur,cr,vr);if(u){i&&(hr.fromBufferAttribute(i,o),pr.fromBufferAttribute(i,s),mr.fromBufferAttribute(i,l),u.uv=Vn.getUV(vr,lr,ur,cr,hr,pr,mr,new tt)),a&&(hr.fromBufferAttribute(a,o),pr.fromBufferAttribute(a,s),mr.fromBufferAttribute(a,l),u.uv2=Vn.getUV(vr,lr,ur,cr,hr,pr,mr,new tt));var c={a:o,b:s,c:l,normal:new Ct,materialIndex:0};Vn.getNormal(lr,ur,cr,c.normal),u.face=c}return u}var xr=function(e){g(n,e);var t=x(n);function n(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,l=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1;w(this,n),(e=t.call(this)).type="BoxGeometry",e.parameters={width:r,height:i,depth:a,widthSegments:o,heightSegments:s,depthSegments:l};var u=v(e);o=Math.floor(o),s=Math.floor(s),l=Math.floor(l);var c=[],d=[],f=[],h=[],p=0,m=0;function g(e,t,n,r,i,a,o,s,l,v,g){for(var y=a/l,_=o/v,x=a/2,b=o/2,S=s/2,M=l+1,w=v+1,E=0,T=0,k=new Ct,C=0;C<w;C++)for(var L=C*_-b,A=0;A<M;A++){var P=A*y-x;k[e]=P*r,k[t]=L*i,k[n]=S,d.push(k.x,k.y,k.z),k[e]=0,k[t]=0,k[n]=s>0?1:-1,f.push(k.x,k.y,k.z),h.push(A/l),h.push(1-C/v),E+=1}for(var R=0;R<v;R++)for(var D=0;D<l;D++){var N=p+D+M*R,I=p+D+M*(R+1),O=p+(D+1)+M*(R+1),z=p+(D+1)+M*R;c.push(N,I,z),c.push(I,O,z),T+=6}u.addGroup(m,T,g),m+=T,p+=E}return g("z","y","x",-1,-1,a,i,r,l,s,0),g("z","y","x",1,-1,a,i,-r,l,s,1),g("x","z","y",1,1,r,a,i,o,l,2),g("x","z","y",1,-1,r,a,-i,o,l,3),g("x","y","z",1,-1,r,i,a,o,s,4),g("x","y","z",-1,-1,r,i,-a,o,s,5),e.setIndex(c),e.setAttribute("position",new Kn(d,3)),e.setAttribute("normal",new Kn(f,3)),e.setAttribute("uv",new Kn(h,2)),e}return T(n,null,[{key:"fromJSON",value:function(e){return new n(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}]),n}(ir);function br(e){var t={};for(var n in e)for(var r in t[n]={},e[n]){var i=e[n][r];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?t[n][r]=i.clone():Array.isArray(i)?t[n][r]=i.slice():t[n][r]=i}return t}function Sr(e){for(var t={},n=0;n<e.length;n++){var r=br(e[n]);for(var i in r)t[i]=r[i]}return t}function Mr(e){return null===e.getRenderTarget()&&e.outputEncoding===Oe?ze:Ue}var wr={clone:br,merge:Sr},Er=function(e){g(n,e);var t=x(n);function n(e){var r;return w(this,n),(r=t.call(this)).isShaderMaterial=!0,r.type="ShaderMaterial",r.defines={},r.uniforms={},r.uniformsGroups=[],r.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",r.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",r.linewidth=1,r.wireframe=!1,r.wireframeLinewidth=1,r.fog=!1,r.lights=!1,r.clipping=!1,r.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},r.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},r.index0AttributeName=void 0,r.uniformsNeedUpdate=!1,r.glslVersion=null,void 0!==e&&r.setValues(e),r}return T(n,[{key:"copy",value:function(e){return m(i(n.prototype),"copy",this).call(this,e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=br(e.uniforms),this.uniformsGroups=function(e){for(var t=[],n=0;n<e.length;n++)t.push(e[n].clone());return t}(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}},{key:"toJSON",value:function(e){var t=m(i(n.prototype),"toJSON",this).call(this,e);for(var r in t.glslVersion=this.glslVersion,t.uniforms={},this.uniforms){var a=this.uniforms[r].value;a&&a.isTexture?t.uniforms[r]={type:"t",value:a.toJSON(e).uuid}:a&&a.isColor?t.uniforms[r]={type:"c",value:a.getHex()}:a&&a.isVector2?t.uniforms[r]={type:"v2",value:a.toArray()}:a&&a.isVector3?t.uniforms[r]={type:"v3",value:a.toArray()}:a&&a.isVector4?t.uniforms[r]={type:"v4",value:a.toArray()}:a&&a.isMatrix3?t.uniforms[r]={type:"m3",value:a.toArray()}:a&&a.isMatrix4?t.uniforms[r]={type:"m4",value:a.toArray()}:t.uniforms[r]={value:a}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader;var o={};for(var s in this.extensions)!0===this.extensions[s]&&(o[s]=!0);return Object.keys(o).length>0&&(t.extensions=o),t}}]),n}(Gn),Tr=function(e){g(n,e);var t=x(n);function n(){var e;return w(this,n),(e=t.call(this)).isCamera=!0,e.type="Camera",e.matrixWorldInverse=new an,e.projectionMatrix=new an,e.projectionMatrixInverse=new an,e}return T(n,[{key:"copy",value:function(e,t){return m(i(n.prototype),"copy",this).call(this,e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this}},{key:"getWorldDirection",value:function(e){this.updateWorldMatrix(!0,!1);var t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()}},{key:"updateMatrixWorld",value:function(e){m(i(n.prototype),"updateMatrixWorld",this).call(this,e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}},{key:"updateWorldMatrix",value:function(e,t){m(i(n.prototype),"updateWorldMatrix",this).call(this,e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}},{key:"clone",value:function(){return(new this.constructor).copy(this)}}]),n}(An),kr=function(e){g(n,e);var t=x(n);function n(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:50,i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:.1,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:2e3;return w(this,n),(e=t.call(this)).isPerspectiveCamera=!0,e.type="PerspectiveCamera",e.fov=r,e.zoom=1,e.near=a,e.far=o,e.focus=10,e.aspect=i,e.view=null,e.filmGauge=35,e.filmOffset=0,e.updateProjectionMatrix(),e}return T(n,[{key:"copy",value:function(e,t){return m(i(n.prototype),"copy",this).call(this,e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=null===e.view?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}},{key:"setFocalLength",value:function(e){var t=.5*this.getFilmHeight()/e;this.fov=2*qe*Math.atan(t),this.updateProjectionMatrix()}},{key:"getFocalLength",value:function(){var e=Math.tan(.5*je*this.fov);return.5*this.getFilmHeight()/e}},{key:"getEffectiveFOV",value:function(){return 2*qe*Math.atan(Math.tan(.5*je*this.fov)/this.zoom)}},{key:"getFilmWidth",value:function(){return this.filmGauge*Math.min(this.aspect,1)}},{key:"getFilmHeight",value:function(){return this.filmGauge/Math.max(this.aspect,1)}},{key:"setViewOffset",value:function(e,t,n,r,i,a){this.aspect=e/t,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=r,this.view.width=i,this.view.height=a,this.updateProjectionMatrix()}},{key:"clearViewOffset",value:function(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}},{key:"updateProjectionMatrix",value:function(){var e=this.near,t=e*Math.tan(.5*je*this.fov)/this.zoom,n=2*t,r=this.aspect*n,i=-.5*r,a=this.view;if(null!==this.view&&this.view.enabled){var o=a.fullWidth,s=a.fullHeight;i+=a.offsetX*r/o,t-=a.offsetY*n/s,r*=a.width/o,n*=a.height/s}var l=this.filmOffset;0!==l&&(i+=e*l/this.getFilmWidth()),this.projectionMatrix.makePerspective(i,i+r,t,t-n,e,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}},{key:"toJSON",value:function(e){var t=m(i(n.prototype),"toJSON",this).call(this,e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,null!==this.view&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}]),n}(Tr),Cr=-90,Lr=function(e){g(n,e);var t=x(n);function n(e,r,i){var a;w(this,n),(a=t.call(this)).type="CubeCamera",a.renderTarget=i;var o=new kr(Cr,1,e,r);o.layers=a.layers,o.up.set(0,1,0),o.lookAt(1,0,0),a.add(o);var s=new kr(Cr,1,e,r);s.layers=a.layers,s.up.set(0,1,0),s.lookAt(-1,0,0),a.add(s);var l=new kr(Cr,1,e,r);l.layers=a.layers,l.up.set(0,0,-1),l.lookAt(0,1,0),a.add(l);var u=new kr(Cr,1,e,r);u.layers=a.layers,u.up.set(0,0,1),u.lookAt(0,-1,0),a.add(u);var c=new kr(Cr,1,e,r);c.layers=a.layers,c.up.set(0,1,0),c.lookAt(0,0,1),a.add(c);var d=new kr(Cr,1,e,r);return d.layers=a.layers,d.up.set(0,1,0),d.lookAt(0,0,-1),a.add(d),a}return T(n,[{key:"update",value:function(e,t){null===this.parent&&this.updateMatrixWorld();var n=this.renderTarget,r=h(this.children,6),i=r[0],a=r[1],o=r[2],s=r[3],l=r[4],u=r[5],c=e.getRenderTarget(),d=e.toneMapping,f=e.xr.enabled;e.toneMapping=0,e.xr.enabled=!1;var p=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0),e.render(t,i),e.setRenderTarget(n,1),e.render(t,a),e.setRenderTarget(n,2),e.render(t,o),e.setRenderTarget(n,3),e.render(t,s),e.setRenderTarget(n,4),e.render(t,l),n.texture.generateMipmaps=p,e.setRenderTarget(n,5),e.render(t,u),e.setRenderTarget(c),e.toneMapping=d,e.xr.enabled=f,n.texture.needsPMREMUpdate=!0}}]),n}(An),Ar=function(e){g(n,e);var t=x(n);function n(e,r,i,a,o,s,l,u,c,d){var f;return w(this,n),e=void 0!==e?e:[],r=void 0!==r?r:O,(f=t.call(this,e,r,i,a,o,s,l,u,c,d)).isCubeTexture=!0,f.flipY=!1,f}return T(n,[{key:"images",get:function(){return this.image},set:function(e){this.image=e}}]),n}(St),Pr=function(e){g(n,e);var t=x(n);function n(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};w(this,n),(e=t.call(this,r,r,i)).isWebGLCubeRenderTarget=!0;var a={width:r,height:r,depth:1},o=[a,a,a,a,a,a];return e.texture=new Ar(o,i.mapping,i.wrapS,i.wrapT,i.magFilter,i.minFilter,i.format,i.type,i.anisotropy,i.encoding),e.texture.isRenderTargetTexture=!0,e.texture.generateMipmaps=void 0!==i.generateMipmaps&&i.generateMipmaps,e.texture.minFilter=void 0!==i.minFilter?i.minFilter:X,e}return T(n,[{key:"fromEquirectangularTexture",value:function(e,t){this.texture.type=t.type,this.texture.encoding=t.encoding,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;var n={tEquirect:{value:null}},r="\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t",i="\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t",a=new xr(5,5,5),o=new Er({name:"CubemapFromEquirect",uniforms:br(n),vertexShader:r,fragmentShader:i,side:1,blending:0});o.uniforms.tEquirect.value=t;var s=new yr(a,o),l=t.minFilter;return t.minFilter===Y&&(t.minFilter=X),new Lr(1,10,this).update(e,s),t.minFilter=l,s.geometry.dispose(),s.material.dispose(),this}},{key:"clear",value:function(e,t,n,r){for(var i=e.getRenderTarget(),a=0;a<6;a++)e.setRenderTarget(this,a),e.clear(t,n,r);e.setRenderTarget(i)}}]),n}(wt),Rr=new Ct,Dr=new Ct,Nr=new nt,Ir=function(){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Ct(1,0,0),n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;w(this,e),this.isPlane=!0,this.normal=t,this.constant=n}return T(e,[{key:"set",value:function(e,t){return this.normal.copy(e),this.constant=t,this}},{key:"setComponents",value:function(e,t,n,r){return this.normal.set(e,t,n),this.constant=r,this}},{key:"setFromNormalAndCoplanarPoint",value:function(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}},{key:"setFromCoplanarPoints",value:function(e,t,n){var r=Rr.subVectors(n,t).cross(Dr.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(r,e),this}},{key:"copy",value:function(e){return this.normal.copy(e.normal),this.constant=e.constant,this}},{key:"normalize",value:function(){var e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}},{key:"negate",value:function(){return this.constant*=-1,this.normal.negate(),this}},{key:"distanceToPoint",value:function(e){return this.normal.dot(e)+this.constant}},{key:"distanceToSphere",value:function(e){return this.distanceToPoint(e.center)-e.radius}},{key:"projectPoint",value:function(e,t){return t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)}},{key:"intersectLine",value:function(e,t){var n=e.delta(Rr),r=this.normal.dot(n);if(0===r)return 0===this.distanceToPoint(e.start)?t.copy(e.start):null;var i=-(e.start.dot(this.normal)+this.constant)/r;return i<0||i>1?null:t.copy(n).multiplyScalar(i).add(e.start)}},{key:"intersectsLine",value:function(e){var t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}},{key:"intersectsBox",value:function(e){return e.intersectsPlane(this)}},{key:"intersectsSphere",value:function(e){return e.intersectsPlane(this)}},{key:"coplanarPoint",value:function(e){return e.copy(this.normal).multiplyScalar(-this.constant)}},{key:"applyMatrix4",value:function(e,t){var n=t||Nr.getNormalMatrix(e),r=this.coplanarPoint(Rr).applyMatrix4(e),i=this.normal.applyMatrix3(n).normalize();return this.constant=-r.dot(i),this}},{key:"translate",value:function(e){return this.constant-=e.dot(this.normal),this}},{key:"equals",value:function(e){return e.normal.equals(this.normal)&&e.constant===this.constant}},{key:"clone",value:function(){return(new this.constructor).copy(this)}}]),e}(),Or=new Zt,zr=new Ct,Ur=function(){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Ir,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Ir,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new Ir,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:new Ir,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:new Ir,o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:new Ir;w(this,e),this.planes=[t,n,r,i,a,o]}return T(e,[{key:"set",value:function(e,t,n,r,i,a){var o=this.planes;return o[0].copy(e),o[1].copy(t),o[2].copy(n),o[3].copy(r),o[4].copy(i),o[5].copy(a),this}},{key:"copy",value:function(e){for(var t=this.planes,n=0;n<6;n++)t[n].copy(e.planes[n]);return this}},{key:"setFromProjectionMatrix",value:function(e){var t=this.planes,n=e.elements,r=n[0],i=n[1],a=n[2],o=n[3],s=n[4],l=n[5],u=n[6],c=n[7],d=n[8],f=n[9],h=n[10],p=n[11],m=n[12],v=n[13],g=n[14],y=n[15];return t[0].setComponents(o-r,c-s,p-d,y-m).normalize(),t[1].setComponents(o+r,c+s,p+d,y+m).normalize(),t[2].setComponents(o+i,c+l,p+f,y+v).normalize(),t[3].setComponents(o-i,c-l,p-f,y-v).normalize(),t[4].setComponents(o-a,c-u,p-h,y-g).normalize(),t[5].setComponents(o+a,c+u,p+h,y+g).normalize(),this}},{key:"intersectsObject",value:function(e){var t=e.geometry;return null===t.boundingSphere&&t.computeBoundingSphere(),Or.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(Or)}},{key:"intersectsSprite",value:function(e){return Or.center.set(0,0,0),Or.radius=.7071067811865476,Or.applyMatrix4(e.matrixWorld),this.intersectsSphere(Or)}},{key:"intersectsSphere",value:function(e){for(var t=this.planes,n=e.center,r=-e.radius,i=0;i<6;i++){if(t[i].distanceToPoint(n)<r)return!1}return!0}},{key:"intersectsBox",value:function(e){for(var t=this.planes,n=0;n<6;n++){var r=t[n];if(zr.x=r.normal.x>0?e.max.x:e.min.x,zr.y=r.normal.y>0?e.max.y:e.min.y,zr.z=r.normal.z>0?e.max.z:e.min.z,r.distanceToPoint(zr)<0)return!1}return!0}},{key:"containsPoint",value:function(e){for(var t=this.planes,n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}},{key:"clone",value:function(){return(new this.constructor).copy(this)}}]),e}();function Fr(){var e=null,t=!1,n=null,r=null;function i(t,a){n(t,a),r=e.requestAnimationFrame(i)}return{start:function(){!0!==t&&null!==n&&(r=e.requestAnimationFrame(i),t=!0)},stop:function(){e.cancelAnimationFrame(r),t=!1},setAnimationLoop:function(e){n=e},setContext:function(t){e=t}}}function Br(e,t){var n=t.isWebGL2,r=new WeakMap;return{get:function(e){return e.isInterleavedBufferAttribute&&(e=e.data),r.get(e)},remove:function(t){t.isInterleavedBufferAttribute&&(t=t.data);var n=r.get(t);n&&(e.deleteBuffer(n.buffer),r.delete(t))},update:function(t,i){if(t.isGLBufferAttribute){var a=r.get(t);(!a||a.version<t.version)&&r.set(t,{buffer:t.buffer,type:t.type,bytesPerElement:t.elementSize,version:t.version})}else{t.isInterleavedBufferAttribute&&(t=t.data);var o=r.get(t);void 0===o?r.set(t,function(t,r){var i,a=t.array,o=t.usage,s=e.createBuffer();if(e.bindBuffer(r,s),e.bufferData(r,a,o),t.onUploadCallback(),a instanceof Float32Array)i=5126;else if(a instanceof Uint16Array)if(t.isFloat16BufferAttribute){if(!n)throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");i=5131}else i=5123;else if(a instanceof Int16Array)i=5122;else if(a instanceof Uint32Array)i=5125;else if(a instanceof Int32Array)i=5124;else if(a instanceof Int8Array)i=5120;else if(a instanceof Uint8Array)i=5121;else{if(!(a instanceof Uint8ClampedArray))throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+a);i=5121}return{buffer:s,type:i,bytesPerElement:a.BYTES_PER_ELEMENT,version:t.version}}(t,i)):o.version<t.version&&(!function(t,r,i){var a=r.array,o=r.updateRange;e.bindBuffer(i,t),-1===o.count?e.bufferSubData(i,0,a):(n?e.bufferSubData(i,o.offset*a.BYTES_PER_ELEMENT,a,o.offset,o.count):e.bufferSubData(i,o.offset*a.BYTES_PER_ELEMENT,a.subarray(o.offset,o.offset+o.count)),o.count=-1),r.onUploadCallback()}(o.buffer,t,i),o.version=t.version)}}}}var Vr=function(e){g(n,e);var t=x(n);function n(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;w(this,n),(e=t.call(this)).type="PlaneGeometry",e.parameters={width:r,height:i,widthSegments:a,heightSegments:o};for(var s=r/2,l=i/2,u=Math.floor(a),c=Math.floor(o),d=u+1,f=c+1,h=r/u,p=i/c,m=[],v=[],g=[],y=[],_=0;_<f;_++)for(var x=_*p-l,b=0;b<d;b++){var S=b*h-s;v.push(S,-x,0),g.push(0,0,1),y.push(b/u),y.push(1-_/c)}for(var M=0;M<c;M++)for(var E=0;E<u;E++){var T=E+d*M,k=E+d*(M+1),C=E+1+d*(M+1),L=E+1+d*M;m.push(T,k,L),m.push(k,C,L)}return e.setIndex(m),e.setAttribute("position",new Kn(v,3)),e.setAttribute("normal",new Kn(g,3)),e.setAttribute("uv",new Kn(y,2)),e}return T(n,null,[{key:"fromJSON",value:function(e){return new n(e.width,e.height,e.widthSegments,e.heightSegments)}}]),n}(ir),Hr={alphamap_fragment:"#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef USE_ALPHATEST\n\tif ( diffuseColor.a < alphaTest ) discard;\n#endif",alphatest_pars_fragment:"#ifdef USE_ALPHATEST\n\tuniform float alphaTest;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\n\t#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",begin_vertex:"vec3 transformed = vec3( position );",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"vec3 BRDF_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\n    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );\n    float x2 = x * x;\n    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\n    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\n}\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( f0, f90, dotVH );\n\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( V * D );\n}\n#ifdef USE_IRIDESCENCE\n\tvec3 BRDF_GGX_Iridescence( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float iridescence, const in vec3 iridescenceFresnel, const in float roughness ) {\n\t\tfloat alpha = pow2( roughness );\n\t\tvec3 halfDir = normalize( lightDir + viewDir );\n\t\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\t\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\t\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\t\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\t\tvec3 F = mix( F_Schlick( f0, f90, dotVH ), iridescenceFresnel, iridescence );\n\t\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\t\tfloat D = D_GGX( alpha, dotNH );\n\t\treturn F * ( V * D );\n\t}\n#endif\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie( float roughness, float dotNH ) {\n\tfloat alpha = pow2( roughness );\n\tfloat invAlpha = 1.0 / alpha;\n\tfloat cos2h = dotNH * dotNH;\n\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\n\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\n}\nfloat V_Neubelt( float dotNV, float dotNL ) {\n\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\n}\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat D = D_Charlie( sheenRoughness, dotNH );\n\tfloat V = V_Neubelt( dotNV, dotNL );\n\treturn sheenColor * ( D * V );\n}\n#endif",iridescence_fragment:"#ifdef USE_IRIDESCENCE\n\tconst mat3 XYZ_TO_REC709 = mat3(\n\t\t 3.2404542, -0.9692660,  0.0556434,\n\t\t-1.5371385,  1.8760108, -0.2040259,\n\t\t-0.4985314,  0.0415560,  1.0572252\n\t);\n\tvec3 Fresnel0ToIor( vec3 fresnel0 ) {\n\t\tvec3 sqrtF0 = sqrt( fresnel0 );\n\t\treturn ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\n\t}\n\tvec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\n\t\treturn pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\n\t}\n\tfloat IorToFresnel0( float transmittedIor, float incidentIor ) {\n\t\treturn pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\n\t}\n\tvec3 evalSensitivity( float OPD, vec3 shift ) {\n\t\tfloat phase = 2.0 * PI * OPD * 1.0e-9;\n\t\tvec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\n\t\tvec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\n\t\tvec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\n\t\tvec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );\n\t\txyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );\n\t\txyz /= 1.0685e-7;\n\t\tvec3 rgb = XYZ_TO_REC709 * xyz;\n\t\treturn rgb;\n\t}\n\tvec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\n\t\tvec3 I;\n\t\tfloat iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\n\t\tfloat sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\n\t\tfloat cosTheta2Sq = 1.0 - sinTheta2Sq;\n\t\tif ( cosTheta2Sq < 0.0 ) {\n\t\t\t return vec3( 1.0 );\n\t\t}\n\t\tfloat cosTheta2 = sqrt( cosTheta2Sq );\n\t\tfloat R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\n\t\tfloat R12 = F_Schlick( R0, 1.0, cosTheta1 );\n\t\tfloat R21 = R12;\n\t\tfloat T121 = 1.0 - R12;\n\t\tfloat phi12 = 0.0;\n\t\tif ( iridescenceIOR < outsideIOR ) phi12 = PI;\n\t\tfloat phi21 = PI - phi12;\n\t\tvec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );\t\tvec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\n\t\tvec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\n\t\tvec3 phi23 = vec3( 0.0 );\n\t\tif ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;\n\t\tif ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;\n\t\tif ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;\n\t\tfloat OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\n\t\tvec3 phi = vec3( phi21 ) + phi23;\n\t\tvec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\n\t\tvec3 r123 = sqrt( R123 );\n\t\tvec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\n\t\tvec3 C0 = R12 + Rs;\n\t\tI = C0;\n\t\tvec3 Cm = Rs - T121;\n\t\tfor ( int m = 1; m <= 2; ++ m ) {\n\t\t\tCm *= r123;\n\t\t\tvec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\n\t\t\tI += Cm * Sm;\n\t\t}\n\t\treturn max( I, vec3( 0.0 ) );\n\t}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n\t\tvec3 vSigmaX = dFdx( surf_pos.xyz );\n\t\tvec3 vSigmaY = dFdy( surf_pos.xyz );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#pragma unroll_loop_end\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\tif ( clipped ) discard;\n\t#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",color_fragment:"#if defined( USE_COLOR_ALPHA )\n\tdiffuseColor *= vColor;\n#elif defined( USE_COLOR )\n\tdiffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR )\n\tvarying vec3 vColor;\n#endif",color_pars_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvarying vec3 vColor;\n#endif",color_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n\tvColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n\tvColor.xyz *= instanceColor.xyz;\n#endif",common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nvec3 pow2( const in vec3 x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\nfloat average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract( sin( sn ) * c );\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat luminance( const in vec3 rgb ) {\n\tconst vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );\n\treturn dot( weights, rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n\treturn m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_minTileSize 16.0\n\tfloat getFace( vec3 direction ) {\n\t\tvec3 absDirection = abs( direction );\n\t\tfloat face = - 1.0;\n\t\tif ( absDirection.x > absDirection.z ) {\n\t\t\tif ( absDirection.x > absDirection.y )\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t} else {\n\t\t\tif ( absDirection.z > absDirection.y )\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t}\n\t\treturn face;\n\t}\n\tvec2 getUV( vec3 direction, float face ) {\n\t\tvec2 uv;\n\t\tif ( face == 0.0 ) {\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 1.0 ) {\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n\t\t} else if ( face == 2.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\n\t\t} else if ( face == 3.0 ) {\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 4.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\n\t\t} else {\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\n\t\t}\n\t\treturn 0.5 * ( uv + 1.0 );\n\t}\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\t\tfloat face = getFace( direction );\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\t\tfloat faceSize = exp2( mipInt );\n\t\thighp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\n\t\tif ( face > 2.0 ) {\n\t\t\tuv.y += faceSize;\n\t\t\tface -= 3.0;\n\t\t}\n\t\tuv.x += face * faceSize;\n\t\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\n\t\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\n\t\tuv.x *= CUBEUV_TEXEL_WIDTH;\n\t\tuv.y *= CUBEUV_TEXEL_HEIGHT;\n\t\t#ifdef texture2DGradEXT\n\t\t\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\n\t\t#else\n\t\t\treturn texture2D( envMap, uv ).rgb;\n\t\t#endif\n\t}\n\t#define cubeUV_r0 1.0\n\t#define cubeUV_v0 0.339\n\t#define cubeUV_m0 - 2.0\n\t#define cubeUV_r1 0.8\n\t#define cubeUV_v1 0.276\n\t#define cubeUV_m1 - 1.0\n\t#define cubeUV_r4 0.4\n\t#define cubeUV_v4 0.046\n\t#define cubeUV_m4 2.0\n\t#define cubeUV_r5 0.305\n\t#define cubeUV_v5 0.016\n\t#define cubeUV_m5 3.0\n\t#define cubeUV_r6 0.21\n\t#define cubeUV_v6 0.0038\n\t#define cubeUV_m6 4.0\n\tfloat roughnessToMip( float roughness ) {\n\t\tfloat mip = 0.0;\n\t\tif ( roughness >= cubeUV_r1 ) {\n\t\t\tmip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;\n\t\t} else if ( roughness >= cubeUV_r4 ) {\n\t\t\tmip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;\n\t\t} else if ( roughness >= cubeUV_r5 ) {\n\t\t\tmip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;\n\t\t} else if ( roughness >= cubeUV_r6 ) {\n\t\t\tmip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;\n\t\t} else {\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness );\t\t}\n\t\treturn mip;\n\t}\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\t\tfloat mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );\n\t\tfloat mipF = fract( mip );\n\t\tfloat mipInt = floor( mip );\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\t\tif ( mipF == 0.0 ) {\n\t\t\treturn vec4( color0, 1.0 );\n\t\t} else {\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\t\t}\n\t}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n\tmat3 m = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\ttransformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",encodings_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",encodings_pars_fragment:"vec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",envmap_physical_pars_fragment:"#if defined( USE_ENVMAP )\n\tvec3 getIBLIrradiance( const in vec3 normal ) {\n\t\t#if defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\t\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\n\t\t#if defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 reflectVec = reflect( - viewDir, normal );\n\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\t\t\treturn envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n\tvFogDepth = - mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n\tvarying float vFogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float vFogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn vec3( texture2D( gradientMap, coord ).r );\n\t#else\n\t\tvec2 fw = fwidth( coord ) * 0.5;\n\t\treturn mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );\n\t#endif\n}",lightmap_fragment:"#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n\treflectedLight.indirectDiffuse += lightMapIrradiance;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",lights_lambert_fragment:"LambertMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularStrength = specularStrength;",lights_lambert_pars_fragment:"varying vec3 vViewPosition;\nstruct LambertMaterial {\n\tvec3 diffuseColor;\n\tfloat specularStrength;\n};\nvoid RE_Direct_Lambert( const in IncidentLight directLight, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Lambert\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Lambert",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\n\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\treturn irradiance;\n}\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\t#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\t\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\t\tif ( cutoffDistance > 0.0 ) {\n\t\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t\t}\n\t\treturn distanceFalloff;\n\t#else\n\t\tif ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\t\treturn pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t\t}\n\t\treturn 1.0;\n\t#endif\n}\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\n\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tlight.color = directionalLight.color;\n\t\tlight.direction = directionalLight.direction;\n\t\tlight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tlight.color = pointLight.color;\n\t\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\n\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat angleCos = dot( light.direction, spotLight.direction );\n\t\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\tif ( spotAttenuation > 0.0 ) {\n\t\t\tfloat lightDistance = length( lVector );\n\t\t\tlight.color = spotLight.color * spotAttenuation;\n\t\t\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t\t} else {\n\t\t\tlight.color = vec3( 0.0 );\n\t\t\tlight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\n\t\tfloat dotNL = dot( normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\treturn irradiance;\n\t}\n#endif",lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\nstruct ToonMaterial {\n\tvec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\nstruct BlinnPhongMaterial {\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\nmaterial.roughness = min( material.roughness, 1.0 );\n#ifdef IOR\n\tmaterial.ior = ior;\n\t#ifdef SPECULAR\n\t\tfloat specularIntensityFactor = specularIntensity;\n\t\tvec3 specularColorFactor = specularColor;\n\t\t#ifdef USE_SPECULARINTENSITYMAP\n\t\t\tspecularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;\n\t\t#endif\n\t\t#ifdef USE_SPECULARCOLORMAP\n\t\t\tspecularColorFactor *= texture2D( specularColorMap, vUv ).rgb;\n\t\t#endif\n\t\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\n\t#else\n\t\tfloat specularIntensityFactor = 1.0;\n\t\tvec3 specularColorFactor = vec3( 1.0 );\n\t\tmaterial.specularF90 = 1.0;\n\t#endif\n\tmaterial.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\n\tmaterial.specularF90 = 1.0;\n#endif\n#ifdef USE_CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\tmaterial.clearcoatF0 = vec3( 0.04 );\n\tmaterial.clearcoatF90 = 1.0;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_IRIDESCENCE\n\tmaterial.iridescence = iridescence;\n\tmaterial.iridescenceIOR = iridescenceIOR;\n\t#ifdef USE_IRIDESCENCEMAP\n\t\tmaterial.iridescence *= texture2D( iridescenceMap, vUv ).r;\n\t#endif\n\t#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\t\tmaterial.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vUv ).g + iridescenceThicknessMinimum;\n\t#else\n\t\tmaterial.iridescenceThickness = iridescenceThicknessMaximum;\n\t#endif\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheenColor;\n\t#ifdef USE_SHEENCOLORMAP\n\t\tmaterial.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;\n\t#endif\n\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\n\t#ifdef USE_SHEENROUGHNESSMAP\n\t\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;\n\t#endif\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n\tvec3 diffuseColor;\n\tfloat roughness;\n\tvec3 specularColor;\n\tfloat specularF90;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat clearcoat;\n\t\tfloat clearcoatRoughness;\n\t\tvec3 clearcoatF0;\n\t\tfloat clearcoatF90;\n\t#endif\n\t#ifdef USE_IRIDESCENCE\n\t\tfloat iridescence;\n\t\tfloat iridescenceIOR;\n\t\tfloat iridescenceThickness;\n\t\tvec3 iridescenceFresnel;\n\t\tvec3 iridescenceF0;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tvec3 sheenColor;\n\t\tfloat sheenRoughness;\n\t#endif\n\t#ifdef IOR\n\t\tfloat ior;\n\t#endif\n\t#ifdef USE_TRANSMISSION\n\t\tfloat transmission;\n\t\tfloat transmissionAlpha;\n\t\tfloat thickness;\n\t\tfloat attenuationDistance;\n\t\tvec3 attenuationColor;\n\t#endif\n};\nvec3 clearcoatSpecular = vec3( 0.0 );\nvec3 sheenSpecular = vec3( 0.0 );\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat r2 = roughness * roughness;\n\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\n\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\n\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\n\treturn saturate( DG * RECIPROCAL_PI );\n}\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\n\treturn fab;\n}\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\treturn specularColor * fab.x + specularF90 * fab.y;\n}\n#ifdef USE_IRIDESCENCE\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#else\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#endif\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\t#ifdef USE_IRIDESCENCE\n\t\tvec3 Fr = mix( specularColor, iridescenceF0, iridescence );\n\t#else\n\t\tvec3 Fr = specularColor;\n\t#endif\n\tvec3 FssEss = Fr * fab.x + specularF90 * fab.y;\n\tfloat Ess = fab.x + fab.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.roughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = dotNLcc * directLight.color;\n\t\tclearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );\n\t#endif\n\t#ifdef USE_IRIDESCENCE\n\t\treflectedLight.directSpecular += irradiance * BRDF_GGX_Iridescence( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness );\n\t#else\n\t\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );\n\t#endif\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\t#ifdef USE_IRIDESCENCE\n\t\tcomputeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\n\t#else\n\t\tcomputeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\n\t#endif\n\tvec3 totalScattering = singleScattering + multiScattering;\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\n\treflectedLight.indirectSpecular += radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef USE_CLEARCOAT\n\tgeometry.clearcoatNormal = clearcoatNormal;\n#endif\n#ifdef USE_IRIDESCENCE\n\tfloat dotNVi = saturate( dot( normal, geometry.viewDir ) );\n\tif ( material.iridescenceThickness == 0.0 ) {\n\t\tmaterial.iridescence = 0.0;\n\t} else {\n\t\tmaterial.iridescence = saturate( material.iridescence );\n\t}\n\tif ( material.iridescence > 0.0 ) {\n\t\tmaterial.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\n\t\tmaterial.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\n\t}\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointLightInfo( pointLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\tvec4 spotColor;\n\tvec3 spotLightCoord;\n\tbool inSpotLightMap;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotLightInfo( spotLight, geometry, directLight );\n\t\t#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\n\t\t#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX\n\t\t#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\t#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS\n\t\t#else\n\t\t#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\n\t\t#endif\n\t\t#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )\n\t\t\tspotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;\n\t\t\tinSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );\n\t\t\tspotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );\n\t\t\tdirectLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;\n\t\t#endif\n\t\t#undef SPOT_LIGHT_MAP_INDEX\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalLightInfo( directionalLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\t\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getIBLIrradiance( geometry.normal );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );\n\t#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif",map_fragment:"#ifdef USE_MAP\n\tvec4 sampledDiffuseColor = texture2D( map, vUv );\n\t#ifdef DECODE_VIDEO_TEXTURE\n\t\tsampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );\n\t#endif\n\tdiffuseColor *= sampledDiffuseColor;\n#endif",map_pars_fragment:"#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n\tdiffuseColor *= texture2D( map, uv );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tuniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",morphcolor_vertex:"#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )\n\tvColor *= morphTargetBaseInfluence;\n\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t#if defined( USE_COLOR_ALPHA )\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\n\t\t#elif defined( USE_COLOR )\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\n\t\t#endif\n\t}\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\n\t\t}\n\t#else\n\t\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\t\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\t\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\t\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n\t#endif\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n\tuniform float morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\n\t\tuniform sampler2DArray morphTargetsTexture;\n\t\tuniform ivec2 morphTargetsTextureSize;\n\t\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\n\t\t\tint texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\n\t\t\tint y = texelIndex / morphTargetsTextureSize.x;\n\t\t\tint x = texelIndex - y * morphTargetsTextureSize.x;\n\t\t\tivec3 morphUV = ivec3( x, y, morphTargetIndex );\n\t\t\treturn texelFetch( morphTargetsTexture, morphUV, 0 );\n\t\t}\n\t#else\n\t\t#ifndef USE_MORPHNORMALS\n\t\t\tuniform float morphTargetInfluences[ 8 ];\n\t\t#else\n\t\t\tuniform float morphTargetInfluences[ 4 ];\n\t\t#endif\n\t#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\n\t\t}\n\t#else\n\t\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\t\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\t\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\t\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t\t#ifndef USE_MORPHNORMALS\n\t\t\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\t\t\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\t\t\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\t\t\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t\t#endif\n\t#endif\n#endif",normal_fragment_begin:"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n\tvec3 fdx = dFdx( vViewPosition );\n\tvec3 fdy = dFdy( vViewPosition );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\t#ifdef USE_TANGENT\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\ttangent = tangent * faceDirection;\n\t\t\tbitangent = bitangent * faceDirection;\n\t\t#endif\n\t\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\t\t#endif\n\t#endif\n#endif\nvec3 geometryNormal = normal;",normal_fragment_maps:"#ifdef OBJECTSPACE_NORMALMAP\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\t#ifdef USE_TANGENT\n\t\tnormal = normalize( vTBN * mapN );\n\t#else\n\t\tnormal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );\n\t#endif\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",normal_pars_fragment:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_pars_vertex:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_vertex:"#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tvec3 N = surf_norm;\n\t\tvec3 q1perp = cross( q1, N );\n\t\tvec3 q0perp = cross( N, q0 );\n\t\tvec3 T = q1perp * st0.x + q0perp * st1.x;\n\t\tvec3 B = q1perp * st0.y + q0perp * st1.y;\n\t\tfloat det = max( dot( T, T ), dot( B, B ) );\n\t\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\n\t\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\n\t}\n#endif",clearcoat_normal_fragment_begin:"#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal = geometryNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\t#ifdef USE_TANGENT\n\t\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\n\t#else\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\n\t#endif\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif",iridescence_pars_fragment:"#ifdef USE_IRIDESCENCEMAP\n\tuniform sampler2D iridescenceMap;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tuniform sampler2D iridescenceThicknessMap;\n#endif",output_fragment:"#ifdef OPAQUE\ndiffuseColor.a = 1.0;\n#endif\n#ifdef USE_TRANSMISSION\ndiffuseColor.a *= material.transmissionAlpha + 0.1;\n#endif\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec2 packDepthToRG( in highp float v ) {\n\treturn packDepthToRGBA( v ).yx;\n}\nfloat unpackRGToDepth( const in highp vec2 v ) {\n\treturn unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#if NUM_SPOT_LIGHT_COORDS > 0\n  varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\n#endif\n#if NUM_SPOT_LIGHT_MAPS > 0\n  uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];\n#endif\n#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;\n\t\tbool frustumTest = inFrustum && shadowCoord.z <= 1.0;\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif",shadowmap_pars_vertex:"#if NUM_SPOT_LIGHT_COORDS > 0\n  uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];\n  varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\n#endif\n#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",shadowmap_vertex:"#if defined( USE_SHADOWMAP ) || ( NUM_SPOT_LIGHT_COORDS > 0 )\n\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_COORDS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\n\t\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\tvec4 shadowWorldPosition;\n\t#endif\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_COORDS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition;\n\t\t#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\t\tshadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;\n\t\t#endif\n\t\tvSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\tuniform highp sampler2D boneTexture;\n\tuniform int boneTextureSize;\n\tmat4 getBoneMatrix( const in float i ) {\n\t\tfloat j = i * 4.0;\n\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\ty = dy * ( y + 0.5 );\n\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\treturn bone;\n\t}\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(  1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,  1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",transmission_fragment:"#ifdef USE_TRANSMISSION\n\tmaterial.transmission = transmission;\n\tmaterial.transmissionAlpha = 1.0;\n\tmaterial.thickness = thickness;\n\tmaterial.attenuationDistance = attenuationDistance;\n\tmaterial.attenuationColor = attenuationColor;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tmaterial.transmission *= texture2D( transmissionMap, vUv ).r;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tmaterial.thickness *= texture2D( thicknessMap, vUv ).g;\n\t#endif\n\tvec3 pos = vWorldPosition;\n\tvec3 v = normalize( cameraPosition - pos );\n\tvec3 n = inverseTransformDirection( normal, viewMatrix );\n\tvec4 transmission = getIBLVolumeRefraction(\n\t\tn, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,\n\t\tpos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,\n\t\tmaterial.attenuationColor, material.attenuationDistance );\n\tmaterial.transmissionAlpha = mix( material.transmissionAlpha, transmission.a, material.transmission );\n\ttotalDiffuse = mix( totalDiffuse, transmission.rgb, material.transmission );\n#endif",transmission_pars_fragment:"#ifdef USE_TRANSMISSION\n\tuniform float transmission;\n\tuniform float thickness;\n\tuniform float attenuationDistance;\n\tuniform vec3 attenuationColor;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tuniform sampler2D transmissionMap;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tuniform sampler2D thicknessMap;\n\t#endif\n\tuniform vec2 transmissionSamplerSize;\n\tuniform sampler2D transmissionSamplerMap;\n\tuniform mat4 modelMatrix;\n\tuniform mat4 projectionMatrix;\n\tvarying vec3 vWorldPosition;\n\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\n\t\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\n\t\tvec3 modelScale;\n\t\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\n\t\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\n\t\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\n\t\treturn normalize( refractionVector ) * thickness * modelScale;\n\t}\n\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\n\t\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\n\t}\n\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\n\t\tfloat framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\n\t\t#ifdef texture2DLodEXT\n\t\t\treturn texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );\n\t\t#else\n\t\t\treturn texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );\n\t\t#endif\n\t}\n\tvec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tif ( isinf( attenuationDistance ) ) {\n\t\t\treturn radiance;\n\t\t} else {\n\t\t\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\n\t\t\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\t\t\treturn transmittance * radiance;\n\t\t}\n\t}\n\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\n\t\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\n\t\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,\n\t\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\n\t\tvec3 refractedRayExit = position + transmissionRay;\n\t\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n\t\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\n\t\trefractionCoords += 1.0;\n\t\trefractionCoords /= 2.0;\n\t\tvec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\n\t\tvec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );\n\t\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\n\t\treturn vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );\n\t}\n#endif",uv_pars_fragment:"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n\tvarying vec2 vUv;\n#endif",uv_pars_vertex:"#ifdef USE_UV\n\t#ifdef UVS_VERTEX_ONLY\n\t\tvec2 vUv;\n\t#else\n\t\tvarying vec2 vUv;\n\t#endif\n\tuniform mat3 uvTransform;\n#endif",uv_vertex:"#ifdef USE_UV\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",uv2_pars_fragment:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",uv2_pars_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\tuniform mat3 uv2Transform;\n#endif",uv2_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",background_frag:"uniform sampler2D t2D;\nuniform float backgroundIntensity;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texColor = texture2D( t2D, vUv );\n\t#ifdef DECODE_VIDEO_TEXTURE\n\t\ttexColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );\n\t#endif\n\ttexColor.rgb *= backgroundIntensity;\n\tgl_FragColor = texColor;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",backgroundCube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",backgroundCube_frag:"#ifdef ENVMAP_TYPE_CUBE\n\tuniform samplerCube envMap;\n#elif defined( ENVMAP_TYPE_CUBE_UV )\n\tuniform sampler2D envMap;\n#endif\nuniform float flipEnvMap;\nuniform float backgroundBlurriness;\nuniform float backgroundIntensity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );\n\t#else\n\t\tvec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t#endif\n\ttexColor.rgb *= backgroundIntensity;\n\tgl_FragColor = texColor;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",cube_frag:"uniform samplerCube tCube;\nuniform float tFlip;\nuniform float opacity;\nvarying vec3 vWorldDirection;\nvoid main() {\n\tvec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\n\tgl_FragColor = texColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",depth_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#endif\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",meshbasic_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinbase_vertex>\n\t\t#include <skinnormal_vertex>\n\t\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshlambert_frag:"#define LAMBERT\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_lambert_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_lambert_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t#else\n\t\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshnormal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",meshnormal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n\t#ifdef OPAQUE\n\t\tgl_FragColor.a = 1.0;\n\t#endif\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifdef USE_TRANSMISSION\n\tvarying vec3 vWorldPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n#ifdef USE_TRANSMISSION\n\tvWorldPosition = worldPosition.xyz;\n#endif\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n\t#define IOR\n\t#define SPECULAR\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef IOR\n\tuniform float ior;\n#endif\n#ifdef SPECULAR\n\tuniform float specularIntensity;\n\tuniform vec3 specularColor;\n\t#ifdef USE_SPECULARINTENSITYMAP\n\t\tuniform sampler2D specularIntensityMap;\n\t#endif\n\t#ifdef USE_SPECULARCOLORMAP\n\t\tuniform sampler2D specularColorMap;\n\t#endif\n#endif\n#ifdef USE_CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_IRIDESCENCE\n\tuniform float iridescence;\n\tuniform float iridescenceIOR;\n\tuniform float iridescenceThicknessMinimum;\n\tuniform float iridescenceThicknessMaximum;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheenColor;\n\tuniform float sheenRoughness;\n\t#ifdef USE_SHEENCOLORMAP\n\t\tuniform sampler2D sheenColorMap;\n\t#endif\n\t#ifdef USE_SHEENROUGHNESSMAP\n\t\tuniform sampler2D sheenRoughnessMap;\n\t#endif\n#endif\nvarying vec3 vViewPosition;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <bsdfs>\n#include <iridescence_fragment>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_physical_pars_fragment>\n#include <transmission_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <iridescence_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\n\t#include <transmission_fragment>\n\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\n\t#ifdef USE_SHEEN\n\t\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\n\t\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;\n\t#endif\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\n\t\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;\n\t#endif\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",shadow_vert:"#include <common>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}"},Gr={common:{diffuse:{value:new gt(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new nt},uv2Transform:{value:new nt},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new tt(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new gt(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new gt(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new nt}},sprite:{diffuse:{value:new gt(16777215)},opacity:{value:1},center:{value:new tt(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new nt}}},Wr={basic:{uniforms:Sr([Gr.common,Gr.specularmap,Gr.envmap,Gr.aomap,Gr.lightmap,Gr.fog]),vertexShader:Hr.meshbasic_vert,fragmentShader:Hr.meshbasic_frag},lambert:{uniforms:Sr([Gr.common,Gr.specularmap,Gr.envmap,Gr.aomap,Gr.lightmap,Gr.emissivemap,Gr.bumpmap,Gr.normalmap,Gr.displacementmap,Gr.fog,Gr.lights,{emissive:{value:new gt(0)}}]),vertexShader:Hr.meshlambert_vert,fragmentShader:Hr.meshlambert_frag},phong:{uniforms:Sr([Gr.common,Gr.specularmap,Gr.envmap,Gr.aomap,Gr.lightmap,Gr.emissivemap,Gr.bumpmap,Gr.normalmap,Gr.displacementmap,Gr.fog,Gr.lights,{emissive:{value:new gt(0)},specular:{value:new gt(1118481)},shininess:{value:30}}]),vertexShader:Hr.meshphong_vert,fragmentShader:Hr.meshphong_frag},standard:{uniforms:Sr([Gr.common,Gr.envmap,Gr.aomap,Gr.lightmap,Gr.emissivemap,Gr.bumpmap,Gr.normalmap,Gr.displacementmap,Gr.roughnessmap,Gr.metalnessmap,Gr.fog,Gr.lights,{emissive:{value:new gt(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Hr.meshphysical_vert,fragmentShader:Hr.meshphysical_frag},toon:{uniforms:Sr([Gr.common,Gr.aomap,Gr.lightmap,Gr.emissivemap,Gr.bumpmap,Gr.normalmap,Gr.displacementmap,Gr.gradientmap,Gr.fog,Gr.lights,{emissive:{value:new gt(0)}}]),vertexShader:Hr.meshtoon_vert,fragmentShader:Hr.meshtoon_frag},matcap:{uniforms:Sr([Gr.common,Gr.bumpmap,Gr.normalmap,Gr.displacementmap,Gr.fog,{matcap:{value:null}}]),vertexShader:Hr.meshmatcap_vert,fragmentShader:Hr.meshmatcap_frag},points:{uniforms:Sr([Gr.points,Gr.fog]),vertexShader:Hr.points_vert,fragmentShader:Hr.points_frag},dashed:{uniforms:Sr([Gr.common,Gr.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Hr.linedashed_vert,fragmentShader:Hr.linedashed_frag},depth:{uniforms:Sr([Gr.common,Gr.displacementmap]),vertexShader:Hr.depth_vert,fragmentShader:Hr.depth_frag},normal:{uniforms:Sr([Gr.common,Gr.bumpmap,Gr.normalmap,Gr.displacementmap,{opacity:{value:1}}]),vertexShader:Hr.meshnormal_vert,fragmentShader:Hr.meshnormal_frag},sprite:{uniforms:Sr([Gr.sprite,Gr.fog]),vertexShader:Hr.sprite_vert,fragmentShader:Hr.sprite_frag},background:{uniforms:{uvTransform:{value:new nt},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:Hr.background_vert,fragmentShader:Hr.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1}},vertexShader:Hr.backgroundCube_vert,fragmentShader:Hr.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:Hr.cube_vert,fragmentShader:Hr.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Hr.equirect_vert,fragmentShader:Hr.equirect_frag},distanceRGBA:{uniforms:Sr([Gr.common,Gr.displacementmap,{referencePosition:{value:new Ct},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Hr.distanceRGBA_vert,fragmentShader:Hr.distanceRGBA_frag},shadow:{uniforms:Sr([Gr.lights,Gr.fog,{color:{value:new gt(0)},opacity:{value:1}}]),vertexShader:Hr.shadow_vert,fragmentShader:Hr.shadow_frag}};Wr.physical={uniforms:Sr([Wr.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new tt(1,1)},clearcoatNormalMap:{value:null},iridescence:{value:0},iridescenceMap:{value:null},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},sheen:{value:0},sheenColor:{value:new gt(0)},sheenColorMap:{value:null},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new tt},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationColor:{value:new gt(0)},specularIntensity:{value:1},specularIntensityMap:{value:null},specularColor:{value:new gt(1,1,1)},specularColorMap:{value:null}}]),vertexShader:Hr.meshphysical_vert,fragmentShader:Hr.meshphysical_frag};var jr={r:0,b:0,g:0};function qr(e,t,n,r,i,a,o){var s,l,u=new gt(0),c=!0===a?0:1,d=null,f=0,h=null;function p(t,n){t.getRGB(jr,Mr(e)),r.buffers.color.setClear(jr.r,jr.g,jr.b,n,o)}return{getClearColor:function(){return u},setClearColor:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;u.set(e),p(u,c=t)},getClearAlpha:function(){return c},setClearAlpha:function(e){p(u,c=e)},render:function(r,a){var o=!1,m=!0===a.isScene?a.background:null;m&&m.isTexture&&(m=(a.backgroundBlurriness>0?n:t).get(m));var v=e.xr,g=v.getSession&&v.getSession();g&&"additive"===g.environmentBlendMode&&(m=null),null===m?p(u,c):m&&m.isColor&&(p(m,1),o=!0),(e.autoClear||o)&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),m&&(m.isCubeTexture||m.mapping===B)?(void 0===l&&((l=new yr(new xr(1,1,1),new Er({name:"BackgroundCubeMaterial",uniforms:br(Wr.backgroundCube.uniforms),vertexShader:Wr.backgroundCube.vertexShader,fragmentShader:Wr.backgroundCube.fragmentShader,side:1,depthTest:!1,depthWrite:!1,fog:!1}))).geometry.deleteAttribute("normal"),l.geometry.deleteAttribute("uv"),l.onBeforeRender=function(e,t,n){this.matrixWorld.copyPosition(n.matrixWorld)},Object.defineProperty(l.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(l)),l.material.uniforms.envMap.value=m,l.material.uniforms.flipEnvMap.value=m.isCubeTexture&&!1===m.isRenderTargetTexture?-1:1,l.material.uniforms.backgroundBlurriness.value=a.backgroundBlurriness,l.material.uniforms.backgroundIntensity.value=a.backgroundIntensity,l.material.toneMapped=m.encoding!==Oe,d===m&&f===m.version&&h===e.toneMapping||(l.material.needsUpdate=!0,d=m,f=m.version,h=e.toneMapping),l.layers.enableAll(),r.unshift(l,l.geometry,l.material,0,0,null)):m&&m.isTexture&&(void 0===s&&((s=new yr(new Vr(2,2),new Er({name:"BackgroundMaterial",uniforms:br(Wr.background.uniforms),vertexShader:Wr.background.vertexShader,fragmentShader:Wr.background.fragmentShader,side:0,depthTest:!1,depthWrite:!1,fog:!1}))).geometry.deleteAttribute("normal"),Object.defineProperty(s.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(s)),s.material.uniforms.t2D.value=m,s.material.uniforms.backgroundIntensity.value=a.backgroundIntensity,s.material.toneMapped=m.encoding!==Oe,!0===m.matrixAutoUpdate&&m.updateMatrix(),s.material.uniforms.uvTransform.value.copy(m.matrix),d===m&&f===m.version&&h===e.toneMapping||(s.material.needsUpdate=!0,d=m,f=m.version,h=e.toneMapping),s.layers.enableAll(),r.unshift(s,s.geometry,s.material,0,0,null))}}}function Xr(e,t,n,r){var i=e.getParameter(34921),a=r.isWebGL2?null:t.get("OES_vertex_array_object"),o=r.isWebGL2||null!==a,s={},l=h(null),u=l,c=!1;function d(t){return r.isWebGL2?e.bindVertexArray(t):a.bindVertexArrayOES(t)}function f(t){return r.isWebGL2?e.deleteVertexArray(t):a.deleteVertexArrayOES(t)}function h(e){for(var t=[],n=[],r=[],a=0;a<i;a++)t[a]=0,n[a]=0,r[a]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:t,enabledAttributes:n,attributeDivisors:r,object:e,attributes:{},index:null}}function p(){for(var e=u.newAttributes,t=0,n=e.length;t<n;t++)e[t]=0}function m(e){v(e,0)}function v(n,i){var a=u.newAttributes,o=u.enabledAttributes,s=u.attributeDivisors;(a[n]=1,0===o[n]&&(e.enableVertexAttribArray(n),o[n]=1),s[n]!==i)&&((r.isWebGL2?e:t.get("ANGLE_instanced_arrays"))[r.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](n,i),s[n]=i)}function g(){for(var t=u.newAttributes,n=u.enabledAttributes,r=0,i=n.length;r<i;r++)n[r]!==t[r]&&(e.disableVertexAttribArray(r),n[r]=0)}function y(t,n,i,a,o,s){!0!==r.isWebGL2||5124!==i&&5125!==i?e.vertexAttribPointer(t,n,i,a,o,s):e.vertexAttribIPointer(t,n,i,o,s)}function _(){x(),c=!0,u!==l&&d((u=l).object)}function x(){l.geometry=null,l.program=null,l.wireframe=!1}return{setup:function(i,l,f,_,x){var b=!1;if(o){var S=function(t,n,i){var o=!0===i.wireframe,l=s[t.id];void 0===l&&(l={},s[t.id]=l);var u=l[n.id];void 0===u&&(u={},l[n.id]=u);var c=u[o];void 0===c&&(c=h(r.isWebGL2?e.createVertexArray():a.createVertexArrayOES()),u[o]=c);return c}(_,f,l);u!==S&&d((u=S).object),b=function(e,t,n,r){var i=u.attributes,a=t.attributes,o=0,s=n.getAttributes();for(var l in s){if(s[l].location>=0){var c=i[l],d=a[l];if(void 0===d&&("instanceMatrix"===l&&e.instanceMatrix&&(d=e.instanceMatrix),"instanceColor"===l&&e.instanceColor&&(d=e.instanceColor)),void 0===c)return!0;if(c.attribute!==d)return!0;if(d&&c.data!==d.data)return!0;o++}}return u.attributesNum!==o||u.index!==r}(i,_,f,x),b&&function(e,t,n,r){var i={},a=t.attributes,o=0,s=n.getAttributes();for(var l in s){if(s[l].location>=0){var c=a[l];void 0===c&&("instanceMatrix"===l&&e.instanceMatrix&&(c=e.instanceMatrix),"instanceColor"===l&&e.instanceColor&&(c=e.instanceColor));var d={};d.attribute=c,c&&c.data&&(d.data=c.data),i[l]=d,o++}}u.attributes=i,u.attributesNum=o,u.index=r}(i,_,f,x)}else{var M=!0===l.wireframe;u.geometry===_.id&&u.program===f.id&&u.wireframe===M||(u.geometry=_.id,u.program=f.id,u.wireframe=M,b=!0)}null!==x&&n.update(x,34963),(b||c)&&(c=!1,function(i,a,o,s){if(!1===r.isWebGL2&&(i.isInstancedMesh||s.isInstancedBufferGeometry)&&null===t.get("ANGLE_instanced_arrays"))return;p();var l=s.attributes,u=o.getAttributes(),c=a.defaultAttributeValues;for(var d in u){var f=u[d];if(f.location>=0){var h=l[d];if(void 0===h&&("instanceMatrix"===d&&i.instanceMatrix&&(h=i.instanceMatrix),"instanceColor"===d&&i.instanceColor&&(h=i.instanceColor)),void 0!==h){var _=h.normalized,x=h.itemSize,b=n.get(h);if(void 0===b)continue;var S=b.buffer,M=b.type,w=b.bytesPerElement;if(h.isInterleavedBufferAttribute){var E=h.data,T=E.stride,k=h.offset;if(E.isInstancedInterleavedBuffer){for(var C=0;C<f.locationSize;C++)v(f.location+C,E.meshPerAttribute);!0!==i.isInstancedMesh&&void 0===s._maxInstanceCount&&(s._maxInstanceCount=E.meshPerAttribute*E.count)}else for(var L=0;L<f.locationSize;L++)m(f.location+L);e.bindBuffer(34962,S);for(var A=0;A<f.locationSize;A++)y(f.location+A,x/f.locationSize,M,_,T*w,(k+x/f.locationSize*A)*w)}else{if(h.isInstancedBufferAttribute){for(var P=0;P<f.locationSize;P++)v(f.location+P,h.meshPerAttribute);!0!==i.isInstancedMesh&&void 0===s._maxInstanceCount&&(s._maxInstanceCount=h.meshPerAttribute*h.count)}else for(var R=0;R<f.locationSize;R++)m(f.location+R);e.bindBuffer(34962,S);for(var D=0;D<f.locationSize;D++)y(f.location+D,x/f.locationSize,M,_,x*w,x/f.locationSize*D*w)}}else if(void 0!==c){var N=c[d];if(void 0!==N)switch(N.length){case 2:e.vertexAttrib2fv(f.location,N);break;case 3:e.vertexAttrib3fv(f.location,N);break;case 4:e.vertexAttrib4fv(f.location,N);break;default:e.vertexAttrib1fv(f.location,N)}}}}g()}(i,l,f,_),null!==x&&e.bindBuffer(34963,n.get(x).buffer))},reset:_,resetDefaultState:x,dispose:function(){for(var e in _(),s){var t=s[e];for(var n in t){var r=t[n];for(var i in r)f(r[i].object),delete r[i];delete t[n]}delete s[e]}},releaseStatesOfGeometry:function(e){if(void 0!==s[e.id]){var t=s[e.id];for(var n in t){var r=t[n];for(var i in r)f(r[i].object),delete r[i];delete t[n]}delete s[e.id]}},releaseStatesOfProgram:function(e){for(var t in s){var n=s[t];if(void 0!==n[e.id]){var r=n[e.id];for(var i in r)f(r[i].object),delete r[i];delete n[e.id]}}},initAttributes:p,enableAttribute:m,disableUnusedAttributes:g}}function Yr(e,t,n,r){var i,a=r.isWebGL2;this.setMode=function(e){i=e},this.render=function(t,r){e.drawArrays(i,t,r),n.update(r,i,1)},this.renderInstances=function(r,o,s){if(0!==s){var l,u;if(a)l=e,u="drawArraysInstanced";else if(u="drawArraysInstancedANGLE",null===(l=t.get("ANGLE_instanced_arrays")))return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");l[u](i,r,o,s),n.update(o,i,s)}}}function Zr(e,t,n){var r;function i(t){if("highp"===t){if(e.getShaderPrecisionFormat(35633,36338).precision>0&&e.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";t="mediump"}return"mediump"===t&&e.getShaderPrecisionFormat(35633,36337).precision>0&&e.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}var a="undefined"!==typeof WebGL2RenderingContext&&e instanceof WebGL2RenderingContext||"undefined"!==typeof WebGL2ComputeRenderingContext&&e instanceof WebGL2ComputeRenderingContext,o=void 0!==n.precision?n.precision:"highp",s=i(o);s!==o&&(console.warn("THREE.WebGLRenderer:",o,"not supported, using",s,"instead."),o=s);var l=a||t.has("WEBGL_draw_buffers"),u=!0===n.logarithmicDepthBuffer,c=e.getParameter(34930),d=e.getParameter(35660),f=e.getParameter(3379),h=e.getParameter(34076),p=e.getParameter(34921),m=e.getParameter(36347),v=e.getParameter(36348),g=e.getParameter(36349),y=d>0,_=a||t.has("OES_texture_float");return{isWebGL2:a,drawBuffers:l,getMaxAnisotropy:function(){if(void 0!==r)return r;if(!0===t.has("EXT_texture_filter_anisotropic")){var n=t.get("EXT_texture_filter_anisotropic");r=e.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else r=0;return r},getMaxPrecision:i,precision:o,logarithmicDepthBuffer:u,maxTextures:c,maxVertexTextures:d,maxTextureSize:f,maxCubemapSize:h,maxAttributes:p,maxVertexUniforms:m,maxVaryings:v,maxFragmentUniforms:g,vertexTextures:y,floatFragmentTextures:_,floatVertexTextures:y&&_,maxSamples:a?e.getParameter(36183):0}}function Kr(e){var t=this,n=null,r=0,i=!1,a=!1,o=new Ir,s=new nt,l={value:null,needsUpdate:!1};function u(){l.value!==n&&(l.value=n,l.needsUpdate=r>0),t.numPlanes=r,t.numIntersection=0}function c(e,n,r,i){var a=null!==e?e.length:0,u=null;if(0!==a){if(u=l.value,!0!==i||null===u){var c=r+4*a,d=n.matrixWorldInverse;s.getNormalMatrix(d),(null===u||u.length<c)&&(u=new Float32Array(c));for(var f=0,h=r;f!==a;++f,h+=4)o.copy(e[f]).applyMatrix4(d,s),o.normal.toArray(u,h),u[h+3]=o.constant}l.value=u,l.needsUpdate=!0}return t.numPlanes=a,t.numIntersection=0,u}this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(e,t,a){var o=0!==e.length||t||0!==r||i;return i=t,n=c(e,a,0),r=e.length,o},this.beginShadows=function(){a=!0,c(null)},this.endShadows=function(){a=!1,u()},this.setState=function(t,o,s){var d=t.clippingPlanes,f=t.clipIntersection,h=t.clipShadows,p=e.get(t);if(!i||null===d||0===d.length||a&&!h)a?c(null):u();else{var m=a?0:r,v=4*m,g=p.clippingState||null;l.value=g,g=c(d,o,v,s);for(var y=0;y!==v;++y)g[y]=n[y];p.clippingState=g,this.numIntersection=f?this.numPlanes:0,this.numPlanes+=m}}}function Qr(e){var t=new WeakMap;function n(e,t){return t===U?e.mapping=O:t===F&&(e.mapping=z),e}function r(e){var n=e.target;n.removeEventListener("dispose",r);var i=t.get(n);void 0!==i&&(t.delete(n),i.dispose())}return{get:function(i){if(i&&i.isTexture&&!1===i.isRenderTargetTexture){var a=i.mapping;if(a===U||a===F){if(t.has(i))return n(t.get(i).texture,i.mapping);var o=i.image;if(o&&o.height>0){var s=new Pr(o.height/2);return s.fromEquirectangularTexture(e,i),t.set(i,s),i.addEventListener("dispose",r),n(s.texture,i.mapping)}return null}}return i},dispose:function(){t=new WeakMap}}}var $r=function(e){g(n,e);var t=x(n);function n(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:-1,i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:-1,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.1,l=arguments.length>5&&void 0!==arguments[5]?arguments[5]:2e3;return w(this,n),(e=t.call(this)).isOrthographicCamera=!0,e.type="OrthographicCamera",e.zoom=1,e.view=null,e.left=r,e.right=i,e.top=a,e.bottom=o,e.near=s,e.far=l,e.updateProjectionMatrix(),e}return T(n,[{key:"copy",value:function(e,t){return m(i(n.prototype),"copy",this).call(this,e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=null===e.view?null:Object.assign({},e.view),this}},{key:"setViewOffset",value:function(e,t,n,r,i,a){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=r,this.view.width=i,this.view.height=a,this.updateProjectionMatrix()}},{key:"clearViewOffset",value:function(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}},{key:"updateProjectionMatrix",value:function(){var e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,r=(this.top+this.bottom)/2,i=n-e,a=n+e,o=r+t,s=r-t;if(null!==this.view&&this.view.enabled){var l=(this.right-this.left)/this.view.fullWidth/this.zoom,u=(this.top-this.bottom)/this.view.fullHeight/this.zoom;a=(i+=l*this.view.offsetX)+l*this.view.width,s=(o-=u*this.view.offsetY)-u*this.view.height}this.projectionMatrix.makeOrthographic(i,a,o,s,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}},{key:"toJSON",value:function(e){var t=m(i(n.prototype),"toJSON",this).call(this,e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,null!==this.view&&(t.object.view=Object.assign({},this.view)),t}}]),n}(Tr),Jr=[.125,.215,.35,.446,.526,.582],ei=20,ti=new $r,ni=new gt,ri=null,ii=(1+Math.sqrt(5))/2,ai=1/ii,oi=[new Ct(1,1,1),new Ct(-1,1,1),new Ct(1,1,-1),new Ct(-1,1,-1),new Ct(0,ii,ai),new Ct(0,ii,-ai),new Ct(ai,0,ii),new Ct(-ai,0,ii),new Ct(ii,ai,0),new Ct(-ii,ai,0)],si=function(){function e(t){w(this,e),this._renderer=t,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}return T(e,[{key:"fromScene",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:.1,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:100;ri=this._renderer.getRenderTarget(),this._setSize(256);var i=this._allocateTargets();return i.depthBuffer=!0,this._sceneToCubeUV(e,n,r,i),t>0&&this._blur(i,0,0,t),this._applyPMREM(i),this._cleanup(i),i}},{key:"fromEquirectangular",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;return this._fromTexture(e,t)}},{key:"fromCubemap",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;return this._fromTexture(e,t)}},{key:"compileCubemapShader",value:function(){null===this._cubemapMaterial&&(this._cubemapMaterial=di(),this._compileMaterial(this._cubemapMaterial))}},{key:"compileEquirectangularShader",value:function(){null===this._equirectMaterial&&(this._equirectMaterial=ci(),this._compileMaterial(this._equirectMaterial))}},{key:"dispose",value:function(){this._dispose(),null!==this._cubemapMaterial&&this._cubemapMaterial.dispose(),null!==this._equirectMaterial&&this._equirectMaterial.dispose()}},{key:"_setSize",value:function(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}},{key:"_dispose",value:function(){null!==this._blurMaterial&&this._blurMaterial.dispose(),null!==this._pingPongRenderTarget&&this._pingPongRenderTarget.dispose();for(var e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}},{key:"_cleanup",value:function(e){this._renderer.setRenderTarget(ri),e.scissorTest=!1,ui(e,0,0,e.width,e.height)}},{key:"_fromTexture",value:function(e,t){e.mapping===O||e.mapping===z?this._setSize(0===e.image.length?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),ri=this._renderer.getRenderTarget();var n=t||this._allocateTargets();return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}},{key:"_allocateTargets",value:function(){var e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,n={magFilter:X,minFilter:X,generateMipmaps:!1,type:J,format:te,encoding:Ie,depthBuffer:!1},r=li(e,t,n);if(null===this._pingPongRenderTarget||this._pingPongRenderTarget.width!==e){null!==this._pingPongRenderTarget&&this._dispose(),this._pingPongRenderTarget=li(e,t,n);var i=this._lodMax,a=function(e){for(var t=[],n=[],r=[],i=e,a=e-4+1+Jr.length,o=0;o<a;o++){var s=Math.pow(2,i);n.push(s);var l=1/s;o>e-4?l=Jr[o-e+4-1]:0===o&&(l=0),r.push(l);for(var u=1/(s-2),c=-u,d=1+u,f=[c,c,d,c,d,d,c,c,d,d,c,d],h=6,p=6,m=3,v=2,g=1,y=new Float32Array(m*p*h),_=new Float32Array(v*p*h),x=new Float32Array(g*p*h),b=0;b<h;b++){var S=b%3*2/3-1,M=b>2?0:-1,w=[S,M,0,S+2/3,M,0,S+2/3,M+1,0,S,M,0,S+2/3,M+1,0,S,M+1,0];y.set(w,m*p*b),_.set(f,v*p*b);var E=[b,b,b,b,b,b];x.set(E,g*p*b)}var T=new ir;T.setAttribute("position",new Xn(y,m)),T.setAttribute("uv",new Xn(_,v)),T.setAttribute("faceIndex",new Xn(x,g)),t.push(T),i>4&&i--}return{lodPlanes:t,sizeLods:n,sigmas:r}}(i);this._sizeLods=a.sizeLods,this._lodPlanes=a.lodPlanes,this._sigmas=a.sigmas,this._blurMaterial=function(e,t,n){var r=new Float32Array(ei),i=new Ct(0,1,0),a=new Er({name:"SphericalGaussianBlur",defines:{n:ei,CUBEUV_TEXEL_WIDTH:1/t,CUBEUV_TEXEL_HEIGHT:1/n,CUBEUV_MAX_MIP:"".concat(e,".0")},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:r},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:i}},vertexShader:"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t",blending:0,depthTest:!1,depthWrite:!1});return a}(i,e,t)}return r}},{key:"_compileMaterial",value:function(e){var t=new yr(this._lodPlanes[0],e);this._renderer.compile(t,ti)}},{key:"_sceneToCubeUV",value:function(e,t,n,r){var i=new kr(90,1,t,n),a=[1,-1,1,1,1,1],o=[1,1,1,-1,-1,-1],s=this._renderer,l=s.autoClear,u=s.toneMapping;s.getClearColor(ni),s.toneMapping=0,s.autoClear=!1;var c=new Wn({name:"PMREM.Background",side:1,depthWrite:!1,depthTest:!1}),d=new yr(new xr,c),f=!1,h=e.background;h?h.isColor&&(c.color.copy(h),e.background=null,f=!0):(c.color.copy(ni),f=!0);for(var p=0;p<6;p++){var m=p%3;0===m?(i.up.set(0,a[p],0),i.lookAt(o[p],0,0)):1===m?(i.up.set(0,0,a[p]),i.lookAt(0,o[p],0)):(i.up.set(0,a[p],0),i.lookAt(0,0,o[p]));var v=this._cubeSize;ui(r,m*v,p>2?v:0,v,v),s.setRenderTarget(r),f&&s.render(d,i),s.render(e,i)}d.geometry.dispose(),d.material.dispose(),s.toneMapping=u,s.autoClear=l,e.background=h}},{key:"_textureToCubeUV",value:function(e,t){var n=this._renderer,r=e.mapping===O||e.mapping===z;r?(null===this._cubemapMaterial&&(this._cubemapMaterial=di()),this._cubemapMaterial.uniforms.flipEnvMap.value=!1===e.isRenderTargetTexture?-1:1):null===this._equirectMaterial&&(this._equirectMaterial=ci());var i=r?this._cubemapMaterial:this._equirectMaterial,a=new yr(this._lodPlanes[0],i);i.uniforms.envMap.value=e;var o=this._cubeSize;ui(t,0,0,3*o,2*o),n.setRenderTarget(t),n.render(a,ti)}},{key:"_applyPMREM",value:function(e){var t=this._renderer,n=t.autoClear;t.autoClear=!1;for(var r=1;r<this._lodPlanes.length;r++){var i=Math.sqrt(this._sigmas[r]*this._sigmas[r]-this._sigmas[r-1]*this._sigmas[r-1]),a=oi[(r-1)%oi.length];this._blur(e,r-1,r,i,a)}t.autoClear=n}},{key:"_blur",value:function(e,t,n,r,i){var a=this._pingPongRenderTarget;this._halfBlur(e,a,t,n,r,"latitudinal",i),this._halfBlur(a,e,n,n,r,"longitudinal",i)}},{key:"_halfBlur",value:function(e,t,n,r,i,a,o){var s=this._renderer,l=this._blurMaterial;"latitudinal"!==a&&"longitudinal"!==a&&console.error("blur direction must be either latitudinal or longitudinal!");var u=new yr(this._lodPlanes[r],l),c=l.uniforms,d=this._sizeLods[n]-1,f=isFinite(i)?Math.PI/(2*d):2*Math.PI/39,h=i/f,p=isFinite(i)?1+Math.floor(3*h):ei;p>ei&&console.warn("sigmaRadians, ".concat(i,", is too large and will clip, as it requested ").concat(p," samples when the maximum is set to ").concat(ei));for(var m=[],v=0,g=0;g<ei;++g){var y=g/h,_=Math.exp(-y*y/2);m.push(_),0===g?v+=_:g<p&&(v+=2*_)}for(var x=0;x<m.length;x++)m[x]=m[x]/v;c.envMap.value=e.texture,c.samples.value=p,c.weights.value=m,c.latitudinal.value="latitudinal"===a,o&&(c.poleAxis.value=o);var b=this._lodMax;c.dTheta.value=f,c.mipInt.value=b-n;var S=this._sizeLods[r];ui(t,3*S*(r>b-4?r-b+4:0),4*(this._cubeSize-S),3*S,2*S),s.setRenderTarget(t),s.render(u,ti)}}]),e}();function li(e,t,n){var r=new wt(e,t,n);return r.texture.mapping=B,r.texture.name="PMREM.cubeUv",r.scissorTest=!0,r}function ui(e,t,n,r,i){e.viewport.set(t,n,r,i),e.scissor.set(t,n,r,i)}function ci(){return new Er({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tgl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );\n\n\t\t\t}\n\t\t",blending:0,depthTest:!1,depthWrite:!1})}function di(){return new Er({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tuniform float flipEnvMap;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );\n\n\t\t\t}\n\t\t",blending:0,depthTest:!1,depthWrite:!1})}function fi(e){var t=new WeakMap,n=null;function r(e){var n=e.target;n.removeEventListener("dispose",r);var i=t.get(n);void 0!==i&&(t.delete(n),i.dispose())}return{get:function(i){if(i&&i.isTexture){var a=i.mapping,o=a===U||a===F,s=a===O||a===z;if(o||s){if(i.isRenderTargetTexture&&!0===i.needsPMREMUpdate){i.needsPMREMUpdate=!1;var l=t.get(i);return null===n&&(n=new si(e)),l=o?n.fromEquirectangular(i,l):n.fromCubemap(i,l),t.set(i,l),l.texture}if(t.has(i))return t.get(i).texture;var u=i.image;if(o&&u&&u.height>0||s&&u&&function(e){for(var t=0,n=6,r=0;r<n;r++)void 0!==e[r]&&t++;return t===n}(u)){null===n&&(n=new si(e));var c=o?n.fromEquirectangular(i):n.fromCubemap(i);return t.set(i,c),i.addEventListener("dispose",r),c.texture}return null}}return i},dispose:function(){t=new WeakMap,null!==n&&(n.dispose(),n=null)}}}function hi(e){var t={};function n(n){if(void 0!==t[n])return t[n];var r;switch(n){case"WEBGL_depth_texture":r=e.getExtension("WEBGL_depth_texture")||e.getExtension("MOZ_WEBGL_depth_texture")||e.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":r=e.getExtension("EXT_texture_filter_anisotropic")||e.getExtension("MOZ_EXT_texture_filter_anisotropic")||e.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":r=e.getExtension("WEBGL_compressed_texture_s3tc")||e.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":r=e.getExtension("WEBGL_compressed_texture_pvrtc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:r=e.getExtension(n)}return t[n]=r,r}return{has:function(e){return null!==n(e)},init:function(e){e.isWebGL2?n("EXT_color_buffer_float"):(n("WEBGL_depth_texture"),n("OES_texture_float"),n("OES_texture_half_float"),n("OES_texture_half_float_linear"),n("OES_standard_derivatives"),n("OES_element_index_uint"),n("OES_vertex_array_object"),n("ANGLE_instanced_arrays")),n("OES_texture_float_linear"),n("EXT_color_buffer_half_float"),n("WEBGL_multisampled_render_to_texture")},get:function(e){var t=n(e);return null===t&&console.warn("THREE.WebGLRenderer: "+e+" extension not supported."),t}}}function pi(e,t,n,r){var i={},a=new WeakMap;function o(e){var s=e.target;for(var l in null!==s.index&&t.remove(s.index),s.attributes)t.remove(s.attributes[l]);s.removeEventListener("dispose",o),delete i[s.id];var u=a.get(s);u&&(t.remove(u),a.delete(s)),r.releaseStatesOfGeometry(s),!0===s.isInstancedBufferGeometry&&delete s._maxInstanceCount,n.memory.geometries--}function s(e){var n=[],r=e.index,i=e.attributes.position,o=0;if(null!==r){var s=r.array;o=r.version;for(var l=0,u=s.length;l<u;l+=3){var c=s[l+0],d=s[l+1],f=s[l+2];n.push(c,d,d,f,f,c)}}else{var h=i.array;o=i.version;for(var p=0,m=h.length/3-1;p<m;p+=3){var v=p+0,g=p+1,y=p+2;n.push(v,g,g,y,y,v)}}var _=new(it(n)?Zn:Yn)(n,1);_.version=o;var x=a.get(e);x&&t.remove(x),a.set(e,_)}return{get:function(e,t){return!0===i[t.id]||(t.addEventListener("dispose",o),i[t.id]=!0,n.memory.geometries++),t},update:function(e){var n=e.attributes;for(var r in n)t.update(n[r],34962);var i=e.morphAttributes;for(var a in i)for(var o=i[a],s=0,l=o.length;s<l;s++)t.update(o[s],34962)},getWireframeAttribute:function(e){var t=a.get(e);if(t){var n=e.index;null!==n&&t.version<n.version&&s(e)}else s(e);return a.get(e)}}}function mi(e,t,n,r){var i,a,o,s=r.isWebGL2;this.setMode=function(e){i=e},this.setIndex=function(e){a=e.type,o=e.bytesPerElement},this.render=function(t,r){e.drawElements(i,r,a,t*o),n.update(r,i,1)},this.renderInstances=function(r,l,u){if(0!==u){var c,d;if(s)c=e,d="drawElementsInstanced";else if(d="drawElementsInstancedANGLE",null===(c=t.get("ANGLE_instanced_arrays")))return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");c[d](i,l,a,r*o,u),n.update(l,i,u)}}}function vi(e){var t={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:t,programs:null,autoReset:!0,reset:function(){t.frame++,t.calls=0,t.triangles=0,t.points=0,t.lines=0},update:function(e,n,r){switch(t.calls++,n){case 4:t.triangles+=r*(e/3);break;case 1:t.lines+=r*(e/2);break;case 3:t.lines+=r*(e-1);break;case 2:t.lines+=r*e;break;case 0:t.points+=r*e;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",n)}}}}function gi(e,t){return e[0]-t[0]}function yi(e,t){return Math.abs(t[1])-Math.abs(e[1])}function _i(e,t,n){for(var r={},i=new Float32Array(8),a=new WeakMap,o=new Mt,s=[],l=0;l<8;l++)s[l]=[l,0];return{update:function(l,u,c,d){var f=l.morphTargetInfluences;if(!0===t.isWebGL2){var h=u.morphAttributes.position||u.morphAttributes.normal||u.morphAttributes.color,p=void 0!==h?h.length:0,m=a.get(u);if(void 0===m||m.count!==p){void 0!==m&&m.texture.dispose();var v=void 0!==u.morphAttributes.position,g=void 0!==u.morphAttributes.normal,y=void 0!==u.morphAttributes.color,_=u.morphAttributes.position||[],x=u.morphAttributes.normal||[],b=u.morphAttributes.color||[],S=0;!0===v&&(S=1),!0===g&&(S=2),!0===y&&(S=3);var M=u.attributes.position.count*S,w=1;M>t.maxTextureSize&&(w=Math.ceil(M/t.maxTextureSize),M=t.maxTextureSize);var E=new Float32Array(M*w*4*p),T=new Et(E,M,w,p);T.type=$,T.needsUpdate=!0;for(var k=4*S,C=0;C<p;C++)for(var L=_[C],A=x[C],P=b[C],R=M*w*4*C,D=0;D<L.count;D++){var N=D*k;!0===v&&(o.fromBufferAttribute(L,D),E[R+N+0]=o.x,E[R+N+1]=o.y,E[R+N+2]=o.z,E[R+N+3]=0),!0===g&&(o.fromBufferAttribute(A,D),E[R+N+4]=o.x,E[R+N+5]=o.y,E[R+N+6]=o.z,E[R+N+7]=0),!0===y&&(o.fromBufferAttribute(P,D),E[R+N+8]=o.x,E[R+N+9]=o.y,E[R+N+10]=o.z,E[R+N+11]=4===P.itemSize?o.w:1)}m={count:p,texture:T,size:new tt(M,w)},a.set(u,m),u.addEventListener("dispose",(function e(){T.dispose(),a.delete(u),u.removeEventListener("dispose",e)}))}for(var I=0,O=0;O<f.length;O++)I+=f[O];var z=u.morphTargetsRelative?1:1-I;d.getUniforms().setValue(e,"morphTargetBaseInfluence",z),d.getUniforms().setValue(e,"morphTargetInfluences",f),d.getUniforms().setValue(e,"morphTargetsTexture",m.texture,n),d.getUniforms().setValue(e,"morphTargetsTextureSize",m.size)}else{var U=void 0===f?0:f.length,F=r[u.id];if(void 0===F||F.length!==U){F=[];for(var B=0;B<U;B++)F[B]=[B,0];r[u.id]=F}for(var V=0;V<U;V++){var H=F[V];H[0]=V,H[1]=f[V]}F.sort(yi);for(var G=0;G<8;G++)G<U&&F[G][1]?(s[G][0]=F[G][0],s[G][1]=F[G][1]):(s[G][0]=Number.MAX_SAFE_INTEGER,s[G][1]=0);s.sort(gi);for(var W=u.morphAttributes.position,j=u.morphAttributes.normal,q=0,X=0;X<8;X++){var Y=s[X],Z=Y[0],K=Y[1];Z!==Number.MAX_SAFE_INTEGER&&K?(W&&u.getAttribute("morphTarget"+X)!==W[Z]&&u.setAttribute("morphTarget"+X,W[Z]),j&&u.getAttribute("morphNormal"+X)!==j[Z]&&u.setAttribute("morphNormal"+X,j[Z]),i[X]=K,q+=K):(W&&!0===u.hasAttribute("morphTarget"+X)&&u.deleteAttribute("morphTarget"+X),j&&!0===u.hasAttribute("morphNormal"+X)&&u.deleteAttribute("morphNormal"+X),i[X]=0)}var Q=u.morphTargetsRelative?1:1-q;d.getUniforms().setValue(e,"morphTargetBaseInfluence",Q),d.getUniforms().setValue(e,"morphTargetInfluences",i)}}}}function xi(e,t,n,r){var i=new WeakMap;function a(e){var t=e.target;t.removeEventListener("dispose",a),n.remove(t.instanceMatrix),null!==t.instanceColor&&n.remove(t.instanceColor)}return{update:function(e){var o=r.render.frame,s=e.geometry,l=t.get(e,s);return i.get(l)!==o&&(t.update(l),i.set(l,o)),e.isInstancedMesh&&(!1===e.hasEventListener("dispose",a)&&e.addEventListener("dispose",a),n.update(e.instanceMatrix,34962),null!==e.instanceColor&&n.update(e.instanceColor,34962)),l},dispose:function(){i=new WeakMap}}}var bi=new St,Si=new Et,Mi=new Tt,wi=new Ar,Ei=[],Ti=[],ki=new Float32Array(16),Ci=new Float32Array(9),Li=new Float32Array(4);function Ai(e,t,n){var r=e[0];if(r<=0||r>0)return e;var i=t*n,a=Ei[i];if(void 0===a&&(a=new Float32Array(i),Ei[i]=a),0!==t){r.toArray(a,0);for(var o=1,s=0;o!==t;++o)s+=n,e[o].toArray(a,s)}return a}function Pi(e,t){if(e.length!==t.length)return!1;for(var n=0,r=e.length;n<r;n++)if(e[n]!==t[n])return!1;return!0}function Ri(e,t){for(var n=0,r=t.length;n<r;n++)e[n]=t[n]}function Di(e,t){var n=Ti[t];void 0===n&&(n=new Int32Array(t),Ti[t]=n);for(var r=0;r!==t;++r)n[r]=e.allocateTextureUnit();return n}function Ni(e,t){var n=this.cache;n[0]!==t&&(e.uniform1f(this.addr,t),n[0]=t)}function Ii(e,t){var n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y||(e.uniform2f(this.addr,t.x,t.y),n[0]=t.x,n[1]=t.y);else{if(Pi(n,t))return;e.uniform2fv(this.addr,t),Ri(n,t)}}function Oi(e,t){var n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y&&n[2]===t.z||(e.uniform3f(this.addr,t.x,t.y,t.z),n[0]=t.x,n[1]=t.y,n[2]=t.z);else if(void 0!==t.r)n[0]===t.r&&n[1]===t.g&&n[2]===t.b||(e.uniform3f(this.addr,t.r,t.g,t.b),n[0]=t.r,n[1]=t.g,n[2]=t.b);else{if(Pi(n,t))return;e.uniform3fv(this.addr,t),Ri(n,t)}}function zi(e,t){var n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y&&n[2]===t.z&&n[3]===t.w||(e.uniform4f(this.addr,t.x,t.y,t.z,t.w),n[0]=t.x,n[1]=t.y,n[2]=t.z,n[3]=t.w);else{if(Pi(n,t))return;e.uniform4fv(this.addr,t),Ri(n,t)}}function Ui(e,t){var n=this.cache,r=t.elements;if(void 0===r){if(Pi(n,t))return;e.uniformMatrix2fv(this.addr,!1,t),Ri(n,t)}else{if(Pi(n,r))return;Li.set(r),e.uniformMatrix2fv(this.addr,!1,Li),Ri(n,r)}}function Fi(e,t){var n=this.cache,r=t.elements;if(void 0===r){if(Pi(n,t))return;e.uniformMatrix3fv(this.addr,!1,t),Ri(n,t)}else{if(Pi(n,r))return;Ci.set(r),e.uniformMatrix3fv(this.addr,!1,Ci),Ri(n,r)}}function Bi(e,t){var n=this.cache,r=t.elements;if(void 0===r){if(Pi(n,t))return;e.uniformMatrix4fv(this.addr,!1,t),Ri(n,t)}else{if(Pi(n,r))return;ki.set(r),e.uniformMatrix4fv(this.addr,!1,ki),Ri(n,r)}}function Vi(e,t){var n=this.cache;n[0]!==t&&(e.uniform1i(this.addr,t),n[0]=t)}function Hi(e,t){var n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y||(e.uniform2i(this.addr,t.x,t.y),n[0]=t.x,n[1]=t.y);else{if(Pi(n,t))return;e.uniform2iv(this.addr,t),Ri(n,t)}}function Gi(e,t){var n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y&&n[2]===t.z||(e.uniform3i(this.addr,t.x,t.y,t.z),n[0]=t.x,n[1]=t.y,n[2]=t.z);else{if(Pi(n,t))return;e.uniform3iv(this.addr,t),Ri(n,t)}}function Wi(e,t){var n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y&&n[2]===t.z&&n[3]===t.w||(e.uniform4i(this.addr,t.x,t.y,t.z,t.w),n[0]=t.x,n[1]=t.y,n[2]=t.z,n[3]=t.w);else{if(Pi(n,t))return;e.uniform4iv(this.addr,t),Ri(n,t)}}function ji(e,t){var n=this.cache;n[0]!==t&&(e.uniform1ui(this.addr,t),n[0]=t)}function qi(e,t){var n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y||(e.uniform2ui(this.addr,t.x,t.y),n[0]=t.x,n[1]=t.y);else{if(Pi(n,t))return;e.uniform2uiv(this.addr,t),Ri(n,t)}}function Xi(e,t){var n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y&&n[2]===t.z||(e.uniform3ui(this.addr,t.x,t.y,t.z),n[0]=t.x,n[1]=t.y,n[2]=t.z);else{if(Pi(n,t))return;e.uniform3uiv(this.addr,t),Ri(n,t)}}function Yi(e,t){var n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y&&n[2]===t.z&&n[3]===t.w||(e.uniform4ui(this.addr,t.x,t.y,t.z,t.w),n[0]=t.x,n[1]=t.y,n[2]=t.z,n[3]=t.w);else{if(Pi(n,t))return;e.uniform4uiv(this.addr,t),Ri(n,t)}}function Zi(e,t,n){var r=this.cache,i=n.allocateTextureUnit();r[0]!==i&&(e.uniform1i(this.addr,i),r[0]=i),n.setTexture2D(t||bi,i)}function Ki(e,t,n){var r=this.cache,i=n.allocateTextureUnit();r[0]!==i&&(e.uniform1i(this.addr,i),r[0]=i),n.setTexture3D(t||Mi,i)}function Qi(e,t,n){var r=this.cache,i=n.allocateTextureUnit();r[0]!==i&&(e.uniform1i(this.addr,i),r[0]=i),n.setTextureCube(t||wi,i)}function $i(e,t,n){var r=this.cache,i=n.allocateTextureUnit();r[0]!==i&&(e.uniform1i(this.addr,i),r[0]=i),n.setTexture2DArray(t||Si,i)}function Ji(e,t){e.uniform1fv(this.addr,t)}function ea(e,t){var n=Ai(t,this.size,2);e.uniform2fv(this.addr,n)}function ta(e,t){var n=Ai(t,this.size,3);e.uniform3fv(this.addr,n)}function na(e,t){var n=Ai(t,this.size,4);e.uniform4fv(this.addr,n)}function ra(e,t){var n=Ai(t,this.size,4);e.uniformMatrix2fv(this.addr,!1,n)}function ia(e,t){var n=Ai(t,this.size,9);e.uniformMatrix3fv(this.addr,!1,n)}function aa(e,t){var n=Ai(t,this.size,16);e.uniformMatrix4fv(this.addr,!1,n)}function oa(e,t){e.uniform1iv(this.addr,t)}function sa(e,t){e.uniform2iv(this.addr,t)}function la(e,t){e.uniform3iv(this.addr,t)}function ua(e,t){e.uniform4iv(this.addr,t)}function ca(e,t){e.uniform1uiv(this.addr,t)}function da(e,t){e.uniform2uiv(this.addr,t)}function fa(e,t){e.uniform3uiv(this.addr,t)}function ha(e,t){e.uniform4uiv(this.addr,t)}function pa(e,t,n){var r=this.cache,i=t.length,a=Di(n,i);Pi(r,a)||(e.uniform1iv(this.addr,a),Ri(r,a));for(var o=0;o!==i;++o)n.setTexture2D(t[o]||bi,a[o])}function ma(e,t,n){var r=this.cache,i=t.length,a=Di(n,i);Pi(r,a)||(e.uniform1iv(this.addr,a),Ri(r,a));for(var o=0;o!==i;++o)n.setTexture3D(t[o]||Mi,a[o])}function va(e,t,n){var r=this.cache,i=t.length,a=Di(n,i);Pi(r,a)||(e.uniform1iv(this.addr,a),Ri(r,a));for(var o=0;o!==i;++o)n.setTextureCube(t[o]||wi,a[o])}function ga(e,t,n){var r=this.cache,i=t.length,a=Di(n,i);Pi(r,a)||(e.uniform1iv(this.addr,a),Ri(r,a));for(var o=0;o!==i;++o)n.setTexture2DArray(t[o]||Si,a[o])}var ya=T((function e(t,n,r){w(this,e),this.id=t,this.addr=r,this.cache=[],this.setValue=function(e){switch(e){case 5126:return Ni;case 35664:return Ii;case 35665:return Oi;case 35666:return zi;case 35674:return Ui;case 35675:return Fi;case 35676:return Bi;case 5124:case 35670:return Vi;case 35667:case 35671:return Hi;case 35668:case 35672:return Gi;case 35669:case 35673:return Wi;case 5125:return ji;case 36294:return qi;case 36295:return Xi;case 36296:return Yi;case 35678:case 36198:case 36298:case 36306:case 35682:return Zi;case 35679:case 36299:case 36307:return Ki;case 35680:case 36300:case 36308:case 36293:return Qi;case 36289:case 36303:case 36311:case 36292:return $i}}(n.type)})),_a=T((function e(t,n,r){w(this,e),this.id=t,this.addr=r,this.cache=[],this.size=n.size,this.setValue=function(e){switch(e){case 5126:return Ji;case 35664:return ea;case 35665:return ta;case 35666:return na;case 35674:return ra;case 35675:return ia;case 35676:return aa;case 5124:case 35670:return oa;case 35667:case 35671:return sa;case 35668:case 35672:return la;case 35669:case 35673:return ua;case 5125:return ca;case 36294:return da;case 36295:return fa;case 36296:return ha;case 35678:case 36198:case 36298:case 36306:case 35682:return pa;case 35679:case 36299:case 36307:return ma;case 35680:case 36300:case 36308:case 36293:return va;case 36289:case 36303:case 36311:case 36292:return ga}}(n.type)})),xa=function(){function e(t){w(this,e),this.id=t,this.seq=[],this.map={}}return T(e,[{key:"setValue",value:function(e,t,n){for(var r=this.seq,i=0,a=r.length;i!==a;++i){var o=r[i];o.setValue(e,t[o.id],n)}}}]),e}(),ba=/(\w+)(\])?(\[|\.)?/g;function Sa(e,t){e.seq.push(t),e.map[t.id]=t}function Ma(e,t,n){var r=e.name,i=r.length;for(ba.lastIndex=0;;){var a=ba.exec(r),o=ba.lastIndex,s=a[1],l="]"===a[2],u=a[3];if(l&&(s|=0),void 0===u||"["===u&&o+2===i){Sa(n,void 0===u?new ya(s,e,t):new _a(s,e,t));break}var c=n.map[s];void 0===c&&Sa(n,c=new xa(s)),n=c}}var wa=function(){function e(t,n){w(this,e),this.seq=[],this.map={};for(var r=t.getProgramParameter(n,35718),i=0;i<r;++i){var a=t.getActiveUniform(n,i);Ma(a,t.getUniformLocation(n,a.name),this)}}return T(e,[{key:"setValue",value:function(e,t,n,r){var i=this.map[t];void 0!==i&&i.setValue(e,n,r)}},{key:"setOptional",value:function(e,t,n){var r=t[n];void 0!==r&&this.setValue(e,n,r)}}],[{key:"upload",value:function(e,t,n,r){for(var i=0,a=t.length;i!==a;++i){var o=t[i],s=n[o.id];!1!==s.needsUpdate&&o.setValue(e,s.value,r)}}},{key:"seqWithValue",value:function(e,t){for(var n=[],r=0,i=e.length;r!==i;++r){var a=e[r];a.id in t&&n.push(a)}return n}}]),e}();function Ea(e,t,n){var r=e.createShader(t);return e.shaderSource(r,n),e.compileShader(r),r}var Ta=0;function ka(e,t,n){var r=e.getShaderParameter(t,35713),i=e.getShaderInfoLog(t).trim();if(r&&""===i)return"";var a=/ERROR: 0:(\d+)/.exec(i);if(a){var o=parseInt(a[1]);return n.toUpperCase()+"\n\n"+i+"\n\n"+function(e,t){for(var n=e.split("\n"),r=[],i=Math.max(t-6,0),a=Math.min(t+6,n.length),o=i;o<a;o++){var s=o+1;r.push("".concat(s===t?">":" "," ").concat(s,": ").concat(n[o]))}return r.join("\n")}(e.getShaderSource(t),o)}return i}function Ca(e,t){var n=function(e){switch(e){case Ie:return["Linear","( value )"];case Oe:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",e),["Linear","( value )"]}}(t);return"vec4 "+e+"( vec4 value ) { return LinearTo"+n[0]+n[1]+"; }"}function La(e,t){var n;switch(t){case 1:n="Linear";break;case 2:n="Reinhard";break;case 3:n="OptimizedCineon";break;case 4:n="ACESFilmic";break;case 5:n="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",t),n="Linear"}return"vec3 "+e+"( vec3 color ) { return "+n+"ToneMapping( color ); }"}function Aa(e){return""!==e}function Pa(e,t){var n=t.numSpotLightShadows+t.numSpotLightMaps-t.numSpotLightShadowsWithMaps;return e.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,t.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,n).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,t.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,t.numPointLightShadows)}function Ra(e,t){return e.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}var Da=/^[ \t]*#include +<([\w\d./]+)>/gm;function Na(e){return e.replace(Da,Ia)}function Ia(e,t){var n=Hr[t];if(void 0===n)throw new Error("Can not resolve #include <"+t+">");return Na(n)}var Oa=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function za(e){return e.replace(Oa,Ua)}function Ua(e,t,n,r){for(var i="",a=parseInt(t);a<parseInt(n);a++)i+=r.replace(/\[\s*i\s*\]/g,"[ "+a+" ]").replace(/UNROLLED_LOOP_INDEX/g,a);return i}function Fa(e){var t="precision "+e.precision+" float;\nprecision "+e.precision+" int;";return"highp"===e.precision?t+="\n#define HIGH_PRECISION":"mediump"===e.precision?t+="\n#define MEDIUM_PRECISION":"lowp"===e.precision&&(t+="\n#define LOW_PRECISION"),t}function Ba(e,t,n,r){var i,a,o=e.getContext(),s=n.defines,l=n.vertexShader,u=n.fragmentShader,c=function(e){var t="SHADOWMAP_TYPE_BASIC";return 1===e.shadowMapType?t="SHADOWMAP_TYPE_PCF":2===e.shadowMapType?t="SHADOWMAP_TYPE_PCF_SOFT":3===e.shadowMapType&&(t="SHADOWMAP_TYPE_VSM"),t}(n),d=function(e){var t="ENVMAP_TYPE_CUBE";if(e.envMap)switch(e.envMapMode){case O:case z:t="ENVMAP_TYPE_CUBE";break;case B:t="ENVMAP_TYPE_CUBE_UV"}return t}(n),f=function(e){var t="ENVMAP_MODE_REFLECTION";e.envMap&&e.envMapMode===z&&(t="ENVMAP_MODE_REFRACTION");return t}(n),h=function(e){var t="ENVMAP_BLENDING_NONE";if(e.envMap)switch(e.combine){case 0:t="ENVMAP_BLENDING_MULTIPLY";break;case 1:t="ENVMAP_BLENDING_MIX";break;case 2:t="ENVMAP_BLENDING_ADD"}return t}(n),p=function(e){var t=e.envMapCubeUVHeight;if(null===t)return null;var n=Math.log2(t)-2,r=1/t;return{texelWidth:1/(3*Math.max(Math.pow(2,n),112)),texelHeight:r,maxMip:n}}(n),m=n.isWebGL2?"":function(e){return[e.extensionDerivatives||e.envMapCubeUVHeight||e.bumpMap||e.tangentSpaceNormalMap||e.clearcoatNormalMap||e.flatShading||"physical"===e.shaderID?"#extension GL_OES_standard_derivatives : enable":"",(e.extensionFragDepth||e.logarithmicDepthBuffer)&&e.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",e.extensionDrawBuffers&&e.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(e.extensionShaderTextureLOD||e.envMap||e.transmission)&&e.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(Aa).join("\n")}(n),v=function(e){var t=[];for(var n in e){var r=e[n];!1!==r&&t.push("#define "+n+" "+r)}return t.join("\n")}(s),g=o.createProgram(),y=n.glslVersion?"#version "+n.glslVersion+"\n":"";n.isRawShaderMaterial?((i=[v].filter(Aa).join("\n")).length>0&&(i+="\n"),(a=[m,v].filter(Aa).join("\n")).length>0&&(a+="\n")):(i=[Fa(n),"#define SHADER_NAME "+n.shaderName,v,n.instancing?"#define USE_INSTANCING":"",n.instancingColor?"#define USE_INSTANCING_COLOR":"",n.supportsVertexTextures?"#define VERTEX_TEXTURES":"",n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+f:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",n.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",n.displacementMap&&n.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",n.specularColorMap?"#define USE_SPECULARCOLORMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.transmission?"#define USE_TRANSMISSION":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.thicknessMap?"#define USE_THICKNESSMAP":"",n.sheenColorMap?"#define USE_SHEENCOLORMAP":"",n.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.flatShading?"#define FLAT_SHADED":"",n.skinning?"#define USE_SKINNING":"",n.morphTargets?"#define USE_MORPHTARGETS":"",n.morphNormals&&!1===n.flatShading?"#define USE_MORPHNORMALS":"",n.morphColors&&n.isWebGL2?"#define USE_MORPHCOLORS":"",n.morphTargetsCount>0&&n.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",n.morphTargetsCount>0&&n.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+n.morphTextureStride:"",n.morphTargetsCount>0&&n.isWebGL2?"#define MORPHTARGETS_COUNT "+n.morphTargetsCount:"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+c:"",n.sizeAttenuation?"#define USE_SIZEATTENUATION":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","\tattribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","\tattribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","\tattribute vec4 color;","#elif defined( USE_COLOR )","\tattribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(Aa).join("\n"),a=[m,Fa(n),"#define SHADER_NAME "+n.shaderName,v,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.matcap?"#define USE_MATCAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+d:"",n.envMap?"#define "+f:"",n.envMap?"#define "+h:"",p?"#define CUBEUV_TEXEL_WIDTH "+p.texelWidth:"",p?"#define CUBEUV_TEXEL_HEIGHT "+p.texelHeight:"",p?"#define CUBEUV_MAX_MIP "+p.maxMip+".0":"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoat?"#define USE_CLEARCOAT":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.iridescence?"#define USE_IRIDESCENCE":"",n.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",n.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",n.specularColorMap?"#define USE_SPECULARCOLORMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.alphaTest?"#define USE_ALPHATEST":"",n.sheen?"#define USE_SHEEN":"",n.sheenColorMap?"#define USE_SHEENCOLORMAP":"",n.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",n.transmission?"#define USE_TRANSMISSION":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.thicknessMap?"#define USE_THICKNESSMAP":"",n.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors||n.instancingColor?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.gradientMap?"#define USE_GRADIENTMAP":"",n.flatShading?"#define FLAT_SHADED":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+c:"",n.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",n.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",0!==n.toneMapping?"#define TONE_MAPPING":"",0!==n.toneMapping?Hr.tonemapping_pars_fragment:"",0!==n.toneMapping?La("toneMapping",n.toneMapping):"",n.dithering?"#define DITHERING":"",n.opaque?"#define OPAQUE":"",Hr.encodings_pars_fragment,Ca("linearToOutputTexel",n.outputEncoding),n.useDepthPacking?"#define DEPTH_PACKING "+n.depthPacking:"","\n"].filter(Aa).join("\n")),l=Ra(l=Pa(l=Na(l),n),n),u=Ra(u=Pa(u=Na(u),n),n),l=za(l),u=za(u),n.isWebGL2&&!0!==n.isRawShaderMaterial&&(y="#version 300 es\n",i=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+i,a=["#define varying in",n.glslVersion===Ve?"":"layout(location = 0) out highp vec4 pc_fragColor;",n.glslVersion===Ve?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+a);var _,x,b=y+a+u,S=Ea(o,35633,y+i+l),M=Ea(o,35632,b);if(o.attachShader(g,S),o.attachShader(g,M),void 0!==n.index0AttributeName?o.bindAttribLocation(g,0,n.index0AttributeName):!0===n.morphTargets&&o.bindAttribLocation(g,0,"position"),o.linkProgram(g),e.debug.checkShaderErrors){var w=o.getProgramInfoLog(g).trim(),E=o.getShaderInfoLog(S).trim(),T=o.getShaderInfoLog(M).trim(),k=!0,C=!0;if(!1===o.getProgramParameter(g,35714)){k=!1;var L=ka(o,S,"vertex"),A=ka(o,M,"fragment");console.error("THREE.WebGLProgram: Shader Error "+o.getError()+" - VALIDATE_STATUS "+o.getProgramParameter(g,35715)+"\n\nProgram Info Log: "+w+"\n"+L+"\n"+A)}else""!==w?console.warn("THREE.WebGLProgram: Program Info Log:",w):""!==E&&""!==T||(C=!1);C&&(this.diagnostics={runnable:k,programLog:w,vertexShader:{log:E,prefix:i},fragmentShader:{log:T,prefix:a}})}return o.deleteShader(S),o.deleteShader(M),this.getUniforms=function(){return void 0===_&&(_=new wa(o,g)),_},this.getAttributes=function(){return void 0===x&&(x=function(e,t){for(var n={},r=e.getProgramParameter(t,35721),i=0;i<r;i++){var a=e.getActiveAttrib(t,i),o=a.name,s=1;35674===a.type&&(s=2),35675===a.type&&(s=3),35676===a.type&&(s=4),n[o]={type:a.type,location:e.getAttribLocation(t,o),locationSize:s}}return n}(o,g)),x},this.destroy=function(){r.releaseStatesOfProgram(this),o.deleteProgram(g),this.program=void 0},this.name=n.shaderName,this.id=Ta++,this.cacheKey=t,this.usedTimes=1,this.program=g,this.vertexShader=S,this.fragmentShader=M,this}var Va=0,Ha=function(){function e(){w(this,e),this.shaderCache=new Map,this.materialCache=new Map}return T(e,[{key:"update",value:function(e){var t=e.vertexShader,n=e.fragmentShader,r=this._getShaderStage(t),i=this._getShaderStage(n),a=this._getShaderCacheForMaterial(e);return!1===a.has(r)&&(a.add(r),r.usedTimes++),!1===a.has(i)&&(a.add(i),i.usedTimes++),this}},{key:"remove",value:function(e){var t,n=f(this.materialCache.get(e));try{for(n.s();!(t=n.n()).done;){var r=t.value;r.usedTimes--,0===r.usedTimes&&this.shaderCache.delete(r.code)}}catch(i){n.e(i)}finally{n.f()}return this.materialCache.delete(e),this}},{key:"getVertexShaderID",value:function(e){return this._getShaderStage(e.vertexShader).id}},{key:"getFragmentShaderID",value:function(e){return this._getShaderStage(e.fragmentShader).id}},{key:"dispose",value:function(){this.shaderCache.clear(),this.materialCache.clear()}},{key:"_getShaderCacheForMaterial",value:function(e){var t=this.materialCache,n=t.get(e);return void 0===n&&(n=new Set,t.set(e,n)),n}},{key:"_getShaderStage",value:function(e){var t=this.shaderCache,n=t.get(e);return void 0===n&&(n=new Ga(e),t.set(e,n)),n}}]),e}(),Ga=T((function e(t){w(this,e),this.id=Va++,this.code=t,this.usedTimes=0}));function Wa(e,t,n,r,i,a,o){var s=new vn,l=new Ha,u=[],c=i.isWebGL2,d=i.logarithmicDepthBuffer,f=i.vertexTextures,h=i.precision,p={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};return{getParameters:function(a,s,u,m,v){var g=m.fog,y=v.geometry,_=a.isMeshStandardMaterial?m.environment:null,x=(a.isMeshStandardMaterial?n:t).get(a.envMap||_),b=x&&x.mapping===B?x.image.height:null,S=p[a.type];null!==a.precision&&(h=i.getMaxPrecision(a.precision))!==a.precision&&console.warn("THREE.WebGLProgram.getParameters:",a.precision,"not supported, using",h,"instead.");var M,w,E,T,k=y.morphAttributes.position||y.morphAttributes.normal||y.morphAttributes.color,C=void 0!==k?k.length:0,L=0;if(void 0!==y.morphAttributes.position&&(L=1),void 0!==y.morphAttributes.normal&&(L=2),void 0!==y.morphAttributes.color&&(L=3),S){var A=Wr[S];M=A.vertexShader,w=A.fragmentShader}else M=a.vertexShader,w=a.fragmentShader,l.update(a),E=l.getVertexShaderID(a),T=l.getFragmentShaderID(a);var P=e.getRenderTarget(),R=a.alphaTest>0,D=a.clearcoat>0,N=a.iridescence>0;return{isWebGL2:c,shaderID:S,shaderName:a.type,vertexShader:M,fragmentShader:w,defines:a.defines,customVertexShaderID:E,customFragmentShaderID:T,isRawShaderMaterial:!0===a.isRawShaderMaterial,glslVersion:a.glslVersion,precision:h,instancing:!0===v.isInstancedMesh,instancingColor:!0===v.isInstancedMesh&&null!==v.instanceColor,supportsVertexTextures:f,outputEncoding:null===P?e.outputEncoding:!0===P.isXRRenderTarget?P.texture.encoding:Ie,map:!!a.map,matcap:!!a.matcap,envMap:!!x,envMapMode:x&&x.mapping,envMapCubeUVHeight:b,lightMap:!!a.lightMap,aoMap:!!a.aoMap,emissiveMap:!!a.emissiveMap,bumpMap:!!a.bumpMap,normalMap:!!a.normalMap,objectSpaceNormalMap:1===a.normalMapType,tangentSpaceNormalMap:0===a.normalMapType,decodeVideoTexture:!!a.map&&!0===a.map.isVideoTexture&&a.map.encoding===Oe,clearcoat:D,clearcoatMap:D&&!!a.clearcoatMap,clearcoatRoughnessMap:D&&!!a.clearcoatRoughnessMap,clearcoatNormalMap:D&&!!a.clearcoatNormalMap,iridescence:N,iridescenceMap:N&&!!a.iridescenceMap,iridescenceThicknessMap:N&&!!a.iridescenceThicknessMap,displacementMap:!!a.displacementMap,roughnessMap:!!a.roughnessMap,metalnessMap:!!a.metalnessMap,specularMap:!!a.specularMap,specularIntensityMap:!!a.specularIntensityMap,specularColorMap:!!a.specularColorMap,opaque:!1===a.transparent&&1===a.blending,alphaMap:!!a.alphaMap,alphaTest:R,gradientMap:!!a.gradientMap,sheen:a.sheen>0,sheenColorMap:!!a.sheenColorMap,sheenRoughnessMap:!!a.sheenRoughnessMap,transmission:a.transmission>0,transmissionMap:!!a.transmissionMap,thicknessMap:!!a.thicknessMap,combine:a.combine,vertexTangents:!!a.normalMap&&!!y.attributes.tangent,vertexColors:a.vertexColors,vertexAlphas:!0===a.vertexColors&&!!y.attributes.color&&4===y.attributes.color.itemSize,vertexUvs:!!a.map||!!a.bumpMap||!!a.normalMap||!!a.specularMap||!!a.alphaMap||!!a.emissiveMap||!!a.roughnessMap||!!a.metalnessMap||!!a.clearcoatMap||!!a.clearcoatRoughnessMap||!!a.clearcoatNormalMap||!!a.iridescenceMap||!!a.iridescenceThicknessMap||!!a.displacementMap||!!a.transmissionMap||!!a.thicknessMap||!!a.specularIntensityMap||!!a.specularColorMap||!!a.sheenColorMap||!!a.sheenRoughnessMap,uvsVertexOnly:!(a.map||a.bumpMap||a.normalMap||a.specularMap||a.alphaMap||a.emissiveMap||a.roughnessMap||a.metalnessMap||a.clearcoatNormalMap||a.iridescenceMap||a.iridescenceThicknessMap||a.transmission>0||a.transmissionMap||a.thicknessMap||a.specularIntensityMap||a.specularColorMap||a.sheen>0||a.sheenColorMap||a.sheenRoughnessMap)&&!!a.displacementMap,fog:!!g,useFog:!0===a.fog,fogExp2:g&&g.isFogExp2,flatShading:!!a.flatShading,sizeAttenuation:a.sizeAttenuation,logarithmicDepthBuffer:d,skinning:!0===v.isSkinnedMesh,morphTargets:void 0!==y.morphAttributes.position,morphNormals:void 0!==y.morphAttributes.normal,morphColors:void 0!==y.morphAttributes.color,morphTargetsCount:C,morphTextureStride:L,numDirLights:s.directional.length,numPointLights:s.point.length,numSpotLights:s.spot.length,numSpotLightMaps:s.spotLightMap.length,numRectAreaLights:s.rectArea.length,numHemiLights:s.hemi.length,numDirLightShadows:s.directionalShadowMap.length,numPointLightShadows:s.pointShadowMap.length,numSpotLightShadows:s.spotShadowMap.length,numSpotLightShadowsWithMaps:s.numSpotLightShadowsWithMaps,numClippingPlanes:o.numPlanes,numClipIntersection:o.numIntersection,dithering:a.dithering,shadowMapEnabled:e.shadowMap.enabled&&u.length>0,shadowMapType:e.shadowMap.type,toneMapping:a.toneMapped?e.toneMapping:0,physicallyCorrectLights:e.physicallyCorrectLights,premultipliedAlpha:a.premultipliedAlpha,doubleSided:2===a.side,flipSided:1===a.side,useDepthPacking:!!a.depthPacking,depthPacking:a.depthPacking||0,index0AttributeName:a.index0AttributeName,extensionDerivatives:a.extensions&&a.extensions.derivatives,extensionFragDepth:a.extensions&&a.extensions.fragDepth,extensionDrawBuffers:a.extensions&&a.extensions.drawBuffers,extensionShaderTextureLOD:a.extensions&&a.extensions.shaderTextureLOD,rendererExtensionFragDepth:c||r.has("EXT_frag_depth"),rendererExtensionDrawBuffers:c||r.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:c||r.has("EXT_shader_texture_lod"),customProgramCacheKey:a.customProgramCacheKey()}},getProgramCacheKey:function(t){var n=[];if(t.shaderID?n.push(t.shaderID):(n.push(t.customVertexShaderID),n.push(t.customFragmentShaderID)),void 0!==t.defines)for(var r in t.defines)n.push(r),n.push(t.defines[r]);return!1===t.isRawShaderMaterial&&(!function(e,t){e.push(t.precision),e.push(t.outputEncoding),e.push(t.envMapMode),e.push(t.envMapCubeUVHeight),e.push(t.combine),e.push(t.vertexUvs),e.push(t.fogExp2),e.push(t.sizeAttenuation),e.push(t.morphTargetsCount),e.push(t.morphAttributeCount),e.push(t.numDirLights),e.push(t.numPointLights),e.push(t.numSpotLights),e.push(t.numSpotLightMaps),e.push(t.numHemiLights),e.push(t.numRectAreaLights),e.push(t.numDirLightShadows),e.push(t.numPointLightShadows),e.push(t.numSpotLightShadows),e.push(t.numSpotLightShadowsWithMaps),e.push(t.shadowMapType),e.push(t.toneMapping),e.push(t.numClippingPlanes),e.push(t.numClipIntersection),e.push(t.depthPacking)}(n,t),function(e,t){s.disableAll(),t.isWebGL2&&s.enable(0);t.supportsVertexTextures&&s.enable(1);t.instancing&&s.enable(2);t.instancingColor&&s.enable(3);t.map&&s.enable(4);t.matcap&&s.enable(5);t.envMap&&s.enable(6);t.lightMap&&s.enable(7);t.aoMap&&s.enable(8);t.emissiveMap&&s.enable(9);t.bumpMap&&s.enable(10);t.normalMap&&s.enable(11);t.objectSpaceNormalMap&&s.enable(12);t.tangentSpaceNormalMap&&s.enable(13);t.clearcoat&&s.enable(14);t.clearcoatMap&&s.enable(15);t.clearcoatRoughnessMap&&s.enable(16);t.clearcoatNormalMap&&s.enable(17);t.iridescence&&s.enable(18);t.iridescenceMap&&s.enable(19);t.iridescenceThicknessMap&&s.enable(20);t.displacementMap&&s.enable(21);t.specularMap&&s.enable(22);t.roughnessMap&&s.enable(23);t.metalnessMap&&s.enable(24);t.gradientMap&&s.enable(25);t.alphaMap&&s.enable(26);t.alphaTest&&s.enable(27);t.vertexColors&&s.enable(28);t.vertexAlphas&&s.enable(29);t.vertexUvs&&s.enable(30);t.vertexTangents&&s.enable(31);t.uvsVertexOnly&&s.enable(32);e.push(s.mask),s.disableAll(),t.fog&&s.enable(0);t.useFog&&s.enable(1);t.flatShading&&s.enable(2);t.logarithmicDepthBuffer&&s.enable(3);t.skinning&&s.enable(4);t.morphTargets&&s.enable(5);t.morphNormals&&s.enable(6);t.morphColors&&s.enable(7);t.premultipliedAlpha&&s.enable(8);t.shadowMapEnabled&&s.enable(9);t.physicallyCorrectLights&&s.enable(10);t.doubleSided&&s.enable(11);t.flipSided&&s.enable(12);t.useDepthPacking&&s.enable(13);t.dithering&&s.enable(14);t.specularIntensityMap&&s.enable(15);t.specularColorMap&&s.enable(16);t.transmission&&s.enable(17);t.transmissionMap&&s.enable(18);t.thicknessMap&&s.enable(19);t.sheen&&s.enable(20);t.sheenColorMap&&s.enable(21);t.sheenRoughnessMap&&s.enable(22);t.decodeVideoTexture&&s.enable(23);t.opaque&&s.enable(24);e.push(s.mask)}(n,t),n.push(e.outputEncoding)),n.push(t.customProgramCacheKey),n.join()},getUniforms:function(e){var t,n=p[e.type];if(n){var r=Wr[n];t=wr.clone(r.uniforms)}else t=e.uniforms;return t},acquireProgram:function(t,n){for(var r,i=0,o=u.length;i<o;i++){var s=u[i];if(s.cacheKey===n){++(r=s).usedTimes;break}}return void 0===r&&(r=new Ba(e,n,t,a),u.push(r)),r},releaseProgram:function(e){if(0===--e.usedTimes){var t=u.indexOf(e);u[t]=u[u.length-1],u.pop(),e.destroy()}},releaseShaderCache:function(e){l.remove(e)},programs:u,dispose:function(){l.dispose()}}}function ja(){var e=new WeakMap;return{get:function(t){var n=e.get(t);return void 0===n&&(n={},e.set(t,n)),n},remove:function(t){e.delete(t)},update:function(t,n,r){e.get(t)[n]=r},dispose:function(){e=new WeakMap}}}function qa(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.material.id!==t.material.id?e.material.id-t.material.id:e.z!==t.z?e.z-t.z:e.id-t.id}function Xa(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.z!==t.z?t.z-e.z:e.id-t.id}function Ya(){var e=[],t=0,n=[],r=[],i=[];function a(n,r,i,a,o,s){var l=e[t];return void 0===l?(l={id:n.id,object:n,geometry:r,material:i,groupOrder:a,renderOrder:n.renderOrder,z:o,group:s},e[t]=l):(l.id=n.id,l.object=n,l.geometry=r,l.material=i,l.groupOrder=a,l.renderOrder=n.renderOrder,l.z=o,l.group=s),t++,l}return{opaque:n,transmissive:r,transparent:i,init:function(){t=0,n.length=0,r.length=0,i.length=0},push:function(e,t,o,s,l,u){var c=a(e,t,o,s,l,u);o.transmission>0?r.push(c):!0===o.transparent?i.push(c):n.push(c)},unshift:function(e,t,o,s,l,u){var c=a(e,t,o,s,l,u);o.transmission>0?r.unshift(c):!0===o.transparent?i.unshift(c):n.unshift(c)},finish:function(){for(var n=t,r=e.length;n<r;n++){var i=e[n];if(null===i.id)break;i.id=null,i.object=null,i.geometry=null,i.material=null,i.group=null}},sort:function(e,t){n.length>1&&n.sort(e||qa),r.length>1&&r.sort(t||Xa),i.length>1&&i.sort(t||Xa)}}}function Za(){var e=new WeakMap;return{get:function(t,n){var r,i=e.get(t);return void 0===i?(r=new Ya,e.set(t,[r])):n>=i.length?(r=new Ya,i.push(r)):r=i[n],r},dispose:function(){e=new WeakMap}}}function Ka(){var e={};return{get:function(t){if(void 0!==e[t.id])return e[t.id];var n;switch(t.type){case"DirectionalLight":n={direction:new Ct,color:new gt};break;case"SpotLight":n={position:new Ct,direction:new Ct,color:new gt,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":n={position:new Ct,color:new gt,distance:0,decay:0};break;case"HemisphereLight":n={direction:new Ct,skyColor:new gt,groundColor:new gt};break;case"RectAreaLight":n={color:new gt,position:new Ct,halfWidth:new Ct,halfHeight:new Ct}}return e[t.id]=n,n}}}var Qa=0;function $a(e,t){return(t.castShadow?2:0)-(e.castShadow?2:0)+(t.map?1:0)-(e.map?1:0)}function Ja(e,t){for(var n=new Ka,r=function(){var e={};return{get:function(t){if(void 0!==e[t.id])return e[t.id];var n;switch(t.type){case"DirectionalLight":case"SpotLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new tt};break;case"PointLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new tt,shadowCameraNear:1,shadowCameraFar:1e3}}return e[t.id]=n,n}}}(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0},a=0;a<9;a++)i.probe.push(new Ct);var o=new Ct,s=new an,l=new an;return{setup:function(a,o){for(var s=0,l=0,u=0,c=0;c<9;c++)i.probe[c].set(0,0,0);var d=0,f=0,h=0,p=0,m=0,v=0,g=0,y=0,_=0,x=0;a.sort($a);for(var b=!0!==o?Math.PI:1,S=0,M=a.length;S<M;S++){var w=a[S],E=w.color,T=w.intensity,k=w.distance,C=w.shadow&&w.shadow.map?w.shadow.map.texture:null;if(w.isAmbientLight)s+=E.r*T*b,l+=E.g*T*b,u+=E.b*T*b;else if(w.isLightProbe)for(var L=0;L<9;L++)i.probe[L].addScaledVector(w.sh.coefficients[L],T);else if(w.isDirectionalLight){var A=n.get(w);if(A.color.copy(w.color).multiplyScalar(w.intensity*b),w.castShadow){var P=w.shadow,R=r.get(w);R.shadowBias=P.bias,R.shadowNormalBias=P.normalBias,R.shadowRadius=P.radius,R.shadowMapSize=P.mapSize,i.directionalShadow[d]=R,i.directionalShadowMap[d]=C,i.directionalShadowMatrix[d]=w.shadow.matrix,v++}i.directional[d]=A,d++}else if(w.isSpotLight){var D=n.get(w);D.position.setFromMatrixPosition(w.matrixWorld),D.color.copy(E).multiplyScalar(T*b),D.distance=k,D.coneCos=Math.cos(w.angle),D.penumbraCos=Math.cos(w.angle*(1-w.penumbra)),D.decay=w.decay,i.spot[h]=D;var N=w.shadow;if(w.map&&(i.spotLightMap[_]=w.map,_++,N.updateMatrices(w),w.castShadow&&x++),i.spotLightMatrix[h]=N.matrix,w.castShadow){var I=r.get(w);I.shadowBias=N.bias,I.shadowNormalBias=N.normalBias,I.shadowRadius=N.radius,I.shadowMapSize=N.mapSize,i.spotShadow[h]=I,i.spotShadowMap[h]=C,y++}h++}else if(w.isRectAreaLight){var O=n.get(w);O.color.copy(E).multiplyScalar(T),O.halfWidth.set(.5*w.width,0,0),O.halfHeight.set(0,.5*w.height,0),i.rectArea[p]=O,p++}else if(w.isPointLight){var z=n.get(w);if(z.color.copy(w.color).multiplyScalar(w.intensity*b),z.distance=w.distance,z.decay=w.decay,w.castShadow){var U=w.shadow,F=r.get(w);F.shadowBias=U.bias,F.shadowNormalBias=U.normalBias,F.shadowRadius=U.radius,F.shadowMapSize=U.mapSize,F.shadowCameraNear=U.camera.near,F.shadowCameraFar=U.camera.far,i.pointShadow[f]=F,i.pointShadowMap[f]=C,i.pointShadowMatrix[f]=w.shadow.matrix,g++}i.point[f]=z,f++}else if(w.isHemisphereLight){var B=n.get(w);B.skyColor.copy(w.color).multiplyScalar(T*b),B.groundColor.copy(w.groundColor).multiplyScalar(T*b),i.hemi[m]=B,m++}}p>0&&(t.isWebGL2||!0===e.has("OES_texture_float_linear")?(i.rectAreaLTC1=Gr.LTC_FLOAT_1,i.rectAreaLTC2=Gr.LTC_FLOAT_2):!0===e.has("OES_texture_half_float_linear")?(i.rectAreaLTC1=Gr.LTC_HALF_1,i.rectAreaLTC2=Gr.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),i.ambient[0]=s,i.ambient[1]=l,i.ambient[2]=u;var V=i.hash;V.directionalLength===d&&V.pointLength===f&&V.spotLength===h&&V.rectAreaLength===p&&V.hemiLength===m&&V.numDirectionalShadows===v&&V.numPointShadows===g&&V.numSpotShadows===y&&V.numSpotMaps===_||(i.directional.length=d,i.spot.length=h,i.rectArea.length=p,i.point.length=f,i.hemi.length=m,i.directionalShadow.length=v,i.directionalShadowMap.length=v,i.pointShadow.length=g,i.pointShadowMap.length=g,i.spotShadow.length=y,i.spotShadowMap.length=y,i.directionalShadowMatrix.length=v,i.pointShadowMatrix.length=g,i.spotLightMatrix.length=y+_-x,i.spotLightMap.length=_,i.numSpotLightShadowsWithMaps=x,V.directionalLength=d,V.pointLength=f,V.spotLength=h,V.rectAreaLength=p,V.hemiLength=m,V.numDirectionalShadows=v,V.numPointShadows=g,V.numSpotShadows=y,V.numSpotMaps=_,i.version=Qa++)},setupView:function(e,t){for(var n=0,r=0,a=0,u=0,c=0,d=t.matrixWorldInverse,f=0,h=e.length;f<h;f++){var p=e[f];if(p.isDirectionalLight){var m=i.directional[n];m.direction.setFromMatrixPosition(p.matrixWorld),o.setFromMatrixPosition(p.target.matrixWorld),m.direction.sub(o),m.direction.transformDirection(d),n++}else if(p.isSpotLight){var v=i.spot[a];v.position.setFromMatrixPosition(p.matrixWorld),v.position.applyMatrix4(d),v.direction.setFromMatrixPosition(p.matrixWorld),o.setFromMatrixPosition(p.target.matrixWorld),v.direction.sub(o),v.direction.transformDirection(d),a++}else if(p.isRectAreaLight){var g=i.rectArea[u];g.position.setFromMatrixPosition(p.matrixWorld),g.position.applyMatrix4(d),l.identity(),s.copy(p.matrixWorld),s.premultiply(d),l.extractRotation(s),g.halfWidth.set(.5*p.width,0,0),g.halfHeight.set(0,.5*p.height,0),g.halfWidth.applyMatrix4(l),g.halfHeight.applyMatrix4(l),u++}else if(p.isPointLight){var y=i.point[r];y.position.setFromMatrixPosition(p.matrixWorld),y.position.applyMatrix4(d),r++}else if(p.isHemisphereLight){var _=i.hemi[c];_.direction.setFromMatrixPosition(p.matrixWorld),_.direction.transformDirection(d),c++}}},state:i}}function eo(e,t){var n=new Ja(e,t),r=[],i=[];return{init:function(){r.length=0,i.length=0},state:{lightsArray:r,shadowsArray:i,lights:n},setupLights:function(e){n.setup(r,e)},setupLightsView:function(e){n.setupView(r,e)},pushLight:function(e){r.push(e)},pushShadow:function(e){i.push(e)}}}function to(e,t){var n=new WeakMap;return{get:function(r){var i,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,o=n.get(r);return void 0===o?(i=new eo(e,t),n.set(r,[i])):a>=o.length?(i=new eo(e,t),o.push(i)):i=o[a],i},dispose:function(){n=new WeakMap}}}var no=function(e){g(n,e);var t=x(n);function n(e){var r;return w(this,n),(r=t.call(this)).isMeshDepthMaterial=!0,r.type="MeshDepthMaterial",r.depthPacking=3200,r.map=null,r.alphaMap=null,r.displacementMap=null,r.displacementScale=1,r.displacementBias=0,r.wireframe=!1,r.wireframeLinewidth=1,r.setValues(e),r}return T(n,[{key:"copy",value:function(e){return m(i(n.prototype),"copy",this).call(this,e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}]),n}(Gn),ro=function(e){g(n,e);var t=x(n);function n(e){var r;return w(this,n),(r=t.call(this)).isMeshDistanceMaterial=!0,r.type="MeshDistanceMaterial",r.referencePosition=new Ct,r.nearDistance=1,r.farDistance=1e3,r.map=null,r.alphaMap=null,r.displacementMap=null,r.displacementScale=1,r.displacementBias=0,r.setValues(e),r}return T(n,[{key:"copy",value:function(e){return m(i(n.prototype),"copy",this).call(this,e),this.referencePosition.copy(e.referencePosition),this.nearDistance=e.nearDistance,this.farDistance=e.farDistance,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}]),n}(Gn);function io(e,t,n){var r=new Ur,i=new tt,a=new tt,o=new Mt,s=new no({depthPacking:3201}),l=new ro,u={},c=n.maxTextureSize,d={0:1,1:0,2:2},f=new Er({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new tt},radius:{value:4}},vertexShader:"void main() {\n\tgl_Position = vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n\tconst float samples = float( VSM_SAMPLES );\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\n\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\n\tfor ( float i = 0.0; i < samples; i ++ ) {\n\t\tfloat uvOffset = uvStart + i * uvStride;\n\t\t#ifdef HORIZONTAL_PASS\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\t\t#else\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\t\t#endif\n\t}\n\tmean = mean / samples;\n\tsquared_mean = squared_mean / samples;\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}"}),h=f.clone();h.defines.HORIZONTAL_PASS=1;var p=new ir;p.setAttribute("position",new Xn(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));var m=new yr(p,f),v=this;function g(n,r){var a=t.update(m);f.defines.VSM_SAMPLES!==n.blurSamples&&(f.defines.VSM_SAMPLES=n.blurSamples,h.defines.VSM_SAMPLES=n.blurSamples,f.needsUpdate=!0,h.needsUpdate=!0),null===n.mapPass&&(n.mapPass=new wt(i.x,i.y)),f.uniforms.shadow_pass.value=n.map.texture,f.uniforms.resolution.value=n.mapSize,f.uniforms.radius.value=n.radius,e.setRenderTarget(n.mapPass),e.clear(),e.renderBufferDirect(r,null,a,f,m,null),h.uniforms.shadow_pass.value=n.mapPass.texture,h.uniforms.resolution.value=n.mapSize,h.uniforms.radius.value=n.radius,e.setRenderTarget(n.map),e.clear(),e.renderBufferDirect(r,null,a,h,m,null)}function y(t,n,r,i,a,o){var c=null,f=!0===r.isPointLight?t.customDistanceMaterial:t.customDepthMaterial;if(void 0!==f)c=f;else if(c=!0===r.isPointLight?l:s,e.localClippingEnabled&&!0===n.clipShadows&&Array.isArray(n.clippingPlanes)&&0!==n.clippingPlanes.length||n.displacementMap&&0!==n.displacementScale||n.alphaMap&&n.alphaTest>0||n.map&&n.alphaTest>0){var h=c.uuid,p=n.uuid,m=u[h];void 0===m&&(m={},u[h]=m);var v=m[p];void 0===v&&(v=c.clone(),m[p]=v),c=v}return c.visible=n.visible,c.wireframe=n.wireframe,c.side=3===o?null!==n.shadowSide?n.shadowSide:n.side:null!==n.shadowSide?n.shadowSide:d[n.side],c.alphaMap=n.alphaMap,c.alphaTest=n.alphaTest,c.map=n.map,c.clipShadows=n.clipShadows,c.clippingPlanes=n.clippingPlanes,c.clipIntersection=n.clipIntersection,c.displacementMap=n.displacementMap,c.displacementScale=n.displacementScale,c.displacementBias=n.displacementBias,c.wireframeLinewidth=n.wireframeLinewidth,c.linewidth=n.linewidth,!0===r.isPointLight&&!0===c.isMeshDistanceMaterial&&(c.referencePosition.setFromMatrixPosition(r.matrixWorld),c.nearDistance=i,c.farDistance=a),c}function _(n,i,a,o,s){if(!1!==n.visible){if(n.layers.test(i.layers)&&(n.isMesh||n.isLine||n.isPoints)&&(n.castShadow||n.receiveShadow&&3===s)&&(!n.frustumCulled||r.intersectsObject(n))){n.modelViewMatrix.multiplyMatrices(a.matrixWorldInverse,n.matrixWorld);var l=t.update(n),u=n.material;if(Array.isArray(u))for(var c=l.groups,d=0,f=c.length;d<f;d++){var h=c[d],p=u[h.materialIndex];if(p&&p.visible){var m=y(n,p,o,a.near,a.far,s);e.renderBufferDirect(a,null,l,m,n,h)}}else if(u.visible){var v=y(n,u,o,a.near,a.far,s);e.renderBufferDirect(a,null,l,v,n,null)}}for(var g=n.children,x=0,b=g.length;x<b;x++)_(g[x],i,a,o,s)}}this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=1,this.render=function(t,n,s){if(!1!==v.enabled&&(!1!==v.autoUpdate||!1!==v.needsUpdate)&&0!==t.length){var l=e.getRenderTarget(),u=e.getActiveCubeFace(),d=e.getActiveMipmapLevel(),f=e.state;f.setBlending(0),f.buffers.color.setClear(1,1,1,1),f.buffers.depth.setTest(!0),f.setScissorTest(!1);for(var h=0,p=t.length;h<p;h++){var m=t[h],y=m.shadow;if(void 0!==y){if(!1!==y.autoUpdate||!1!==y.needsUpdate){i.copy(y.mapSize);var x=y.getFrameExtents();if(i.multiply(x),a.copy(y.mapSize),(i.x>c||i.y>c)&&(i.x>c&&(a.x=Math.floor(c/x.x),i.x=a.x*x.x,y.mapSize.x=a.x),i.y>c&&(a.y=Math.floor(c/x.y),i.y=a.y*x.y,y.mapSize.y=a.y)),null===y.map){var b=3!==this.type?{minFilter:W,magFilter:W}:{};y.map=new wt(i.x,i.y,b),y.map.texture.name=m.name+".shadowMap",y.camera.updateProjectionMatrix()}e.setRenderTarget(y.map),e.clear();for(var S=y.getViewportCount(),M=0;M<S;M++){var w=y.getViewport(M);o.set(a.x*w.x,a.y*w.y,a.x*w.z,a.y*w.w),f.viewport(o),y.updateMatrices(m,M),r=y.getFrustum(),_(n,s,y.camera,m,this.type)}!0!==y.isPointLightShadow&&3===this.type&&g(y,s),y.needsUpdate=!1}}else console.warn("THREE.WebGLShadowMap:",m,"has no shadow.")}v.needsUpdate=!1,e.setRenderTarget(l,u,d)}}}function ao(e,t,n){var r,i,a=n.isWebGL2;var o=new function(){var t=!1,n=new Mt,r=null,i=new Mt(0,0,0,0);return{setMask:function(n){r===n||t||(e.colorMask(n,n,n,n),r=n)},setLocked:function(e){t=e},setClear:function(t,r,a,o,s){!0===s&&(t*=o,r*=o,a*=o),n.set(t,r,a,o),!1===i.equals(n)&&(e.clearColor(t,r,a,o),i.copy(n))},reset:function(){t=!1,r=null,i.set(-1,0,0,0)}}},s=new function(){var t=!1,n=null,r=null,i=null;return{setTest:function(e){e?W(2929):j(2929)},setMask:function(r){n===r||t||(e.depthMask(r),n=r)},setFunc:function(t){if(r!==t){switch(t){case 0:e.depthFunc(512);break;case 1:e.depthFunc(519);break;case 2:e.depthFunc(513);break;case 3:default:e.depthFunc(515);break;case 4:e.depthFunc(514);break;case 5:e.depthFunc(518);break;case 6:e.depthFunc(516);break;case 7:e.depthFunc(517)}r=t}},setLocked:function(e){t=e},setClear:function(t){i!==t&&(e.clearDepth(t),i=t)},reset:function(){t=!1,n=null,r=null,i=null}}},l=new function(){var t=!1,n=null,r=null,i=null,a=null,o=null,s=null,l=null,u=null;return{setTest:function(e){t||(e?W(2960):j(2960))},setMask:function(r){n===r||t||(e.stencilMask(r),n=r)},setFunc:function(t,n,o){r===t&&i===n&&a===o||(e.stencilFunc(t,n,o),r=t,i=n,a=o)},setOp:function(t,n,r){o===t&&s===n&&l===r||(e.stencilOp(t,n,r),o=t,s=n,l=r)},setLocked:function(e){t=e},setClear:function(t){u!==t&&(e.clearStencil(t),u=t)},reset:function(){t=!1,n=null,r=null,i=null,a=null,o=null,s=null,l=null,u=null}}},u=new WeakMap,c=new WeakMap,d={},f={},h=new WeakMap,p=[],m=null,v=!1,g=null,y=null,_=null,x=null,b=null,M=null,w=null,E=!1,T=null,k=null,C=null,L=null,A=null,P=e.getParameter(35661),R=!1,D=0,N=e.getParameter(7938);-1!==N.indexOf("WebGL")?(D=parseFloat(/^WebGL (\d)/.exec(N)[1]),R=D>=1):-1!==N.indexOf("OpenGL ES")&&(D=parseFloat(/^OpenGL ES (\d)/.exec(N)[1]),R=D>=2);var O=null,z={},U=e.getParameter(3088),F=e.getParameter(2978),B=(new Mt).fromArray(U),V=(new Mt).fromArray(F);function H(t,n,r){var i=new Uint8Array(4),a=e.createTexture();e.bindTexture(t,a),e.texParameteri(t,10241,9728),e.texParameteri(t,10240,9728);for(var o=0;o<r;o++)e.texImage2D(n+o,0,6408,1,1,0,6408,5121,i);return a}var G={};function W(t){!0!==d[t]&&(e.enable(t),d[t]=!0)}function j(t){!1!==d[t]&&(e.disable(t),d[t]=!1)}G[3553]=H(3553,3553,1),G[34067]=H(34067,34069,6),o.setClear(0,0,0,1),s.setClear(1),l.setClear(0),W(2929),s.setFunc(3),K(!1),Q(1),W(2884),Z(0);var q=(S(r={},I,32774),S(r,101,32778),S(r,102,32779),r);if(a)q[103]=32775,q[104]=32776;else{var X=t.get("EXT_blend_minmax");null!==X&&(q[103]=X.MIN_EXT,q[104]=X.MAX_EXT)}var Y=(S(i={},200,0),S(i,201,1),S(i,202,768),S(i,204,770),S(i,210,776),S(i,208,774),S(i,206,772),S(i,203,769),S(i,205,771),S(i,209,775),S(i,207,773),i);function Z(t,n,r,i,a,o,s,l){if(0!==t){if(!1===v&&(W(3042),v=!0),5===t)a=a||n,o=o||r,s=s||i,n===y&&a===b||(e.blendEquationSeparate(q[n],q[a]),y=n,b=a),r===_&&i===x&&o===M&&s===w||(e.blendFuncSeparate(Y[r],Y[i],Y[o],Y[s]),_=r,x=i,M=o,w=s),g=t,E=!1;else if(t!==g||l!==E){if(y===I&&b===I||(e.blendEquation(32774),y=I,b=I),l)switch(t){case 1:e.blendFuncSeparate(1,771,1,771);break;case 2:e.blendFunc(1,1);break;case 3:e.blendFuncSeparate(0,769,0,1);break;case 4:e.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",t)}else switch(t){case 1:e.blendFuncSeparate(770,771,1,771);break;case 2:e.blendFunc(770,1);break;case 3:e.blendFuncSeparate(0,769,0,1);break;case 4:e.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",t)}_=null,x=null,M=null,w=null,g=t,E=l}}else!0===v&&(j(3042),v=!1)}function K(t){T!==t&&(t?e.frontFace(2304):e.frontFace(2305),T=t)}function Q(t){0!==t?(W(2884),t!==k&&(1===t?e.cullFace(1029):2===t?e.cullFace(1028):e.cullFace(1032))):j(2884),k=t}function $(t,n,r){t?(W(32823),L===n&&A===r||(e.polygonOffset(n,r),L=n,A=r)):j(32823)}return{buffers:{color:o,depth:s,stencil:l},enable:W,disable:j,bindFramebuffer:function(t,n){return f[t]!==n&&(e.bindFramebuffer(t,n),f[t]=n,a&&(36009===t&&(f[36160]=n),36160===t&&(f[36009]=n)),!0)},drawBuffers:function(r,i){var a=p,o=!1;if(r)if(void 0===(a=h.get(i))&&(a=[],h.set(i,a)),r.isWebGLMultipleRenderTargets){var s=r.texture;if(a.length!==s.length||36064!==a[0]){for(var l=0,u=s.length;l<u;l++)a[l]=36064+l;a.length=s.length,o=!0}}else 36064!==a[0]&&(a[0]=36064,o=!0);else 1029!==a[0]&&(a[0]=1029,o=!0);o&&(n.isWebGL2?e.drawBuffers(a):t.get("WEBGL_draw_buffers").drawBuffersWEBGL(a))},useProgram:function(t){return m!==t&&(e.useProgram(t),m=t,!0)},setBlending:Z,setMaterial:function(e,t){2===e.side?j(2884):W(2884);var n=1===e.side;t&&(n=!n),K(n),1===e.blending&&!1===e.transparent?Z(0):Z(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha,e.premultipliedAlpha),s.setFunc(e.depthFunc),s.setTest(e.depthTest),s.setMask(e.depthWrite),o.setMask(e.colorWrite);var r=e.stencilWrite;l.setTest(r),r&&(l.setMask(e.stencilWriteMask),l.setFunc(e.stencilFunc,e.stencilRef,e.stencilFuncMask),l.setOp(e.stencilFail,e.stencilZFail,e.stencilZPass)),$(e.polygonOffset,e.polygonOffsetFactor,e.polygonOffsetUnits),!0===e.alphaToCoverage?W(32926):j(32926)},setFlipSided:K,setCullFace:Q,setLineWidth:function(t){t!==C&&(R&&e.lineWidth(t),C=t)},setPolygonOffset:$,setScissorTest:function(e){e?W(3089):j(3089)},activeTexture:function(t){void 0===t&&(t=33984+P-1),O!==t&&(e.activeTexture(t),O=t)},bindTexture:function(t,n,r){void 0===r&&(r=null===O?33984+P-1:O);var i=z[r];void 0===i&&(i={type:void 0,texture:void 0},z[r]=i),i.type===t&&i.texture===n||(O!==r&&(e.activeTexture(r),O=r),e.bindTexture(t,n||G[t]),i.type=t,i.texture=n)},unbindTexture:function(){var t=z[O];void 0!==t&&void 0!==t.type&&(e.bindTexture(t.type,null),t.type=void 0,t.texture=void 0)},compressedTexImage2D:function(){try{e.compressedTexImage2D.apply(e,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},compressedTexImage3D:function(){try{e.compressedTexImage3D.apply(e,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texImage2D:function(){try{e.texImage2D.apply(e,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texImage3D:function(){try{e.texImage3D.apply(e,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},updateUBOMapping:function(t,n){var r=c.get(n);void 0===r&&(r=new WeakMap,c.set(n,r));var i=r.get(t);void 0===i&&(i=e.getUniformBlockIndex(n,t.name),r.set(t,i))},uniformBlockBinding:function(t,n){var r=c.get(n).get(t);u.get(n)!==r&&(e.uniformBlockBinding(n,r,t.__bindingPointIndex),u.set(n,r))},texStorage2D:function(){try{e.texStorage2D.apply(e,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texStorage3D:function(){try{e.texStorage3D.apply(e,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texSubImage2D:function(){try{e.texSubImage2D.apply(e,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texSubImage3D:function(){try{e.texSubImage3D.apply(e,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},compressedTexSubImage2D:function(){try{e.compressedTexSubImage2D.apply(e,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},compressedTexSubImage3D:function(){try{e.compressedTexSubImage3D.apply(e,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},scissor:function(t){!1===B.equals(t)&&(e.scissor(t.x,t.y,t.z,t.w),B.copy(t))},viewport:function(t){!1===V.equals(t)&&(e.viewport(t.x,t.y,t.z,t.w),V.copy(t))},reset:function(){e.disable(3042),e.disable(2884),e.disable(2929),e.disable(32823),e.disable(3089),e.disable(2960),e.disable(32926),e.blendEquation(32774),e.blendFunc(1,0),e.blendFuncSeparate(1,0,1,0),e.colorMask(!0,!0,!0,!0),e.clearColor(0,0,0,0),e.depthMask(!0),e.depthFunc(513),e.clearDepth(1),e.stencilMask(4294967295),e.stencilFunc(519,0,4294967295),e.stencilOp(7680,7680,7680),e.clearStencil(0),e.cullFace(1029),e.frontFace(2305),e.polygonOffset(0,0),e.activeTexture(33984),e.bindFramebuffer(36160,null),!0===a&&(e.bindFramebuffer(36009,null),e.bindFramebuffer(36008,null)),e.useProgram(null),e.lineWidth(1),e.scissor(0,0,e.canvas.width,e.canvas.height),e.viewport(0,0,e.canvas.width,e.canvas.height),d={},O=null,z={},f={},h=new WeakMap,p=[],m=null,v=!1,g=null,y=null,_=null,x=null,b=null,M=null,w=null,E=!1,T=null,k=null,C=null,L=null,A=null,B.set(0,0,e.canvas.width,e.canvas.height),V.set(0,0,e.canvas.width,e.canvas.height),o.reset(),s.reset(),l.reset()}}}function oo(e,t,n,r,i,a,o){var s,l,u,c=i.isWebGL2,d=i.maxTextures,f=i.maxCubemapSize,h=i.maxTextureSize,p=i.maxSamples,m=t.has("WEBGL_multisampled_render_to_texture")?t.get("WEBGL_multisampled_render_to_texture"):null,v="undefined"!==typeof navigator&&/OculusBrowser/g.test(navigator.userAgent),g=new WeakMap,y=new WeakMap,_=!1;try{_="undefined"!==typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(le){}function x(e,t){return _?new OffscreenCanvas(e,t):at("canvas")}function b(e,t,n,r){var i=1;if((e.width>r||e.height>r)&&(i=r/Math.max(e.width,e.height)),i<1||!0===t){if("undefined"!==typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!==typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!==typeof ImageBitmap&&e instanceof ImageBitmap){var a=t?$e:Math.floor,o=a(i*e.width),s=a(i*e.height);void 0===u&&(u=x(o,s));var l=n?x(o,s):u;return l.width=o,l.height=s,l.getContext("2d").drawImage(e,0,0,o,s),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+e.width+"x"+e.height+") to ("+o+"x"+s+")."),l}return"data"in e&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+e.width+"x"+e.height+")."),e}return e}function M(e){return Qe(e.width)&&Qe(e.height)}function w(e,t){return e.generateMipmaps&&t&&e.minFilter!==W&&e.minFilter!==X}function E(t){e.generateMipmap(t)}function T(n,r,i,a){var o=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(!1===c)return r;if(null!==n){if(void 0!==e[n])return e[n];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+n+"'")}var s=r;return 6403===r&&(5126===i&&(s=33326),5131===i&&(s=33325),5121===i&&(s=33321)),33319===r&&(5126===i&&(s=33328),5131===i&&(s=33327),5121===i&&(s=33323)),6408===r&&(5126===i&&(s=34836),5131===i&&(s=34842),5121===i&&(s=a===Oe&&!1===o?35907:32856),32819===i&&(s=32854),32820===i&&(s=32855)),33325!==s&&33326!==s&&33327!==s&&33328!==s&&34842!==s&&34836!==s||t.get("EXT_color_buffer_float"),s}function k(e,t,n){return!0===w(e,n)||e.isFramebufferTexture&&e.minFilter!==W&&e.minFilter!==X?Math.log2(Math.max(t.width,t.height))+1:void 0!==e.mipmaps&&e.mipmaps.length>0?e.mipmaps.length:e.isCompressedTexture&&Array.isArray(e.image)?t.mipmaps.length:1}function C(e){return e===W||e===j||e===q?9728:9729}function L(e){var t=e.target;t.removeEventListener("dispose",L),function(e){var t=r.get(e);if(void 0===t.__webglInit)return;var n=e.source,i=y.get(n);if(i){var a=i[t.__cacheKey];a.usedTimes--,0===a.usedTimes&&P(e),0===Object.keys(i).length&&y.delete(n)}r.remove(e)}(t),t.isVideoTexture&&g.delete(t)}function A(t){var n=t.target;n.removeEventListener("dispose",A),function(t){var n=t.texture,i=r.get(t),a=r.get(n);void 0!==a.__webglTexture&&(e.deleteTexture(a.__webglTexture),o.memory.textures--);t.depthTexture&&t.depthTexture.dispose();if(t.isWebGLCubeRenderTarget)for(var s=0;s<6;s++)e.deleteFramebuffer(i.__webglFramebuffer[s]),i.__webglDepthbuffer&&e.deleteRenderbuffer(i.__webglDepthbuffer[s]);else{if(e.deleteFramebuffer(i.__webglFramebuffer),i.__webglDepthbuffer&&e.deleteRenderbuffer(i.__webglDepthbuffer),i.__webglMultisampledFramebuffer&&e.deleteFramebuffer(i.__webglMultisampledFramebuffer),i.__webglColorRenderbuffer)for(var l=0;l<i.__webglColorRenderbuffer.length;l++)i.__webglColorRenderbuffer[l]&&e.deleteRenderbuffer(i.__webglColorRenderbuffer[l]);i.__webglDepthRenderbuffer&&e.deleteRenderbuffer(i.__webglDepthRenderbuffer)}if(t.isWebGLMultipleRenderTargets)for(var u=0,c=n.length;u<c;u++){var d=r.get(n[u]);d.__webglTexture&&(e.deleteTexture(d.__webglTexture),o.memory.textures--),r.remove(n[u])}r.remove(n),r.remove(t)}(n)}function P(t){var n=r.get(t);e.deleteTexture(n.__webglTexture);var i=t.source;delete y.get(i)[n.__cacheKey],o.memory.textures--}var R=0;function D(e,t){var i=r.get(e);if(e.isVideoTexture&&function(e){var t=o.render.frame;g.get(e)!==t&&(g.set(e,t),e.update())}(e),!1===e.isRenderTargetTexture&&e.version>0&&i.__version!==e.version){var a=e.image;if(null===a)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else{if(!1!==a.complete)return void U(i,e,t);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")}}n.bindTexture(3553,i.__webglTexture,33984+t)}var N=(S(s={},V,10497),S(s,H,33071),S(s,G,33648),s),I=(S(l={},W,9728),S(l,j,9984),S(l,q,9986),S(l,X,9729),S(l,1007,9985),S(l,Y,9987),l);function O(n,a,o){if(o?(e.texParameteri(n,10242,N[a.wrapS]),e.texParameteri(n,10243,N[a.wrapT]),32879!==n&&35866!==n||e.texParameteri(n,32882,N[a.wrapR]),e.texParameteri(n,10240,I[a.magFilter]),e.texParameteri(n,10241,I[a.minFilter])):(e.texParameteri(n,10242,33071),e.texParameteri(n,10243,33071),32879!==n&&35866!==n||e.texParameteri(n,32882,33071),a.wrapS===H&&a.wrapT===H||console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),e.texParameteri(n,10240,C(a.magFilter)),e.texParameteri(n,10241,C(a.minFilter)),a.minFilter!==W&&a.minFilter!==X&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),!0===t.has("EXT_texture_filter_anisotropic")){var s=t.get("EXT_texture_filter_anisotropic");if(a.magFilter===W)return;if(a.minFilter!==q&&a.minFilter!==Y)return;if(a.type===$&&!1===t.has("OES_texture_float_linear"))return;if(!1===c&&a.type===J&&!1===t.has("OES_texture_half_float_linear"))return;(a.anisotropy>1||r.get(a).__currentAnisotropy)&&(e.texParameterf(n,s.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(a.anisotropy,i.getMaxAnisotropy())),r.get(a).__currentAnisotropy=a.anisotropy)}}function z(t,n){var r=!1;void 0===t.__webglInit&&(t.__webglInit=!0,n.addEventListener("dispose",L));var i=n.source,a=y.get(i);void 0===a&&(a={},y.set(i,a));var s=function(e){var t=[];return t.push(e.wrapS),t.push(e.wrapT),t.push(e.wrapR||0),t.push(e.magFilter),t.push(e.minFilter),t.push(e.anisotropy),t.push(e.internalFormat),t.push(e.format),t.push(e.type),t.push(e.generateMipmaps),t.push(e.premultiplyAlpha),t.push(e.flipY),t.push(e.unpackAlignment),t.push(e.encoding),t.join()}(n);if(s!==t.__cacheKey){void 0===a[s]&&(a[s]={texture:e.createTexture(),usedTimes:0},o.memory.textures++,r=!0),a[s].usedTimes++;var l=a[t.__cacheKey];void 0!==l&&(a[t.__cacheKey].usedTimes--,0===l.usedTimes&&P(n)),t.__cacheKey=s,t.__webglTexture=a[s].texture}return r}function U(t,i,o){var s=3553;(i.isDataArrayTexture||i.isCompressedArrayTexture)&&(s=35866),i.isData3DTexture&&(s=32879);var l=z(t,i),u=i.source;n.bindTexture(s,t.__webglTexture,33984+o);var d=r.get(u);if(u.version!==d.__version||!0===l){n.activeTexture(33984+o),e.pixelStorei(37440,i.flipY),e.pixelStorei(37441,i.premultiplyAlpha),e.pixelStorei(3317,i.unpackAlignment),e.pixelStorei(37443,0);var f,p=function(e){return!c&&(e.wrapS!==H||e.wrapT!==H||e.minFilter!==W&&e.minFilter!==X)}(i)&&!1===M(i.image),m=b(i.image,p,!1,h),v=M(m=se(i,m))||c,g=a.convert(i.format,i.encoding),y=a.convert(i.type),_=T(i.internalFormat,g,y,i.encoding,i.isVideoTexture);O(s,i,v);var x=i.mipmaps,S=c&&!0!==i.isVideoTexture,C=void 0===d.__version||!0===l,L=k(i,m,v);if(i.isDepthTexture)_=6402,c?_=i.type===$?36012:i.type===Q?33190:i.type===ee?35056:33189:i.type===$&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),i.format===ne&&6402===_&&i.type!==K&&i.type!==Q&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),i.type=Q,y=a.convert(i.type)),i.format===re&&6402===_&&(_=34041,i.type!==ee&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),i.type=ee,y=a.convert(i.type))),C&&(S?n.texStorage2D(3553,1,_,m.width,m.height):n.texImage2D(3553,0,_,m.width,m.height,0,g,y,null));else if(i.isDataTexture)if(x.length>0&&v){S&&C&&n.texStorage2D(3553,L,_,x[0].width,x[0].height);for(var A=0,P=x.length;A<P;A++)f=x[A],S?n.texSubImage2D(3553,A,0,0,f.width,f.height,g,y,f.data):n.texImage2D(3553,A,_,f.width,f.height,0,g,y,f.data);i.generateMipmaps=!1}else S?(C&&n.texStorage2D(3553,L,_,m.width,m.height),n.texSubImage2D(3553,0,0,0,m.width,m.height,g,y,m.data)):n.texImage2D(3553,0,_,m.width,m.height,0,g,y,m.data);else if(i.isCompressedTexture)if(i.isCompressedArrayTexture){S&&C&&n.texStorage3D(35866,L,_,x[0].width,x[0].height,m.depth);for(var R=0,D=x.length;R<D;R++)f=x[R],i.format!==te?null!==g?S?n.compressedTexSubImage3D(35866,R,0,0,0,f.width,f.height,m.depth,g,f.data,0,0):n.compressedTexImage3D(35866,R,_,f.width,f.height,m.depth,0,f.data,0,0):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):S?n.texSubImage3D(35866,R,0,0,0,f.width,f.height,m.depth,g,y,f.data):n.texImage3D(35866,R,_,f.width,f.height,m.depth,0,g,y,f.data)}else{S&&C&&n.texStorage2D(3553,L,_,x[0].width,x[0].height);for(var N=0,I=x.length;N<I;N++)f=x[N],i.format!==te?null!==g?S?n.compressedTexSubImage2D(3553,N,0,0,f.width,f.height,g,f.data):n.compressedTexImage2D(3553,N,_,f.width,f.height,0,f.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):S?n.texSubImage2D(3553,N,0,0,f.width,f.height,g,y,f.data):n.texImage2D(3553,N,_,f.width,f.height,0,g,y,f.data)}else if(i.isDataArrayTexture)S?(C&&n.texStorage3D(35866,L,_,m.width,m.height,m.depth),n.texSubImage3D(35866,0,0,0,0,m.width,m.height,m.depth,g,y,m.data)):n.texImage3D(35866,0,_,m.width,m.height,m.depth,0,g,y,m.data);else if(i.isData3DTexture)S?(C&&n.texStorage3D(32879,L,_,m.width,m.height,m.depth),n.texSubImage3D(32879,0,0,0,0,m.width,m.height,m.depth,g,y,m.data)):n.texImage3D(32879,0,_,m.width,m.height,m.depth,0,g,y,m.data);else if(i.isFramebufferTexture){if(C)if(S)n.texStorage2D(3553,L,_,m.width,m.height);else for(var U=m.width,F=m.height,B=0;B<L;B++)n.texImage2D(3553,B,_,U,F,0,g,y,null),U>>=1,F>>=1}else if(x.length>0&&v){S&&C&&n.texStorage2D(3553,L,_,x[0].width,x[0].height);for(var V=0,G=x.length;V<G;V++)f=x[V],S?n.texSubImage2D(3553,V,0,0,g,y,f):n.texImage2D(3553,V,_,g,y,f);i.generateMipmaps=!1}else S?(C&&n.texStorage2D(3553,L,_,m.width,m.height),n.texSubImage2D(3553,0,0,0,g,y,m)):n.texImage2D(3553,0,_,g,y,m);w(i,v)&&E(s),d.__version=u.version,i.onUpdate&&i.onUpdate(i)}t.__version=i.version}function F(t,i,o,s,l){var u=a.convert(o.format,o.encoding),c=a.convert(o.type),d=T(o.internalFormat,u,c,o.encoding);r.get(i).__hasExternalTextures||(32879===l||35866===l?n.texImage3D(l,0,d,i.width,i.height,i.depth,0,u,c,null):n.texImage2D(l,0,d,i.width,i.height,0,u,c,null)),n.bindFramebuffer(36160,t),oe(i)?m.framebufferTexture2DMultisampleEXT(36160,s,l,r.get(o).__webglTexture,0,ae(i)):(3553===l||l>=34069&&l<=34074)&&e.framebufferTexture2D(36160,s,l,r.get(o).__webglTexture,0),n.bindFramebuffer(36160,null)}function B(t,n,r){if(e.bindRenderbuffer(36161,t),n.depthBuffer&&!n.stencilBuffer){var i=33189;if(r||oe(n)){var o=n.depthTexture;o&&o.isDepthTexture&&(o.type===$?i=36012:o.type===Q&&(i=33190));var s=ae(n);oe(n)?m.renderbufferStorageMultisampleEXT(36161,s,i,n.width,n.height):e.renderbufferStorageMultisample(36161,s,i,n.width,n.height)}else e.renderbufferStorage(36161,i,n.width,n.height);e.framebufferRenderbuffer(36160,36096,36161,t)}else if(n.depthBuffer&&n.stencilBuffer){var l=ae(n);r&&!1===oe(n)?e.renderbufferStorageMultisample(36161,l,35056,n.width,n.height):oe(n)?m.renderbufferStorageMultisampleEXT(36161,l,35056,n.width,n.height):e.renderbufferStorage(36161,34041,n.width,n.height),e.framebufferRenderbuffer(36160,33306,36161,t)}else for(var u=!0===n.isWebGLMultipleRenderTargets?n.texture:[n.texture],c=0;c<u.length;c++){var d=u[c],f=a.convert(d.format,d.encoding),h=a.convert(d.type),p=T(d.internalFormat,f,h,d.encoding),v=ae(n);r&&!1===oe(n)?e.renderbufferStorageMultisample(36161,v,p,n.width,n.height):oe(n)?m.renderbufferStorageMultisampleEXT(36161,v,p,n.width,n.height):e.renderbufferStorage(36161,p,n.width,n.height)}e.bindRenderbuffer(36161,null)}function ie(t){var i=r.get(t),a=!0===t.isWebGLCubeRenderTarget;if(t.depthTexture&&!i.__autoAllocateDepthBuffer){if(a)throw new Error("target.depthTexture not supported in Cube render targets");!function(t,i){if(i&&i.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(n.bindFramebuffer(36160,t),!i.depthTexture||!i.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");r.get(i.depthTexture).__webglTexture&&i.depthTexture.image.width===i.width&&i.depthTexture.image.height===i.height||(i.depthTexture.image.width=i.width,i.depthTexture.image.height=i.height,i.depthTexture.needsUpdate=!0),D(i.depthTexture,0);var a=r.get(i.depthTexture).__webglTexture,o=ae(i);if(i.depthTexture.format===ne)oe(i)?m.framebufferTexture2DMultisampleEXT(36160,36096,3553,a,0,o):e.framebufferTexture2D(36160,36096,3553,a,0);else{if(i.depthTexture.format!==re)throw new Error("Unknown depthTexture format");oe(i)?m.framebufferTexture2DMultisampleEXT(36160,33306,3553,a,0,o):e.framebufferTexture2D(36160,33306,3553,a,0)}}(i.__webglFramebuffer,t)}else if(a){i.__webglDepthbuffer=[];for(var o=0;o<6;o++)n.bindFramebuffer(36160,i.__webglFramebuffer[o]),i.__webglDepthbuffer[o]=e.createRenderbuffer(),B(i.__webglDepthbuffer[o],t,!1)}else n.bindFramebuffer(36160,i.__webglFramebuffer),i.__webglDepthbuffer=e.createRenderbuffer(),B(i.__webglDepthbuffer,t,!1);n.bindFramebuffer(36160,null)}function ae(e){return Math.min(p,e.samples)}function oe(e){var n=r.get(e);return c&&e.samples>0&&!0===t.has("WEBGL_multisampled_render_to_texture")&&!1!==n.__useRenderToTexture}function se(e,n){var r=e.encoding,i=e.format,a=e.type;return!0===e.isCompressedTexture||!0===e.isVideoTexture||e.format===He||r!==Ie&&(r===Oe?!1===c?!0===t.has("EXT_sRGB")&&i===te?(e.format=He,e.minFilter=X,e.generateMipmaps=!1):n=yt.sRGBToLinear(n):i===te&&a===Z||console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture encoding:",r)),n}this.allocateTextureUnit=function(){var e=R;return e>=d&&console.warn("THREE.WebGLTextures: Trying to use "+e+" texture units while this GPU supports only "+d),R+=1,e},this.resetTextureUnits=function(){R=0},this.setTexture2D=D,this.setTexture2DArray=function(e,t){var i=r.get(e);e.version>0&&i.__version!==e.version?U(i,e,t):n.bindTexture(35866,i.__webglTexture,33984+t)},this.setTexture3D=function(e,t){var i=r.get(e);e.version>0&&i.__version!==e.version?U(i,e,t):n.bindTexture(32879,i.__webglTexture,33984+t)},this.setTextureCube=function(t,i){var o=r.get(t);t.version>0&&o.__version!==t.version?function(t,i,o){if(6!==i.image.length)return;var s=z(t,i),l=i.source;n.bindTexture(34067,t.__webglTexture,33984+o);var u=r.get(l);if(l.version!==u.__version||!0===s){n.activeTexture(33984+o),e.pixelStorei(37440,i.flipY),e.pixelStorei(37441,i.premultiplyAlpha),e.pixelStorei(3317,i.unpackAlignment),e.pixelStorei(37443,0);for(var d=i.isCompressedTexture||i.image[0].isCompressedTexture,h=i.image[0]&&i.image[0].isDataTexture,p=[],m=0;m<6;m++)p[m]=d||h?h?i.image[m].image:i.image[m]:b(i.image[m],!1,!0,f),p[m]=se(i,p[m]);var v,g=p[0],y=M(g)||c,_=a.convert(i.format,i.encoding),x=a.convert(i.type),S=T(i.internalFormat,_,x,i.encoding),C=c&&!0!==i.isVideoTexture,L=void 0===u.__version||!0===s,A=k(i,g,y);if(O(34067,i,y),d){C&&L&&n.texStorage2D(34067,A,S,g.width,g.height);for(var P=0;P<6;P++){v=p[P].mipmaps;for(var R=0;R<v.length;R++){var D=v[R];i.format!==te?null!==_?C?n.compressedTexSubImage2D(34069+P,R,0,0,D.width,D.height,_,D.data):n.compressedTexImage2D(34069+P,R,S,D.width,D.height,0,D.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):C?n.texSubImage2D(34069+P,R,0,0,D.width,D.height,_,x,D.data):n.texImage2D(34069+P,R,S,D.width,D.height,0,_,x,D.data)}}}else{v=i.mipmaps,C&&L&&(v.length>0&&A++,n.texStorage2D(34067,A,S,p[0].width,p[0].height));for(var N=0;N<6;N++)if(h){C?n.texSubImage2D(34069+N,0,0,0,p[N].width,p[N].height,_,x,p[N].data):n.texImage2D(34069+N,0,S,p[N].width,p[N].height,0,_,x,p[N].data);for(var I=0;I<v.length;I++){var U=v[I].image[N].image;C?n.texSubImage2D(34069+N,I+1,0,0,U.width,U.height,_,x,U.data):n.texImage2D(34069+N,I+1,S,U.width,U.height,0,_,x,U.data)}}else{C?n.texSubImage2D(34069+N,0,0,0,_,x,p[N]):n.texImage2D(34069+N,0,S,_,x,p[N]);for(var F=0;F<v.length;F++){var B=v[F];C?n.texSubImage2D(34069+N,F+1,0,0,_,x,B.image[N]):n.texImage2D(34069+N,F+1,S,_,x,B.image[N])}}}w(i,y)&&E(34067),u.__version=l.version,i.onUpdate&&i.onUpdate(i)}t.__version=i.version}(o,t,i):n.bindTexture(34067,o.__webglTexture,33984+i)},this.rebindTextures=function(e,t,n){var i=r.get(e);void 0!==t&&F(i.__webglFramebuffer,e,e.texture,36064,3553),void 0!==n&&ie(e)},this.setupRenderTarget=function(t){var s=t.texture,l=r.get(t),u=r.get(s);t.addEventListener("dispose",A),!0!==t.isWebGLMultipleRenderTargets&&(void 0===u.__webglTexture&&(u.__webglTexture=e.createTexture()),u.__version=s.version,o.memory.textures++);var d=!0===t.isWebGLCubeRenderTarget,f=!0===t.isWebGLMultipleRenderTargets,h=M(t)||c;if(d){l.__webglFramebuffer=[];for(var p=0;p<6;p++)l.__webglFramebuffer[p]=e.createFramebuffer()}else{if(l.__webglFramebuffer=e.createFramebuffer(),f)if(i.drawBuffers)for(var m=t.texture,v=0,g=m.length;v<g;v++){var y=r.get(m[v]);void 0===y.__webglTexture&&(y.__webglTexture=e.createTexture(),o.memory.textures++)}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");if(c&&t.samples>0&&!1===oe(t)){var _=f?s:[s];l.__webglMultisampledFramebuffer=e.createFramebuffer(),l.__webglColorRenderbuffer=[],n.bindFramebuffer(36160,l.__webglMultisampledFramebuffer);for(var x=0;x<_.length;x++){var b=_[x];l.__webglColorRenderbuffer[x]=e.createRenderbuffer(),e.bindRenderbuffer(36161,l.__webglColorRenderbuffer[x]);var S=a.convert(b.format,b.encoding),k=a.convert(b.type),C=T(b.internalFormat,S,k,b.encoding,!0===t.isXRRenderTarget),L=ae(t);e.renderbufferStorageMultisample(36161,L,C,t.width,t.height),e.framebufferRenderbuffer(36160,36064+x,36161,l.__webglColorRenderbuffer[x])}e.bindRenderbuffer(36161,null),t.depthBuffer&&(l.__webglDepthRenderbuffer=e.createRenderbuffer(),B(l.__webglDepthRenderbuffer,t,!0)),n.bindFramebuffer(36160,null)}}if(d){n.bindTexture(34067,u.__webglTexture),O(34067,s,h);for(var P=0;P<6;P++)F(l.__webglFramebuffer[P],t,s,36064,34069+P);w(s,h)&&E(34067),n.unbindTexture()}else if(f){for(var R=t.texture,D=0,N=R.length;D<N;D++){var I=R[D],z=r.get(I);n.bindTexture(3553,z.__webglTexture),O(3553,I,h),F(l.__webglFramebuffer,t,I,36064+D,3553),w(I,h)&&E(3553)}n.unbindTexture()}else{var U=3553;(t.isWebGL3DRenderTarget||t.isWebGLArrayRenderTarget)&&(c?U=t.isWebGL3DRenderTarget?32879:35866:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),n.bindTexture(U,u.__webglTexture),O(U,s,h),F(l.__webglFramebuffer,t,s,36064,U),w(s,h)&&E(U),n.unbindTexture()}t.depthBuffer&&ie(t)},this.updateRenderTargetMipmap=function(e){for(var t=M(e)||c,i=!0===e.isWebGLMultipleRenderTargets?e.texture:[e.texture],a=0,o=i.length;a<o;a++){var s=i[a];if(w(s,t)){var l=e.isWebGLCubeRenderTarget?34067:3553,u=r.get(s).__webglTexture;n.bindTexture(l,u),E(l),n.unbindTexture()}}},this.updateMultisampleRenderTarget=function(t){if(c&&t.samples>0&&!1===oe(t)){var i=t.isWebGLMultipleRenderTargets?t.texture:[t.texture],a=t.width,o=t.height,s=16384,l=[],u=t.stencilBuffer?33306:36096,d=r.get(t),f=!0===t.isWebGLMultipleRenderTargets;if(f)for(var h=0;h<i.length;h++)n.bindFramebuffer(36160,d.__webglMultisampledFramebuffer),e.framebufferRenderbuffer(36160,36064+h,36161,null),n.bindFramebuffer(36160,d.__webglFramebuffer),e.framebufferTexture2D(36009,36064+h,3553,null,0);n.bindFramebuffer(36008,d.__webglMultisampledFramebuffer),n.bindFramebuffer(36009,d.__webglFramebuffer);for(var p=0;p<i.length;p++){l.push(36064+p),t.depthBuffer&&l.push(u);var m=void 0!==d.__ignoreDepthValues&&d.__ignoreDepthValues;if(!1===m&&(t.depthBuffer&&(s|=256),t.stencilBuffer&&(s|=1024)),f&&e.framebufferRenderbuffer(36008,36064,36161,d.__webglColorRenderbuffer[p]),!0===m&&(e.invalidateFramebuffer(36008,[u]),e.invalidateFramebuffer(36009,[u])),f){var g=r.get(i[p]).__webglTexture;e.framebufferTexture2D(36009,36064,3553,g,0)}e.blitFramebuffer(0,0,a,o,0,0,a,o,s,9728),v&&e.invalidateFramebuffer(36008,l)}if(n.bindFramebuffer(36008,null),n.bindFramebuffer(36009,null),f)for(var y=0;y<i.length;y++){n.bindFramebuffer(36160,d.__webglMultisampledFramebuffer),e.framebufferRenderbuffer(36160,36064+y,36161,d.__webglColorRenderbuffer[y]);var _=r.get(i[y]).__webglTexture;n.bindFramebuffer(36160,d.__webglFramebuffer),e.framebufferTexture2D(36009,36064+y,3553,_,0)}n.bindFramebuffer(36009,d.__webglMultisampledFramebuffer)}},this.setupDepthRenderbuffer=ie,this.setupFrameBufferTexture=F,this.useMultisampledRTT=oe}function so(e,t,n){var r=n.isWebGL2;return{convert:function(n){var i,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;if(n===Z)return 5121;if(1017===n)return 32819;if(1018===n)return 32820;if(1010===n)return 5120;if(1011===n)return 5122;if(n===K)return 5123;if(1013===n)return 5124;if(n===Q)return 5125;if(n===$)return 5126;if(n===J)return r?5131:null!==(i=t.get("OES_texture_half_float"))?i.HALF_FLOAT_OES:null;if(1021===n)return 6406;if(n===te)return 6408;if(1024===n)return 6409;if(1025===n)return 6410;if(n===ne)return 6402;if(n===re)return 34041;if(1022===n)return console.warn("THREE.WebGLRenderer: THREE.RGBFormat has been removed. Use THREE.RGBAFormat instead. https://github.com/mrdoob/three.js/pull/23228"),6408;if(n===He)return null!==(i=t.get("EXT_sRGB"))?i.SRGB_ALPHA_EXT:null;if(1028===n)return 6403;if(1029===n)return 36244;if(1030===n)return 33319;if(1031===n)return 33320;if(1033===n)return 36249;if(n===ie||n===ae||n===oe||n===se)if(a===Oe){if(null===(i=t.get("WEBGL_compressed_texture_s3tc_srgb")))return null;if(n===ie)return i.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(n===ae)return i.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(n===oe)return i.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(n===se)return i.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else{if(null===(i=t.get("WEBGL_compressed_texture_s3tc")))return null;if(n===ie)return i.COMPRESSED_RGB_S3TC_DXT1_EXT;if(n===ae)return i.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(n===oe)return i.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(n===se)return i.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(n===le||n===ue||n===ce||n===de){if(null===(i=t.get("WEBGL_compressed_texture_pvrtc")))return null;if(n===le)return i.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(n===ue)return i.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(n===ce)return i.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(n===de)return i.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(36196===n)return null!==(i=t.get("WEBGL_compressed_texture_etc1"))?i.COMPRESSED_RGB_ETC1_WEBGL:null;if(n===fe||n===he){if(null===(i=t.get("WEBGL_compressed_texture_etc")))return null;if(n===fe)return a===Oe?i.COMPRESSED_SRGB8_ETC2:i.COMPRESSED_RGB8_ETC2;if(n===he)return a===Oe?i.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:i.COMPRESSED_RGBA8_ETC2_EAC}if(n===pe||n===me||n===ve||n===ge||n===ye||n===_e||n===xe||n===be||n===Se||n===Me||n===we||n===Ee||n===Te||n===ke){if(null===(i=t.get("WEBGL_compressed_texture_astc")))return null;if(n===pe)return a===Oe?i.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:i.COMPRESSED_RGBA_ASTC_4x4_KHR;if(n===me)return a===Oe?i.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:i.COMPRESSED_RGBA_ASTC_5x4_KHR;if(n===ve)return a===Oe?i.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:i.COMPRESSED_RGBA_ASTC_5x5_KHR;if(n===ge)return a===Oe?i.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:i.COMPRESSED_RGBA_ASTC_6x5_KHR;if(n===ye)return a===Oe?i.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:i.COMPRESSED_RGBA_ASTC_6x6_KHR;if(n===_e)return a===Oe?i.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:i.COMPRESSED_RGBA_ASTC_8x5_KHR;if(n===xe)return a===Oe?i.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:i.COMPRESSED_RGBA_ASTC_8x6_KHR;if(n===be)return a===Oe?i.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:i.COMPRESSED_RGBA_ASTC_8x8_KHR;if(n===Se)return a===Oe?i.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:i.COMPRESSED_RGBA_ASTC_10x5_KHR;if(n===Me)return a===Oe?i.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:i.COMPRESSED_RGBA_ASTC_10x6_KHR;if(n===we)return a===Oe?i.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:i.COMPRESSED_RGBA_ASTC_10x8_KHR;if(n===Ee)return a===Oe?i.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:i.COMPRESSED_RGBA_ASTC_10x10_KHR;if(n===Te)return a===Oe?i.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:i.COMPRESSED_RGBA_ASTC_12x10_KHR;if(n===ke)return a===Oe?i.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:i.COMPRESSED_RGBA_ASTC_12x12_KHR}if(n===Ce){if(null===(i=t.get("EXT_texture_compression_bptc")))return null;if(n===Ce)return a===Oe?i.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:i.COMPRESSED_RGBA_BPTC_UNORM_EXT}return n===ee?r?34042:null!==(i=t.get("WEBGL_depth_texture"))?i.UNSIGNED_INT_24_8_WEBGL:null:void 0!==e[n]?e[n]:null}}}var lo=function(e){g(n,e);var t=x(n);function n(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];return w(this,n),(e=t.call(this)).isArrayCamera=!0,e.cameras=r,e}return T(n)}(kr),uo=function(e){g(n,e);var t=x(n);function n(){var e;return w(this,n),(e=t.call(this)).isGroup=!0,e.type="Group",e}return T(n)}(An),co={type:"move"},fo=function(){function e(){w(this,e),this._targetRay=null,this._grip=null,this._hand=null}return T(e,[{key:"getHandSpace",value:function(){return null===this._hand&&(this._hand=new uo,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}},{key:"getTargetRaySpace",value:function(){return null===this._targetRay&&(this._targetRay=new uo,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new Ct,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new Ct),this._targetRay}},{key:"getGripSpace",value:function(){return null===this._grip&&(this._grip=new uo,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new Ct,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new Ct),this._grip}},{key:"dispatchEvent",value:function(e){return null!==this._targetRay&&this._targetRay.dispatchEvent(e),null!==this._grip&&this._grip.dispatchEvent(e),null!==this._hand&&this._hand.dispatchEvent(e),this}},{key:"connect",value:function(e){if(e&&e.hand){var t=this._hand;if(t){var n,r=f(e.hand.values());try{for(r.s();!(n=r.n()).done;){var i=n.value;this._getHandJoint(t,i)}}catch(a){r.e(a)}finally{r.f()}}}return this.dispatchEvent({type:"connected",data:e}),this}},{key:"disconnect",value:function(e){return this.dispatchEvent({type:"disconnected",data:e}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this}},{key:"update",value:function(e,t,n){var r=null,i=null,a=null,o=this._targetRay,s=this._grip,l=this._hand;if(e&&"visible-blurred"!==t.session.visibilityState){if(l&&e.hand){a=!0;var u,c=f(e.hand.values());try{for(c.s();!(u=c.n()).done;){var d=u.value,h=t.getJointPose(d,n),p=this._getHandJoint(l,d);null!==h&&(p.matrix.fromArray(h.transform.matrix),p.matrix.decompose(p.position,p.rotation,p.scale),p.jointRadius=h.radius),p.visible=null!==h}}catch(y){c.e(y)}finally{c.f()}var m=l.joints["index-finger-tip"],v=l.joints["thumb-tip"],g=m.position.distanceTo(v.position);l.inputState.pinching&&g>.025?(l.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!l.inputState.pinching&&g<=.015&&(l.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else null!==s&&e.gripSpace&&null!==(i=t.getPose(e.gripSpace,n))&&(s.matrix.fromArray(i.transform.matrix),s.matrix.decompose(s.position,s.rotation,s.scale),i.linearVelocity?(s.hasLinearVelocity=!0,s.linearVelocity.copy(i.linearVelocity)):s.hasLinearVelocity=!1,i.angularVelocity?(s.hasAngularVelocity=!0,s.angularVelocity.copy(i.angularVelocity)):s.hasAngularVelocity=!1);null!==o&&(null===(r=t.getPose(e.targetRaySpace,n))&&null!==i&&(r=i),null!==r&&(o.matrix.fromArray(r.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),r.linearVelocity?(o.hasLinearVelocity=!0,o.linearVelocity.copy(r.linearVelocity)):o.hasLinearVelocity=!1,r.angularVelocity?(o.hasAngularVelocity=!0,o.angularVelocity.copy(r.angularVelocity)):o.hasAngularVelocity=!1,this.dispatchEvent(co)))}return null!==o&&(o.visible=null!==r),null!==s&&(s.visible=null!==i),null!==l&&(l.visible=null!==a),this}},{key:"_getHandJoint",value:function(e,t){if(void 0===e.joints[t.jointName]){var n=new uo;n.matrixAutoUpdate=!1,n.visible=!1,e.joints[t.jointName]=n,e.add(n)}return e.joints[t.jointName]}}]),e}(),ho=function(e){g(n,e);var t=x(n);function n(e,r,i,a,o,s,l,u,c,d){var f;if(w(this,n),(d=void 0!==d?d:ne)!==ne&&d!==re)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");return void 0===i&&d===ne&&(i=Q),void 0===i&&d===re&&(i=ee),(f=t.call(this,null,a,o,s,l,u,d,i,c)).isDepthTexture=!0,f.image={width:e,height:r},f.magFilter=void 0!==l?l:W,f.minFilter=void 0!==u?u:W,f.flipY=!1,f.generateMipmaps=!1,f}return T(n)}(St),po=function(e){g(n,e);var t=x(n);function n(e,r){var i;w(this,n);var a=v(i=t.call(this)),o=null,s=1,l=null,c="local-floor",d=null,h=null,p=null,m=null,g=null,y=null,_=r.getContextAttributes(),x=null,b=null,S=[],E=[],T=new Set,k=new Map,C=new kr;C.layers.enable(1),C.viewport=new Mt;var L=new kr;L.layers.enable(2),L.viewport=new Mt;var A=[C,L],P=new lo;P.layers.enable(1),P.layers.enable(2);var R=null,D=null;function N(e){var t=E.indexOf(e.inputSource);if(-1!==t){var n=S[t];void 0!==n&&n.dispatchEvent({type:e.type,data:e.inputSource})}}function I(){o.removeEventListener("select",N),o.removeEventListener("selectstart",N),o.removeEventListener("selectend",N),o.removeEventListener("squeeze",N),o.removeEventListener("squeezestart",N),o.removeEventListener("squeezeend",N),o.removeEventListener("end",I),o.removeEventListener("inputsourceschange",O);for(var t=0;t<S.length;t++){var n=E[t];null!==n&&(E[t]=null,S[t].disconnect(n))}R=null,D=null,e.setRenderTarget(x),g=null,m=null,p=null,o=null,b=null,V.stop(),a.isPresenting=!1,a.dispatchEvent({type:"sessionend"})}function O(e){for(var t=0;t<e.removed.length;t++){var n=e.removed[t],r=E.indexOf(n);r>=0&&(E[r]=null,S[r].disconnect(n))}for(var i=0;i<e.added.length;i++){var a=e.added[i],o=E.indexOf(a);if(-1===o){for(var s=0;s<S.length;s++){if(s>=E.length){E.push(a),o=s;break}if(null===E[s]){E[s]=a,o=s;break}}if(-1===o)break}var l=S[o];l&&l.connect(a)}}i.cameraAutoUpdate=!0,i.enabled=!1,i.isPresenting=!1,i.getController=function(e){var t=S[e];return void 0===t&&(t=new fo,S[e]=t),t.getTargetRaySpace()},i.getControllerGrip=function(e){var t=S[e];return void 0===t&&(t=new fo,S[e]=t),t.getGripSpace()},i.getHand=function(e){var t=S[e];return void 0===t&&(t=new fo,S[e]=t),t.getHandSpace()},i.setFramebufferScaleFactor=function(e){s=e,!0===a.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},i.setReferenceSpaceType=function(e){c=e,!0===a.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},i.getReferenceSpace=function(){return d||l},i.setReferenceSpace=function(e){d=e},i.getBaseLayer=function(){return null!==m?m:g},i.getBinding=function(){return p},i.getFrame=function(){return y},i.getSession=function(){return o},i.setSession=function(){var t,n=(t=M().mark((function t(n){var i,u,f,h,v;return M().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(null===(o=n)){t.next=25;break}if(x=e.getRenderTarget(),o.addEventListener("select",N),o.addEventListener("selectstart",N),o.addEventListener("selectend",N),o.addEventListener("squeeze",N),o.addEventListener("squeezestart",N),o.addEventListener("squeezeend",N),o.addEventListener("end",I),o.addEventListener("inputsourceschange",O),!0===_.xrCompatible){t.next=14;break}return t.next=14,r.makeXRCompatible();case 14:return void 0===o.renderState.layers||!1===e.capabilities.isWebGL2?(i={antialias:void 0!==o.renderState.layers||_.antialias,alpha:_.alpha,depth:_.depth,stencil:_.stencil,framebufferScaleFactor:s},g=new XRWebGLLayer(o,r,i),o.updateRenderState({baseLayer:g}),b=new wt(g.framebufferWidth,g.framebufferHeight,{format:te,type:Z,encoding:e.outputEncoding,stencilBuffer:_.stencil})):(u=null,f=null,h=null,_.depth&&(h=_.stencil?35056:33190,u=_.stencil?re:ne,f=_.stencil?ee:Q),v={colorFormat:32856,depthFormat:h,scaleFactor:s},p=new XRWebGLBinding(o,r),m=p.createProjectionLayer(v),o.updateRenderState({layers:[m]}),b=new wt(m.textureWidth,m.textureHeight,{format:te,type:Z,depthTexture:new ho(m.textureWidth,m.textureHeight,f,void 0,void 0,void 0,void 0,void 0,void 0,u),stencilBuffer:_.stencil,encoding:e.outputEncoding,samples:_.antialias?4:0}),e.properties.get(b).__ignoreDepthValues=m.ignoreDepthValues),b.isXRRenderTarget=!0,this.setFoveation(1),d=null,t.next=20,o.requestReferenceSpace(c);case 20:l=t.sent,V.setContext(o),V.start(),a.isPresenting=!0,a.dispatchEvent({type:"sessionstart"});case 25:case"end":return t.stop()}}),t,this)})),function(){var e=this,n=arguments;return new Promise((function(r,i){var a=t.apply(e,n);function o(e){u(a,r,i,o,s,"next",e)}function s(e){u(a,r,i,o,s,"throw",e)}o(void 0)}))});return function(e){return n.apply(this,arguments)}}();var z=new Ct,U=new Ct;function F(e,t){null===t?e.matrixWorld.copy(e.matrix):e.matrixWorld.multiplyMatrices(t.matrixWorld,e.matrix),e.matrixWorldInverse.copy(e.matrixWorld).invert()}i.updateCamera=function(e){if(null!==o){P.near=L.near=C.near=e.near,P.far=L.far=C.far=e.far,R===P.near&&D===P.far||(o.updateRenderState({depthNear:P.near,depthFar:P.far}),R=P.near,D=P.far);var t=e.parent,n=P.cameras;F(P,t);for(var r=0;r<n.length;r++)F(n[r],t);P.matrixWorld.decompose(P.position,P.quaternion,P.scale),e.matrix.copy(P.matrix),e.matrix.decompose(e.position,e.quaternion,e.scale);for(var i=e.children,a=0,s=i.length;a<s;a++)i[a].updateMatrixWorld(!0);2===n.length?function(e,t,n){z.setFromMatrixPosition(t.matrixWorld),U.setFromMatrixPosition(n.matrixWorld);var r=z.distanceTo(U),i=t.projectionMatrix.elements,a=n.projectionMatrix.elements,o=i[14]/(i[10]-1),s=i[14]/(i[10]+1),l=(i[9]+1)/i[5],u=(i[9]-1)/i[5],c=(i[8]-1)/i[0],d=(a[8]+1)/a[0],f=o*c,h=o*d,p=r/(-c+d),m=p*-c;t.matrixWorld.decompose(e.position,e.quaternion,e.scale),e.translateX(m),e.translateZ(p),e.matrixWorld.compose(e.position,e.quaternion,e.scale),e.matrixWorldInverse.copy(e.matrixWorld).invert();var v=o+p,g=s+p,y=f-m,_=h+(r-m),x=l*s/g*v,b=u*s/g*v;e.projectionMatrix.makePerspective(y,_,x,b,v,g)}(P,C,L):P.projectionMatrix.copy(C.projectionMatrix)}},i.getCamera=function(){return P},i.getFoveation=function(){return null!==m?m.fixedFoveation:null!==g?g.fixedFoveation:void 0},i.setFoveation=function(e){null!==m&&(m.fixedFoveation=e),null!==g&&void 0!==g.fixedFoveation&&(g.fixedFoveation=e)},i.getPlanes=function(){return T};var B=null;var V=new Fr;return V.setAnimationLoop((function(t,n){if(h=n.getViewerPose(d||l),y=n,null!==h){var r=h.views;null!==g&&(e.setRenderTargetFramebuffer(b,g.framebuffer),e.setRenderTarget(b));var i=!1;r.length!==P.cameras.length&&(P.cameras.length=0,i=!0);for(var o=0;o<r.length;o++){var s=r[o],u=null;if(null!==g)u=g.getViewport(s);else{var c=p.getViewSubImage(m,s);u=c.viewport,0===o&&(e.setRenderTargetTextures(b,c.colorTexture,m.ignoreDepthValues?void 0:c.depthStencilTexture),e.setRenderTarget(b))}var v=A[o];void 0===v&&((v=new kr).layers.enable(o),v.viewport=new Mt,A[o]=v),v.matrix.fromArray(s.transform.matrix),v.projectionMatrix.fromArray(s.projectionMatrix),v.viewport.set(u.x,u.y,u.width,u.height),0===o&&P.matrix.copy(v.matrix),!0===i&&P.cameras.push(v)}}for(var _=0;_<S.length;_++){var x=E[_],M=S[_];null!==x&&void 0!==M&&M.update(x,n,d||l)}if(B&&B(t,n),n.detectedPlanes){a.dispatchEvent({type:"planesdetected",data:n.detectedPlanes});var w,C=null,L=f(T);try{for(L.s();!(w=L.n()).done;){var R=w.value;n.detectedPlanes.has(R)||(null===C&&(C=[]),C.push(R))}}catch(V){L.e(V)}finally{L.f()}if(null!==C){var D,N=f(C);try{for(N.s();!(D=N.n()).done;){var I=D.value;T.delete(I),k.delete(I),a.dispatchEvent({type:"planeremoved",data:I})}}catch(V){N.e(V)}finally{N.f()}}var O,z=f(n.detectedPlanes);try{for(z.s();!(O=z.n()).done;){var U=O.value;if(T.has(U)){var F=k.get(U);U.lastChangedTime>F&&(k.set(U,U.lastChangedTime),a.dispatchEvent({type:"planechanged",data:U}))}else T.add(U),k.set(U,n.lastChangedTime),a.dispatchEvent({type:"planeadded",data:U})}}catch(V){z.e(V)}finally{z.f()}}y=null})),i.setAnimationLoop=function(e){B=e},i.dispose=function(){},i}return T(n)}(Ge);function mo(e,t){function n(n,r){n.opacity.value=r.opacity,r.color&&n.diffuse.value.copy(r.color),r.emissive&&n.emissive.value.copy(r.emissive).multiplyScalar(r.emissiveIntensity),r.map&&(n.map.value=r.map),r.alphaMap&&(n.alphaMap.value=r.alphaMap),r.bumpMap&&(n.bumpMap.value=r.bumpMap,n.bumpScale.value=r.bumpScale,1===r.side&&(n.bumpScale.value*=-1)),r.displacementMap&&(n.displacementMap.value=r.displacementMap,n.displacementScale.value=r.displacementScale,n.displacementBias.value=r.displacementBias),r.emissiveMap&&(n.emissiveMap.value=r.emissiveMap),r.normalMap&&(n.normalMap.value=r.normalMap,n.normalScale.value.copy(r.normalScale),1===r.side&&n.normalScale.value.negate()),r.specularMap&&(n.specularMap.value=r.specularMap),r.alphaTest>0&&(n.alphaTest.value=r.alphaTest);var i,a,o=t.get(r).envMap;if(o&&(n.envMap.value=o,n.flipEnvMap.value=o.isCubeTexture&&!1===o.isRenderTargetTexture?-1:1,n.reflectivity.value=r.reflectivity,n.ior.value=r.ior,n.refractionRatio.value=r.refractionRatio),r.lightMap){n.lightMap.value=r.lightMap;var s=!0!==e.physicallyCorrectLights?Math.PI:1;n.lightMapIntensity.value=r.lightMapIntensity*s}r.aoMap&&(n.aoMap.value=r.aoMap,n.aoMapIntensity.value=r.aoMapIntensity),r.map?i=r.map:r.specularMap?i=r.specularMap:r.displacementMap?i=r.displacementMap:r.normalMap?i=r.normalMap:r.bumpMap?i=r.bumpMap:r.roughnessMap?i=r.roughnessMap:r.metalnessMap?i=r.metalnessMap:r.alphaMap?i=r.alphaMap:r.emissiveMap?i=r.emissiveMap:r.clearcoatMap?i=r.clearcoatMap:r.clearcoatNormalMap?i=r.clearcoatNormalMap:r.clearcoatRoughnessMap?i=r.clearcoatRoughnessMap:r.iridescenceMap?i=r.iridescenceMap:r.iridescenceThicknessMap?i=r.iridescenceThicknessMap:r.specularIntensityMap?i=r.specularIntensityMap:r.specularColorMap?i=r.specularColorMap:r.transmissionMap?i=r.transmissionMap:r.thicknessMap?i=r.thicknessMap:r.sheenColorMap?i=r.sheenColorMap:r.sheenRoughnessMap&&(i=r.sheenRoughnessMap),void 0!==i&&(i.isWebGLRenderTarget&&(i=i.texture),!0===i.matrixAutoUpdate&&i.updateMatrix(),n.uvTransform.value.copy(i.matrix)),r.aoMap?a=r.aoMap:r.lightMap&&(a=r.lightMap),void 0!==a&&(a.isWebGLRenderTarget&&(a=a.texture),!0===a.matrixAutoUpdate&&a.updateMatrix(),n.uv2Transform.value.copy(a.matrix))}return{refreshFogUniforms:function(t,n){n.color.getRGB(t.fogColor.value,Mr(e)),n.isFog?(t.fogNear.value=n.near,t.fogFar.value=n.far):n.isFogExp2&&(t.fogDensity.value=n.density)},refreshMaterialUniforms:function(e,r,i,a,o){r.isMeshBasicMaterial||r.isMeshLambertMaterial?n(e,r):r.isMeshToonMaterial?(n(e,r),function(e,t){t.gradientMap&&(e.gradientMap.value=t.gradientMap)}(e,r)):r.isMeshPhongMaterial?(n(e,r),function(e,t){e.specular.value.copy(t.specular),e.shininess.value=Math.max(t.shininess,1e-4)}(e,r)):r.isMeshStandardMaterial?(n(e,r),function(e,n){e.roughness.value=n.roughness,e.metalness.value=n.metalness,n.roughnessMap&&(e.roughnessMap.value=n.roughnessMap);n.metalnessMap&&(e.metalnessMap.value=n.metalnessMap);var r=t.get(n).envMap;r&&(e.envMapIntensity.value=n.envMapIntensity)}(e,r),r.isMeshPhysicalMaterial&&function(e,t,n){e.ior.value=t.ior,t.sheen>0&&(e.sheenColor.value.copy(t.sheenColor).multiplyScalar(t.sheen),e.sheenRoughness.value=t.sheenRoughness,t.sheenColorMap&&(e.sheenColorMap.value=t.sheenColorMap),t.sheenRoughnessMap&&(e.sheenRoughnessMap.value=t.sheenRoughnessMap));t.clearcoat>0&&(e.clearcoat.value=t.clearcoat,e.clearcoatRoughness.value=t.clearcoatRoughness,t.clearcoatMap&&(e.clearcoatMap.value=t.clearcoatMap),t.clearcoatRoughnessMap&&(e.clearcoatRoughnessMap.value=t.clearcoatRoughnessMap),t.clearcoatNormalMap&&(e.clearcoatNormalScale.value.copy(t.clearcoatNormalScale),e.clearcoatNormalMap.value=t.clearcoatNormalMap,1===t.side&&e.clearcoatNormalScale.value.negate()));t.iridescence>0&&(e.iridescence.value=t.iridescence,e.iridescenceIOR.value=t.iridescenceIOR,e.iridescenceThicknessMinimum.value=t.iridescenceThicknessRange[0],e.iridescenceThicknessMaximum.value=t.iridescenceThicknessRange[1],t.iridescenceMap&&(e.iridescenceMap.value=t.iridescenceMap),t.iridescenceThicknessMap&&(e.iridescenceThicknessMap.value=t.iridescenceThicknessMap));t.transmission>0&&(e.transmission.value=t.transmission,e.transmissionSamplerMap.value=n.texture,e.transmissionSamplerSize.value.set(n.width,n.height),t.transmissionMap&&(e.transmissionMap.value=t.transmissionMap),e.thickness.value=t.thickness,t.thicknessMap&&(e.thicknessMap.value=t.thicknessMap),e.attenuationDistance.value=t.attenuationDistance,e.attenuationColor.value.copy(t.attenuationColor));e.specularIntensity.value=t.specularIntensity,e.specularColor.value.copy(t.specularColor),t.specularIntensityMap&&(e.specularIntensityMap.value=t.specularIntensityMap);t.specularColorMap&&(e.specularColorMap.value=t.specularColorMap)}(e,r,o)):r.isMeshMatcapMaterial?(n(e,r),function(e,t){t.matcap&&(e.matcap.value=t.matcap)}(e,r)):r.isMeshDepthMaterial?n(e,r):r.isMeshDistanceMaterial?(n(e,r),function(e,t){e.referencePosition.value.copy(t.referencePosition),e.nearDistance.value=t.nearDistance,e.farDistance.value=t.farDistance}(e,r)):r.isMeshNormalMaterial?n(e,r):r.isLineBasicMaterial?(function(e,t){e.diffuse.value.copy(t.color),e.opacity.value=t.opacity}(e,r),r.isLineDashedMaterial&&function(e,t){e.dashSize.value=t.dashSize,e.totalSize.value=t.dashSize+t.gapSize,e.scale.value=t.scale}(e,r)):r.isPointsMaterial?function(e,t,n,r){e.diffuse.value.copy(t.color),e.opacity.value=t.opacity,e.size.value=t.size*n,e.scale.value=.5*r,t.map&&(e.map.value=t.map);t.alphaMap&&(e.alphaMap.value=t.alphaMap);t.alphaTest>0&&(e.alphaTest.value=t.alphaTest);var i;t.map?i=t.map:t.alphaMap&&(i=t.alphaMap);void 0!==i&&(!0===i.matrixAutoUpdate&&i.updateMatrix(),e.uvTransform.value.copy(i.matrix))}(e,r,i,a):r.isSpriteMaterial?function(e,t){e.diffuse.value.copy(t.color),e.opacity.value=t.opacity,e.rotation.value=t.rotation,t.map&&(e.map.value=t.map);t.alphaMap&&(e.alphaMap.value=t.alphaMap);t.alphaTest>0&&(e.alphaTest.value=t.alphaTest);var n;t.map?n=t.map:t.alphaMap&&(n=t.alphaMap);void 0!==n&&(!0===n.matrixAutoUpdate&&n.updateMatrix(),e.uvTransform.value.copy(n.matrix))}(e,r):r.isShadowMaterial?(e.color.value.copy(r.color),e.opacity.value=r.opacity):r.isShaderMaterial&&(r.uniformsNeedUpdate=!1)}}}function vo(e,t,n,r){var i={},a={},o=[],s=n.isWebGL2?e.getParameter(35375):0;function l(e,t,n){var r=e.value;if(void 0===n[t]){if("number"===typeof r)n[t]=r;else{for(var i=Array.isArray(r)?r:[r],a=[],o=0;o<i.length;o++)a.push(i[o].clone());n[t]=a}return!0}if("number"===typeof r){if(n[t]!==r)return n[t]=r,!0}else for(var s=Array.isArray(n[t])?n[t]:[n[t]],l=Array.isArray(r)?r:[r],u=0;u<s.length;u++){var c=s[u];if(!1===c.equals(l[u]))return c.copy(l[u]),!0}return!1}function u(e){var t={boundary:0,storage:0};return"number"===typeof e?(t.boundary=4,t.storage=4):e.isVector2?(t.boundary=8,t.storage=8):e.isVector3||e.isColor?(t.boundary=16,t.storage=12):e.isVector4?(t.boundary=16,t.storage=16):e.isMatrix3?(t.boundary=48,t.storage=48):e.isMatrix4?(t.boundary=64,t.storage=64):e.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",e),t}function c(t){var n=t.target;n.removeEventListener("dispose",c);var r=o.indexOf(n.__bindingPointIndex);o.splice(r,1),e.deleteBuffer(i[n.id]),delete i[n.id],delete a[n.id]}return{bind:function(e,t){var n=t.program;r.uniformBlockBinding(e,n)},update:function(n,d){var f=i[n.id];void 0===f&&(!function(e){for(var t=e.uniforms,n=0,r=16,i=0,a=0,o=t.length;a<o;a++){for(var s=t[a],l={boundary:0,storage:0},c=Array.isArray(s.value)?s.value:[s.value],d=0,f=c.length;d<f;d++){var h=u(c[d]);l.boundary+=h.boundary,l.storage+=h.storage}if(s.__data=new Float32Array(l.storage/Float32Array.BYTES_PER_ELEMENT),s.__offset=n,a>0)0!==(i=n%r)&&r-i-l.boundary<0&&(n+=r-i,s.__offset=n);n+=l.storage}(i=n%r)>0&&(n+=r-i);e.__size=n,e.__cache={}}(n),f=function(t){var n=function(){for(var e=0;e<s;e++)if(-1===o.indexOf(e))return o.push(e),e;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}();t.__bindingPointIndex=n;var r=e.createBuffer(),i=t.__size,a=t.usage;return e.bindBuffer(35345,r),e.bufferData(35345,i,a),e.bindBuffer(35345,null),e.bindBufferBase(35345,n,r),r}(n),i[n.id]=f,n.addEventListener("dispose",c));var h=d.program;r.updateUBOMapping(n,h);var p=t.render.frame;a[n.id]!==p&&(!function(t){var n=i[t.id],r=t.uniforms,a=t.__cache;e.bindBuffer(35345,n);for(var o=0,s=r.length;o<s;o++){var c=r[o];if(!0===l(c,o,a)){for(var d=c.__offset,f=Array.isArray(c.value)?c.value:[c.value],h=0,p=0;p<f.length;p++){var m=f[p],v=u(m);"number"===typeof m?(c.__data[0]=m,e.bufferSubData(35345,d+h,c.__data)):m.isMatrix3?(c.__data[0]=m.elements[0],c.__data[1]=m.elements[1],c.__data[2]=m.elements[2],c.__data[3]=m.elements[0],c.__data[4]=m.elements[3],c.__data[5]=m.elements[4],c.__data[6]=m.elements[5],c.__data[7]=m.elements[0],c.__data[8]=m.elements[6],c.__data[9]=m.elements[7],c.__data[10]=m.elements[8],c.__data[11]=m.elements[0]):(m.toArray(c.__data,h),h+=v.storage/Float32Array.BYTES_PER_ELEMENT)}e.bufferSubData(35345,d,c.__data)}}e.bindBuffer(35345,null)}(n),a[n.id]=p)},dispose:function(){for(var t in i)e.deleteBuffer(i[t]);o=[],i={},a={}}}}function go(){var e=at("canvas");return e.style.display="block",e}function yo(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};this.isWebGLRenderer=!0;var t,n=void 0!==e.canvas?e.canvas:go(),r=void 0!==e.context?e.context:null,i=void 0===e.depth||e.depth,a=void 0===e.stencil||e.stencil,o=void 0!==e.antialias&&e.antialias,s=void 0===e.premultipliedAlpha||e.premultipliedAlpha,l=void 0!==e.preserveDrawingBuffer&&e.preserveDrawingBuffer,u=void 0!==e.powerPreference?e.powerPreference:"default",c=void 0!==e.failIfMajorPerformanceCaveat&&e.failIfMajorPerformanceCaveat;t=null!==r?r.getContextAttributes().alpha:void 0!==e.alpha&&e.alpha;var d=null,f=null,h=[],p=[];this.domElement=n,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputEncoding=Ie,this.physicallyCorrectLights=!1,this.toneMapping=0,this.toneMappingExposure=1;var m=this,v=!1,g=0,y=0,_=null,x=-1,b=null,S=new Mt,M=new Mt,w=null,E=n.width,T=n.height,C=1,L=null,A=null,P=new Mt(0,0,E,T),R=new Mt(0,0,E,T),D=!1,N=new Ur,I=!1,O=!1,z=null,U=new an,F=new tt,B=new Ct,V={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function H(){return null===_?C:1}var G,W,j,q,X,K,Q,ee,ne,re,ie,ae,oe,se,le,ue,ce,de,fe,he,pe,me,ve,ge,ye=r;function _e(e,t){for(var r=0;r<e.length;r++){var i=e[r],a=n.getContext(i,t);if(null!==a)return a}return null}try{var xe={alpha:!0,depth:i,stencil:a,antialias:o,premultipliedAlpha:s,preserveDrawingBuffer:l,powerPreference:u,failIfMajorPerformanceCaveat:c};if("setAttribute"in n&&n.setAttribute("data-engine","three.js r".concat(k)),n.addEventListener("webglcontextlost",we,!1),n.addEventListener("webglcontextrestored",Ee,!1),n.addEventListener("webglcontextcreationerror",Te,!1),null===ye){var be=["webgl2","webgl","experimental-webgl"];if(!0===m.isWebGL1Renderer&&be.shift(),null===(ye=_e(be,xe)))throw _e(be)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}void 0===ye.getShaderPrecisionFormat&&(ye.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(qe){throw console.error("THREE.WebGLRenderer: "+qe.message),qe}function Se(){G=new hi(ye),W=new Zr(ye,G,e),G.init(W),me=new so(ye,G,W),j=new ao(ye,G,W),q=new vi,X=new ja,K=new oo(ye,G,j,X,W,me,q),Q=new Qr(m),ee=new fi(m),ne=new Br(ye,W),ve=new Xr(ye,G,ne,W),re=new pi(ye,ne,q,ve),ie=new xi(ye,re,ne,q),fe=new _i(ye,W,K),ue=new Kr(X),ae=new Wa(m,Q,ee,G,W,ve,ue),oe=new mo(m,X),se=new Za,le=new to(G,W),de=new qr(m,Q,ee,j,ie,t,s),ce=new io(m,ie,W),ge=new vo(ye,q,W,j),he=new Yr(ye,G,q,W),pe=new mi(ye,G,q,W),q.programs=ae.programs,m.capabilities=W,m.extensions=G,m.properties=X,m.renderLists=se,m.shadowMap=ce,m.state=j,m.info=q}Se();var Me=new po(m,ye);function we(e){e.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),v=!0}function Ee(){console.log("THREE.WebGLRenderer: Context Restored."),v=!1;var e=q.autoReset,t=ce.enabled,n=ce.autoUpdate,r=ce.needsUpdate,i=ce.type;Se(),q.autoReset=e,ce.enabled=t,ce.autoUpdate=n,ce.needsUpdate=r,ce.type=i}function Te(e){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",e.statusMessage)}function ke(e){var t=e.target;t.removeEventListener("dispose",ke),Ce(t)}function Ce(e){Le(e),X.remove(e)}function Le(e){var t=X.get(e).programs;void 0!==t&&(t.forEach((function(e){ae.releaseProgram(e)})),e.isShaderMaterial&&ae.releaseShaderCache(e))}this.xr=Me,this.getContext=function(){return ye},this.getContextAttributes=function(){return ye.getContextAttributes()},this.forceContextLoss=function(){var e=G.get("WEBGL_lose_context");e&&e.loseContext()},this.forceContextRestore=function(){var e=G.get("WEBGL_lose_context");e&&e.restoreContext()},this.getPixelRatio=function(){return C},this.setPixelRatio=function(e){void 0!==e&&(C=e,this.setSize(E,T,!1))},this.getSize=function(e){return e.set(E,T)},this.setSize=function(e,t,r){Me.isPresenting?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(E=e,T=t,n.width=Math.floor(e*C),n.height=Math.floor(t*C),!1!==r&&(n.style.width=e+"px",n.style.height=t+"px"),this.setViewport(0,0,e,t))},this.getDrawingBufferSize=function(e){return e.set(E*C,T*C).floor()},this.setDrawingBufferSize=function(e,t,r){E=e,T=t,C=r,n.width=Math.floor(e*r),n.height=Math.floor(t*r),this.setViewport(0,0,e,t)},this.getCurrentViewport=function(e){return e.copy(S)},this.getViewport=function(e){return e.copy(P)},this.setViewport=function(e,t,n,r){e.isVector4?P.set(e.x,e.y,e.z,e.w):P.set(e,t,n,r),j.viewport(S.copy(P).multiplyScalar(C).floor())},this.getScissor=function(e){return e.copy(R)},this.setScissor=function(e,t,n,r){e.isVector4?R.set(e.x,e.y,e.z,e.w):R.set(e,t,n,r),j.scissor(M.copy(R).multiplyScalar(C).floor())},this.getScissorTest=function(){return D},this.setScissorTest=function(e){j.setScissorTest(D=e)},this.setOpaqueSort=function(e){L=e},this.setTransparentSort=function(e){A=e},this.getClearColor=function(e){return e.copy(de.getClearColor())},this.setClearColor=function(){de.setClearColor.apply(de,arguments)},this.getClearAlpha=function(){return de.getClearAlpha()},this.setClearAlpha=function(){de.setClearAlpha.apply(de,arguments)},this.clear=function(){var e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],r=0;e&&(r|=16384),t&&(r|=256),n&&(r|=1024),ye.clear(r)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){n.removeEventListener("webglcontextlost",we,!1),n.removeEventListener("webglcontextrestored",Ee,!1),n.removeEventListener("webglcontextcreationerror",Te,!1),se.dispose(),le.dispose(),X.dispose(),Q.dispose(),ee.dispose(),ie.dispose(),ve.dispose(),ge.dispose(),ae.dispose(),Me.dispose(),Me.removeEventListener("sessionstart",Re),Me.removeEventListener("sessionend",De),z&&(z.dispose(),z=null),Ne.stop()},this.renderBufferDirect=function(e,t,n,r,i,a){null===t&&(t=V);var o=i.isMesh&&i.matrixWorld.determinant()<0,s=Ge(e,t,n,r,i);j.setMaterial(r,o);var l=n.index,u=1;!0===r.wireframe&&(l=re.getWireframeAttribute(n),u=2);var c=n.drawRange,d=n.attributes.position,f=c.start*u,h=(c.start+c.count)*u;null!==a&&(f=Math.max(f,a.start*u),h=Math.min(h,(a.start+a.count)*u)),null!==l?(f=Math.max(f,0),h=Math.min(h,l.count)):void 0!==d&&null!==d&&(f=Math.max(f,0),h=Math.min(h,d.count));var p=h-f;if(!(p<0||p===1/0)){var m;ve.setup(i,r,s,n,l);var v=he;if(null!==l&&(m=ne.get(l),(v=pe).setIndex(m)),i.isMesh)!0===r.wireframe?(j.setLineWidth(r.wireframeLinewidth*H()),v.setMode(1)):v.setMode(4);else if(i.isLine){var g=r.linewidth;void 0===g&&(g=1),j.setLineWidth(g*H()),i.isLineSegments?v.setMode(1):i.isLineLoop?v.setMode(2):v.setMode(3)}else i.isPoints?v.setMode(0):i.isSprite&&v.setMode(4);if(i.isInstancedMesh)v.renderInstances(f,p,i.count);else if(n.isInstancedBufferGeometry){var y=void 0!==n._maxInstanceCount?n._maxInstanceCount:1/0,_=Math.min(n.instanceCount,y);v.renderInstances(f,p,_)}else v.render(f,p)}},this.compile=function(e,t){function n(e,t,n){!0===e.transparent&&3===e.side?(e.side=1,e.needsUpdate=!0,Ve(e,t,n),e.side=0,e.needsUpdate=!0,Ve(e,t,n),e.side=3):Ve(e,t,n)}(f=le.get(e)).init(),p.push(f),e.traverseVisible((function(e){e.isLight&&e.layers.test(t.layers)&&(f.pushLight(e),e.castShadow&&f.pushShadow(e))})),f.setupLights(m.physicallyCorrectLights),e.traverse((function(t){var r=t.material;if(r)if(Array.isArray(r))for(var i=0;i<r.length;i++){n(r[i],e,t)}else n(r,e,t)})),p.pop(),f=null};var Ae=null;function Pe(e){Ae&&Ae(e)}function Re(){Ne.stop()}function De(){Ne.start()}var Ne=new Fr;function Oe(e,t,n,r){if(!1!==e.visible){if(e.layers.test(t.layers))if(e.isGroup)n=e.renderOrder;else if(e.isLOD)!0===e.autoUpdate&&e.update(t);else if(e.isLight)f.pushLight(e),e.castShadow&&f.pushShadow(e);else if(e.isSprite){if(!e.frustumCulled||N.intersectsSprite(e)){r&&B.setFromMatrixPosition(e.matrixWorld).applyMatrix4(U);var i=ie.update(e),a=e.material;a.visible&&d.push(e,i,a,n,B.z,null)}}else if((e.isMesh||e.isLine||e.isPoints)&&(e.isSkinnedMesh&&e.skeleton.frame!==q.render.frame&&(e.skeleton.update(),e.skeleton.frame=q.render.frame),!e.frustumCulled||N.intersectsObject(e))){r&&B.setFromMatrixPosition(e.matrixWorld).applyMatrix4(U);var o=ie.update(e),s=e.material;if(Array.isArray(s))for(var l=o.groups,u=0,c=l.length;u<c;u++){var h=l[u],p=s[h.materialIndex];p&&p.visible&&d.push(e,o,p,n,B.z,h)}else s.visible&&d.push(e,o,s,n,B.z,null)}for(var m=e.children,v=0,g=m.length;v<g;v++)Oe(m[v],t,n,r)}}function ze(e,t,n,r){var i=e.opaque,a=e.transmissive,o=e.transparent;f.setupLightsView(n),a.length>0&&Ue(i,t,n),r&&j.viewport(S.copy(r)),i.length>0&&Fe(i,t,n),a.length>0&&Fe(a,t,n),o.length>0&&Fe(o,t,n),j.buffers.depth.setTest(!0),j.buffers.depth.setMask(!0),j.buffers.color.setMask(!0),j.setPolygonOffset(!1)}function Ue(e,t,n){var r=W.isWebGL2;null===z&&(z=new wt(1,1,{generateMipmaps:!0,type:G.has("EXT_color_buffer_half_float")?J:Z,minFilter:Y,samples:r&&!0===o?4:0})),m.getDrawingBufferSize(F),r?z.setSize(F.x,F.y):z.setSize($e(F.x),$e(F.y));var i=m.getRenderTarget();m.setRenderTarget(z),m.clear();var a=m.toneMapping;m.toneMapping=0,Fe(e,t,n),m.toneMapping=a,K.updateMultisampleRenderTarget(z),K.updateRenderTargetMipmap(z),m.setRenderTarget(i)}function Fe(e,t,n){for(var r=!0===t.isScene?t.overrideMaterial:null,i=0,a=e.length;i<a;i++){var o=e[i],s=o.object,l=o.geometry,u=null===r?o.material:r,c=o.group;s.layers.test(n.layers)&&Be(s,t,n,l,u,c)}}function Be(e,t,n,r,i,a){e.onBeforeRender(m,t,n,r,i,a),e.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse,e.matrixWorld),e.normalMatrix.getNormalMatrix(e.modelViewMatrix),i.onBeforeRender(m,t,n,r,e,a),!0===i.transparent&&3===i.side?(i.side=1,i.needsUpdate=!0,m.renderBufferDirect(n,t,r,i,e,a),i.side=0,i.needsUpdate=!0,m.renderBufferDirect(n,t,r,i,e,a),i.side=3):m.renderBufferDirect(n,t,r,i,e,a),e.onAfterRender(m,t,n,r,i,a)}function Ve(e,t,n){!0!==t.isScene&&(t=V);var r=X.get(e),i=f.state.lights,a=f.state.shadowsArray,o=i.state.version,s=ae.getParameters(e,i.state,a,t,n),l=ae.getProgramCacheKey(s),u=r.programs;r.environment=e.isMeshStandardMaterial?t.environment:null,r.fog=t.fog,r.envMap=(e.isMeshStandardMaterial?ee:Q).get(e.envMap||r.environment),void 0===u&&(e.addEventListener("dispose",ke),u=new Map,r.programs=u);var c=u.get(l);if(void 0!==c){if(r.currentProgram===c&&r.lightsStateVersion===o)return He(e,s),c}else s.uniforms=ae.getUniforms(e),e.onBuild(n,s,m),e.onBeforeCompile(s,m),c=ae.acquireProgram(s,l),u.set(l,c),r.uniforms=s.uniforms;var d=r.uniforms;(e.isShaderMaterial||e.isRawShaderMaterial)&&!0!==e.clipping||(d.clippingPlanes=ue.uniform),He(e,s),r.needsLights=je(e),r.lightsStateVersion=o,r.needsLights&&(d.ambientLightColor.value=i.state.ambient,d.lightProbe.value=i.state.probe,d.directionalLights.value=i.state.directional,d.directionalLightShadows.value=i.state.directionalShadow,d.spotLights.value=i.state.spot,d.spotLightShadows.value=i.state.spotShadow,d.rectAreaLights.value=i.state.rectArea,d.ltc_1.value=i.state.rectAreaLTC1,d.ltc_2.value=i.state.rectAreaLTC2,d.pointLights.value=i.state.point,d.pointLightShadows.value=i.state.pointShadow,d.hemisphereLights.value=i.state.hemi,d.directionalShadowMap.value=i.state.directionalShadowMap,d.directionalShadowMatrix.value=i.state.directionalShadowMatrix,d.spotShadowMap.value=i.state.spotShadowMap,d.spotLightMatrix.value=i.state.spotLightMatrix,d.spotLightMap.value=i.state.spotLightMap,d.pointShadowMap.value=i.state.pointShadowMap,d.pointShadowMatrix.value=i.state.pointShadowMatrix);var h=c.getUniforms(),p=wa.seqWithValue(h.seq,d);return r.currentProgram=c,r.uniformsList=p,c}function He(e,t){var n=X.get(e);n.outputEncoding=t.outputEncoding,n.instancing=t.instancing,n.skinning=t.skinning,n.morphTargets=t.morphTargets,n.morphNormals=t.morphNormals,n.morphColors=t.morphColors,n.morphTargetsCount=t.morphTargetsCount,n.numClippingPlanes=t.numClippingPlanes,n.numIntersection=t.numClipIntersection,n.vertexAlphas=t.vertexAlphas,n.vertexTangents=t.vertexTangents,n.toneMapping=t.toneMapping}function Ge(e,t,n,r,i){!0!==t.isScene&&(t=V),K.resetTextureUnits();var a=t.fog,o=r.isMeshStandardMaterial?t.environment:null,s=null===_?m.outputEncoding:!0===_.isXRRenderTarget?_.texture.encoding:Ie,l=(r.isMeshStandardMaterial?ee:Q).get(r.envMap||o),u=!0===r.vertexColors&&!!n.attributes.color&&4===n.attributes.color.itemSize,c=!!r.normalMap&&!!n.attributes.tangent,d=!!n.morphAttributes.position,h=!!n.morphAttributes.normal,p=!!n.morphAttributes.color,v=r.toneMapped?m.toneMapping:0,g=n.morphAttributes.position||n.morphAttributes.normal||n.morphAttributes.color,y=void 0!==g?g.length:0,S=X.get(r),M=f.state.lights;if(!0===I&&(!0===O||e!==b)){var w=e===b&&r.id===x;ue.setState(r,e,w)}var E=!1;r.version===S.__version?S.needsLights&&S.lightsStateVersion!==M.state.version||S.outputEncoding!==s||i.isInstancedMesh&&!1===S.instancing?E=!0:i.isInstancedMesh||!0!==S.instancing?i.isSkinnedMesh&&!1===S.skinning?E=!0:i.isSkinnedMesh||!0!==S.skinning?S.envMap!==l||!0===r.fog&&S.fog!==a?E=!0:void 0===S.numClippingPlanes||S.numClippingPlanes===ue.numPlanes&&S.numIntersection===ue.numIntersection?(S.vertexAlphas!==u||S.vertexTangents!==c||S.morphTargets!==d||S.morphNormals!==h||S.morphColors!==p||S.toneMapping!==v||!0===W.isWebGL2&&S.morphTargetsCount!==y)&&(E=!0):E=!0:E=!0:E=!0:(E=!0,S.__version=r.version);var k=S.currentProgram;!0===E&&(k=Ve(r,t,i));var L=!1,A=!1,P=!1,R=k.getUniforms(),D=S.uniforms;if(j.useProgram(k.program)&&(L=!0,A=!0,P=!0),r.id!==x&&(x=r.id,A=!0),L||b!==e){if(R.setValue(ye,"projectionMatrix",e.projectionMatrix),W.logarithmicDepthBuffer&&R.setValue(ye,"logDepthBufFC",2/(Math.log(e.far+1)/Math.LN2)),b!==e&&(b=e,A=!0,P=!0),r.isShaderMaterial||r.isMeshPhongMaterial||r.isMeshToonMaterial||r.isMeshStandardMaterial||r.envMap){var N=R.map.cameraPosition;void 0!==N&&N.setValue(ye,B.setFromMatrixPosition(e.matrixWorld))}(r.isMeshPhongMaterial||r.isMeshToonMaterial||r.isMeshLambertMaterial||r.isMeshBasicMaterial||r.isMeshStandardMaterial||r.isShaderMaterial)&&R.setValue(ye,"isOrthographic",!0===e.isOrthographicCamera),(r.isMeshPhongMaterial||r.isMeshToonMaterial||r.isMeshLambertMaterial||r.isMeshBasicMaterial||r.isMeshStandardMaterial||r.isShaderMaterial||r.isShadowMaterial||i.isSkinnedMesh)&&R.setValue(ye,"viewMatrix",e.matrixWorldInverse)}if(i.isSkinnedMesh){R.setOptional(ye,i,"bindMatrix"),R.setOptional(ye,i,"bindMatrixInverse");var U=i.skeleton;U&&(W.floatVertexTextures?(null===U.boneTexture&&U.computeBoneTexture(),R.setValue(ye,"boneTexture",U.boneTexture,K),R.setValue(ye,"boneTextureSize",U.boneTextureSize)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}var F=n.morphAttributes;if((void 0!==F.position||void 0!==F.normal||void 0!==F.color&&!0===W.isWebGL2)&&fe.update(i,n,r,k),(A||S.receiveShadow!==i.receiveShadow)&&(S.receiveShadow=i.receiveShadow,R.setValue(ye,"receiveShadow",i.receiveShadow)),r.isMeshGouraudMaterial&&null!==r.envMap&&(D.envMap.value=l,D.flipEnvMap.value=l.isCubeTexture&&!1===l.isRenderTargetTexture?-1:1),A&&(R.setValue(ye,"toneMappingExposure",m.toneMappingExposure),S.needsLights&&We(D,P),a&&!0===r.fog&&oe.refreshFogUniforms(D,a),oe.refreshMaterialUniforms(D,r,C,T,z),wa.upload(ye,S.uniformsList,D,K)),r.isShaderMaterial&&!0===r.uniformsNeedUpdate&&(wa.upload(ye,S.uniformsList,D,K),r.uniformsNeedUpdate=!1),r.isSpriteMaterial&&R.setValue(ye,"center",i.center),R.setValue(ye,"modelViewMatrix",i.modelViewMatrix),R.setValue(ye,"normalMatrix",i.normalMatrix),R.setValue(ye,"modelMatrix",i.matrixWorld),r.isShaderMaterial||r.isRawShaderMaterial)for(var H=r.uniformsGroups,G=0,q=H.length;G<q;G++)if(W.isWebGL2){var Y=H[G];ge.update(Y,k),ge.bind(Y,k)}else console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.");return k}function We(e,t){e.ambientLightColor.needsUpdate=t,e.lightProbe.needsUpdate=t,e.directionalLights.needsUpdate=t,e.directionalLightShadows.needsUpdate=t,e.pointLights.needsUpdate=t,e.pointLightShadows.needsUpdate=t,e.spotLights.needsUpdate=t,e.spotLightShadows.needsUpdate=t,e.rectAreaLights.needsUpdate=t,e.hemisphereLights.needsUpdate=t}function je(e){return e.isMeshLambertMaterial||e.isMeshToonMaterial||e.isMeshPhongMaterial||e.isMeshStandardMaterial||e.isShadowMaterial||e.isShaderMaterial&&!0===e.lights}Ne.setAnimationLoop(Pe),"undefined"!==typeof self&&Ne.setContext(self),this.setAnimationLoop=function(e){Ae=e,Me.setAnimationLoop(e),null===e?Ne.stop():Ne.start()},Me.addEventListener("sessionstart",Re),Me.addEventListener("sessionend",De),this.render=function(e,t){if(void 0===t||!0===t.isCamera){if(!0!==v){!0===e.matrixWorldAutoUpdate&&e.updateMatrixWorld(),null===t.parent&&!0===t.matrixWorldAutoUpdate&&t.updateMatrixWorld(),!0===Me.enabled&&!0===Me.isPresenting&&(!0===Me.cameraAutoUpdate&&Me.updateCamera(t),t=Me.getCamera()),!0===e.isScene&&e.onBeforeRender(m,e,t,_),(f=le.get(e,p.length)).init(),p.push(f),U.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),N.setFromProjectionMatrix(U),O=this.localClippingEnabled,I=ue.init(this.clippingPlanes,O,t),(d=se.get(e,h.length)).init(),h.push(d),Oe(e,t,0,m.sortObjects),d.finish(),!0===m.sortObjects&&d.sort(L,A),!0===I&&ue.beginShadows();var n=f.state.shadowsArray;if(ce.render(n,e,t),!0===I&&ue.endShadows(),!0===this.info.autoReset&&this.info.reset(),de.render(d,e),f.setupLights(m.physicallyCorrectLights),t.isArrayCamera)for(var r=t.cameras,i=0,a=r.length;i<a;i++){var o=r[i];ze(d,e,o,o.viewport)}else ze(d,e,t);null!==_&&(K.updateMultisampleRenderTarget(_),K.updateRenderTargetMipmap(_)),!0===e.isScene&&e.onAfterRender(m,e,t),ve.resetDefaultState(),x=-1,b=null,p.pop(),f=p.length>0?p[p.length-1]:null,h.pop(),d=h.length>0?h[h.length-1]:null}}else console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.")},this.getActiveCubeFace=function(){return g},this.getActiveMipmapLevel=function(){return y},this.getRenderTarget=function(){return _},this.setRenderTargetTextures=function(e,t,n){X.get(e.texture).__webglTexture=t,X.get(e.depthTexture).__webglTexture=n;var r=X.get(e);r.__hasExternalTextures=!0,r.__hasExternalTextures&&(r.__autoAllocateDepthBuffer=void 0===n,r.__autoAllocateDepthBuffer||!0===G.has("WEBGL_multisampled_render_to_texture")&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),r.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(e,t){var n=X.get(e);n.__webglFramebuffer=t,n.__useDefaultFramebuffer=void 0===t},this.setRenderTarget=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;_=e,g=t,y=n;var r=!0,i=null,a=!1,o=!1;if(e){var s=X.get(e);void 0!==s.__useDefaultFramebuffer?(j.bindFramebuffer(36160,null),r=!1):void 0===s.__webglFramebuffer?K.setupRenderTarget(e):s.__hasExternalTextures&&K.rebindTextures(e,X.get(e.texture).__webglTexture,X.get(e.depthTexture).__webglTexture);var l=e.texture;(l.isData3DTexture||l.isDataArrayTexture||l.isCompressedArrayTexture)&&(o=!0);var u=X.get(e).__webglFramebuffer;e.isWebGLCubeRenderTarget?(i=u[t],a=!0):i=W.isWebGL2&&e.samples>0&&!1===K.useMultisampledRTT(e)?X.get(e).__webglMultisampledFramebuffer:u,S.copy(e.viewport),M.copy(e.scissor),w=e.scissorTest}else S.copy(P).multiplyScalar(C).floor(),M.copy(R).multiplyScalar(C).floor(),w=D;var c=j.bindFramebuffer(36160,i);if(c&&W.drawBuffers&&r&&j.drawBuffers(e,i),j.viewport(S),j.scissor(M),j.setScissorTest(w),a){var d=X.get(e.texture);ye.framebufferTexture2D(36160,36064,34069+t,d.__webglTexture,n)}else if(o){var f=X.get(e.texture),h=t||0;ye.framebufferTextureLayer(36160,36064,f.__webglTexture,n||0,h)}x=-1},this.readRenderTargetPixels=function(e,t,n,r,i,a,o){if(e&&e.isWebGLRenderTarget){var s=X.get(e).__webglFramebuffer;if(e.isWebGLCubeRenderTarget&&void 0!==o&&(s=s[o]),s){j.bindFramebuffer(36160,s);try{var l=e.texture,u=l.format,c=l.type;if(u!==te&&me.convert(u)!==ye.getParameter(35739))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");var d=c===J&&(G.has("EXT_color_buffer_half_float")||W.isWebGL2&&G.has("EXT_color_buffer_float"));if(c!==Z&&me.convert(c)!==ye.getParameter(35738)&&(c!==$||!(W.isWebGL2||G.has("OES_texture_float")||G.has("WEBGL_color_buffer_float")))&&!d)return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");t>=0&&t<=e.width-r&&n>=0&&n<=e.height-i&&ye.readPixels(t,n,r,i,me.convert(u),me.convert(c),a)}finally{var f=null!==_?X.get(_).__webglFramebuffer:null;j.bindFramebuffer(36160,f)}}}else console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.")},this.copyFramebufferToTexture=function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=Math.pow(2,-n),i=Math.floor(t.image.width*r),a=Math.floor(t.image.height*r);K.setTexture2D(t,0),ye.copyTexSubImage2D(3553,n,0,0,e.x,e.y,i,a),j.unbindTexture()},this.copyTextureToTexture=function(e,t,n){var r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,i=t.image.width,a=t.image.height,o=me.convert(n.format),s=me.convert(n.type);K.setTexture2D(n,0),ye.pixelStorei(37440,n.flipY),ye.pixelStorei(37441,n.premultiplyAlpha),ye.pixelStorei(3317,n.unpackAlignment),t.isDataTexture?ye.texSubImage2D(3553,r,e.x,e.y,i,a,o,s,t.image.data):t.isCompressedTexture?ye.compressedTexSubImage2D(3553,r,e.x,e.y,t.mipmaps[0].width,t.mipmaps[0].height,o,t.mipmaps[0].data):ye.texSubImage2D(3553,r,e.x,e.y,o,s,t.image),0===r&&n.generateMipmaps&&ye.generateMipmap(3553),j.unbindTexture()},this.copyTextureToTexture3D=function(e,t,n,r){var i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0;if(m.isWebGL1Renderer)console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");else{var a,o=e.max.x-e.min.x+1,s=e.max.y-e.min.y+1,l=e.max.z-e.min.z+1,u=me.convert(r.format),c=me.convert(r.type);if(r.isData3DTexture)K.setTexture3D(r,0),a=32879;else{if(!r.isDataArrayTexture)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");K.setTexture2DArray(r,0),a=35866}ye.pixelStorei(37440,r.flipY),ye.pixelStorei(37441,r.premultiplyAlpha),ye.pixelStorei(3317,r.unpackAlignment);var d=ye.getParameter(3314),f=ye.getParameter(32878),h=ye.getParameter(3316),p=ye.getParameter(3315),v=ye.getParameter(32877),g=n.isCompressedTexture?n.mipmaps[0]:n.image;ye.pixelStorei(3314,g.width),ye.pixelStorei(32878,g.height),ye.pixelStorei(3316,e.min.x),ye.pixelStorei(3315,e.min.y),ye.pixelStorei(32877,e.min.z),n.isDataTexture||n.isData3DTexture?ye.texSubImage3D(a,i,t.x,t.y,t.z,o,s,l,u,c,g.data):n.isCompressedArrayTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),ye.compressedTexSubImage3D(a,i,t.x,t.y,t.z,o,s,l,u,g.data)):ye.texSubImage3D(a,i,t.x,t.y,t.z,o,s,l,u,c,g),ye.pixelStorei(3314,d),ye.pixelStorei(32878,f),ye.pixelStorei(3316,h),ye.pixelStorei(3315,p),ye.pixelStorei(32877,v),0===i&&r.generateMipmaps&&ye.generateMipmap(a),j.unbindTexture()}},this.initTexture=function(e){e.isCubeTexture?K.setTextureCube(e,0):e.isData3DTexture?K.setTexture3D(e,0):e.isDataArrayTexture||e.isCompressedArrayTexture?K.setTexture2DArray(e,0):K.setTexture2D(e,0),j.unbindTexture()},this.resetState=function(){g=0,y=0,_=null,j.reset(),ve.reset()},"undefined"!==typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}var _o=function(e){g(n,e);var t=x(n);function n(){return w(this,n),t.apply(this,arguments)}return T(n)}(yo);_o.prototype.isWebGL1Renderer=!0;var xo=function(e){g(n,e);var t=x(n);function n(){var e;return w(this,n),(e=t.call(this)).isScene=!0,e.type="Scene",e.background=null,e.environment=null,e.fog=null,e.backgroundBlurriness=0,e.backgroundIntensity=1,e.overrideMaterial=null,"undefined"!==typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:v(e)})),e}return T(n,[{key:"copy",value:function(e,t){return m(i(n.prototype),"copy",this).call(this,e,t),null!==e.background&&(this.background=e.background.clone()),null!==e.environment&&(this.environment=e.environment.clone()),null!==e.fog&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,null!==e.overrideMaterial&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}},{key:"toJSON",value:function(e){var t=m(i(n.prototype),"toJSON",this).call(this,e);return null!==this.fog&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.backgroundBlurriness=this.backgroundBlurriness),1!==this.backgroundIntensity&&(t.backgroundIntensity=this.backgroundIntensity),t}},{key:"autoUpdate",get:function(){return console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."),this.matrixWorldAutoUpdate},set:function(e){console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."),this.matrixWorldAutoUpdate=e}}]),n}(An);var bo=function(e){g(n,e);var t=x(n);function n(e){var r;return w(this,n),(r=t.call(this)).isLineBasicMaterial=!0,r.type="LineBasicMaterial",r.color=new gt(16777215),r.linewidth=1,r.linecap="round",r.linejoin="round",r.fog=!0,r.setValues(e),r}return T(n,[{key:"copy",value:function(e){return m(i(n.prototype),"copy",this).call(this,e),this.color.copy(e.color),this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}]),n}(Gn),So=new Ct,Mo=new Ct,wo=new an,Eo=new rn,To=new Zt,ko=function(e){g(n,e);var t=x(n);function n(){var e,r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new ir,i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new bo;return w(this,n),(e=t.call(this)).isLine=!0,e.type="Line",e.geometry=r,e.material=i,e.updateMorphTargets(),e}return T(n,[{key:"copy",value:function(e,t){return m(i(n.prototype),"copy",this).call(this,e,t),this.material=e.material,this.geometry=e.geometry,this}},{key:"computeLineDistances",value:function(){var e=this.geometry;if(null===e.index){for(var t=e.attributes.position,n=[0],r=1,i=t.count;r<i;r++)So.fromBufferAttribute(t,r-1),Mo.fromBufferAttribute(t,r),n[r]=n[r-1],n[r]+=So.distanceTo(Mo);e.setAttribute("lineDistance",new Kn(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}},{key:"raycast",value:function(e,t){var n=this.geometry,r=this.matrixWorld,i=e.params.Line.threshold,a=n.drawRange;if(null===n.boundingSphere&&n.computeBoundingSphere(),To.copy(n.boundingSphere),To.applyMatrix4(r),To.radius+=i,!1!==e.ray.intersectsSphere(To)){wo.copy(r).invert(),Eo.copy(e.ray).applyMatrix4(wo);var o=i/((this.scale.x+this.scale.y+this.scale.z)/3),s=o*o,l=new Ct,u=new Ct,c=new Ct,d=new Ct,f=this.isLineSegments?2:1,h=n.index,p=n.attributes.position;if(null!==h)for(var m=Math.max(0,a.start),v=Math.min(h.count,a.start+a.count)-1;m<v;m+=f){var g=h.getX(m),y=h.getX(m+1);if(l.fromBufferAttribute(p,g),u.fromBufferAttribute(p,y),!(Eo.distanceSqToSegment(l,u,d,c)>s)){d.applyMatrix4(this.matrixWorld);var _=e.ray.origin.distanceTo(d);_<e.near||_>e.far||t.push({distance:_,point:c.clone().applyMatrix4(this.matrixWorld),index:m,face:null,faceIndex:null,object:this})}}else for(var x=Math.max(0,a.start),b=Math.min(p.count,a.start+a.count)-1;x<b;x+=f){if(l.fromBufferAttribute(p,x),u.fromBufferAttribute(p,x+1),!(Eo.distanceSqToSegment(l,u,d,c)>s)){d.applyMatrix4(this.matrixWorld);var S=e.ray.origin.distanceTo(d);S<e.near||S>e.far||t.push({distance:S,point:c.clone().applyMatrix4(this.matrixWorld),index:x,face:null,faceIndex:null,object:this})}}}}},{key:"updateMorphTargets",value:function(){var e=this.geometry.morphAttributes,t=Object.keys(e);if(t.length>0){var n=e[t[0]];if(void 0!==n){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(var r=0,i=n.length;r<i;r++){var a=n[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=r}}}}}]),n}(An),Co=new Ct,Lo=new Ct,Ao=function(e){g(n,e);var t=x(n);function n(e,r){var i;return w(this,n),(i=t.call(this,e,r)).isLineSegments=!0,i.type="LineSegments",i}return T(n,[{key:"computeLineDistances",value:function(){var e=this.geometry;if(null===e.index){for(var t=e.attributes.position,n=[],r=0,i=t.count;r<i;r+=2)Co.fromBufferAttribute(t,r),Lo.fromBufferAttribute(t,r+1),n[r]=0===r?0:n[r-1],n[r+1]=n[r]+Co.distanceTo(Lo);e.setAttribute("lineDistance",new Kn(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}]),n}(ko);function Po(e,t,n){return Do(e)?new e.constructor(e.subarray(t,void 0!==n?n:e.length)):e.slice(t,n)}function Ro(e,t,n){return!e||!n&&e.constructor===t?e:"number"===typeof t.BYTES_PER_ELEMENT?new t(e):Array.prototype.slice.call(e)}function Do(e){return ArrayBuffer.isView(e)&&!(e instanceof DataView)}var No=function(){function e(t,n,r,i){w(this,e),this.parameterPositions=t,this._cachedIndex=0,this.resultBuffer=void 0!==i?i:new n.constructor(r),this.sampleValues=n,this.valueSize=r,this.settings=null,this.DefaultSettings_={}}return T(e,[{key:"evaluate",value:function(e){var t=this.parameterPositions,n=this._cachedIndex,r=t[n],i=t[n-1];e:{t:{var a;n:{r:if(!(e<r)){for(var o=n+2;;){if(void 0===r){if(e<i)break r;return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}if(n===o)break;if(i=r,e<(r=t[++n]))break t}a=t.length;break n}if(e>=i)break e;var s=t[1];e<s&&(n=2,i=s);for(var l=n-2;;){if(void 0===i)return this._cachedIndex=0,this.copySampleValue_(0);if(n===l)break;if(r=i,e>=(i=t[--n-1]))break t}a=n,n=0}for(;n<a;){var u=n+a>>>1;e<t[u]?a=u:n=u+1}if(r=t[n],void 0===(i=t[n-1]))return this._cachedIndex=0,this.copySampleValue_(0);if(void 0===r)return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}this._cachedIndex=n,this.intervalChanged_(n,i,r)}return this.interpolate_(n,i,e,r)}},{key:"getSettings_",value:function(){return this.settings||this.DefaultSettings_}},{key:"copySampleValue_",value:function(e){for(var t=this.resultBuffer,n=this.sampleValues,r=this.valueSize,i=e*r,a=0;a!==r;++a)t[a]=n[i+a];return t}},{key:"interpolate_",value:function(){throw new Error("call to abstract method")}},{key:"intervalChanged_",value:function(){}}]),e}(),Io=function(e){g(n,e);var t=x(n);function n(e,r,i,a){var o;return w(this,n),(o=t.call(this,e,r,i,a))._weightPrev=-0,o._offsetPrev=-0,o._weightNext=-0,o._offsetNext=-0,o.DefaultSettings_={endingStart:Re,endingEnd:Re},o}return T(n,[{key:"intervalChanged_",value:function(e,t,n){var r=this.parameterPositions,i=e-2,a=e+1,o=r[i],s=r[a];if(void 0===o)switch(this.getSettings_().endingStart){case De:i=e,o=2*t-n;break;case Ne:o=t+r[i=r.length-2]-r[i+1];break;default:i=e,o=n}if(void 0===s)switch(this.getSettings_().endingEnd){case De:a=e,s=2*n-t;break;case Ne:a=1,s=n+r[1]-r[0];break;default:a=e-1,s=t}var l=.5*(n-t),u=this.valueSize;this._weightPrev=l/(t-o),this._weightNext=l/(s-n),this._offsetPrev=i*u,this._offsetNext=a*u}},{key:"interpolate_",value:function(e,t,n,r){for(var i=this.resultBuffer,a=this.sampleValues,o=this.valueSize,s=e*o,l=s-o,u=this._offsetPrev,c=this._offsetNext,d=this._weightPrev,f=this._weightNext,h=(n-t)/(r-t),p=h*h,m=p*h,v=-d*m+2*d*p-d*h,g=(1+d)*m+(-1.5-2*d)*p+(-.5+d)*h+1,y=(-1-f)*m+(1.5+f)*p+.5*h,_=f*m-f*p,x=0;x!==o;++x)i[x]=v*a[u+x]+g*a[l+x]+y*a[s+x]+_*a[c+x];return i}}]),n}(No),Oo=function(e){g(n,e);var t=x(n);function n(e,r,i,a){return w(this,n),t.call(this,e,r,i,a)}return T(n,[{key:"interpolate_",value:function(e,t,n,r){for(var i=this.resultBuffer,a=this.sampleValues,o=this.valueSize,s=e*o,l=s-o,u=(n-t)/(r-t),c=1-u,d=0;d!==o;++d)i[d]=a[l+d]*c+a[s+d]*u;return i}}]),n}(No),zo=function(e){g(n,e);var t=x(n);function n(e,r,i,a){return w(this,n),t.call(this,e,r,i,a)}return T(n,[{key:"interpolate_",value:function(e){return this.copySampleValue_(e-1)}}]),n}(No),Uo=function(){function e(t,n,r,i){if(w(this,e),void 0===t)throw new Error("THREE.KeyframeTrack: track name is undefined");if(void 0===n||0===n.length)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+t);this.name=t,this.times=Ro(n,this.TimeBufferType),this.values=Ro(r,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}return T(e,[{key:"InterpolantFactoryMethodDiscrete",value:function(e){return new zo(this.times,this.values,this.getValueSize(),e)}},{key:"InterpolantFactoryMethodLinear",value:function(e){return new Oo(this.times,this.values,this.getValueSize(),e)}},{key:"InterpolantFactoryMethodSmooth",value:function(e){return new Io(this.times,this.values,this.getValueSize(),e)}},{key:"setInterpolation",value:function(e){var t;switch(e){case Le:t=this.InterpolantFactoryMethodDiscrete;break;case Ae:t=this.InterpolantFactoryMethodLinear;break;case Pe:t=this.InterpolantFactoryMethodSmooth}if(void 0===t){var n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(e===this.DefaultInterpolation)throw new Error(n);this.setInterpolation(this.DefaultInterpolation)}return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=t,this}},{key:"getInterpolation",value:function(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return Le;case this.InterpolantFactoryMethodLinear:return Ae;case this.InterpolantFactoryMethodSmooth:return Pe}}},{key:"getValueSize",value:function(){return this.values.length/this.times.length}},{key:"shift",value:function(e){if(0!==e)for(var t=this.times,n=0,r=t.length;n!==r;++n)t[n]+=e;return this}},{key:"scale",value:function(e){if(1!==e)for(var t=this.times,n=0,r=t.length;n!==r;++n)t[n]*=e;return this}},{key:"trim",value:function(e,t){for(var n=this.times,r=n.length,i=0,a=r-1;i!==r&&n[i]<e;)++i;for(;-1!==a&&n[a]>t;)--a;if(++a,0!==i||a!==r){i>=a&&(i=(a=Math.max(a,1))-1);var o=this.getValueSize();this.times=Po(n,i,a),this.values=Po(this.values,i*o,a*o)}return this}},{key:"validate",value:function(){var e=!0,t=this.getValueSize();t-Math.floor(t)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);var n=this.times,r=this.values,i=n.length;0===i&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);for(var a=null,o=0;o!==i;o++){var s=n[o];if("number"===typeof s&&isNaN(s)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,o,s),e=!1;break}if(null!==a&&a>s){console.error("THREE.KeyframeTrack: Out of order keys.",this,o,s,a),e=!1;break}a=s}if(void 0!==r&&Do(r))for(var l=0,u=r.length;l!==u;++l){var c=r[l];if(isNaN(c)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,l,c),e=!1;break}}return e}},{key:"optimize",value:function(){for(var e=Po(this.times),t=Po(this.values),n=this.getValueSize(),r=this.getInterpolation()===Pe,i=e.length-1,a=1,o=1;o<i;++o){var s=!1,l=e[o];if(l!==e[o+1]&&(1!==o||l!==e[0]))if(r)s=!0;else for(var u=o*n,c=u-n,d=u+n,f=0;f!==n;++f){var h=t[u+f];if(h!==t[c+f]||h!==t[d+f]){s=!0;break}}if(s){if(o!==a){e[a]=e[o];for(var p=o*n,m=a*n,v=0;v!==n;++v)t[m+v]=t[p+v]}++a}}if(i>0){e[a]=e[i];for(var g=i*n,y=a*n,_=0;_!==n;++_)t[y+_]=t[g+_];++a}return a!==e.length?(this.times=Po(e,0,a),this.values=Po(t,0,a*n)):(this.times=e,this.values=t),this}},{key:"clone",value:function(){var e=Po(this.times,0),t=Po(this.values,0),n=new(0,this.constructor)(this.name,e,t);return n.createInterpolant=this.createInterpolant,n}}],[{key:"toJSON",value:function(e){var t,n=e.constructor;if(n.toJSON!==this.toJSON)t=n.toJSON(e);else{t={name:e.name,times:Ro(e.times,Array),values:Ro(e.values,Array)};var r=e.getInterpolation();r!==e.DefaultInterpolation&&(t.interpolation=r)}return t.type=e.ValueTypeName,t}}]),e}();Uo.prototype.TimeBufferType=Float32Array,Uo.prototype.ValueBufferType=Float32Array,Uo.prototype.DefaultInterpolation=Ae;var Fo=function(e){g(n,e);var t=x(n);function n(){return w(this,n),t.apply(this,arguments)}return T(n)}(Uo);Fo.prototype.ValueTypeName="bool",Fo.prototype.ValueBufferType=Array,Fo.prototype.DefaultInterpolation=Le,Fo.prototype.InterpolantFactoryMethodLinear=void 0,Fo.prototype.InterpolantFactoryMethodSmooth=void 0;var Bo=function(e){g(n,e);var t=x(n);function n(){return w(this,n),t.apply(this,arguments)}return T(n)}(Uo);Bo.prototype.ValueTypeName="color";var Vo=function(e){g(n,e);var t=x(n);function n(){return w(this,n),t.apply(this,arguments)}return T(n)}(Uo);Vo.prototype.ValueTypeName="number";var Ho=function(e){g(n,e);var t=x(n);function n(e,r,i,a){return w(this,n),t.call(this,e,r,i,a)}return T(n,[{key:"interpolate_",value:function(e,t,n,r){for(var i=this.resultBuffer,a=this.sampleValues,o=this.valueSize,s=(n-t)/(r-t),l=e*o,u=l+o;l!==u;l+=4)kt.slerpFlat(i,0,a,l-o,a,l,s);return i}}]),n}(No),Go=function(e){g(n,e);var t=x(n);function n(){return w(this,n),t.apply(this,arguments)}return T(n,[{key:"InterpolantFactoryMethodLinear",value:function(e){return new Ho(this.times,this.values,this.getValueSize(),e)}}]),n}(Uo);Go.prototype.ValueTypeName="quaternion",Go.prototype.DefaultInterpolation=Ae,Go.prototype.InterpolantFactoryMethodSmooth=void 0;var Wo=function(e){g(n,e);var t=x(n);function n(){return w(this,n),t.apply(this,arguments)}return T(n)}(Uo);Wo.prototype.ValueTypeName="string",Wo.prototype.ValueBufferType=Array,Wo.prototype.DefaultInterpolation=Le,Wo.prototype.InterpolantFactoryMethodLinear=void 0,Wo.prototype.InterpolantFactoryMethodSmooth=void 0;var jo=function(e){g(n,e);var t=x(n);function n(){return w(this,n),t.apply(this,arguments)}return T(n)}(Uo);jo.prototype.ValueTypeName="vector";Error;var qo="\\[\\]\\.:\\/",Xo=new RegExp("["+qo+"]","g"),Yo="[^"+qo+"]",Zo="[^"+qo.replace("\\.","")+"]",Ko=new RegExp("^"+/((?:WC+[\/:])*)/.source.replace("WC",Yo)+/(WCOD+)?/.source.replace("WCOD",Zo)+/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",Yo)+/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",Yo)+"$"),Qo=["material","materials","bones","map"],$o=function(){function e(t,n,r){w(this,e);var i=r||Jo.parseTrackName(n);this._targetGroup=t,this._bindings=t.subscribe_(n,i)}return T(e,[{key:"getValue",value:function(e,t){this.bind();var n=this._targetGroup.nCachedObjects_,r=this._bindings[n];void 0!==r&&r.getValue(e,t)}},{key:"setValue",value:function(e,t){for(var n=this._bindings,r=this._targetGroup.nCachedObjects_,i=n.length;r!==i;++r)n[r].setValue(e,t)}},{key:"bind",value:function(){for(var e=this._bindings,t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()}},{key:"unbind",value:function(){for(var e=this._bindings,t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}}]),e}(),Jo=function(){function e(t,n,r){w(this,e),this.path=n,this.parsedPath=r||e.parseTrackName(n),this.node=e.findNode(t,this.parsedPath.nodeName)||t,this.rootNode=t,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}return T(e,[{key:"_getValue_unavailable",value:function(){}},{key:"_setValue_unavailable",value:function(){}},{key:"_getValue_direct",value:function(e,t){e[t]=this.targetObject[this.propertyName]}},{key:"_getValue_array",value:function(e,t){for(var n=this.resolvedProperty,r=0,i=n.length;r!==i;++r)e[t++]=n[r]}},{key:"_getValue_arrayElement",value:function(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}},{key:"_getValue_toArray",value:function(e,t){this.resolvedProperty.toArray(e,t)}},{key:"_setValue_direct",value:function(e,t){this.targetObject[this.propertyName]=e[t]}},{key:"_setValue_direct_setNeedsUpdate",value:function(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}},{key:"_setValue_direct_setMatrixWorldNeedsUpdate",value:function(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}},{key:"_setValue_array",value:function(e,t){for(var n=this.resolvedProperty,r=0,i=n.length;r!==i;++r)n[r]=e[t++]}},{key:"_setValue_array_setNeedsUpdate",value:function(e,t){for(var n=this.resolvedProperty,r=0,i=n.length;r!==i;++r)n[r]=e[t++];this.targetObject.needsUpdate=!0}},{key:"_setValue_array_setMatrixWorldNeedsUpdate",value:function(e,t){for(var n=this.resolvedProperty,r=0,i=n.length;r!==i;++r)n[r]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}},{key:"_setValue_arrayElement",value:function(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}},{key:"_setValue_arrayElement_setNeedsUpdate",value:function(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}},{key:"_setValue_arrayElement_setMatrixWorldNeedsUpdate",value:function(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}},{key:"_setValue_fromArray",value:function(e,t){this.resolvedProperty.fromArray(e,t)}},{key:"_setValue_fromArray_setNeedsUpdate",value:function(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}},{key:"_setValue_fromArray_setMatrixWorldNeedsUpdate",value:function(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}},{key:"_getValue_unbound",value:function(e,t){this.bind(),this.getValue(e,t)}},{key:"_setValue_unbound",value:function(e,t){this.bind(),this.setValue(e,t)}},{key:"bind",value:function(){var t=this.node,n=this.parsedPath,r=n.objectName,i=n.propertyName,a=n.propertyIndex;if(t||(t=e.findNode(this.rootNode,n.nodeName)||this.rootNode,this.node=t),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,t){if(r){var o=n.objectIndex;switch(r){case"materials":if(!t.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!t.material.materials)return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);t=t.material.materials;break;case"bones":if(!t.skeleton)return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);t=t.skeleton.bones;for(var s=0;s<t.length;s++)if(t[s].name===o){o=s;break}break;case"map":if("map"in t){t=t.map;break}if(!t.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!t.material.map)return void console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);t=t.material.map;break;default:if(void 0===t[r])return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);t=t[r]}if(void 0!==o){if(void 0===t[o])return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,t);t=t[o]}}var l=t[i];if(void 0!==l){var u=this.Versioning.None;this.targetObject=t,void 0!==t.needsUpdate?u=this.Versioning.NeedsUpdate:void 0!==t.matrixWorldNeedsUpdate&&(u=this.Versioning.MatrixWorldNeedsUpdate);var c=this.BindingType.Direct;if(void 0!==a){if("morphTargetInfluences"===i){if(!t.geometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);if(!t.geometry.morphAttributes)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);void 0!==t.morphTargetDictionary[a]&&(a=t.morphTargetDictionary[a])}c=this.BindingType.ArrayElement,this.resolvedProperty=l,this.propertyIndex=a}else void 0!==l.fromArray&&void 0!==l.toArray?(c=this.BindingType.HasFromToArray,this.resolvedProperty=l):Array.isArray(l)?(c=this.BindingType.EntireArray,this.resolvedProperty=l):this.propertyName=i;this.getValue=this.GetterByBindingType[c],this.setValue=this.SetterByBindingTypeAndVersioning[c][u]}else{var d=n.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+d+"."+i+" but it wasn't found.",t)}}else console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.")}},{key:"unbind",value:function(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}],[{key:"create",value:function(t,n,r){return t&&t.isAnimationObjectGroup?new e.Composite(t,n,r):new e(t,n,r)}},{key:"sanitizeNodeName",value:function(e){return e.replace(/\s/g,"_").replace(Xo,"")}},{key:"parseTrackName",value:function(e){var t=Ko.exec(e);if(null===t)throw new Error("PropertyBinding: Cannot parse trackName: "+e);var n={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},r=n.nodeName&&n.nodeName.lastIndexOf(".");if(void 0!==r&&-1!==r){var i=n.nodeName.substring(r+1);-1!==Qo.indexOf(i)&&(n.nodeName=n.nodeName.substring(0,r),n.objectName=i)}if(null===n.propertyName||0===n.propertyName.length)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return n}},{key:"findNode",value:function(e,t){if(void 0===t||""===t||"."===t||-1===t||t===e.name||t===e.uuid)return e;if(e.skeleton){var n=e.skeleton.getBoneByName(t);if(void 0!==n)return n}if(e.children){var r=function e(n){for(var r=0;r<n.length;r++){var i=n[r];if(i.name===t||i.uuid===t)return i;var a=e(i.children);if(a)return a}return null}(e.children);if(r)return r}return null}}]),e}();Jo.Composite=$o,Jo.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Jo.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},Jo.prototype.GetterByBindingType=[Jo.prototype._getValue_direct,Jo.prototype._getValue_array,Jo.prototype._getValue_arrayElement,Jo.prototype._getValue_toArray],Jo.prototype.SetterByBindingTypeAndVersioning=[[Jo.prototype._setValue_direct,Jo.prototype._setValue_direct_setNeedsUpdate,Jo.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[Jo.prototype._setValue_array,Jo.prototype._setValue_array_setNeedsUpdate,Jo.prototype._setValue_array_setMatrixWorldNeedsUpdate],[Jo.prototype._setValue_arrayElement,Jo.prototype._setValue_arrayElement_setNeedsUpdate,Jo.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[Jo.prototype._setValue_fromArray,Jo.prototype._setValue_fromArray_setNeedsUpdate,Jo.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];new Float32Array(1);var es=function(){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return w(this,e),this.radius=t,this.phi=n,this.theta=r,this}return T(e,[{key:"set",value:function(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this}},{key:"copy",value:function(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}},{key:"makeSafe",value:function(){var e=1e-6;return this.phi=Math.max(e,Math.min(Math.PI-e,this.phi)),this}},{key:"setFromVector3",value:function(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}},{key:"setFromCartesianCoords",value:function(e,t,n){return this.radius=Math.sqrt(e*e+t*t+n*n),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,n),this.phi=Math.acos(Ye(t/this.radius,-1,1))),this}},{key:"clone",value:function(){return(new this.constructor).copy(this)}}]),e}();"undefined"!==typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:k}})),"undefined"!==typeof window&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=k);var ts=[17173.69,-8679.69,157995.24,17103.58,-8631.92,158637.39,17103.58,-8631.92,158637.39,17047.99,-8573.89,159042.47,17047.99,-8573.89,159042.47,17004.8,-8520.55,159314.44,17004.8,-8520.55,159314.44,16956.96,-8455.01,159582.41,16956.96,-8455.01,159582.41,16879.26,-8337.33,159959.62,16879.26,-8337.33,159959.62,16836.38,-8267.63,160143.12,16836.38,-8267.63,160143.12,16790.74,-8190.34,160322.54,16790.74,-8190.34,160322.54,16702.89,-8034.06,160629.04,16702.89,-8034.06,160629.04,16655.68,-7946.64,160775.9,16655.68,-7946.64,160775.9,16606.32,-7852.99,160917.97,16606.32,-7852.99,160917.97,16546.4,-7736.57,161076.31,16546.4,-7736.57,161076.31,16483.75,-7612.04,161227.17,16483.75,-7612.04,161227.17,16411.55,-7465.32,161384.64,16411.55,-7465.32,161384.64,16336.49,-7309.62,161531.94,16336.49,-7309.62,161531.94,16276.12,-7182.28,161639.57,16276.12,-7182.28,161639.57,16214.32,-7050.2,161740.74,16214.32,-7050.2,161740.74,16087.07,-6773.3,161923.7,16087.07,-6773.3,161923.7,16001.74,-6584.35,162029.36,16001.74,-6584.35,162029.36,15915.05,-6389.98,162124.37,15915.05,-6389.98,162124.37,15774.9,-6071.23,162254.6,15774.9,-6071.23,162254.6,15593.08,-5650.49,162386.29,15593.08,-5650.49,162386.29,15552.76,-5556.21,162410.42,15552.76,-5556.21,162410.42,15486.01,-5640.46,162636.64,15597.7,-5540.88,162426.08,15678.02,-5728.35,162376.27,15678.02,-5728.35,162376.27,15820.32,-6057,162269.92,15820.32,-6057,162269.92,15960.81,-6376.53,162139.37,15960.81,-6376.53,162139.37,16047.73,-6571.42,162044.11,16047.73,-6571.42,162044.11,16133.3,-6760.91,161938.15,16133.3,-6760.91,161938.15,16260.95,-7038.65,161754.62,16260.95,-7038.65,161754.62,16322.94,-7171.15,161653.13,16322.94,-7171.15,161653.13,16383.51,-7298.91,161545.15,16383.51,-7298.91,161545.15,16458.82,-7455.12,161397.37,16458.82,-7455.12,161397.37,16531.26,-7602.34,161239.36,16531.26,-7602.34,161239.36,16594.12,-7727.29,161087.99,16594.12,-7727.29,161087.99,16654.24,-7844.1,160929.12,16654.24,-7844.1,160929.12,16703.77,-7938.05,160786.59,16703.77,-7938.05,160786.59,16751.12,-8025.76,160639.26,16751.12,-8025.76,160639.26,16839.24,-8182.51,160331.83,16839.24,-8182.51,160331.83,16885.02,-8260.02,160151.89,16885.02,-8260.02,160151.89,16928.01,-8329.91,159967.9,16928.01,-8329.91,159967.9,17005.91,-8447.89,159589.74,17005.91,-8447.89,159589.74,17053.86,-8513.58,159321.17,17053.86,-8513.58,159321.17,17097.13,-8567.02,159048.63,17097.13,-8567.02,159048.63,17152.83,-8625.16,158642.8,17152.83,-8625.16,158642.8,17223.05,-8673.01,157999.64,17223.05,-8673.01,157999.64,17270.27,-8918.59,158013.25,15557.92,-5615.93,162661.68,15597.7,-5540.88,162426.08,15486.01,-5640.46,162636.64,15557.92,-5615.93,162661.68,17191.3,-8929.28,158006.22,17173.69,-8679.69,157995.24,17270.27,-8918.59,158013.25,17191.3,-8929.28,158006.22,17191.3,-8929.28,158006.22,17119.06,-8880.05,158667.68,17119.06,-8880.05,158667.68,17061.48,-8819.94,159087.2,17061.48,-8819.94,159087.2,17016.59,-8764.49,159369.96,17016.59,-8764.49,159369.96,16966.67,-8696.1,159649.52,16966.67,-8696.1,159649.52,16885.24,-8572.77,160044.81,16885.24,-8572.77,160044.81,16840.13,-8499.43,160237.85,16840.13,-8499.43,160237.85,16791.99,-8417.91,160427.08,16791.99,-8417.91,160427.08,16699.02,-8252.51,160751.42,16699.02,-8252.51,160751.42,16648.93,-8159.75,160907.25,16648.93,-8159.75,160907.25,16596.48,-8060.26,161058.2,16596.48,-8060.26,161058.2,16532.74,-7936.42,161226.63,16532.74,-7936.42,161226.63,16466.06,-7803.87,161387.21,16466.06,-7803.87,161387.21,16389.21,-7647.69,161554.83,16389.21,-7647.69,161554.83,16309.37,-7482.08,161711.5,16309.37,-7482.08,161711.5,16245.23,-7346.79,161825.84,16245.23,-7346.79,161825.84,16179.67,-7206.67,161933.17,16179.67,-7206.67,161933.17,16045.02,-6913.69,162126.79,16045.02,-6913.69,162126.79,15955.06,-6714.47,162238.2,15955.06,-6714.47,162238.2,15863.92,-6510.13,162338.08,15863.92,-6510.13,162338.08,15717.17,-6176.38,162474.46,15717.17,-6176.38,162474.46,15527.85,-5738.3,162611.59,15527.85,-5738.3,162611.59,15486.01,-5640.46,162636.64,17270.27,-8918.59,158013.25,17197.86,-8869.24,158676.33,17197.86,-8869.24,158676.33,17140.11,-8808.96,159097.06,17140.11,-8808.96,159097.06,17095.07,-8753.33,159380.72,17095.07,-8753.33,159380.72,17044.98,-8684.71,159661.25,17044.98,-8684.71,159661.25,16963.24,-8560.9,160058.05,16963.24,-8560.9,160058.05,16917.95,-8487.26,160251.89,16917.95,-8487.26,160251.89,16869.59,-8405.38,160441.95,16869.59,-8405.38,160441.95,16776.19,-8239.22,160767.78,16776.19,-8239.22,160767.78,16725.86,-8146.01,160924.35,16725.86,-8146.01,160924.35,16673.16,-8046.03,161076.05,16673.16,-8046.03,161076.05,16609.1,-7921.57,161245.32,16609.1,-7921.57,161245.32,16542.08,-7788.34,161406.71,16542.08,-7788.34,161406.71,16464.84,-7631.38,161575.18,16464.84,-7631.38,161575.18,16384.6,-7464.94,161732.64,16384.6,-7464.94,161732.64,16320.14,-7328.99,161847.55,16320.14,-7328.99,161847.55,16254.26,-7188.19,161955.39,16254.26,-7188.19,161955.39,16119,-6893.87,162149.9,16119,-6893.87,162149.9,16028.64,-6693.78,162261.79,16028.64,-6693.78,162261.79,15937.14,-6488.61,162362.08,15937.14,-6488.61,162362.08,15789.84,-6153.6,162498.97,15789.84,-6153.6,162498.97,15599.89,-5714.07,162636.56,15599.89,-5714.07,162636.56,15557.92,-5615.93,162661.68,17246.66,-8795.8,158006.45,17175.34,-8747.2,158659.56,17175.34,-8747.2,158659.56,17118.62,-8687.99,159072.84,17118.62,-8687.99,159072.84,17074.46,-8633.45,159350.95,17074.46,-8633.45,159350.95,17025.44,-8566.3,159625.49,17025.44,-8566.3,159625.49,16945.62,-8445.4,160012.97,16945.62,-8445.4,160012.97,16901.48,-8373.64,160201.89,16901.48,-8373.64,160201.89,16854.42,-8293.94,160386.89,16854.42,-8293.94,160386.89,16763.66,-8132.49,160703.52,16763.66,-8132.49,160703.52,16714.81,-8042.03,160855.47,16714.81,-8042.03,160855.47,16663.7,-7945.07,161002.59,16663.7,-7945.07,161002.59,16601.61,-7824.43,161166.66,16601.61,-7824.43,161166.66,16536.67,-7695.34,161323.04,16536.67,-7695.34,161323.04,16461.83,-7543.25,161486.28,16461.83,-7543.25,161486.28,16384.05,-7381.92,161638.9,16384.05,-7381.92,161638.9,16321.54,-7250.07,161750.34,16321.54,-7250.07,161750.34,16257.61,-7113.42,161855.01,16257.61,-7113.42,161855.01,16126.15,-6827.39,162044.02,16126.15,-6827.39,162044.02,16038.19,-6632.6,162152.95,16038.19,-6632.6,162152.95,15948.97,-6432.57,162250.72,15948.97,-6432.57,162250.72,15805.08,-6105.3,162384.45,15805.08,-6105.3,162384.45,15619,-5674.71,162519.23,15619,-5674.71,162519.23,15577.81,-5578.41,162543.88,17264.51,-8916.15,158073.63,17217.45,-8670.63,158058.36,17258.62,-8913.33,158133.76,17211.72,-8667.89,158116.8,17252.6,-8910.14,158193.5,17205.88,-8664.79,158174.83,17246.47,-8906.58,158252.85,17199.93,-8661.34,158232.46,17140.11,-8808.96,159097.06,17097.13,-8567.02,159048.63,17044.98,-8684.71,159661.25,17005.91,-8447.89,159589.74,16869.59,-8405.38,160441.95,16839.24,-8182.51,160331.83,16673.16,-8046.03,161076.05,16654.24,-7844.1,160929.12,16542.08,-7788.34,161406.71,16531.26,-7602.34,161239.36,16384.6,-7464.94,161732.64,16383.51,-7298.91,161545.15,16119,-6893.87,162149.9,16133.3,-6760.91,161938.15,15937.14,-6488.61,162362.08,15960.81,-6376.53,162139.37,15641.41,-5810.8,162609.91,15678.02,-5728.35,162376.27,15620.71,-5762.63,162623.42,15658.13,-5682.05,162389.26,15599.89,-5714.07,162636.56,15638.1,-5635.35,162401.89,15578.95,-5665.14,162649.32,15617.95,-5588.27,162414.18,17182.49,-8804.49,158000.73,17111.32,-8755.98,158652.53,17111.32,-8755.98,158652.53,17054.74,-8696.92,159064.84,17054.74,-8696.92,159064.84,17010.69,-8642.52,159342.2,17010.69,-8642.52,159342.2,16961.82,-8575.56,159615.96,16961.82,-8575.56,159615.96,16882.25,-8455.05,160002.22,16882.25,-8455.05,160002.22,16838.26,-8383.53,160190.48,16838.26,-8383.53,160190.48,16791.37,-8304.12,160374.81,16791.37,-8304.12,160374.81,16700.95,-8143.29,160690.23,16700.95,-8143.29,160690.23,16652.31,-8053.19,160841.57,16652.31,-8053.19,160841.57,16601.4,-7956.63,160988.08,16601.4,-7956.63,160988.08,16539.57,-7836.5,161151.47,16539.57,-7836.5,161151.47,16474.91,-7707.95,161307.19,16474.91,-7707.95,161307.19,16400.38,-7556.51,161469.74,16400.38,-7556.51,161469.74,16322.93,-7395.85,161621.72,16322.93,-7395.85,161621.72,16260.67,-7264.54,161732.71,16260.67,-7264.54,161732.71,16197,-7128.44,161836.95,16197,-7128.44,161836.95,16066.04,-6843.5,162025.25,16066.04,-6843.5,162025.25,15978.4,-6649.41,162133.78,15978.4,-6649.41,162133.78,15889.48,-6450.06,162231.22,15889.48,-6450.06,162231.22,15746.04,-6123.81,162364.53,15746.04,-6123.81,162364.53,15560.47,-5694.4,162498.94,15560.47,-5694.4,162498.94,15519.39,-5598.34,162523.53,17168.1,-8677.32,158053.88,17185.55,-8926.84,158066.47,17162.38,-8674.58,158112.23,17179.67,-8924.03,158126.46,17156.55,-8671.48,158170.18,17173.67,-8920.84,158186.06,17150.61,-8668.03,158227.73,17167.56,-8917.29,158245.27,17047.99,-8573.89,159042.47,17061.48,-8819.94,159087.2,16956.96,-8455.01,159582.41,16966.67,-8696.1,159649.52,16790.74,-8190.34,160322.54,16791.99,-8417.91,160427.08,16606.32,-7852.99,160917.97,16596.48,-8060.26,161058.2,16483.75,-7612.04,161227.17,16466.06,-7803.87,161387.21,16336.49,-7309.62,161531.94,16309.37,-7482.08,161711.5,16087.07,-6773.3,161923.7,16045.02,-6913.69,162126.79,15915.05,-6389.98,162124.37,15863.92,-6510.13,162338.08,15632.91,-5743.31,162360.71,15569.24,-5834.73,162585.02,15613.06,-5697.1,162373.68,15548.61,-5786.7,162598.49,15593.08,-5650.49,162386.29,15527.85,-5738.3,162611.59,15572.96,-5603.5,162398.54,15506.97,-5689.52,162624.31,17230.78,-8923.94,158009.74,17158.46,-8874.64,158672,17158.46,-8874.64,158672,17100.8,-8814.45,159092.13,17100.8,-8814.45,159092.13,17055.83,-8758.91,159375.34,17055.83,-8758.91,159375.34,17005.83,-8690.41,159655.39,17005.83,-8690.41,159655.39,16924.24,-8566.83,160051.43,16924.24,-8566.83,160051.43,16879.04,-8493.35,160244.87,16879.04,-8493.35,160244.87,16830.79,-8411.64,160434.52,16830.79,-8411.64,160434.52,16737.6,-8245.87,160759.6,16737.6,-8245.87,160759.6,16687.4,-8152.88,160915.8,16687.4,-8152.88,160915.8,16634.82,-8053.15,161067.12,16634.82,-8053.15,161067.12,16570.92,-7929,161235.98,16570.92,-7929,161235.98,16504.07,-7796.1,161396.96,16504.07,-7796.1,161396.96,16427.02,-7639.54,161565.01,16427.02,-7639.54,161565.01,16346.98,-7473.51,161722.07,16346.98,-7473.51,161722.07,16282.68,-7337.89,161836.7,16282.68,-7337.89,161836.7,16216.97,-7197.43,161944.28,16216.97,-7197.43,161944.28,16082.01,-6903.78,162138.35,16082.01,-6903.78,162138.35,15991.85,-6704.12,162250,15991.85,-6704.12,162250,15900.53,-6499.37,162350.08,15900.53,-6499.37,162350.08,15753.5,-6164.99,162486.72,15753.5,-6164.99,162486.72,15563.87,-5726.19,162624.08,15563.87,-5726.19,162624.08,15521.97,-5628.2,162649.16,17185.55,-8926.84,158066.47,17264.51,-8916.15,158073.63,17179.67,-8924.03,158126.46,17258.62,-8913.33,158133.76,17173.67,-8920.84,158186.06,17252.6,-8910.14,158193.5,17167.56,-8917.29,158245.27,17246.47,-8906.58,158252.85,17061.48,-8819.94,159087.2,17140.11,-8808.96,159097.06,16966.67,-8696.1,159649.52,17044.98,-8684.71,159661.25,16791.99,-8417.91,160427.08,16869.59,-8405.38,160441.95,16596.48,-8060.26,161058.2,16673.16,-8046.03,161076.05,16466.06,-7803.87,161387.21,16542.08,-7788.34,161406.71,16309.37,-7482.08,161711.5,16384.6,-7464.94,161732.64,16045.02,-6913.69,162126.79,16119,-6893.87,162149.9,15863.92,-6510.13,162338.08,15937.14,-6488.61,162362.08,15569.24,-5834.73,162585.02,15641.41,-5810.8,162609.91,15548.61,-5786.7,162598.49,15620.71,-5762.63,162623.42,15527.85,-5738.3,162611.59,15599.89,-5714.07,162636.56,15506.97,-5689.52,162624.31,15578.95,-5665.14,162649.32,20523.87,-7720.21,156152.64,20499.71,-7711.98,156374.93,20499.71,-7711.98,156374.93,20426.8,-7672.85,156876.5,20426.8,-7672.85,156876.5,20327.42,-7603.36,157369.07,20327.42,-7603.36,157369.07,20247.47,-7540.56,157683.71,20247.47,-7540.56,157683.71,20155.27,-7463.48,157991.41,20155.27,-7463.48,157991.41,20023.67,-7347.62,158361.58,20023.67,-7347.62,158361.58,19873.4,-7209.61,158716.48,19873.4,-7209.61,158716.48,19715.76,-7060.19,159033.94,19715.76,-7060.19,159033.94,19543.23,-6892.7,159334.44,19543.23,-6892.7,159334.44,19409.73,-6760.88,159540.68,19409.73,-6760.88,159540.68,19269.61,-6620.83,159737.15,19269.61,-6620.83,159737.15,19046.73,-6395.13,160015.05,19046.73,-6395.13,160015.05,18811.95,-6154.24,160270.6,18811.95,-6154.24,160270.6,18489.33,-5819.06,160572.53,18489.33,-5819.06,160572.53,18148.82,-5461.17,160842.25,18148.82,-5461.17,160842.25,17678.85,-4961.78,161150.19,17678.85,-4961.78,161150.19,17638.77,-4918.94,161173.54,17638.77,-4918.94,161173.54,17637.52,-5038.84,161393.42,17677.32,-4889.75,161186.26,17836.3,-5059.45,161091.13,17836.3,-5059.45,161091.13,18187.97,-5432.62,160854.59,18187.97,-5432.62,160854.59,18528.95,-5791.01,160584.5,18528.95,-5791.01,160584.5,18852.07,-6126.7,160282.1,18852.07,-6126.7,160282.1,19087.25,-6368,160026.11,19087.25,-6368,160026.11,19310.55,-6594.12,159747.69,19310.55,-6594.12,159747.69,19450.94,-6734.45,159550.84,19450.94,-6734.45,159550.84,19584.71,-6866.53,159344.18,19584.71,-6866.53,159344.18,19757.59,-7034.37,159043.06,19757.59,-7034.37,159043.06,19915.57,-7184.11,158724.92,19915.57,-7184.11,158724.92,20066.16,-7322.41,158369.27,20066.16,-7322.41,158369.27,20198.03,-7438.51,157998.33,20198.03,-7438.51,157998.33,20290.42,-7515.74,157690.01,20290.42,-7515.74,157690.01,20370.53,-7578.67,157374.76,20370.53,-7578.67,157374.76,20470.09,-7648.28,156881.3,20470.09,-7648.28,156881.3,20549.56,-7690.02,156323.67,20549.56,-7690.02,156323.67,20567.31,-7695.72,156156.29,20567.31,-7695.72,156156.29,20701.71,-7906.25,156174.78,17699.2,-4992.14,161413.78,17677.32,-4889.75,161186.26,17637.52,-5038.84,161393.42,17699.2,-4992.14,161413.78,20632.2,-7945.43,156168.95,20523.87,-7720.21,156152.64,20701.71,-7906.25,156174.78,20632.2,-7945.43,156168.95,20632.2,-7945.43,156168.95,20607.22,-7936.92,156398.79,20607.22,-7936.92,156398.79,20531.63,-7896.34,156918.72,20531.63,-7896.34,156918.72,20428.22,-7824.03,157431.25,20428.22,-7824.03,157431.25,20344.81,-7758.51,157759.51,20344.81,-7758.51,157759.51,20248.44,-7677.94,158081.1,20248.44,-7677.94,158081.1,20110.69,-7556.67,158468.54,20110.69,-7556.67,158468.54,19953.27,-7412.1,158840.33,19953.27,-7412.1,158840.33,19788.14,-7255.58,159172.89,19788.14,-7255.58,159172.89,19607.56,-7080.27,159487.41,19607.56,-7080.27,159487.41,19468.03,-6942.49,159702.99,19468.03,-6942.49,159702.99,19321.78,-6796.31,159908.06,19321.78,-6796.31,159908.06,19089.66,-6561.26,160197.48,19089.66,-6561.26,160197.48,18845.84,-6311.1,160462.88,18845.84,-6311.1,160462.88,18511.98,-5964.25,160775.34,18511.98,-5964.25,160775.34,18160.96,-5595.31,161053.41,18160.96,-5595.31,161053.41,17678.57,-5082.71,161369.5,17678.57,-5082.71,161369.5,17637.52,-5038.84,161393.42,20701.71,-7906.25,156174.78,20676.67,-7897.72,156405.16,20676.67,-7897.72,156405.16,20600.89,-7857.04,156926.4,20600.89,-7857.04,156926.4,20497.19,-7784.52,157440.35,20497.19,-7784.52,157440.35,20413.52,-7718.81,157769.59,20413.52,-7718.81,157769.59,20316.86,-7637.99,158092.17,20316.86,-7637.99,158092.17,20178.67,-7516.34,158480.84,20178.67,-7516.34,158480.84,20020.74,-7371.29,158853.83,20020.74,-7371.29,158853.83,19855.07,-7214.26,159187.47,19855.07,-7214.26,159187.47,19673.93,-7038.4,159503,19673.93,-7038.4,159503,19533.96,-6900.19,159719.24,19533.96,-6900.19,159719.24,19387.27,-6753.58,159924.92,19387.27,-6753.58,159924.92,19154.49,-6517.86,160215.17,19154.49,-6517.86,160215.17,18910.03,-6267.04,160481.27,18910.03,-6267.04,160481.27,18575.37,-5919.36,160794.48,18575.37,-5919.36,160794.48,18223.6,-5549.63,161073.14,18223.6,-5549.63,161073.14,17740.32,-5036.09,161389.82,17740.32,-5036.09,161389.82,17699.2,-4992.14,161413.78,20634.51,-7800.98,156165.54,20609.89,-7792.6,156392.04,20609.89,-7792.6,156392.04,20535.49,-7752.66,156903.85,20535.49,-7752.66,156903.85,20433.86,-7681.6,157407.55,20433.86,-7681.6,157407.55,20351.97,-7617.28,157729.8,20351.97,-7617.28,157729.8,20257.45,-7538.25,158045.25,20257.45,-7538.25,158045.25,20122.41,-7419.38,158425.06,20122.41,-7419.38,158425.06,19968.15,-7277.7,158789.38,19968.15,-7277.7,158789.38,19806.33,-7124.32,159115.26,19806.33,-7124.32,159115.26,19629.32,-6952.47,159423.59,19629.32,-6952.47,159423.59,19492.45,-6817.32,159635.04,19492.45,-6817.32,159635.04,19348.91,-6673.85,159836.31,19348.91,-6673.85,159836.31,19120.87,-6442.93,160120.64,19120.87,-6442.93,160120.64,18881.05,-6196.87,160381.68,18881.05,-6196.87,160381.68,18552.16,-5855.18,160689.49,18552.16,-5855.18,160689.49,18205.78,-5491.12,160963.87,18205.78,-5491.12,160963.87,17728.89,-4984.36,161276.35,17728.89,-4984.36,161276.35,17688.26,-4940.95,161300.02,20695.87,-7904.61,156232.73,20561.67,-7694.14,156212.31,20689.75,-7902.65,156290.48,20555.75,-7692.25,156268.13,20683.35,-7900.35,156347.96,20549.56,-7690.02,156323.67,20676.67,-7897.72,156405.16,20543.12,-7687.48,156378.91,20497.19,-7784.52,157440.35,20370.53,-7578.67,157374.76,20316.86,-7637.99,158092.17,20198.03,-7438.51,157998.33,20020.74,-7371.29,158853.83,19915.57,-7184.11,158724.92,19673.93,-7038.4,159503,19584.71,-6866.53,159344.18,19387.27,-6753.58,159924.92,19310.55,-6594.12,159747.69,18910.03,-6267.04,160481.27,18852.07,-6126.7,160282.1,18575.37,-5919.36,160794.48,18528.95,-5791.01,160584.5,17862.19,-5166.12,161316.24,17836.3,-5059.45,161091.13,17821.85,-5123.12,161341.03,17796.97,-5017.52,161115.3,17781.23,-5079.77,161365.56,17757.35,-4975.25,161139.22,17740.32,-5036.09,161389.82,17717.45,-4932.64,161162.89,20578.04,-7832.82,156160.8,20553.47,-7824.45,156386.86,20553.47,-7824.45,156386.86,20479.22,-7784.6,156897.61,20479.22,-7784.6,156897.61,20377.82,-7713.7,157400.16,20377.82,-7713.7,157400.16,20296.14,-7649.53,157721.61,20296.14,-7649.53,157721.61,20201.85,-7570.71,158036.26,20201.85,-7570.71,158036.26,20067.18,-7452.15,158415.06,20067.18,-7452.15,158415.06,19913.33,-7310.85,158778.4,19913.33,-7310.85,158778.4,19751.95,-7157.88,159103.42,19751.95,-7157.88,159103.42,19575.4,-6986.49,159410.93,19575.4,-6986.49,159410.93,19438.88,-6851.68,159621.84,19438.88,-6851.68,159621.84,19295.69,-6708.57,159822.61,19295.69,-6708.57,159822.61,19068.19,-6478.19,160106.27,19068.19,-6478.19,160106.27,18828.89,-6232.67,160366.74,18828.89,-6232.67,160366.74,18500.66,-5891.66,160673.94,18500.66,-5891.66,160673.94,18154.89,-5528.24,160947.83,18154.89,-5528.24,160947.83,17678.71,-5022.24,161259.84,17678.71,-5022.24,161259.84,17638.14,-4978.89,161283.48,20518.23,-7718.64,156208.59,20626.38,-7943.8,156226.76,20512.33,-7716.74,156264.32,20620.27,-7941.84,156284.38,20506.15,-7714.52,156319.77,20613.89,-7939.55,156341.73,20499.71,-7711.98,156374.93,20607.22,-7936.92,156398.79,20327.42,-7603.36,157369.07,20428.22,-7824.03,157431.25,20155.27,-7463.48,157991.41,20248.44,-7677.94,158081.1,19873.4,-7209.61,158716.48,19953.27,-7412.1,158840.33,19543.23,-6892.7,159334.44,19607.56,-7080.27,159487.41,19269.61,-6620.83,159737.15,19321.78,-6796.31,159908.06,18811.95,-6154.24,160270.6,18845.84,-6311.1,160462.88,18489.33,-5819.06,160572.53,18511.98,-5964.25,160775.34,17797.57,-5088.45,161078.51,17800.23,-5212.52,161296.05,17758.29,-5046.57,161102.65,17759.96,-5169.59,161320.8,17718.72,-5004.34,161126.55,17719.41,-5126.32,161345.28,17678.85,-4961.78,161150.19,17678.57,-5082.71,161369.5,20666.95,-7925.84,156171.87,20641.95,-7917.32,156401.98,20641.95,-7917.32,156401.98,20566.26,-7876.69,156922.56,20566.26,-7876.69,156922.56,20462.71,-7804.28,157435.8,20462.71,-7804.28,157435.8,20379.16,-7738.66,157764.55,20379.16,-7738.66,157764.55,20282.65,-7657.97,158086.64,20282.65,-7657.97,158086.64,20144.68,-7536.51,158474.69,20144.68,-7536.51,158474.69,19987.01,-7391.69,158847.08,19987.01,-7391.69,158847.08,19821.6,-7234.92,159180.18,19821.6,-7234.92,159180.18,19640.75,-7059.34,159495.2,19640.75,-7059.34,159495.2,19500.99,-6921.34,159711.11,19500.99,-6921.34,159711.11,19354.52,-6774.94,159916.49,19354.52,-6774.94,159916.49,19122.08,-6539.56,160206.33,19122.08,-6539.56,160206.33,18877.94,-6289.07,160472.07,18877.94,-6289.07,160472.07,18543.68,-5941.81,160784.91,18543.68,-5941.81,160784.91,18192.28,-5572.47,161063.27,18192.28,-5572.47,161063.27,17709.44,-5059.4,161379.66,17709.44,-5059.4,161379.66,17668.36,-5015.49,161403.6,20626.38,-7943.8,156226.76,20695.87,-7904.61,156232.73,20620.27,-7941.84,156284.38,20689.75,-7902.65,156290.48,20613.89,-7939.55,156341.73,20683.35,-7900.35,156347.96,20607.22,-7936.92,156398.79,20676.67,-7897.72,156405.16,20428.22,-7824.03,157431.25,20497.19,-7784.52,157440.35,20248.44,-7677.94,158081.1,20316.86,-7637.99,158092.17,19953.27,-7412.1,158840.33,20020.74,-7371.29,158853.83,19607.56,-7080.27,159487.41,19673.93,-7038.4,159503,19321.78,-6796.31,159908.06,19387.27,-6753.58,159924.92,18845.84,-6311.1,160462.88,18910.03,-6267.04,160481.27,18511.98,-5964.25,160775.34,18575.37,-5919.36,160794.48,17800.23,-5212.52,161296.05,17862.19,-5166.12,161316.24,17759.96,-5169.59,161320.8,17821.85,-5123.12,161341.03,17719.41,-5126.32,161345.28,17781.23,-5079.77,161365.56,17678.57,-5082.71,161369.5,17740.32,-5036.09,161389.82,23238.18,-5606.39,154662.35,23213.68,-5601.37,154876.04,23213.68,-5601.37,154876.04,23153.95,-5582.97,155253.41,23153.95,-5582.97,155253.41,23073.14,-5552.18,155625.7,23073.14,-5552.18,155625.7,22964.96,-5506.12,156010.32,22964.96,-5506.12,156010.32,22833.36,-5446.12,156385.54,22833.36,-5446.12,156385.54,22735.97,-5399.98,156622.44,22735.97,-5399.98,156622.44,22629.27,-5348.24,156854.18,22629.27,-5348.24,156854.18,22436.15,-5252.32,157220.26,22436.15,-5252.32,157220.26,22221.06,-5143.03,157570.49,22221.06,-5143.03,157570.49,21975.52,-5016.03,157917.88,21975.52,-5016.03,157917.88,21710.62,-4877.07,158246.83,21710.62,-4877.07,158246.83,21489.83,-4760.05,158493.03,21489.83,-4760.05,158493.03,21259.61,-4637.1,158727.98,21259.61,-4637.1,158727.98,20897.46,-4442.15,159061.14,20897.46,-4442.15,159061.14,20519.26,-4236.92,159370.86,20519.26,-4236.92,159370.86,20042.49,-3976.33,159717.43,20042.49,-3976.33,159717.43,19326.76,-3582.09,160166.44,19326.76,-3582.09,160166.44,19391.62,-3690.56,160382.67,19354.35,-3541.31,160175.16,20070.49,-3935.78,159725.88,20070.49,-3935.78,159725.88,20547.6,-4196.55,159379.07,20547.6,-4196.55,159379.07,20926.09,-4401.94,159069.11,20926.09,-4401.94,159069.11,21288.56,-4597.07,158735.65,21288.56,-4597.07,158735.65,21519.01,-4720.13,158500.48,21519.01,-4720.13,158500.48,21740.03,-4837.28,158254.02,21740.03,-4837.28,158254.02,22005.21,-4976.39,157924.71,22005.21,-4976.39,157924.71,22251.04,-5103.54,157576.91,22251.04,-5103.54,157576.91,22466.41,-5212.97,157226.23,22466.41,-5212.97,157226.23,22659.79,-5309.02,156859.67,22659.79,-5309.02,156859.67,22766.63,-5360.82,156627.61,22766.63,-5360.82,156627.61,22864.16,-5407.03,156390.39,22864.16,-5407.03,156390.39,22995.93,-5467.11,156014.65,22995.93,-5467.11,156014.65,23104.26,-5513.24,155629.5,23104.26,-5513.24,155629.5,23185.18,-5544.07,155256.71,23185.18,-5544.07,155256.71,23258.03,-5565.47,154772.23,23258.03,-5565.47,154772.23,23269.52,-5567.52,154664.89,23269.52,-5567.52,154664.89,23472.13,-5713.03,154687.19,19435.75,-3625.31,160396.61,19354.35,-3541.31,160175.16,19391.62,-3690.56,160382.67,19435.75,-3625.31,160396.61,23421.99,-5775.23,154683.12,23238.18,-5606.39,154662.35,23472.13,-5713.03,154687.19,23421.99,-5775.23,154683.12,23421.99,-5775.23,154683.12,23396.53,-5770,154905.26,23396.53,-5770,154905.26,23334.33,-5750.85,155298.15,23334.33,-5750.85,155298.15,23250.08,-5718.75,155686.26,23250.08,-5718.75,155686.26,23137.19,-5670.68,156087.62,23137.19,-5670.68,156087.62,22999.83,-5608.06,156479.29,22999.83,-5608.06,156479.29,22898.2,-5559.9,156726.51,22898.2,-5559.9,156726.51,22786.91,-5505.94,156968.23,22786.91,-5505.94,156968.23,22585.7,-5406,157349.64,22585.7,-5406,157349.64,22362,-5292.34,157713.89,22362,-5292.34,157713.89,22107.23,-5160.57,158074.36,22107.23,-5160.57,158074.36,21833.07,-5016.75,158414.82,21833.07,-5016.75,158414.82,21605.1,-4895.93,158669.03,21605.1,-4895.93,158669.03,21367.89,-4769.24,158911.12,21367.89,-4769.24,158911.12,20995.69,-4568.88,159253.54,20995.69,-4568.88,159253.54,20608.07,-4358.54,159570.98,20608.07,-4358.54,159570.98,20120.75,-4092.18,159925.23,20120.75,-4092.18,159925.23,19391.62,-3690.56,160382.67,23472.13,-5713.03,154687.19,23446.62,-5707.79,154909.76,23446.62,-5707.79,154909.76,23384.31,-5688.6,155303.43,23384.31,-5688.6,155303.43,23299.88,-5656.44,155692.34,23299.88,-5656.44,155692.34,23186.75,-5608.26,156094.54,23186.75,-5608.26,156094.54,23049.1,-5545.51,156487.05,23049.1,-5545.51,156487.05,22947.25,-5497.25,156734.79,22947.25,-5497.25,156734.79,22835.73,-5443.18,156977.01,22835.73,-5443.18,156977.01,22634.11,-5343.03,157359.19,22634.11,-5343.03,157359.19,22409.98,-5229.15,157724.16,22409.98,-5229.15,157724.16,22154.74,-5097.14,158085.29,22154.74,-5097.14,158085.29,21880.12,-4953.08,158426.33,21880.12,-4953.08,158426.33,21651.78,-4832.06,158680.94,21651.78,-4832.06,158680.94,21414.22,-4705.19,158923.39,21414.22,-4705.19,158923.39,21041.51,-4504.55,159266.29,21041.51,-4504.55,159266.29,20653.41,-4293.95,159584.12,20653.41,-4293.95,159584.12,20165.56,-4027.3,159938.75,20165.56,-4027.3,159938.75,19435.75,-3625.31,160396.61,23370.82,-5640.27,154676.04,23345.81,-5635.14,154894.3,23345.81,-5635.14,154894.3,23284.74,-5616.33,155280.07,23284.74,-5616.33,155280.07,23202.07,-5584.84,155660.92,23202.07,-5584.84,155660.92,23091.34,-5537.68,156054.6,23091.34,-5537.68,156054.6,22956.63,-5476.27,156438.72,22956.63,-5476.27,156438.72,22856.94,-5429.04,156681.2,22856.94,-5429.04,156681.2,22747.76,-5376.1,156918.34,22747.76,-5376.1,156918.34,22550.26,-5278,157292.71,22550.26,-5278,157292.71,22330.51,-5166.35,157650.54,22330.51,-5166.35,157650.54,22079.97,-5036.77,158005,22079.97,-5036.77,158005,21810.07,-4895.18,158340.18,21810.07,-4895.18,158340.18,21585.4,-4776.1,158590.71,21585.4,-4776.1,158590.71,21351.39,-4651.13,158829.52,21351.39,-4651.13,158829.52,20983.8,-4453.25,159167.7,20983.8,-4453.25,159167.7,20600.5,-4245.25,159481.59,20600.5,-4245.25,159481.59,20118.03,-3981.54,159832.32,20118.03,-3981.54,159832.32,19395.05,-3583.31,160285.89,23469.3,-5712.59,154715.16,23266.79,-5567.09,154691.79,23466.37,-5712.08,154743.07,23263.97,-5566.61,154718.65,23460.19,-5710.9,154798.76,23258.03,-5565.47,154772.23,23446.62,-5707.79,154909.76,23244.99,-5562.48,154878.85,23299.88,-5656.44,155692.34,23104.26,-5513.24,155629.5,23049.1,-5545.51,156487.05,22864.16,-5407.03,156390.39,22835.73,-5443.18,156977.01,22659.79,-5309.02,156859.67,22409.98,-5229.15,157724.16,22251.04,-5103.54,157576.91,21880.12,-4953.08,158426.33,21740.03,-4837.28,158254.02,21414.22,-4705.19,158923.39,21288.56,-4597.07,158735.65,20653.41,-4293.95,159584.12,20547.6,-4196.55,159379.07,19663,-3750.82,160262.1,19577.59,-3664.62,160043.01,19606.78,-3719.8,160296.01,19522.38,-3634.15,160076.31,19550.15,-3688.53,160329.74,19466.76,-3603.43,160109.44,19493.11,-3657.02,160363.29,19410.71,-3572.47,160142.41,23330.08,-5690.81,154672.73,23305.1,-5685.69,154890.65,23305.1,-5685.69,154890.65,23244.14,-5666.91,155275.78,23244.14,-5666.91,155275.78,23161.61,-5635.47,155655.98,23161.61,-5635.47,155655.98,23051.07,-5588.4,156048.97,23051.07,-5588.4,156048.97,22916.6,-5527.09,156432.42,22916.6,-5527.09,156432.42,22817.09,-5479.94,156674.47,22817.09,-5479.94,156674.47,22708.09,-5427.09,156911.21,22708.09,-5427.09,156911.21,22510.93,-5329.16,157284.95,22510.93,-5329.16,157284.95,22291.53,-5217.69,157642.19,22291.53,-5217.69,157642.19,22041.37,-5088.3,157996.12,22041.37,-5088.3,157996.12,21771.85,-4946.91,158330.83,21771.85,-4946.91,158330.83,21547.47,-4827.99,158581.03,21547.47,-4827.99,158581.03,21313.75,-4703.17,158819.55,21313.75,-4703.17,158819.55,20946.58,-4505.51,159157.34,20946.58,-4505.51,159157.34,20563.66,-4297.73,159470.92,20563.66,-4297.73,159470.92,20081.62,-4034.25,159821.33,20081.62,-4034.25,159821.33,19359.19,-3636.33,160274.55,23235.45,-5605.97,154689.22,23419.16,-5774.79,154711.04,23232.63,-5605.48,154716.04,23416.23,-5774.29,154738.9,23226.7,-5604.34,154769.55,23410.07,-5773.1,154794.48,23213.68,-5601.37,154876.04,23396.53,-5770,154905.26,23073.14,-5552.18,155625.7,23250.08,-5718.75,155686.26,22833.36,-5446.12,156385.54,22999.83,-5608.06,156479.29,22629.27,-5348.24,156854.18,22786.91,-5505.94,156968.23,22221.06,-5143.03,157570.49,22362,-5292.34,157713.89,21710.62,-4877.07,158246.83,21833.07,-5016.75,158414.82,21259.61,-4637.1,158727.98,21367.89,-4769.24,158911.12,20519.26,-4236.92,159370.86,20608.07,-4358.54,159570.98,19549.89,-3705.33,160034.37,19618.67,-3815.97,160248.27,19494.71,-3674.88,160067.65,19562.5,-3784.97,160282.15,19439.11,-3644.18,160100.76,19505.92,-3753.73,160315.85,19383.1,-3613.23,160133.71,19448.93,-3722.24,160349.37,23447.06,-5744.13,154685.15,23421.57,-5738.9,154907.51,23421.57,-5738.9,154907.51,23359.32,-5719.73,155300.79,23359.32,-5719.73,155300.79,23274.98,-5687.59,155689.3,23274.98,-5687.59,155689.3,23161.97,-5639.47,156091.08,23161.97,-5639.47,156091.08,23024.47,-5576.78,156483.17,23024.47,-5576.78,156483.17,22922.72,-5528.58,156730.65,22922.72,-5528.58,156730.65,22811.32,-5474.56,156972.62,22811.32,-5474.56,156972.62,22609.9,-5374.52,157354.42,22609.9,-5374.52,157354.42,22385.99,-5260.75,157719.03,22385.99,-5260.75,157719.03,22130.98,-5128.86,158079.83,22130.98,-5128.86,158079.83,21856.6,-4984.91,158420.58,21856.6,-4984.91,158420.58,21628.44,-4863.99,158674.99,21628.44,-4863.99,158674.99,21391.05,-4737.22,158917.25,21391.05,-4737.22,158917.25,21018.6,-4536.71,159259.92,21018.6,-4536.71,159259.92,20630.74,-4326.24,159577.55,20630.74,-4326.24,159577.55,20143.16,-4059.74,159931.99,20143.16,-4059.74,159931.99,19413.69,-3657.93,160389.64,23419.16,-5774.79,154711.04,23469.3,-5712.59,154715.16,23416.23,-5774.29,154738.9,23466.37,-5712.08,154743.07,23410.07,-5773.1,154794.48,23460.19,-5710.9,154798.76,23396.53,-5770,154905.26,23446.62,-5707.79,154909.76,23250.08,-5718.75,155686.26,23299.88,-5656.44,155692.34,22999.83,-5608.06,156479.29,23049.1,-5545.51,156487.05,22786.91,-5505.94,156968.23,22835.73,-5443.18,156977.01,22362,-5292.34,157713.89,22409.98,-5229.15,157724.16,21833.07,-5016.75,158414.82,21880.12,-4953.08,158426.33,21367.89,-4769.24,158911.12,21414.22,-4705.19,158923.39,20608.07,-4358.54,159570.98,20653.41,-4293.95,159584.12,19618.67,-3815.97,160248.27,19663,-3750.82,160262.1,19562.5,-3784.97,160282.15,19606.78,-3719.8,160296.01,19505.92,-3753.73,160315.85,19550.15,-3688.53,160329.74,19448.93,-3722.24,160349.37,19493.11,-3657.02,160363.29,24917.33,-2662.12,153743.3,24877.82,-2658.35,154054.85,24877.82,-2658.35,154054.85,24805.17,-2648.28,154437.65,24805.17,-2648.28,154437.65,24706.54,-2632.25,154814.32,24706.54,-2632.25,154814.32,24626.18,-2618.22,155062.22,24626.18,-2618.22,155062.22,24534.64,-2601.59,155306.12,24534.64,-2601.59,155306.12,24362,-2569.07,155694.94,24362,-2569.07,155694.94,24162.52,-2530.28,156070.64,24162.52,-2530.28,156070.64,23927.87,-2483.58,156447.9,23927.87,-2483.58,156447.9,23669.08,-2431.17,156809.09,23669.08,-2431.17,156809.09,23258.34,-2346.66,157301.92,23258.34,-2346.66,157301.92,22983.93,-2289.55,157591.45,22983.93,-2289.55,157591.45,22696.91,-2229.39,157868.54,22696.91,-2229.39,157868.54,22157.06,-2115.32,158334.33,22157.06,-2115.32,158334.33,21557.55,-1987.58,158787.26,21557.55,-1987.58,158787.26,20513.32,-1763.18,159461.14,20513.32,-1763.18,159461.14,20381.17,-1734.65,159538.23,20381.17,-1734.65,159538.23,20491.79,-1798.41,159753.69,20393.99,-1686.5,159542.41,20720.89,-1757.03,159348.69,20720.89,-1757.03,159348.69,21570.66,-1939.49,158791.25,21570.66,-1939.49,158791.25,22170.36,-2067.27,158338.19,22170.36,-2067.27,158338.19,22710.41,-2181.39,157872.22,22710.41,-2181.39,157872.22,22997.55,-2241.58,157595.02,22997.55,-2241.58,157595.02,23272.08,-2298.71,157305.35,23272.08,-2298.71,157305.35,23683.03,-2383.26,156812.28,23683.03,-2383.26,156812.28,23941.96,-2435.7,156450.89,23941.96,-2435.7,156450.89,24176.75,-2482.43,156073.41,24176.75,-2482.43,156073.41,24376.35,-2521.24,155697.47,24376.35,-2521.24,155697.47,24549.11,-2553.79,155308.39,24549.11,-2553.79,155308.39,24640.72,-2570.42,155064.32,24640.72,-2570.42,155064.32,24721.13,-2584.46,154816.25,24721.13,-2584.46,154816.25,24819.83,-2600.51,154439.31,24819.83,-2600.51,154439.31,24892.53,-2610.58,154056.25,24892.53,-2610.58,154056.25,24932.07,-2614.36,153744.48,24932.07,-2614.36,153744.48,25174.1,-2673.94,153768.92,20512.3,-1721.37,159760.38,20393.99,-1686.5,159542.41,20491.79,-1798.41,159753.69,20512.3,-1721.37,159760.38,25150.51,-2750.36,153767.03,24917.33,-2662.12,153743.3,25174.1,-2673.94,153768.92,25150.51,-2750.36,153767.03,25150.51,-2750.36,153767.03,25109.26,-2746.43,154092.3,25109.26,-2746.43,154092.3,25033.37,-2735.9,154492.12,25033.37,-2735.9,154492.12,24930.32,-2719.16,154885.67,24930.32,-2719.16,154885.67,24846.39,-2704.5,155144.59,24846.39,-2704.5,155144.59,24750.84,-2687.15,155399.19,24750.84,-2687.15,155399.19,24570.84,-2653.24,155804.58,24570.84,-2653.24,155804.58,24363.27,-2612.87,156195.53,24363.27,-2612.87,156195.53,24119.7,-2564.4,156587.16,24119.7,-2564.4,156587.16,23851.78,-2510.14,156961.11,23851.78,-2510.14,156961.11,23427.99,-2422.95,157469.62,23427.99,-2422.95,157469.62,23145.74,-2364.21,157767.44,23145.74,-2364.21,157767.44,22851.17,-2302.46,158051.81,22851.17,-2302.46,158051.81,22298.71,-2185.72,158528.51,22298.71,-2185.72,158528.51,21687.19,-2055.43,158990.52,21687.19,-2055.43,158990.52,20625.83,-1827.35,159675.49,20625.83,-1827.35,159675.49,20491.79,-1798.41,159753.69,25174.1,-2673.94,153768.92,25132.8,-2670,154094.54,25132.8,-2670,154094.54,25056.83,-2659.47,154494.78,25056.83,-2659.47,154494.78,24953.67,-2642.7,154888.75,24953.67,-2642.7,154888.75,24869.65,-2628.03,155147.95,24869.65,-2628.03,155147.95,24774,-2610.66,155402.82,24774,-2610.66,155402.82,24593.81,-2576.71,155808.62,24593.81,-2576.71,155808.62,24386.04,-2536.31,156199.96,24386.04,-2536.31,156199.96,24142.24,-2487.79,156591.95,24142.24,-2487.79,156591.95,23874.1,-2433.49,156966.21,23874.1,-2433.49,156966.21,23449.97,-2346.23,157475.12,23449.97,-2346.23,157475.12,23167.53,-2287.44,157773.14,23167.53,-2287.44,157773.14,22872.77,-2225.66,158057.7,22872.77,-2225.66,158057.7,22320,-2108.86,158534.67,22320,-2108.86,158534.67,21708.17,-1978.49,158996.91,21708.17,-1978.49,158996.91,20646.38,-1750.32,159682.16,20646.38,-1750.32,159682.16,20512.3,-1721.37,159760.38,25053.08,-2644.15,153756.7,25012.66,-2640.29,154075.4,25012.66,-2640.29,154075.4,24938.33,-2629.99,154467.05,24938.33,-2629.99,154467.05,24837.4,-2613.58,154852.5,24837.4,-2613.58,154852.5,24755.18,-2599.22,155106.13,24755.18,-2599.22,155106.13,24661.56,-2582.22,155355.6,24661.56,-2582.22,155355.6,24485.08,-2548.98,155753.05,24485.08,-2548.98,155753.05,24281.39,-2509.37,156136.68,24281.39,-2509.37,156136.68,24042.1,-2461.74,156521.42,24042.1,-2461.74,156521.42,23778.56,-2408.38,156889.25,23778.56,-2408.38,156889.25,23361.03,-2322.47,157390.24,23361.03,-2322.47,157390.24,23082.54,-2264.51,157684.08,23082.54,-2264.51,157684.08,22791.59,-2203.52,157964.96,22791.59,-2203.52,157964.96,22245.18,-2088.06,158436.43,22245.18,-2088.06,158436.43,21639.42,-1958.99,158894.08,21639.42,-1958.99,158894.08,20586.27,-1732.68,159573.73,20586.27,-1732.68,159573.73,20453.14,-1703.94,159651.4,25168.42,-2673.56,153823.47,24926.63,-2613.99,153796.75,25162.26,-2673.07,153877.93,24920.73,-2613.52,153848.91,25155.62,-2672.47,153932.27,24914.37,-2612.95,153900.93,25132.8,-2670,154094.54,24892.53,-2610.58,154056.25,24953.67,-2642.7,154888.75,24721.13,-2584.46,154816.25,24774,-2610.66,155402.82,24549.11,-2553.79,155308.39,24386.04,-2536.31,156199.96,24176.75,-2482.43,156073.41,23874.1,-2433.49,156966.21,23683.03,-2383.26,156812.28,23449.97,-2346.23,157475.12,23272.08,-2298.71,157305.35,22872.77,-2225.66,158057.7,22710.41,-2181.39,157872.22,22320,-2108.86,158534.67,22170.36,-2067.27,158338.19,21708.17,-1978.49,158996.91,21570.66,-1939.49,158791.25,20844.04,-1792.95,159563.79,20720.89,-1757.03,159348.69,20712.76,-1764.64,159642.83,20591.56,-1729.15,159426.55,20646.38,-1750.32,159682.16,20526.16,-1715.04,159465.3,20579.53,-1735.89,159721.37,20460.27,-1700.81,159503.95,25033.92,-2706.24,153755.16,24993.54,-2702.39,154073.58,24993.54,-2702.39,154073.58,24919.27,-2692.09,154464.88,24919.27,-2692.09,154464.88,24818.43,-2675.7,154850,24818.43,-2675.7,154850,24736.29,-2661.36,155103.4,24736.29,-2661.36,155103.4,24642.74,-2644.37,155352.65,24642.74,-2644.37,155352.65,24466.42,-2611.15,155749.76,24466.42,-2611.15,155749.76,24262.89,-2571.58,156133.08,24262.89,-2571.58,156133.08,24023.78,-2523.99,156517.53,24023.78,-2523.99,156517.53,23760.43,-2470.66,156885.1,23760.43,-2470.66,156885.1,23343.16,-2384.81,157385.77,23343.16,-2384.81,157385.77,23064.84,-2326.88,157679.44,23064.84,-2326.88,157679.44,22774.04,-2265.92,157960.18,22774.04,-2265.92,157960.18,22227.88,-2150.52,158431.42,22227.88,-2150.52,158431.42,21622.37,-2021.5,158888.89,21622.37,-2021.5,158888.89,20569.57,-1795.26,159568.31,20569.57,-1795.26,159568.31,20436.48,-1766.53,159645.96,24911.9,-2661.76,153795.53,25144.85,-2749.98,153821.52,24906,-2661.29,153847.65,25138.69,-2749.49,153875.92,24899.64,-2660.71,153899.65,25132.06,-2748.89,153930.2,24877.82,-2658.35,154054.85,25109.26,-2746.43,154092.3,24706.54,-2632.25,154814.32,24930.32,-2719.16,154885.67,24534.64,-2601.59,155306.12,24750.84,-2687.15,155399.19,24162.52,-2530.28,156070.64,24363.27,-2612.87,156195.53,23669.08,-2431.17,156809.09,23851.78,-2510.14,156961.11,23258.34,-2346.66,157301.92,23427.99,-2422.95,157469.62,22696.91,-2229.39,157868.54,22851.17,-2302.46,158051.81,22157.06,-2115.32,158334.33,22298.71,-2185.72,158528.51,21557.55,-1987.58,158787.26,21687.19,-2055.43,158990.52,20707.99,-1805.16,159344.55,20823.42,-1869.96,159557.17,20578.7,-1777.29,159422.39,20692.18,-1841.66,159636.17,20513.32,-1763.18,159461.14,20625.83,-1827.35,159675.49,20447.44,-1748.96,159499.77,20559,-1812.92,159714.68,25162.31,-2712.15,153767.97,25121.03,-2708.21,154093.42,25121.03,-2708.21,154093.42,25045.1,-2697.69,154493.45,25045.1,-2697.69,154493.45,24942,-2680.93,154887.21,24942,-2680.93,154887.21,24858.02,-2666.26,155146.27,24858.02,-2666.26,155146.27,24762.42,-2648.9,155401,24762.42,-2648.9,155401,24582.32,-2614.98,155806.6,24582.32,-2614.98,155806.6,24374.65,-2574.59,156197.75,24374.65,-2574.59,156197.75,24130.97,-2526.09,156589.55,24130.97,-2526.09,156589.55,23862.94,-2471.82,156963.66,23862.94,-2471.82,156963.66,23438.98,-2384.59,157472.37,23438.98,-2384.59,157472.37,23156.64,-2325.83,157770.29,23156.64,-2325.83,157770.29,22861.97,-2264.06,158054.76,22861.97,-2264.06,158054.76,22309.35,-2147.29,158531.59,22309.35,-2147.29,158531.59,21697.68,-2016.96,158993.71,21697.68,-2016.96,158993.71,20636.11,-1788.84,159678.83,20636.11,-1788.84,159678.83,20502.04,-1759.89,159757.03,25144.85,-2749.98,153821.52,25168.42,-2673.56,153823.47,25138.69,-2749.49,153875.92,25162.26,-2673.07,153877.93,25132.06,-2748.89,153930.2,25155.62,-2672.47,153932.27,25109.26,-2746.43,154092.3,25132.8,-2670,154094.54,24930.32,-2719.16,154885.67,24953.67,-2642.7,154888.75,24750.84,-2687.15,155399.19,24774,-2610.66,155402.82,24363.27,-2612.87,156195.53,24386.04,-2536.31,156199.96,23851.78,-2510.14,156961.11,23874.1,-2433.49,156966.21,23427.99,-2422.95,157469.62,23449.97,-2346.23,157475.12,22851.17,-2302.46,158051.81,22872.77,-2225.66,158057.7,22298.71,-2185.72,158528.51,22320,-2108.86,158534.67,21687.19,-2055.43,158990.52,21708.17,-1978.49,158996.91,20823.42,-1869.96,159557.17,20844.04,-1792.95,159563.79,20692.18,-1841.66,159636.17,20712.76,-1764.64,159642.83,20625.83,-1827.35,159675.49,20646.38,-1750.32,159682.16,20559,-1812.92,159714.68,20579.53,-1735.89,159721.37,24932.07,2614.36,153744.48,24892.53,2610.58,154056.25,24892.53,2610.58,154056.25,24819.83,2600.51,154439.31,24819.83,2600.51,154439.31,24721.13,2584.46,154816.25,24721.13,2584.46,154816.25,24640.72,2570.42,155064.32,24640.72,2570.42,155064.32,24549.11,2553.79,155308.39,24549.11,2553.79,155308.39,24376.35,2521.24,155697.47,24376.35,2521.24,155697.47,24176.75,2482.43,156073.41,24176.75,2482.43,156073.41,23941.96,2435.7,156450.89,23941.96,2435.7,156450.89,23683.03,2383.26,156812.28,23683.03,2383.26,156812.28,23272.08,2298.71,157305.35,23272.08,2298.71,157305.35,22997.55,2241.58,157595.02,22997.55,2241.58,157595.02,22710.41,2181.39,157872.22,22710.41,2181.39,157872.22,22170.36,2067.27,158338.19,22170.36,2067.27,158338.19,21570.66,1939.49,158791.25,21570.66,1939.49,158791.25,20526.16,1715.04,159465.3,20526.16,1715.04,159465.3,20393.99,1686.5,159542.41,20393.99,1686.5,159542.41,20512.3,1721.37,159760.38,20381.17,1734.65,159538.23,20707.99,1805.16,159344.55,20707.99,1805.16,159344.55,21557.55,1987.58,158787.26,21557.55,1987.58,158787.26,22157.06,2115.32,158334.33,22157.06,2115.32,158334.33,22696.91,2229.39,157868.54,22696.91,2229.39,157868.54,22983.93,2289.55,157591.45,22983.93,2289.55,157591.45,23258.34,2346.66,157301.92,23258.34,2346.66,157301.92,23669.08,2431.17,156809.09,23669.08,2431.17,156809.09,23927.87,2483.58,156447.9,23927.87,2483.58,156447.9,24162.52,2530.28,156070.64,24162.52,2530.28,156070.64,24362,2569.07,155694.94,24362,2569.07,155694.94,24534.64,2601.59,155306.12,24534.64,2601.59,155306.12,24626.18,2618.22,155062.22,24626.18,2618.22,155062.22,24706.54,2632.25,154814.32,24706.54,2632.25,154814.32,24805.17,2648.28,154437.65,24805.17,2648.28,154437.65,24877.82,2658.35,154054.85,24877.82,2658.35,154054.85,24917.33,2662.12,153743.3,24917.33,2662.12,153743.3,25150.51,2750.36,153767.03,20491.79,1798.41,159753.69,20381.17,1734.65,159538.23,20512.3,1721.37,159760.38,20491.79,1798.41,159753.69,25174.1,2673.94,153768.92,24932.07,2614.36,153744.48,25150.51,2750.36,153767.03,25174.1,2673.94,153768.92,25174.1,2673.94,153768.92,25132.8,2670,154094.54,25132.8,2670,154094.54,25056.83,2659.47,154494.78,25056.83,2659.47,154494.78,24953.67,2642.7,154888.75,24953.67,2642.7,154888.75,24869.65,2628.03,155147.95,24869.65,2628.03,155147.95,24774,2610.66,155402.82,24774,2610.66,155402.82,24593.81,2576.71,155808.62,24593.81,2576.71,155808.62,24386.04,2536.31,156199.96,24386.04,2536.31,156199.96,24142.24,2487.79,156591.95,24142.24,2487.79,156591.95,23874.1,2433.49,156966.21,23874.1,2433.49,156966.21,23449.97,2346.23,157475.12,23449.97,2346.23,157475.12,23167.53,2287.44,157773.14,23167.53,2287.44,157773.14,22872.77,2225.66,158057.7,22872.77,2225.66,158057.7,22320,2108.86,158534.67,22320,2108.86,158534.67,21708.17,1978.49,158996.91,21708.17,1978.49,158996.91,20646.38,1750.32,159682.16,20646.38,1750.32,159682.16,20512.3,1721.37,159760.38,25150.51,2750.36,153767.03,25109.26,2746.43,154092.3,25109.26,2746.43,154092.3,25033.37,2735.9,154492.12,25033.37,2735.9,154492.12,24930.32,2719.16,154885.67,24930.32,2719.16,154885.67,24846.39,2704.5,155144.59,24846.39,2704.5,155144.59,24750.84,2687.15,155399.19,24750.84,2687.15,155399.19,24570.84,2653.24,155804.58,24570.84,2653.24,155804.58,24363.27,2612.87,156195.53,24363.27,2612.87,156195.53,24119.7,2564.4,156587.16,24119.7,2564.4,156587.16,23851.78,2510.14,156961.11,23851.78,2510.14,156961.11,23427.99,2422.95,157469.62,23427.99,2422.95,157469.62,23145.74,2364.21,157767.44,23145.74,2364.21,157767.44,22851.17,2302.46,158051.81,22851.17,2302.46,158051.81,22298.71,2185.72,158528.51,22298.71,2185.72,158528.51,21687.19,2055.43,158990.52,21687.19,2055.43,158990.52,20625.83,1827.35,159675.49,20625.83,1827.35,159675.49,20491.79,1798.41,159753.69,25033.92,2706.24,153755.16,24993.54,2702.39,154073.58,24993.54,2702.39,154073.58,24919.27,2692.09,154464.88,24919.27,2692.09,154464.88,24818.43,2675.7,154850,24818.43,2675.7,154850,24736.29,2661.36,155103.4,24736.29,2661.36,155103.4,24642.74,2644.37,155352.65,24642.74,2644.37,155352.65,24466.42,2611.15,155749.76,24466.42,2611.15,155749.76,24262.89,2571.58,156133.08,24262.89,2571.58,156133.08,24023.78,2523.99,156517.53,24023.78,2523.99,156517.53,23760.43,2470.66,156885.1,23760.43,2470.66,156885.1,23343.16,2384.81,157385.77,23343.16,2384.81,157385.77,23064.84,2326.88,157679.44,23064.84,2326.88,157679.44,22774.04,2265.92,157960.18,22774.04,2265.92,157960.18,22227.88,2150.52,158431.42,22227.88,2150.52,158431.42,21622.37,2021.5,158888.89,21622.37,2021.5,158888.89,20569.57,1795.26,159568.31,20569.57,1795.26,159568.31,20436.48,1766.53,159645.96,25144.85,2749.98,153821.52,24911.9,2661.76,153795.53,25138.69,2749.49,153875.92,24906,2661.29,153847.65,25132.06,2748.89,153930.2,24899.64,2660.71,153899.65,25109.26,2746.43,154092.3,24877.82,2658.35,154054.85,24930.32,2719.16,154885.67,24706.54,2632.25,154814.32,24750.84,2687.15,155399.19,24534.64,2601.59,155306.12,24363.27,2612.87,156195.53,24162.52,2530.28,156070.64,23851.78,2510.14,156961.11,23669.08,2431.17,156809.09,23427.99,2422.95,157469.62,23258.34,2346.66,157301.92,22851.17,2302.46,158051.81,22696.91,2229.39,157868.54,22298.71,2185.72,158528.51,22157.06,2115.32,158334.33,21687.19,2055.43,158990.52,21557.55,1987.58,158787.26,20823.42,1869.96,159557.17,20707.99,1805.16,159344.55,20692.18,1841.66,159636.17,20578.7,1777.29,159422.39,20625.83,1827.35,159675.49,20513.32,1763.18,159461.14,20559,1812.92,159714.68,20447.44,1748.96,159499.77,25053.08,2644.15,153756.7,25012.66,2640.29,154075.4,25012.66,2640.29,154075.4,24938.33,2629.99,154467.05,24938.33,2629.99,154467.05,24837.4,2613.58,154852.5,24837.4,2613.58,154852.5,24755.18,2599.22,155106.13,24755.18,2599.22,155106.13,24661.56,2582.22,155355.6,24661.56,2582.22,155355.6,24485.08,2548.98,155753.05,24485.08,2548.98,155753.05,24281.39,2509.37,156136.68,24281.39,2509.37,156136.68,24042.1,2461.74,156521.42,24042.1,2461.74,156521.42,23778.56,2408.38,156889.25,23778.56,2408.38,156889.25,23361.03,2322.47,157390.24,23361.03,2322.47,157390.24,23082.54,2264.51,157684.08,23082.54,2264.51,157684.08,22791.59,2203.52,157964.96,22791.59,2203.52,157964.96,22245.18,2088.06,158436.43,22245.18,2088.06,158436.43,21639.42,1958.99,158894.08,21639.42,1958.99,158894.08,20586.27,1732.68,159573.73,20586.27,1732.68,159573.73,20453.14,1703.94,159651.4,24926.63,2613.99,153796.75,25168.42,2673.56,153823.47,24920.73,2613.52,153848.91,25162.26,2673.07,153877.93,24914.37,2612.95,153900.93,25155.62,2672.47,153932.27,24892.53,2610.58,154056.25,25132.8,2670,154094.54,24721.13,2584.46,154816.25,24953.67,2642.7,154888.75,24549.11,2553.79,155308.39,24774,2610.66,155402.82,24176.75,2482.43,156073.41,24386.04,2536.31,156199.96,23683.03,2383.26,156812.28,23874.1,2433.49,156966.21,23272.08,2298.71,157305.35,23449.97,2346.23,157475.12,22710.41,2181.39,157872.22,22872.77,2225.66,158057.7,22170.36,2067.27,158338.19,22320,2108.86,158534.67,21570.66,1939.49,158791.25,21708.17,1978.49,158996.91,20720.89,1757.03,159348.69,20844.04,1792.95,159563.79,20591.56,1729.15,159426.55,20712.76,1764.64,159642.83,20526.16,1715.04,159465.3,20646.38,1750.32,159682.16,20460.27,1700.81,159503.95,20579.53,1735.89,159721.37,25162.31,2712.15,153767.97,25121.03,2708.21,154093.42,25121.03,2708.21,154093.42,25045.1,2697.69,154493.45,25045.1,2697.69,154493.45,24942,2680.93,154887.21,24942,2680.93,154887.21,24858.02,2666.26,155146.27,24858.02,2666.26,155146.27,24762.42,2648.9,155401,24762.42,2648.9,155401,24582.32,2614.98,155806.6,24582.32,2614.98,155806.6,24374.65,2574.59,156197.75,24374.65,2574.59,156197.75,24130.97,2526.09,156589.55,24130.97,2526.09,156589.55,23862.94,2471.82,156963.66,23862.94,2471.82,156963.66,23438.98,2384.59,157472.37,23438.98,2384.59,157472.37,23156.64,2325.83,157770.29,23156.64,2325.83,157770.29,22861.97,2264.06,158054.76,22861.97,2264.06,158054.76,22309.35,2147.29,158531.59,22309.35,2147.29,158531.59,21697.68,2016.96,158993.71,21697.68,2016.96,158993.71,20636.11,1788.84,159678.83,20636.11,1788.84,159678.83,20502.04,1759.89,159757.03,25168.42,2673.56,153823.47,25144.85,2749.98,153821.52,25162.26,2673.07,153877.93,25138.69,2749.49,153875.92,25155.62,2672.47,153932.27,25132.06,2748.89,153930.2,25132.8,2670,154094.54,25109.26,2746.43,154092.3,24953.67,2642.7,154888.75,24930.32,2719.16,154885.67,24774,2610.66,155402.82,24750.84,2687.15,155399.19,24386.04,2536.31,156199.96,24363.27,2612.87,156195.53,23874.1,2433.49,156966.21,23851.78,2510.14,156961.11,23449.97,2346.23,157475.12,23427.99,2422.95,157469.62,22872.77,2225.66,158057.7,22851.17,2302.46,158051.81,22320,2108.86,158534.67,22298.71,2185.72,158528.51,21708.17,1978.49,158996.91,21687.19,2055.43,158990.52,20844.04,1792.95,159563.79,20823.42,1869.96,159557.17,20712.76,1764.64,159642.83,20692.18,1841.66,159636.17,20646.38,1750.32,159682.16,20625.83,1827.35,159675.49,20579.53,1735.89,159721.37,20559,1812.92,159714.68,23269.52,5567.52,154664.89,23244.99,5562.48,154878.85,23244.99,5562.48,154878.85,23185.18,5544.07,155256.71,23185.18,5544.07,155256.71,23104.26,5513.24,155629.5,23104.26,5513.24,155629.5,22995.93,5467.11,156014.65,22995.93,5467.11,156014.65,22864.16,5407.03,156390.39,22864.16,5407.03,156390.39,22766.63,5360.82,156627.61,22766.63,5360.82,156627.61,22659.79,5309.02,156859.67,22659.79,5309.02,156859.67,22466.41,5212.97,157226.23,22466.41,5212.97,157226.23,22251.04,5103.54,157576.91,22251.04,5103.54,157576.91,22005.21,4976.39,157924.71,22005.21,4976.39,157924.71,21740.03,4837.28,158254.02,21740.03,4837.28,158254.02,21519.01,4720.13,158500.48,21519.01,4720.13,158500.48,21288.56,4597.07,158735.65,21288.56,4597.07,158735.65,20926.09,4401.94,159069.11,20926.09,4401.94,159069.11,20547.6,4196.55,159379.07,20547.6,4196.55,159379.07,20070.49,3935.78,159725.88,20070.49,3935.78,159725.88,19354.35,3541.31,160175.16,19354.35,3541.31,160175.16,19435.75,3625.31,160396.61,19326.76,3582.09,160166.44,20042.49,3976.33,159717.43,20042.49,3976.33,159717.43,20519.26,4236.92,159370.86,20519.26,4236.92,159370.86,20897.46,4442.15,159061.14,20897.46,4442.15,159061.14,21259.61,4637.1,158727.98,21259.61,4637.1,158727.98,21489.83,4760.05,158493.03,21489.83,4760.05,158493.03,21710.62,4877.07,158246.83,21710.62,4877.07,158246.83,21975.52,5016.03,157917.88,21975.52,5016.03,157917.88,22221.06,5143.03,157570.49,22221.06,5143.03,157570.49,22436.15,5252.32,157220.26,22436.15,5252.32,157220.26,22629.27,5348.24,156854.18,22629.27,5348.24,156854.18,22735.97,5399.98,156622.44,22735.97,5399.98,156622.44,22833.36,5446.12,156385.54,22833.36,5446.12,156385.54,22964.96,5506.12,156010.32,22964.96,5506.12,156010.32,23073.14,5552.18,155625.7,23073.14,5552.18,155625.7,23153.95,5582.97,155253.41,23153.95,5582.97,155253.41,23226.7,5604.34,154769.55,23226.7,5604.34,154769.55,23238.18,5606.39,154662.35,23238.18,5606.39,154662.35,23421.99,5775.23,154683.12,19391.62,3690.56,160382.67,19326.76,3582.09,160166.44,19435.75,3625.31,160396.61,19391.62,3690.56,160382.67,23472.13,5713.03,154687.19,23269.52,5567.52,154664.89,23421.99,5775.23,154683.12,23472.13,5713.03,154687.19,23472.13,5713.03,154687.19,23446.62,5707.79,154909.76,23446.62,5707.79,154909.76,23384.31,5688.6,155303.43,23384.31,5688.6,155303.43,23299.88,5656.44,155692.34,23299.88,5656.44,155692.34,23186.75,5608.26,156094.54,23186.75,5608.26,156094.54,23049.1,5545.51,156487.05,23049.1,5545.51,156487.05,22947.25,5497.25,156734.79,22947.25,5497.25,156734.79,22835.73,5443.18,156977.01,22835.73,5443.18,156977.01,22634.11,5343.03,157359.19,22634.11,5343.03,157359.19,22409.98,5229.15,157724.16,22409.98,5229.15,157724.16,22154.74,5097.14,158085.29,22154.74,5097.14,158085.29,21880.12,4953.08,158426.33,21880.12,4953.08,158426.33,21651.78,4832.06,158680.94,21651.78,4832.06,158680.94,21414.22,4705.19,158923.39,21414.22,4705.19,158923.39,21041.51,4504.55,159266.29,21041.51,4504.55,159266.29,20653.41,4293.95,159584.12,20653.41,4293.95,159584.12,20165.56,4027.3,159938.75,20165.56,4027.3,159938.75,19435.75,3625.31,160396.61,23421.99,5775.23,154683.12,23396.53,5770,154905.26,23396.53,5770,154905.26,23334.33,5750.85,155298.15,23334.33,5750.85,155298.15,23250.08,5718.75,155686.26,23250.08,5718.75,155686.26,23137.19,5670.68,156087.62,23137.19,5670.68,156087.62,22999.83,5608.06,156479.29,22999.83,5608.06,156479.29,22898.2,5559.9,156726.51,22898.2,5559.9,156726.51,22786.91,5505.94,156968.23,22786.91,5505.94,156968.23,22585.7,5406,157349.64,22585.7,5406,157349.64,22362,5292.34,157713.89,22362,5292.34,157713.89,22107.23,5160.57,158074.36,22107.23,5160.57,158074.36,21833.07,5016.75,158414.82,21833.07,5016.75,158414.82,21605.1,4895.93,158669.03,21605.1,4895.93,158669.03,21367.89,4769.24,158911.12,21367.89,4769.24,158911.12,20995.69,4568.88,159253.54,20995.69,4568.88,159253.54,20608.07,4358.54,159570.98,20608.07,4358.54,159570.98,20120.75,4092.18,159925.23,20120.75,4092.18,159925.23,19391.62,3690.56,160382.67,23330.08,5690.81,154672.73,23305.1,5685.69,154890.65,23305.1,5685.69,154890.65,23244.14,5666.91,155275.78,23244.14,5666.91,155275.78,23161.61,5635.47,155655.98,23161.61,5635.47,155655.98,23051.07,5588.4,156048.97,23051.07,5588.4,156048.97,22916.6,5527.09,156432.42,22916.6,5527.09,156432.42,22817.09,5479.94,156674.47,22817.09,5479.94,156674.47,22708.09,5427.09,156911.21,22708.09,5427.09,156911.21,22510.93,5329.16,157284.95,22510.93,5329.16,157284.95,22291.53,5217.69,157642.19,22291.53,5217.69,157642.19,22041.37,5088.3,157996.12,22041.37,5088.3,157996.12,21771.85,4946.91,158330.83,21771.85,4946.91,158330.83,21547.47,4827.99,158581.03,21547.47,4827.99,158581.03,21313.75,4703.17,158819.55,21313.75,4703.17,158819.55,20946.58,4505.51,159157.34,20946.58,4505.51,159157.34,20563.66,4297.73,159470.92,20563.66,4297.73,159470.92,20081.62,4034.25,159821.33,20081.62,4034.25,159821.33,19359.19,3636.33,160274.55,23419.16,5774.79,154711.04,23235.45,5605.97,154689.22,23416.23,5774.29,154738.9,23232.63,5605.48,154716.04,23410.07,5773.1,154794.48,23226.7,5604.34,154769.55,23396.53,5770,154905.26,23213.68,5601.37,154876.04,23250.08,5718.75,155686.26,23073.14,5552.18,155625.7,22999.83,5608.06,156479.29,22833.36,5446.12,156385.54,22786.91,5505.94,156968.23,22629.27,5348.24,156854.18,22362,5292.34,157713.89,22221.06,5143.03,157570.49,21833.07,5016.75,158414.82,21710.62,4877.07,158246.83,21367.89,4769.24,158911.12,21259.61,4637.1,158727.98,20608.07,4358.54,159570.98,20519.26,4236.92,159370.86,19618.67,3815.97,160248.27,19549.89,3705.33,160034.37,19562.5,3784.97,160282.15,19494.71,3674.88,160067.65,19505.92,3753.73,160315.85,19439.11,3644.18,160100.76,19448.93,3722.24,160349.37,19383.1,3613.23,160133.71,23370.82,5640.27,154676.04,23345.81,5635.14,154894.3,23345.81,5635.14,154894.3,23284.74,5616.33,155280.07,23284.74,5616.33,155280.07,23202.07,5584.84,155660.92,23202.07,5584.84,155660.92,23091.34,5537.68,156054.6,23091.34,5537.68,156054.6,22956.63,5476.27,156438.72,22956.63,5476.27,156438.72,22856.94,5429.04,156681.2,22856.94,5429.04,156681.2,22747.76,5376.1,156918.34,22747.76,5376.1,156918.34,22550.26,5278,157292.71,22550.26,5278,157292.71,22330.51,5166.35,157650.54,22330.51,5166.35,157650.54,22079.97,5036.77,158005,22079.97,5036.77,158005,21810.07,4895.18,158340.18,21810.07,4895.18,158340.18,21585.4,4776.1,158590.71,21585.4,4776.1,158590.71,21351.39,4651.13,158829.52,21351.39,4651.13,158829.52,20983.8,4453.25,159167.7,20983.8,4453.25,159167.7,20600.5,4245.25,159481.59,20600.5,4245.25,159481.59,20118.03,3981.54,159832.32,20118.03,3981.54,159832.32,19395.05,3583.31,160285.89,23266.79,5567.09,154691.79,23469.3,5712.59,154715.16,23263.97,5566.61,154718.65,23466.37,5712.08,154743.07,23258.03,5565.47,154772.23,23460.19,5710.9,154798.76,23244.99,5562.48,154878.85,23446.62,5707.79,154909.76,23104.26,5513.24,155629.5,23299.88,5656.44,155692.34,22864.16,5407.03,156390.39,23049.1,5545.51,156487.05,22659.79,5309.02,156859.67,22835.73,5443.18,156977.01,22251.04,5103.54,157576.91,22409.98,5229.15,157724.16,21740.03,4837.28,158254.02,21880.12,4953.08,158426.33,21288.56,4597.07,158735.65,21414.22,4705.19,158923.39,20547.6,4196.55,159379.07,20653.41,4293.95,159584.12,19577.59,3664.62,160043.01,19663,3750.82,160262.1,19522.38,3634.15,160076.31,19606.78,3719.8,160296.01,19466.76,3603.43,160109.44,19550.15,3688.53,160329.74,19410.71,3572.47,160142.41,19493.11,3657.02,160363.29,23447.06,5744.13,154685.15,23421.57,5738.9,154907.51,23421.57,5738.9,154907.51,23359.32,5719.73,155300.79,23359.32,5719.73,155300.79,23274.98,5687.59,155689.3,23274.98,5687.59,155689.3,23161.97,5639.47,156091.08,23161.97,5639.47,156091.08,23024.47,5576.78,156483.17,23024.47,5576.78,156483.17,22922.72,5528.58,156730.65,22922.72,5528.58,156730.65,22811.32,5474.56,156972.62,22811.32,5474.56,156972.62,22609.9,5374.52,157354.42,22609.9,5374.52,157354.42,22385.99,5260.75,157719.03,22385.99,5260.75,157719.03,22130.98,5128.86,158079.83,22130.98,5128.86,158079.83,21856.6,4984.91,158420.58,21856.6,4984.91,158420.58,21628.44,4863.99,158674.99,21628.44,4863.99,158674.99,21391.05,4737.22,158917.25,21391.05,4737.22,158917.25,21018.6,4536.71,159259.92,21018.6,4536.71,159259.92,20630.74,4326.24,159577.55,20630.74,4326.24,159577.55,20143.16,4059.74,159931.99,20143.16,4059.74,159931.99,19413.69,3657.93,160389.64,23469.3,5712.59,154715.16,23419.16,5774.79,154711.04,23466.37,5712.08,154743.07,23416.23,5774.29,154738.9,23460.19,5710.9,154798.76,23410.07,5773.1,154794.48,23446.62,5707.79,154909.76,23396.53,5770,154905.26,23299.88,5656.44,155692.34,23250.08,5718.75,155686.26,23049.1,5545.51,156487.05,22999.83,5608.06,156479.29,22835.73,5443.18,156977.01,22786.91,5505.94,156968.23,22409.98,5229.15,157724.16,22362,5292.34,157713.89,21880.12,4953.08,158426.33,21833.07,5016.75,158414.82,21414.22,4705.19,158923.39,21367.89,4769.24,158911.12,20653.41,4293.95,159584.12,20608.07,4358.54,159570.98,19663,3750.82,160262.1,19618.67,3815.97,160248.27,19606.78,3719.8,160296.01,19562.5,3784.97,160282.15,19550.15,3688.53,160329.74,19505.92,3753.73,160315.85,19493.11,3657.02,160363.29,19448.93,3722.24,160349.37,20567.31,7695.72,156156.29,20543.12,7687.48,156378.91,20543.12,7687.48,156378.91,20470.09,7648.28,156881.3,20470.09,7648.28,156881.3,20370.53,7578.67,157374.76,20370.53,7578.67,157374.76,20290.42,7515.74,157690.01,20290.42,7515.74,157690.01,20198.03,7438.51,157998.33,20198.03,7438.51,157998.33,20066.16,7322.41,158369.27,20066.16,7322.41,158369.27,19915.57,7184.11,158724.92,19915.57,7184.11,158724.92,19757.59,7034.37,159043.06,19757.59,7034.37,159043.06,19584.71,6866.53,159344.18,19584.71,6866.53,159344.18,19450.94,6734.45,159550.84,19450.94,6734.45,159550.84,19310.55,6594.12,159747.69,19310.55,6594.12,159747.69,19087.25,6368,160026.11,19087.25,6368,160026.11,18852.07,6126.7,160282.1,18852.07,6126.7,160282.1,18528.95,5791.01,160584.5,18528.95,5791.01,160584.5,18187.97,5432.62,160854.59,18187.97,5432.62,160854.59,17717.45,4932.64,161162.89,17717.45,4932.64,161162.89,17677.32,4889.75,161186.26,17677.32,4889.75,161186.26,17699.2,4992.14,161413.78,17638.77,4918.94,161173.54,17797.57,5088.45,161078.51,17797.57,5088.45,161078.51,18148.82,5461.17,160842.25,18148.82,5461.17,160842.25,18489.33,5819.06,160572.53,18489.33,5819.06,160572.53,18811.95,6154.24,160270.6,18811.95,6154.24,160270.6,19046.73,6395.13,160015.05,19046.73,6395.13,160015.05,19269.61,6620.83,159737.15,19269.61,6620.83,159737.15,19409.73,6760.88,159540.68,19409.73,6760.88,159540.68,19543.23,6892.7,159334.44,19543.23,6892.7,159334.44,19715.76,7060.19,159033.94,19715.76,7060.19,159033.94,19873.4,7209.61,158716.48,19873.4,7209.61,158716.48,20023.67,7347.62,158361.58,20023.67,7347.62,158361.58,20155.27,7463.48,157991.41,20155.27,7463.48,157991.41,20247.47,7540.56,157683.71,20247.47,7540.56,157683.71,20327.42,7603.36,157369.07,20327.42,7603.36,157369.07,20426.8,7672.85,156876.5,20426.8,7672.85,156876.5,20506.15,7714.52,156319.77,20506.15,7714.52,156319.77,20523.87,7720.21,156152.64,20523.87,7720.21,156152.64,20632.2,7945.43,156168.95,17637.52,5038.84,161393.42,17638.77,4918.94,161173.54,17699.2,4992.14,161413.78,17637.52,5038.84,161393.42,20701.71,7906.25,156174.78,20567.31,7695.72,156156.29,20632.2,7945.43,156168.95,20701.71,7906.25,156174.78,20701.71,7906.25,156174.78,20676.67,7897.72,156405.16,20676.67,7897.72,156405.16,20600.89,7857.04,156926.4,20600.89,7857.04,156926.4,20497.19,7784.52,157440.35,20497.19,7784.52,157440.35,20413.52,7718.81,157769.59,20413.52,7718.81,157769.59,20316.86,7637.99,158092.17,20316.86,7637.99,158092.17,20178.67,7516.34,158480.84,20178.67,7516.34,158480.84,20020.74,7371.29,158853.83,20020.74,7371.29,158853.83,19855.07,7214.26,159187.47,19855.07,7214.26,159187.47,19673.93,7038.4,159503,19673.93,7038.4,159503,19533.96,6900.19,159719.24,19533.96,6900.19,159719.24,19387.27,6753.58,159924.92,19387.27,6753.58,159924.92,19154.49,6517.86,160215.17,19154.49,6517.86,160215.17,18910.03,6267.04,160481.27,18910.03,6267.04,160481.27,18575.37,5919.36,160794.48,18575.37,5919.36,160794.48,18223.6,5549.63,161073.14,18223.6,5549.63,161073.14,17740.32,5036.09,161389.82,17740.32,5036.09,161389.82,17699.2,4992.14,161413.78,20632.2,7945.43,156168.95,20607.22,7936.92,156398.79,20607.22,7936.92,156398.79,20531.63,7896.34,156918.72,20531.63,7896.34,156918.72,20428.22,7824.03,157431.25,20428.22,7824.03,157431.25,20344.81,7758.51,157759.51,20344.81,7758.51,157759.51,20248.44,7677.94,158081.1,20248.44,7677.94,158081.1,20110.69,7556.67,158468.54,20110.69,7556.67,158468.54,19953.27,7412.1,158840.33,19953.27,7412.1,158840.33,19788.14,7255.58,159172.89,19788.14,7255.58,159172.89,19607.56,7080.27,159487.41,19607.56,7080.27,159487.41,19468.03,6942.49,159702.99,19468.03,6942.49,159702.99,19321.78,6796.31,159908.06,19321.78,6796.31,159908.06,19089.66,6561.26,160197.48,19089.66,6561.26,160197.48,18845.84,6311.1,160462.88,18845.84,6311.1,160462.88,18511.98,5964.25,160775.34,18511.98,5964.25,160775.34,18160.96,5595.31,161053.41,18160.96,5595.31,161053.41,17678.57,5082.71,161369.5,17678.57,5082.71,161369.5,17637.52,5038.84,161393.42,20578.04,7832.82,156160.8,20553.47,7824.45,156386.86,20553.47,7824.45,156386.86,20479.22,7784.6,156897.61,20479.22,7784.6,156897.61,20377.82,7713.7,157400.16,20377.82,7713.7,157400.16,20296.14,7649.53,157721.61,20296.14,7649.53,157721.61,20201.85,7570.71,158036.26,20201.85,7570.71,158036.26,20067.18,7452.15,158415.06,20067.18,7452.15,158415.06,19913.33,7310.85,158778.4,19913.33,7310.85,158778.4,19751.95,7157.88,159103.42,19751.95,7157.88,159103.42,19575.4,6986.49,159410.93,19575.4,6986.49,159410.93,19438.88,6851.68,159621.84,19438.88,6851.68,159621.84,19295.69,6708.57,159822.61,19295.69,6708.57,159822.61,19068.19,6478.19,160106.27,19068.19,6478.19,160106.27,18828.89,6232.67,160366.74,18828.89,6232.67,160366.74,18500.66,5891.66,160673.94,18500.66,5891.66,160673.94,18154.89,5528.24,160947.83,18154.89,5528.24,160947.83,17678.71,5022.24,161259.84,17678.71,5022.24,161259.84,17638.14,4978.89,161283.48,20626.38,7943.8,156226.76,20518.23,7718.64,156208.59,20620.27,7941.84,156284.38,20512.33,7716.74,156264.32,20613.89,7939.55,156341.73,20506.15,7714.52,156319.77,20607.22,7936.92,156398.79,20499.71,7711.98,156374.93,20428.22,7824.03,157431.25,20327.42,7603.36,157369.07,20248.44,7677.94,158081.1,20155.27,7463.48,157991.41,19953.27,7412.1,158840.33,19873.4,7209.61,158716.48,19607.56,7080.27,159487.41,19543.23,6892.7,159334.44,19321.78,6796.31,159908.06,19269.61,6620.83,159737.15,18845.84,6311.1,160462.88,18811.95,6154.24,160270.6,18511.98,5964.25,160775.34,18489.33,5819.06,160572.53,17800.23,5212.52,161296.05,17797.57,5088.45,161078.51,17759.96,5169.59,161320.8,17758.29,5046.57,161102.65,17719.41,5126.32,161345.28,17718.72,5004.34,161126.55,17678.57,5082.71,161369.5,17678.85,4961.78,161150.19,20634.51,7800.98,156165.54,20609.89,7792.6,156392.04,20609.89,7792.6,156392.04,20535.49,7752.66,156903.85,20535.49,7752.66,156903.85,20433.86,7681.6,157407.55,20433.86,7681.6,157407.55,20351.97,7617.28,157729.8,20351.97,7617.28,157729.8,20257.45,7538.25,158045.25,20257.45,7538.25,158045.25,20122.41,7419.38,158425.06,20122.41,7419.38,158425.06,19968.15,7277.7,158789.38,19968.15,7277.7,158789.38,19806.33,7124.32,159115.26,19806.33,7124.32,159115.26,19629.32,6952.47,159423.59,19629.32,6952.47,159423.59,19492.45,6817.32,159635.04,19492.45,6817.32,159635.04,19348.91,6673.85,159836.31,19348.91,6673.85,159836.31,19120.87,6442.93,160120.64,19120.87,6442.93,160120.64,18881.05,6196.87,160381.68,18881.05,6196.87,160381.68,18552.16,5855.18,160689.49,18552.16,5855.18,160689.49,18205.78,5491.12,160963.87,18205.78,5491.12,160963.87,17728.89,4984.36,161276.35,17728.89,4984.36,161276.35,17688.26,4940.95,161300.02,20561.67,7694.14,156212.31,20695.87,7904.61,156232.73,20555.75,7692.25,156268.13,20689.75,7902.65,156290.48,20549.56,7690.02,156323.67,20683.35,7900.35,156347.96,20543.12,7687.48,156378.91,20676.67,7897.72,156405.16,20370.53,7578.67,157374.76,20497.19,7784.52,157440.35,20198.03,7438.51,157998.33,20316.86,7637.99,158092.17,19915.57,7184.11,158724.92,20020.74,7371.29,158853.83,19584.71,6866.53,159344.18,19673.93,7038.4,159503,19310.55,6594.12,159747.69,19387.27,6753.58,159924.92,18852.07,6126.7,160282.1,18910.03,6267.04,160481.27,18528.95,5791.01,160584.5,18575.37,5919.36,160794.48,17836.3,5059.45,161091.13,17862.19,5166.12,161316.24,17796.97,5017.52,161115.3,17821.85,5123.12,161341.03,17757.35,4975.25,161139.22,17781.23,5079.77,161365.56,17717.45,4932.64,161162.89,17740.32,5036.09,161389.82,20666.95,7925.84,156171.87,20641.95,7917.32,156401.98,20641.95,7917.32,156401.98,20566.26,7876.69,156922.56,20566.26,7876.69,156922.56,20462.71,7804.28,157435.8,20462.71,7804.28,157435.8,20379.16,7738.66,157764.55,20379.16,7738.66,157764.55,20282.65,7657.97,158086.64,20282.65,7657.97,158086.64,20144.68,7536.51,158474.69,20144.68,7536.51,158474.69,19987.01,7391.69,158847.08,19987.01,7391.69,158847.08,19821.6,7234.92,159180.18,19821.6,7234.92,159180.18,19640.75,7059.34,159495.2,19640.75,7059.34,159495.2,19500.99,6921.34,159711.11,19500.99,6921.34,159711.11,19354.52,6774.94,159916.49,19354.52,6774.94,159916.49,19122.08,6539.56,160206.33,19122.08,6539.56,160206.33,18877.94,6289.07,160472.07,18877.94,6289.07,160472.07,18543.68,5941.81,160784.91,18543.68,5941.81,160784.91,18192.28,5572.47,161063.27,18192.28,5572.47,161063.27,17709.44,5059.4,161379.66,17709.44,5059.4,161379.66,17668.36,5015.49,161403.6,20695.87,7904.61,156232.73,20626.38,7943.8,156226.76,20689.75,7902.65,156290.48,20620.27,7941.84,156284.38,20683.35,7900.35,156347.96,20613.89,7939.55,156341.73,20676.67,7897.72,156405.16,20607.22,7936.92,156398.79,20497.19,7784.52,157440.35,20428.22,7824.03,157431.25,20316.86,7637.99,158092.17,20248.44,7677.94,158081.1,20020.74,7371.29,158853.83,19953.27,7412.1,158840.33,19673.93,7038.4,159503,19607.56,7080.27,159487.41,19387.27,6753.58,159924.92,19321.78,6796.31,159908.06,18910.03,6267.04,160481.27,18845.84,6311.1,160462.88,18575.37,5919.36,160794.48,18511.98,5964.25,160775.34,17862.19,5166.12,161316.24,17800.23,5212.52,161296.05,17821.85,5123.12,161341.03,17759.96,5169.59,161320.8,17781.23,5079.77,161365.56,17719.41,5126.32,161345.28,17740.32,5036.09,161389.82,17678.57,5082.71,161369.5,17223.05,8673.01,157999.64,17152.83,8625.16,158642.8,17152.83,8625.16,158642.8,17097.13,8567.02,159048.63,17097.13,8567.02,159048.63,17053.86,8513.58,159321.17,17053.86,8513.58,159321.17,17005.91,8447.89,159589.74,17005.91,8447.89,159589.74,16928.01,8329.91,159967.9,16928.01,8329.91,159967.9,16885.02,8260.02,160151.89,16885.02,8260.02,160151.89,16839.24,8182.51,160331.83,16839.24,8182.51,160331.83,16751.12,8025.76,160639.26,16751.12,8025.76,160639.26,16703.77,7938.05,160786.59,16703.77,7938.05,160786.59,16654.24,7844.1,160929.12,16654.24,7844.1,160929.12,16594.12,7727.29,161087.99,16594.12,7727.29,161087.99,16531.26,7602.34,161239.36,16531.26,7602.34,161239.36,16458.82,7455.12,161397.37,16458.82,7455.12,161397.37,16383.51,7298.91,161545.15,16383.51,7298.91,161545.15,16322.94,7171.15,161653.13,16322.94,7171.15,161653.13,16260.95,7038.65,161754.62,16260.95,7038.65,161754.62,16133.3,6760.91,161938.15,16133.3,6760.91,161938.15,16047.73,6571.42,162044.11,16047.73,6571.42,162044.11,15960.81,6376.53,162139.37,15960.81,6376.53,162139.37,15820.32,6057,162269.92,15820.32,6057,162269.92,15638.1,5635.35,162401.89,15638.1,5635.35,162401.89,15597.7,5540.88,162426.08,15597.7,5540.88,162426.08,15557.92,5615.93,162661.68,15552.76,5556.21,162410.42,15632.91,5743.31,162360.71,15632.91,5743.31,162360.71,15774.9,6071.23,162254.6,15774.9,6071.23,162254.6,15915.05,6389.98,162124.37,15915.05,6389.98,162124.37,16001.74,6584.35,162029.36,16001.74,6584.35,162029.36,16087.07,6773.3,161923.7,16087.07,6773.3,161923.7,16214.32,7050.2,161740.74,16214.32,7050.2,161740.74,16276.12,7182.28,161639.57,16276.12,7182.28,161639.57,16336.49,7309.62,161531.94,16336.49,7309.62,161531.94,16411.55,7465.32,161384.64,16411.55,7465.32,161384.64,16483.75,7612.04,161227.17,16483.75,7612.04,161227.17,16546.4,7736.57,161076.31,16546.4,7736.57,161076.31,16606.32,7852.99,160917.97,16606.32,7852.99,160917.97,16655.68,7946.64,160775.9,16655.68,7946.64,160775.9,16702.89,8034.06,160629.04,16702.89,8034.06,160629.04,16790.74,8190.34,160322.54,16790.74,8190.34,160322.54,16836.38,8267.63,160143.12,16836.38,8267.63,160143.12,16879.26,8337.33,159959.62,16879.26,8337.33,159959.62,16956.96,8455.01,159582.41,16956.96,8455.01,159582.41,17004.8,8520.55,159314.44,17004.8,8520.55,159314.44,17047.99,8573.89,159042.47,17047.99,8573.89,159042.47,17103.58,8631.92,158637.39,17103.58,8631.92,158637.39,17173.69,8679.69,157995.24,17173.69,8679.69,157995.24,17191.3,8929.28,158006.22,15486.01,5640.46,162636.64,15552.76,5556.21,162410.42,15557.92,5615.93,162661.68,15486.01,5640.46,162636.64,17270.27,8918.59,158013.25,17223.05,8673.01,157999.64,17191.3,8929.28,158006.22,17270.27,8918.59,158013.25,17270.27,8918.59,158013.25,17197.86,8869.24,158676.33,17197.86,8869.24,158676.33,17140.11,8808.96,159097.06,17140.11,8808.96,159097.06,17095.07,8753.33,159380.72,17095.07,8753.33,159380.72,17044.98,8684.71,159661.25,17044.98,8684.71,159661.25,16963.24,8560.9,160058.05,16963.24,8560.9,160058.05,16917.95,8487.26,160251.89,16917.95,8487.26,160251.89,16869.59,8405.38,160441.95,16869.59,8405.38,160441.95,16776.19,8239.22,160767.78,16776.19,8239.22,160767.78,16725.86,8146.01,160924.35,16725.86,8146.01,160924.35,16673.16,8046.03,161076.05,16673.16,8046.03,161076.05,16609.1,7921.57,161245.32,16609.1,7921.57,161245.32,16542.08,7788.34,161406.71,16542.08,7788.34,161406.71,16464.84,7631.38,161575.18,16464.84,7631.38,161575.18,16384.6,7464.94,161732.64,16384.6,7464.94,161732.64,16320.14,7328.99,161847.55,16320.14,7328.99,161847.55,16254.26,7188.19,161955.39,16254.26,7188.19,161955.39,16119,6893.87,162149.9,16119,6893.87,162149.9,16028.64,6693.78,162261.79,16028.64,6693.78,162261.79,15937.14,6488.61,162362.08,15937.14,6488.61,162362.08,15789.84,6153.6,162498.97,15789.84,6153.6,162498.97,15599.89,5714.07,162636.56,15599.89,5714.07,162636.56,15557.92,5615.93,162661.68,17191.3,8929.28,158006.22,17119.06,8880.05,158667.68,17119.06,8880.05,158667.68,17061.48,8819.94,159087.2,17061.48,8819.94,159087.2,17016.59,8764.49,159369.96,17016.59,8764.49,159369.96,16966.67,8696.1,159649.52,16966.67,8696.1,159649.52,16885.24,8572.77,160044.81,16885.24,8572.77,160044.81,16840.13,8499.43,160237.85,16840.13,8499.43,160237.85,16791.99,8417.91,160427.08,16791.99,8417.91,160427.08,16699.02,8252.51,160751.42,16699.02,8252.51,160751.42,16648.93,8159.75,160907.25,16648.93,8159.75,160907.25,16596.48,8060.26,161058.2,16596.48,8060.26,161058.2,16532.74,7936.42,161226.63,16532.74,7936.42,161226.63,16466.06,7803.87,161387.21,16466.06,7803.87,161387.21,16389.21,7647.69,161554.83,16389.21,7647.69,161554.83,16309.37,7482.08,161711.5,16309.37,7482.08,161711.5,16245.23,7346.79,161825.84,16245.23,7346.79,161825.84,16179.67,7206.67,161933.17,16179.67,7206.67,161933.17,16045.02,6913.69,162126.79,16045.02,6913.69,162126.79,15955.06,6714.47,162238.2,15955.06,6714.47,162238.2,15863.92,6510.13,162338.08,15863.92,6510.13,162338.08,15717.17,6176.38,162474.46,15717.17,6176.38,162474.46,15527.85,5738.3,162611.59,15527.85,5738.3,162611.59,15486.01,5640.46,162636.64,17182.49,8804.49,158000.73,17111.32,8755.98,158652.53,17111.32,8755.98,158652.53,17054.74,8696.92,159064.84,17054.74,8696.92,159064.84,17010.69,8642.52,159342.2,17010.69,8642.52,159342.2,16961.82,8575.56,159615.96,16961.82,8575.56,159615.96,16882.25,8455.05,160002.22,16882.25,8455.05,160002.22,16838.26,8383.53,160190.48,16838.26,8383.53,160190.48,16791.37,8304.12,160374.81,16791.37,8304.12,160374.81,16700.95,8143.29,160690.23,16700.95,8143.29,160690.23,16652.31,8053.19,160841.57,16652.31,8053.19,160841.57,16601.4,7956.63,160988.08,16601.4,7956.63,160988.08,16539.57,7836.5,161151.47,16539.57,7836.5,161151.47,16474.91,7707.95,161307.19,16474.91,7707.95,161307.19,16400.38,7556.51,161469.74,16400.38,7556.51,161469.74,16322.93,7395.85,161621.72,16322.93,7395.85,161621.72,16260.67,7264.54,161732.71,16260.67,7264.54,161732.71,16197,7128.44,161836.95,16197,7128.44,161836.95,16066.04,6843.5,162025.25,16066.04,6843.5,162025.25,15978.4,6649.41,162133.78,15978.4,6649.41,162133.78,15889.48,6450.06,162231.22,15889.48,6450.06,162231.22,15746.04,6123.81,162364.53,15746.04,6123.81,162364.53,15560.47,5694.4,162498.94,15560.47,5694.4,162498.94,15519.39,5598.34,162523.53,17185.55,8926.84,158066.47,17168.1,8677.32,158053.88,17179.67,8924.03,158126.46,17162.38,8674.58,158112.23,17173.67,8920.84,158186.06,17156.55,8671.48,158170.18,17167.56,8917.29,158245.27,17150.61,8668.03,158227.73,17061.48,8819.94,159087.2,17047.99,8573.89,159042.47,16966.67,8696.1,159649.52,16956.96,8455.01,159582.41,16791.99,8417.91,160427.08,16790.74,8190.34,160322.54,16596.48,8060.26,161058.2,16606.32,7852.99,160917.97,16466.06,7803.87,161387.21,16483.75,7612.04,161227.17,16309.37,7482.08,161711.5,16336.49,7309.62,161531.94,16045.02,6913.69,162126.79,16087.07,6773.3,161923.7,15863.92,6510.13,162338.08,15915.05,6389.98,162124.37,15569.24,5834.73,162585.02,15632.91,5743.31,162360.71,15548.61,5786.7,162598.49,15613.06,5697.1,162373.68,15527.85,5738.3,162611.59,15593.08,5650.49,162386.29,15506.97,5689.52,162624.31,15572.96,5603.5,162398.54,17246.66,8795.8,158006.45,17175.34,8747.2,158659.56,17175.34,8747.2,158659.56,17118.62,8687.99,159072.84,17118.62,8687.99,159072.84,17074.46,8633.45,159350.95,17074.46,8633.45,159350.95,17025.44,8566.3,159625.49,17025.44,8566.3,159625.49,16945.62,8445.4,160012.97,16945.62,8445.4,160012.97,16901.48,8373.64,160201.89,16901.48,8373.64,160201.89,16854.42,8293.94,160386.89,16854.42,8293.94,160386.89,16763.66,8132.49,160703.52,16763.66,8132.49,160703.52,16714.81,8042.03,160855.47,16714.81,8042.03,160855.47,16663.7,7945.07,161002.59,16663.7,7945.07,161002.59,16601.61,7824.43,161166.66,16601.61,7824.43,161166.66,16536.67,7695.34,161323.04,16536.67,7695.34,161323.04,16461.83,7543.25,161486.28,16461.83,7543.25,161486.28,16384.05,7381.92,161638.9,16384.05,7381.92,161638.9,16321.54,7250.07,161750.34,16321.54,7250.07,161750.34,16257.61,7113.42,161855.01,16257.61,7113.42,161855.01,16126.15,6827.39,162044.02,16126.15,6827.39,162044.02,16038.19,6632.6,162152.95,16038.19,6632.6,162152.95,15948.97,6432.57,162250.72,15948.97,6432.57,162250.72,15805.08,6105.3,162384.45,15805.08,6105.3,162384.45,15619,5674.71,162519.23,15619,5674.71,162519.23,15577.81,5578.41,162543.88,17217.45,8670.63,158058.36,17264.51,8916.15,158073.63,17211.72,8667.89,158116.8,17258.62,8913.33,158133.76,17205.88,8664.79,158174.83,17252.6,8910.14,158193.5,17199.93,8661.34,158232.46,17246.47,8906.58,158252.85,17097.13,8567.02,159048.63,17140.11,8808.96,159097.06,17005.91,8447.89,159589.74,17044.98,8684.71,159661.25,16839.24,8182.51,160331.83,16869.59,8405.38,160441.95,16654.24,7844.1,160929.12,16673.16,8046.03,161076.05,16531.26,7602.34,161239.36,16542.08,7788.34,161406.71,16383.51,7298.91,161545.15,16384.6,7464.94,161732.64,16133.3,6760.91,161938.15,16119,6893.87,162149.9,15960.81,6376.53,162139.37,15937.14,6488.61,162362.08,15678.02,5728.35,162376.27,15641.41,5810.8,162609.91,15658.13,5682.05,162389.26,15620.71,5762.63,162623.42,15638.1,5635.35,162401.89,15599.89,5714.07,162636.56,15617.95,5588.27,162414.18,15578.95,5665.14,162649.32,17230.78,8923.94,158009.74,17158.46,8874.64,158672,17158.46,8874.64,158672,17100.8,8814.45,159092.13,17100.8,8814.45,159092.13,17055.83,8758.91,159375.34,17055.83,8758.91,159375.34,17005.83,8690.41,159655.39,17005.83,8690.41,159655.39,16924.24,8566.83,160051.43,16924.24,8566.83,160051.43,16879.04,8493.35,160244.87,16879.04,8493.35,160244.87,16830.79,8411.64,160434.52,16830.79,8411.64,160434.52,16737.6,8245.87,160759.6,16737.6,8245.87,160759.6,16687.4,8152.88,160915.8,16687.4,8152.88,160915.8,16634.82,8053.15,161067.12,16634.82,8053.15,161067.12,16570.92,7929,161235.98,16570.92,7929,161235.98,16504.07,7796.1,161396.96,16504.07,7796.1,161396.96,16427.02,7639.54,161565.01,16427.02,7639.54,161565.01,16346.98,7473.51,161722.07,16346.98,7473.51,161722.07,16282.68,7337.89,161836.7,16282.68,7337.89,161836.7,16216.97,7197.43,161944.28,16216.97,7197.43,161944.28,16082.01,6903.78,162138.35,16082.01,6903.78,162138.35,15991.85,6704.12,162250,15991.85,6704.12,162250,15900.53,6499.37,162350.08,15900.53,6499.37,162350.08,15753.5,6164.99,162486.72,15753.5,6164.99,162486.72,15563.87,5726.19,162624.08,15563.87,5726.19,162624.08,15521.97,5628.2,162649.16,17264.51,8916.15,158073.63,17185.55,8926.84,158066.47,17258.62,8913.33,158133.76,17179.67,8924.03,158126.46,17252.6,8910.14,158193.5,17173.67,8920.84,158186.06,17246.47,8906.58,158252.85,17167.56,8917.29,158245.27,17140.11,8808.96,159097.06,17061.48,8819.94,159087.2,17044.98,8684.71,159661.25,16966.67,8696.1,159649.52,16869.59,8405.38,160441.95,16791.99,8417.91,160427.08,16673.16,8046.03,161076.05,16596.48,8060.26,161058.2,16542.08,7788.34,161406.71,16466.06,7803.87,161387.21,16384.6,7464.94,161732.64,16309.37,7482.08,161711.5,16119,6893.87,162149.9,16045.02,6913.69,162126.79,15937.14,6488.61,162362.08,15863.92,6510.13,162338.08,15641.41,5810.8,162609.91,15569.24,5834.73,162585.02,15620.71,5762.63,162623.42,15548.61,5786.7,162598.49,15599.89,5714.07,162636.56,15527.85,5738.3,162611.59,15578.95,5665.14,162649.32,15506.97,5689.52,162624.31,14985.38,8864.7,159186.88,14971.6,8849.65,159420.42,14971.6,8849.65,159420.42,14930.5,8779.25,160024.64,14930.5,8779.25,160024.64,14908.7,8729.39,160300.2,14908.7,8729.39,160300.2,14884.9,8667,160572.35,14884.9,8667,160572.35,14844.36,8544.82,160978.53,14844.36,8544.82,160978.53,14816.31,8450.39,161224.15,14816.31,8450.39,161224.15,14785.97,8340.61,161462.1,14785.97,8340.61,161462.1,14765.99,8264.44,161604.92,14765.99,8264.44,161604.92,14745.1,8181.86,161743.62,14745.1,8181.86,161743.62,14723.31,8092.78,161877.7,14723.31,8092.78,161877.7,14700.63,7997.09,162006.64,14700.63,7997.09,162006.64,14666.57,7848.23,162181.67,14666.57,7848.23,162181.67,14630.84,7686.13,162343.77,14630.84,7686.13,162343.77,14603.27,7557.25,162455.3,14603.27,7557.25,162455.3,14574.96,7421.81,162558.62,14574.96,7421.81,162558.62,14548.63,7293.25,162645.3,14548.63,7293.25,162645.3,14521.85,7160.09,162724.94,14521.85,7160.09,162724.94,14494.69,7022.79,162797.56,14494.69,7022.79,162797.56,14467.23,6881.78,162863.2,14467.23,6881.78,162863.2,14438.19,6730.48,162924.58,14438.19,6730.48,162924.58,14408.98,6576.11,162978.6,14408.98,6576.11,162978.6,14377.55,6407.79,163028.65,14377.55,6407.79,163028.65,14346.06,6236.97,163070.96,14346.06,6236.97,163070.96,14283.13,5889.58,163134.02,14283.13,5889.58,163134.02,14249.71,5702.15,163156.81,14249.71,5702.15,163156.81,14248.22,5727.93,163405.92,14200.58,5710.44,163152.64,14233.99,5897.81,163129.87,14233.99,5897.81,163129.87,14296.89,6245.05,163066.83,14296.89,6245.05,163066.83,14328.37,6415.8,163024.54,14328.37,6415.8,163024.54,14359.78,6584.04,162974.52,14359.78,6584.04,162974.52,14388.98,6738.33,162920.52,14388.98,6738.33,162920.52,14418,6889.55,162859.17,14418,6889.55,162859.17,14445.45,7030.47,162793.57,14445.45,7030.47,162793.57,14472.59,7167.7,162720.99,14472.59,7167.7,162720.99,14499.36,7300.77,162641.41,14499.36,7300.77,162641.41,14525.67,7429.25,162554.78,14525.67,7429.25,162554.78,14553.96,7564.61,162451.53,14553.96,7564.61,162451.53,14581.51,7693.4,162340.07,14581.51,7693.4,162340.07,14617.22,7855.4,162178.07,14617.22,7855.4,162178.07,14651.26,8004.17,162003.15,14651.26,8004.17,162003.15,14673.92,8099.8,161874.28,14673.92,8099.8,161874.28,14695.7,8188.84,161740.28,14695.7,8188.84,161740.28,14716.58,8271.37,161601.65,14716.58,8271.37,161601.65,14736.55,8347.5,161458.91,14736.55,8347.5,161458.91,14766.87,8457.23,161221.07,14766.87,8457.23,161221.07,14794.91,8551.61,160975.55,14794.91,8551.61,160975.55,14835.43,8673.75,160569.52,14835.43,8673.75,160569.52,14859.23,8736.12,160297.46,14859.23,8736.12,160297.46,14881.03,8785.96,160021.98,14881.03,8785.96,160021.98,14922.11,8856.35,159417.91,14922.11,8856.35,159417.91,14935.9,8871.4,159184.42,14935.9,8871.4,159184.42,14953.8,9120.82,159198.27,14169.61,5741.19,163399.26,14200.58,5710.44,163152.64,14248.22,5727.93,163405.92,14169.61,5741.19,163399.26,15032.98,9110.11,159202.22,14985.38,8864.7,159186.88,14953.8,9120.82,159198.27,15032.98,9110.11,159202.22,15032.98,9110.11,159202.22,15018.8,9094.63,159442.37,15018.8,9094.63,159442.37,14976.34,9021.86,160066.62,14976.34,9021.86,160066.62,14953.67,8970.04,160353.05,14953.67,8970.04,160353.05,14928.82,8904.88,160637.2,14928.82,8904.88,160637.2,14886.21,8776.44,161064.12,14886.21,8776.44,161064.12,14856.5,8676.46,161324.18,14856.5,8676.46,161324.18,14824.19,8559.5,161577.65,14824.19,8559.5,161577.65,14802.79,8477.94,161730.55,14802.79,8477.94,161730.55,14780.35,8389.2,161879.59,14780.35,8389.2,161879.59,14756.85,8293.15,162024.15,14756.85,8293.15,162024.15,14732.32,8189.66,162163.6,14732.32,8189.66,162163.6,14695.36,8028.13,162353.49,14695.36,8028.13,162353.49,14656.51,7851.84,162529.79,14656.51,7851.84,162529.79,14626.5,7711.56,162651.18,14626.5,7711.56,162651.18,14595.71,7564.23,162763.58,14595.71,7564.23,162763.58,14567.11,7424.57,162857.73,14567.11,7424.57,162857.73,14538.07,7280.2,162944.07,14538.07,7280.2,162944.07,14508.7,7131.71,163022.62,14508.7,7131.71,163022.62,14479.09,6979.68,163093.4,14479.09,6979.68,163093.4,14447.89,6817.13,163159.36,14447.89,6817.13,163159.36,14416.62,6651.91,163217.18,14416.62,6651.91,163217.18,14383.12,6472.48,163270.54,14383.12,6472.48,163270.54,14349.69,6291.12,163315.46,14349.69,6291.12,163315.46,14283.29,5924.6,163382.01,14283.29,5924.6,163382.01,14248.22,5727.93,163405.92,14953.8,9120.82,159198.27,14939.62,9105.35,159438.35,14939.62,9105.35,159438.35,14897.18,9032.61,160062.36,14897.18,9032.61,160062.36,14874.52,8980.81,160348.67,14874.52,8980.81,160348.67,14849.68,8915.68,160632.68,14849.68,8915.68,160632.68,14807.09,8787.31,161059.36,14807.09,8787.31,161059.36,14777.41,8687.4,161319.25,14777.41,8687.4,161319.25,14745.11,8570.52,161572.54,14745.11,8570.52,161572.54,14723.74,8489.02,161725.32,14723.74,8489.02,161725.32,14701.31,8400.35,161874.24,14701.31,8400.35,161874.24,14677.83,8304.38,162018.68,14677.83,8304.38,162018.68,14653.32,8200.98,162158.01,14653.32,8200.98,162158.01,14616.4,8039.6,162347.73,14616.4,8039.6,162347.73,14577.58,7863.47,162523.87,14577.58,7863.47,162523.87,14547.6,7723.33,162645.14,14547.6,7723.33,162645.14,14516.84,7576.14,162757.43,14516.84,7576.14,162757.43,14488.26,7436.61,162851.5,14488.26,7436.61,162851.5,14459.25,7292.37,162937.76,14459.25,7292.37,162937.76,14429.91,7144.01,163016.24,14429.91,7144.01,163016.24,14400.32,6992.11,163086.96,14400.32,6992.11,163086.96,14369.15,6829.69,163152.87,14369.15,6829.69,163152.87,14337.91,6664.59,163210.65,14337.91,6664.59,163210.65,14304.43,6485.29,163263.96,14304.43,6485.29,163263.96,14271.02,6304.05,163308.86,14271.02,6304.05,163308.86,14204.66,5937.75,163375.37,14204.66,5937.75,163375.37,14169.61,5741.19,163399.26,14944.85,8996.11,159191.34,14930.87,8980.85,159428.13,14930.87,8980.85,159428.13,14889.1,8909.28,160042.17,14889.1,8909.28,160042.17,14866.88,8858.46,160323.06,14866.88,8858.46,160323.06,14842.56,8794.71,160601.1,14842.56,8794.71,160601.1,14801,8669.46,161017.46,14801,8669.46,161017.46,14772.14,8572.31,161270.16,14772.14,8572.31,161270.16,14740.83,8459.01,161515.72,14740.83,8459.01,161515.72,14720.16,8380.2,161663.49,14720.16,8380.2,161663.49,14698.5,8294.59,161807.26,14698.5,8294.59,161807.26,14675.88,8202.09,161946.48,14675.88,8202.09,161946.48,14652.29,8102.58,162080.58,14652.29,8102.58,162080.58,14616.81,7947.5,162262.9,14616.81,7947.5,162262.9,14579.55,7778.44,162431.97,14579.55,7778.44,162431.97,14550.78,7643.97,162548.33,14550.78,7643.97,162548.33,14521.25,7502.7,162656.11,14521.25,7502.7,162656.11,14493.81,7368.69,162746.45,14493.81,7368.69,162746.45,14465.92,7230.03,162829.37,14465.92,7230.03,162829.37,14437.68,7087.24,162904.9,14437.68,7087.24,162904.9,14409.16,6940.83,162973.07,14409.16,6940.83,162973.07,14379.06,6784.01,163036.7,14379.06,6784.01,163036.7,14348.84,6624.31,163092.58,14348.84,6624.31,163092.58,14316.4,6450.55,163144.25,14316.4,6450.55,163144.25,14283.96,6274.55,163187.84,14283.96,6274.55,163187.84,14219.32,5917.78,163252.62,14219.32,5917.78,163252.62,14185.09,5725.81,163275.95,14950.32,9117.51,159258.85,14932.51,8868.17,159243.38,14946.8,9113.82,159319.13,14929.09,8864.59,159302.02,14943.23,9109.77,159378.96,14925.62,8860.65,159360.2,14939.62,9105.35,159438.35,14922.11,8856.35,159417.91,14897.18,9032.61,160062.36,14881.03,8785.96,160021.98,14849.68,8915.68,160632.68,14835.43,8673.75,160569.52,14807.09,8787.31,161059.36,14794.91,8551.61,160975.55,14745.11,8570.52,161572.54,14736.55,8347.5,161458.91,14653.32,8200.98,162158.01,14651.26,8004.17,162003.15,14577.58,7863.47,162523.87,14581.51,7693.4,162340.07,14516.84,7576.14,162757.43,14525.67,7429.25,162554.78,14400.32,6992.11,163086.96,14418,6889.55,162859.17,14337.91,6664.59,163210.65,14359.78,6584.04,162974.52,14204.66,5937.75,163375.37,14233.99,5897.81,163129.87,14195.96,5889.15,163381.99,14225.7,5851.54,163136.18,14187.21,5840.16,163388.19,14217.37,5804.87,163142.08,14178.42,5790.8,163393.95,14208.99,5757.8,163147.57,15009.18,8987.4,159194.55,14995.2,8972.14,159431.4,14995.2,8972.14,159431.4,14953.42,8900.55,160045.63,14953.42,8900.55,160045.63,14931.19,8849.71,160326.62,14931.19,8849.71,160326.62,14906.86,8785.94,160604.77,14906.86,8785.94,160604.77,14865.28,8660.63,161021.32,14865.28,8660.63,161021.32,14836.4,8563.43,161274.16,14836.4,8563.43,161274.16,14805.08,8450.06,161519.87,14805.08,8450.06,161519.87,14784.39,8371.19,161667.73,14784.39,8371.19,161667.73,14762.72,8285.53,161811.6,14762.72,8285.53,161811.6,14740.08,8192.96,161950.92,14740.08,8192.96,161950.92,14716.47,8093.37,162085.12,14716.47,8093.37,162085.12,14680.97,7938.18,162267.58,14680.97,7938.18,162267.58,14643.68,7768.98,162436.78,14643.68,7768.98,162436.78,14614.89,7634.41,162553.24,14614.89,7634.41,162553.24,14585.33,7493.02,162661.1,14585.33,7493.02,162661.1,14557.87,7358.91,162751.52,14557.87,7358.91,162751.52,14529.96,7220.15,162834.5,14529.96,7220.15,162834.5,14501.69,7077.25,162910.09,14501.69,7077.25,162910.09,14473.16,6930.73,162978.3,14473.16,6930.73,162978.3,14443.04,6773.81,163041.97,14443.04,6773.81,163041.97,14412.8,6614.01,163097.89,14412.8,6614.01,163097.89,14380.34,6440.14,163149.59,14380.34,6440.14,163149.59,14347.88,6264.04,163193.21,14347.88,6264.04,163193.21,14283.21,5907.09,163258.02,14283.21,5907.09,163258.02,14248.97,5715.04,163281.36,14982,8861.48,159245.86,15029.5,9106.79,159262.81,14978.57,8857.89,159304.51,15025.98,9103.11,159323.11,14975.1,8853.95,159362.7,15022.41,9099.05,159382.96,14971.6,8849.65,159420.42,15018.8,9094.63,159442.37,14930.5,8779.25,160024.64,14976.34,9021.86,160066.62,14884.9,8667,160572.35,14928.82,8904.88,160637.2,14844.36,8544.82,160978.53,14886.21,8776.44,161064.12,14785.97,8340.61,161462.1,14824.19,8559.5,161577.65,14700.63,7997.09,162006.64,14732.32,8189.66,162163.6,14630.84,7686.13,162343.77,14656.51,7851.84,162529.79,14574.96,7421.81,162558.62,14595.71,7564.23,162763.58,14467.23,6881.78,162863.2,14479.09,6979.68,163093.4,14408.98,6576.11,162978.6,14416.62,6651.91,163217.18,14283.13,5889.58,163134.02,14283.29,5924.6,163382.01,14274.84,5843.3,163140.33,14274.58,5875.96,163388.64,14266.51,5796.61,163146.24,14265.83,5826.96,163394.84,14258.13,5749.53,163151.73,14257.04,5777.57,163400.6,14993.39,9115.46,159200.24,14979.21,9099.99,159440.36,14979.21,9099.99,159440.36,14936.76,9027.24,160064.49,14936.76,9027.24,160064.49,14914.1,8975.42,160350.86,14914.1,8975.42,160350.86,14889.25,8910.28,160634.94,14889.25,8910.28,160634.94,14846.65,8781.88,161061.74,14846.65,8781.88,161061.74,14816.96,8681.93,161321.71,14816.96,8681.93,161321.71,14784.65,8565.01,161575.09,14784.65,8565.01,161575.09,14763.26,8483.48,161727.93,14763.26,8483.48,161727.93,14740.83,8394.78,161876.92,14740.83,8394.78,161876.92,14717.34,8298.77,162021.41,14717.34,8298.77,162021.41,14692.82,8195.32,162160.8,14692.82,8195.32,162160.8,14655.88,8033.87,162350.61,14655.88,8033.87,162350.61,14617.05,7857.66,162526.83,14617.05,7857.66,162526.83,14587.05,7717.45,162648.16,14587.05,7717.45,162648.16,14556.27,7570.18,162760.51,14556.27,7570.18,162760.51,14527.69,7430.59,162854.61,14527.69,7430.59,162854.61,14498.66,7286.28,162940.91,14498.66,7286.28,162940.91,14469.3,7137.86,163019.43,14469.3,7137.86,163019.43,14439.7,6985.89,163090.18,14439.7,6985.89,163090.18,14408.52,6823.41,163156.12,14408.52,6823.41,163156.12,14377.26,6658.25,163213.92,14377.26,6658.25,163213.92,14343.77,6478.88,163267.25,14343.77,6478.88,163267.25,14310.35,6297.59,163312.16,14310.35,6297.59,163312.16,14243.97,5931.17,163378.69,14243.97,5931.17,163378.69,14208.92,5734.56,163402.59,15029.5,9106.79,159262.81,14950.32,9117.51,159258.85,15025.98,9103.11,159323.11,14946.8,9113.82,159319.13,15022.41,9099.05,159382.96,14943.23,9109.77,159378.96,15018.8,9094.63,159442.37,14939.62,9105.35,159438.35,14976.34,9021.86,160066.62,14897.18,9032.61,160062.36,14928.82,8904.88,160637.2,14849.68,8915.68,160632.68,14886.21,8776.44,161064.12,14807.09,8787.31,161059.36,14824.19,8559.5,161577.65,14745.11,8570.52,161572.54,14732.32,8189.66,162163.6,14653.32,8200.98,162158.01,14656.51,7851.84,162529.79,14577.58,7863.47,162523.87,14595.71,7564.23,162763.58,14516.84,7576.14,162757.43,14479.09,6979.68,163093.4,14400.32,6992.11,163086.96,14416.62,6651.91,163217.18,14337.91,6664.59,163210.65,14283.29,5924.6,163382.01,14204.66,5937.75,163375.37,14274.58,5875.96,163388.64,14195.96,5889.15,163381.99,14265.83,5826.96,163394.84,14187.21,5840.16,163388.19,14257.04,5777.57,163400.6,14178.42,5790.8,163393.95,12837.23,9025.94,160326.35,12831.79,9002.05,160617.64,12831.79,9002.05,160617.64,12823.04,8928.32,161161.24,12823.04,8928.32,161161.24,12819.52,8874.63,161431.72,12819.52,8874.63,161431.72,12816.71,8808.12,161698.52,12816.71,8808.12,161698.52,12814.92,8738.3,161927.76,12814.92,8738.3,161927.76,12813.82,8656.45,162152.13,12813.82,8656.45,162152.13,12813.51,8556.55,162380.57,12813.51,8556.55,162380.57,12814.17,8440.98,162600.22,12814.17,8440.98,162600.22,12815.11,8360.48,162731.77,12815.11,8360.48,162731.77,12816.49,8273.26,162858.43,12816.49,8273.26,162858.43,12818.26,8183.1,162974.81,12818.26,8183.1,162974.81,12820.45,8086.59,163085.52,12820.45,8086.59,163085.52,12822.34,8012.35,163162.23,12822.34,8012.35,163162.23,12824.46,7934.84,163235.45,12824.46,7934.84,163235.45,12826.82,7854.15,163305.02,12826.82,7854.15,163305.02,12829.42,7770.38,163370.77,12829.42,7770.38,163370.77,12834.51,7617.09,163475.99,12834.51,7617.09,163475.99,12840.29,7455.73,163568.73,12840.29,7455.73,163568.73,12845.24,7324.79,163632.32,12845.24,7324.79,163632.32,12850.54,7190.09,163688.23,12850.54,7190.09,163688.23,12856.41,7046.73,163738.36,12856.41,7046.73,163738.36,12862.59,6900.45,163780.66,12862.59,6900.45,163780.66,12871.21,6703.29,163825.13,12871.21,6703.29,163825.13,12880.25,6503.01,163857.35,12880.25,6503.01,163857.35,12891.49,6261.91,163881.04,12891.49,6261.91,163881.04,12910.02,5878.37,163889.66,12910.02,5878.37,163889.66,12912.37,5830.82,163888.52,12912.37,5830.82,163888.52,12967.51,5826.57,164132.79,12863.09,5828.16,163896.53,12853.84,6016.63,163898.29,12853.84,6016.63,163898.29,12842.16,6260.11,163889.03,12842.16,6260.11,163889.03,12830.9,6501.78,163865.29,12830.9,6501.78,163865.29,12821.83,6702.6,163832.98,12821.83,6702.6,163832.98,12813.19,6900.35,163788.37,12813.19,6900.35,163788.37,12806.99,7047.09,163745.95,12806.99,7047.09,163745.95,12801.1,7190.93,163695.65,12801.1,7190.93,163695.65,12795.78,7326.12,163639.53,12795.78,7326.12,163639.53,12790.81,7457.55,163575.7,12790.81,7457.55,163575.7,12785.01,7619.54,163482.6,12785.01,7619.54,163482.6,12779.9,7773.43,163376.97,12779.9,7773.43,163376.97,12777.29,7857.53,163310.96,12777.29,7857.53,163310.96,12774.92,7938.54,163241.11,12774.92,7938.54,163241.11,12772.79,8016.36,163167.6,12772.79,8016.36,163167.6,12770.9,8090.88,163090.6,12770.9,8090.88,163090.6,12768.69,8187.75,162979.48,12768.69,8187.75,162979.48,12766.93,8278.22,162862.7,12766.93,8278.22,162862.7,12765.54,8365.73,162735.62,12765.54,8365.73,162735.62,12764.59,8446.48,162603.67,12764.59,8446.48,162603.67,12763.93,8562.37,162383.4,12763.93,8562.37,162383.4,12764.24,8662.52,162154.38,12764.24,8662.52,162154.38,12765.34,8744.55,161929.52,12765.34,8744.55,161929.52,12767.14,8814.51,161699.84,12767.14,8814.51,161699.84,12769.96,8881.14,161432.59,12769.96,8881.14,161432.59,12773.48,8934.9,161161.7,12773.48,8934.9,161161.7,12782.23,9008.73,160617.41,12782.23,9008.73,160617.41,12787.69,9032.64,160325.83,12787.69,9032.64,160325.83,12806.08,9281.86,160342.53,12888.66,5822.31,164145.61,12863.09,5828.16,163896.53,12967.51,5826.57,164132.79,12888.66,5822.31,164145.61,12885.36,9271.13,160343.37,12837.23,9025.94,160326.35,12806.08,9281.86,160342.53,12885.36,9271.13,160343.37,12885.36,9271.13,160343.37,12879.76,9246.57,160642.78,12879.76,9246.57,160642.78,12870.73,9170.37,161204.41,12870.73,9170.37,161204.41,12867.07,9114.54,161485.7,12867.07,9114.54,161485.7,12864.13,9044.98,161764.67,12864.13,9044.98,161764.67,12862.24,8971.54,162005.79,12862.24,8971.54,162005.79,12861.08,8884.89,162243.28,12861.08,8884.89,162243.28,12860.75,8778.36,162486.86,12860.75,8778.36,162486.86,12861.46,8654.12,162722.95,12861.46,8654.12,162722.95,12862.48,8566.99,162865.32,12862.48,8566.99,162865.32,12863.98,8472.09,163003.13,12863.98,8472.09,163003.13,12865.91,8373.51,163130.36,12865.91,8373.51,163130.36,12868.32,8267.54,163251.9,12868.32,8267.54,163251.9,12870.4,8185.77,163336.37,12870.4,8185.77,163336.37,12872.74,8100.23,163417.17,12872.74,8100.23,163417.17,12875.35,8011.08,163494.05,12875.35,8011.08,163494.05,12878.22,7918.46,163566.75,12878.22,7918.46,163566.75,12883.85,7749,163683.07,12883.85,7749,163683.07,12890.22,7570.96,163785.41,12890.22,7570.96,163785.41,12895.67,7426.97,163855.34,12895.67,7426.97,163855.34,12901.48,7279.4,163916.6,12901.48,7279.4,163916.6,12907.87,7123.07,163971.28,12907.87,7123.07,163971.28,12914.58,6964.36,164017.17,12914.58,6964.36,164017.17,12923.88,6751.73,164065.15,12923.88,6751.73,164065.15,12933.57,6537.19,164099.67,12933.57,6537.19,164099.67,12945.52,6280.73,164124.87,12945.52,6280.73,164124.87,12965.05,5876.42,164133.98,12965.05,5876.42,164133.98,12967.51,5826.57,164132.79,12806.08,9281.86,160342.53,12800.48,9257.26,160642.42,12800.48,9257.26,160642.42,12791.43,9180.91,161205.14,12791.43,9180.91,161205.14,12787.76,9124.95,161487.08,12787.76,9124.95,161487.08,12784.81,9055.2,161766.78,12784.81,9055.2,161766.78,12782.92,8981.55,162008.61,12782.92,8981.55,162008.61,12781.75,8894.61,162246.89,12781.75,8894.61,162246.89,12781.42,8787.68,162491.38,12781.42,8787.68,162491.38,12782.13,8662.92,162728.46,12782.13,8662.92,162728.46,12783.16,8575.39,162871.48,12783.16,8575.39,162871.48,12784.67,8480.03,163009.96,12784.67,8480.03,163009.96,12786.61,8380.94,163137.84,12786.61,8380.94,163137.84,12789.04,8274.41,163260.04,12789.04,8274.41,163260.04,12791.12,8192.19,163344.97,12791.12,8192.19,163344.97,12793.48,8106.16,163426.23,12793.48,8106.16,163426.23,12796.1,8016.5,163503.54,12796.1,8016.5,163503.54,12798.99,7923.35,163576.66,12798.99,7923.35,163576.66,12804.65,7752.92,163693.65,12804.65,7752.92,163693.65,12811.06,7573.87,163796.56,12811.06,7573.87,163796.56,12816.53,7429.1,163866.88,12816.53,7429.1,163866.88,12822.38,7280.75,163928.46,12822.38,7280.75,163928.46,12828.8,7123.64,163983.41,12828.8,7123.64,163983.41,12835.54,6964.19,164029.52,12835.54,6964.19,164029.52,12844.87,6750.63,164077.71,12844.87,6750.63,164077.71,12854.61,6535.23,164112.36,12854.61,6535.23,164112.36,12866.6,6277.84,164137.65,12866.6,6277.84,164137.65,12886.19,5872.3,164146.8,12886.19,5872.3,164146.8,12888.66,5822.31,164145.61,12796.89,9157.25,160334.18,12791.36,9132.99,160629.92,12791.36,9132.99,160629.92,12782.45,9057.9,161183.42,12782.45,9057.9,161183.42,12778.86,9003.04,161459.83,12778.86,9003.04,161459.83,12775.98,8934.85,161733.31,12775.98,8934.85,161733.31,12774.13,8863.05,161969.07,12774.13,8863.05,161969.07,12773,8778.57,162200.64,12773,8778.57,162200.64,12772.68,8675.03,162437.39,12772.68,8675.03,162437.39,12773.36,8554.7,162666.06,12773.36,8554.7,162666.06,12774.35,8470.56,162803.55,12774.35,8470.56,162803.55,12775.8,8379.12,162936.33,12775.8,8379.12,162936.33,12777.65,8284.35,163058.66,12777.65,8284.35,163058.66,12779.97,8182.64,163175.32,12779.97,8182.64,163175.32,12781.96,8104.27,163256.29,12781.96,8104.27,163256.29,12784.2,8022.35,163333.67,12784.2,8022.35,163333.67,12786.69,7937.02,163407.25,12786.69,7937.02,163407.25,12789.44,7848.39,163476.81,12789.44,7848.39,163476.81,12794.83,7686.23,163588.13,12794.83,7686.23,163588.13,12800.93,7515.71,163686.13,12800.93,7515.71,163686.13,12806.16,7377.61,163753.2,12806.16,7377.61,163753.2,12811.74,7235.84,163812.05,12811.74,7235.84,163812.05,12817.89,7085.37,163864.68,12817.89,7085.37,163864.68,12824.36,6932.27,163908.95,12824.36,6932.27,163908.95,12833.35,6726.62,163955.34,12833.35,6726.62,163955.34,12842.75,6518.51,163988.83,12842.75,6518.51,163988.83,12854.38,6268.98,164013.34,12854.38,6268.98,164013.34,12873.46,5874.04,164022.23,12873.46,5874.04,164022.23,12875.87,5825.23,164021.07,12804.91,9277.67,160403.36,12786.54,9028.57,160385.05,12803.76,9273.11,160463.86,12785.42,9024.13,160443.92,12802.63,9268.19,160523.87,12784.33,9019.35,160502.27,12800.48,9257.26,160642.42,12782.23,9008.73,160617.41,12791.43,9180.91,161205.14,12773.48,8934.9,161161.7,12784.81,9055.2,161766.78,12767.14,8814.51,161699.84,12781.75,8894.61,162246.89,12764.24,8662.52,162154.38,12782.13,8662.92,162728.46,12764.59,8446.48,162603.67,12784.67,8480.03,163009.96,12766.93,8278.22,162862.7,12789.04,8274.41,163260.04,12770.9,8090.88,163090.6,12798.99,7923.35,163576.66,12779.9,7773.43,163376.97,12811.06,7573.87,163796.56,12790.81,7457.55,163575.7,12822.38,7280.75,163928.46,12801.1,7190.93,163695.65,12835.54,6964.19,164029.52,12813.19,6900.35,163788.37,12854.61,6535.23,164112.36,12830.9,6501.78,163865.29,12878.94,6020.46,164147.45,12853.84,6016.63,163898.29,12881.33,5971.45,164147.72,12856.11,5970.09,163898.55,12883.75,5922.06,164147.5,12858.41,5923.14,163898.34,12886.19,5872.3,164146.8,12860.73,5875.78,163897.67,12861.29,9148.54,160334.86,12855.77,9124.31,160630.21,12855.77,9124.31,160630.21,12846.89,9049.34,161182.83,12846.89,9049.34,161182.83,12843.3,8994.59,161458.71,12843.3,8994.59,161458.71,12840.42,8926.55,161731.59,12840.42,8926.55,161731.59,12838.58,8854.92,161966.77,12838.58,8854.92,161966.77,12837.45,8770.67,162197.7,12837.45,8770.67,162197.7,12837.13,8667.46,162433.71,12837.13,8667.46,162433.71,12837.81,8547.55,162661.59,12837.81,8547.55,162661.59,12838.8,8463.74,162798.55,12838.8,8463.74,162798.55,12840.24,8372.68,162930.78,12840.24,8372.68,162930.78,12842.08,8278.31,163052.58,12842.08,8278.31,163052.58,12844.39,8177.07,163168.71,12844.39,8177.07,163168.71,12846.37,8099.06,163249.3,12846.37,8099.06,163249.3,12848.6,8017.54,163326.31,12848.6,8017.54,163326.31,12851.08,7932.61,163399.54,12851.08,7932.61,163399.54,12853.82,7844.42,163468.76,12853.82,7844.42,163468.76,12859.18,7683.05,163579.53,12859.18,7683.05,163579.53,12865.26,7513.34,163677.07,12865.26,7513.34,163677.07,12870.45,7375.88,163743.83,12870.45,7375.88,163743.83,12876.01,7234.74,163802.42,12876.01,7234.74,163802.42,12882.14,7084.9,163854.82,12882.14,7084.9,163854.82,12888.59,6932.41,163898.91,12888.59,6932.41,163898.91,12897.54,6727.51,163945.14,12897.54,6727.51,163945.14,12906.91,6520.1,163978.51,12906.91,6520.1,163978.51,12918.5,6271.32,164002.95,12918.5,6271.32,164002.95,12937.54,5877.39,164011.82,12937.54,5877.39,164011.82,12939.94,5828.7,164010.66,12836.09,9021.87,160385.52,12884.18,9266.96,160404.11,12834.97,9017.44,160444.33,12883.03,9262.4,160464.51,12833.88,9012.66,160502.62,12881.91,9257.49,160524.42,12831.79,9002.05,160617.64,12879.76,9246.57,160642.78,12823.04,8928.32,161161.24,12870.73,9170.37,161204.41,12816.71,8808.12,161698.52,12864.13,9044.98,161764.67,12813.82,8656.45,162152.13,12861.08,8884.89,162243.28,12814.17,8440.98,162600.22,12861.46,8654.12,162722.95,12816.49,8273.26,162858.43,12863.98,8472.09,163003.13,12820.45,8086.59,163085.52,12868.32,8267.54,163251.9,12829.42,7770.38,163370.77,12878.22,7918.46,163566.75,12840.29,7455.73,163568.73,12890.22,7570.96,163785.41,12850.54,7190.09,163688.23,12901.48,7279.4,163916.6,12862.59,6900.45,163780.66,12914.58,6964.36,164017.17,12880.25,6503.01,163857.35,12933.57,6537.19,164099.67,12903.14,6018.94,163890.28,12957.82,6024.15,164134.63,12905.41,5972.49,163890.54,12960.2,5975.29,164134.9,12907.7,5925.63,163890.33,12962.61,5926.04,164134.68,12910.02,5878.37,163889.66,12965.05,5876.42,164133.98,12845.72,9276.5,160342.95,12840.12,9251.91,160642.6,12840.12,9251.91,160642.6,12831.08,9175.64,161204.78,12831.08,9175.64,161204.78,12827.41,9119.75,161486.39,12827.41,9119.75,161486.39,12824.47,9050.09,161765.72,12824.47,9050.09,161765.72,12822.58,8976.55,162007.2,12822.58,8976.55,162007.2,12821.42,8889.75,162245.08,12821.42,8889.75,162245.08,12821.09,8783.02,162489.12,12821.09,8783.02,162489.12,12821.8,8658.52,162725.71,12821.8,8658.52,162725.71,12822.82,8571.19,162868.4,12822.82,8571.19,162868.4,12824.33,8476.06,163006.55,12824.33,8476.06,163006.55,12826.26,8377.23,163134.1,12826.26,8377.23,163134.1,12828.68,8270.98,163255.97,12828.68,8270.98,163255.97,12830.76,8188.98,163340.67,12830.76,8188.98,163340.67,12833.11,8103.2,163421.7,12833.11,8103.2,163421.7,12835.72,8013.79,163498.8,12835.72,8013.79,163498.8,12838.6,7920.9,163571.71,12838.6,7920.9,163571.71,12844.25,7750.96,163688.36,12844.25,7750.96,163688.36,12850.64,7572.42,163790.99,12850.64,7572.42,163790.99,12856.1,7428.03,163861.11,12856.1,7428.03,163861.11,12861.93,7280.07,163922.53,12861.93,7280.07,163922.53,12868.34,7123.36,163977.34,12868.34,7123.36,163977.34,12875.06,6964.27,164023.34,12875.06,6964.27,164023.34,12884.37,6751.18,164071.43,12884.37,6751.18,164071.43,12894.09,6536.21,164106.02,12894.09,6536.21,164106.02,12906.06,6279.29,164131.26,12906.06,6279.29,164131.26,12925.62,5874.36,164140.39,12925.62,5874.36,164140.39,12928.09,5824.44,164139.2,12884.18,9266.96,160404.11,12804.91,9277.67,160403.36,12883.03,9262.4,160464.51,12803.76,9273.11,160463.86,12881.91,9257.49,160524.42,12802.63,9268.19,160523.87,12879.76,9246.57,160642.78,12800.48,9257.26,160642.42,12870.73,9170.37,161204.41,12791.43,9180.91,161205.14,12864.13,9044.98,161764.67,12784.81,9055.2,161766.78,12861.08,8884.89,162243.28,12781.75,8894.61,162246.89,12861.46,8654.12,162722.95,12782.13,8662.92,162728.46,12863.98,8472.09,163003.13,12784.67,8480.03,163009.96,12868.32,8267.54,163251.9,12789.04,8274.41,163260.04,12878.22,7918.46,163566.75,12798.99,7923.35,163576.66,12890.22,7570.96,163785.41,12811.06,7573.87,163796.56,12901.48,7279.4,163916.6,12822.38,7280.75,163928.46,12914.58,6964.36,164017.17,12835.54,6964.19,164029.52,12933.57,6537.19,164099.67,12854.61,6535.23,164112.36,12957.82,6024.15,164134.63,12878.94,6020.46,164147.45,12960.2,5975.29,164134.9,12881.33,5971.45,164147.72,12962.61,5926.04,164134.68,12883.75,5922.06,164147.5,12965.05,5876.42,164133.98,12886.19,5872.3,164146.8,10773.3,9158.54,161420.89,10778.27,9136.77,161655.17,10778.27,9136.77,161655.17,10792.86,9075.46,162105.83,10792.86,9075.46,162105.83,10815.25,8984.1,162548.97,10815.25,8984.1,162548.97,10839.5,8886.68,162890.26,10839.5,8886.68,162890.26,10858.76,8809.93,163104.92,10858.76,8809.93,163104.92,10881.19,8720.99,163313.42,10881.19,8720.99,163313.42,10903.64,8632.32,163489.46,10903.64,8632.32,163489.46,10928.92,8532.79,163658.15,10928.92,8532.79,163658.15,10949.87,8450.55,163779.1,10949.87,8450.55,163779.1,10972.54,8361.71,163894.34,10972.54,8361.71,163894.34,10995.94,8270.15,163998.92,10995.94,8270.15,163998.92,11020.94,8172.51,164096.96,11020.94,8172.51,164096.96,11048.56,8064.77,164191.25,11048.56,8064.77,164191.25,11077.78,7950.93,164277.32,11077.78,7950.93,164277.32,11114.15,7809.43,164367.69,11114.15,7809.43,164367.69,11152.36,7660.95,164445.73,11152.36,7660.95,164445.73,11185.03,7534.16,164500.62,11185.03,7534.16,164500.62,11218.61,7403.91,164547.2,11218.61,7403.91,164547.2,11254.56,7264.61,164587.28,11254.56,7264.61,164587.28,11291.17,7122.8,164618.93,11291.17,7122.8,164618.93,11325.13,6991.37,164640.87,11325.13,6991.37,164640.87,11359.44,6858.66,164656.49,11359.44,6858.66,164656.49,11428.77,6590.68,164670.37,11428.77,6590.68,164670.37,11491.99,6346.5,164665.07,11491.99,6346.5,164665.07,11592.06,5960.35,164627.15,11592.06,5960.35,164627.15,11604.48,5912.44,164620.21,11604.48,5912.44,164620.21,11717.2,5908.19,164843.81,11560.32,5898.2,164638.84,11510.98,6088.55,164663.63,11510.98,6088.55,164663.63,11447.4,6333.94,164683.88,11447.4,6333.94,164683.88,11383.88,6579.28,164689.2,11383.88,6579.28,164689.2,11314.17,6848.73,164675.25,11314.17,6848.73,164675.25,11279.65,6982.26,164659.52,11279.65,6982.26,164659.52,11245.46,7114.57,164637.44,11245.46,7114.57,164637.44,11208.58,7257.4,164605.56,11208.58,7257.4,164605.56,11172.36,7397.78,164565.17,11172.36,7397.78,164565.17,11138.5,7529.1,164518.2,11138.5,7529.1,164518.2,11105.55,7656.99,164462.83,11105.55,7656.99,164462.83,11066.99,7806.82,164384.09,11066.99,7806.82,164384.09,11030.28,7949.63,164292.88,11030.28,7949.63,164292.88,11000.79,8064.53,164206,11000.79,8064.53,164206,10972.91,8173.26,164110.85,10972.91,8173.26,164110.85,10947.69,8271.77,164011.94,10947.69,8271.77,164011.94,10924.09,8364.1,163906.48,10924.09,8364.1,163906.48,10901.24,8453.66,163790.31,10901.24,8453.66,163790.31,10880.14,8536.51,163668.46,10880.14,8536.51,163668.46,10854.68,8636.72,163498.62,10854.68,8636.72,163498.62,10832.09,8725.94,163321.5,10832.09,8725.94,163321.5,10809.54,8815.36,163111.87,10809.54,8815.36,163111.87,10790.19,8892.48,162896.19,10790.19,8892.48,162896.19,10765.84,8990.29,162553.52,10765.84,8990.29,162553.52,10743.38,9081.95,162108.94,10743.38,9081.95,162108.94,10724.88,9160.31,161481.73,10724.88,9160.31,161481.73,10723.77,9165.24,161422.3,10723.77,9165.24,161422.3,10742.86,9414.2,161441.81,11646.55,5885.41,164873.63,11560.32,5898.2,164638.84,11717.2,5908.19,164843.81,11646.55,5885.41,164873.63,10822.11,9403.48,161439.54,10773.3,9158.54,161420.89,10742.86,9414.2,161441.81,10822.11,9403.48,161439.54,10822.11,9403.48,161439.54,10827.21,9381.13,161680.02,10827.21,9381.13,161680.02,10842.25,9317.94,162144.59,10842.25,9317.94,162144.59,10865.52,9222.99,162604.94,10865.52,9222.99,162604.94,10890.94,9120.87,162962.64,10890.94,9120.87,162962.64,10911.28,9039.77,163189.45,10911.28,9039.77,163189.45,10935.16,8945.07,163411.4,10935.16,8945.07,163411.4,10959.26,8849.93,163600.28,10959.26,8849.93,163600.28,10986.6,8742.29,163782.68,10986.6,8742.29,163782.68,11009.41,8652.73,163914.39,11009.41,8652.73,163914.39,11034.24,8555.42,164040.61,11034.24,8555.42,164040.61,11060.01,8454.61,164155.74,11060.01,8454.61,164155.74,11087.65,8346.65,164264.12,11087.65,8346.65,164264.12,11118.28,8227.16,164368.69,11118.28,8227.16,164368.69,11150.74,8100.7,164464.31,11150.74,8100.7,164464.31,11191.13,7943.55,164564.67,11191.13,7943.55,164564.67,11233.47,7779.05,164651.14,11233.47,7779.05,164651.14,11269.51,7639.16,164711.71,11269.51,7639.16,164711.71,11306.4,7496.1,164762.88,11306.4,7496.1,164762.88,11345.65,7343.96,164806.67,11345.65,7343.96,164806.67,11385.41,7190.01,164841.04,11385.41,7190.01,164841.04,11422.06,7048.16,164864.73,11422.06,7048.16,164864.73,11458.88,6905.71,164881.52,11458.88,6905.71,164881.52,11532.75,6620.19,164896.31,11532.75,6620.19,164896.31,11599.53,6362.26,164890.71,11599.53,6362.26,164890.71,11704.27,5958.08,164851.04,11704.27,5958.08,164851.04,11717.2,5908.19,164843.81,10742.86,9414.2,161441.81,10747.98,9391.77,161683.12,10747.98,9391.77,161683.12,10763.08,9328.33,162149.55,10763.08,9328.33,162149.55,10786.47,9232.9,162612.23,10786.47,9232.9,162612.23,10812.04,9130.14,162972.13,10812.04,9130.14,162972.13,10832.54,9048.46,163200.57,10832.54,9048.46,163200.57,10856.61,8952.99,163424.33,10856.61,8952.99,163424.33,10880.93,8856.97,163614.93,10880.93,8856.97,163614.93,10908.55,8748.25,163799.18,10908.55,8748.25,163799.18,10931.61,8657.7,163932.33,10931.61,8657.7,163932.33,10956.73,8559.25,164060.03,10956.73,8559.25,164060.03,10982.81,8457.2,164176.58,10982.81,8457.2,164176.58,11010.81,8347.85,164286.36,11010.81,8347.85,164286.36,11041.85,8226.78,164392.31,11041.85,8226.78,164392.31,11074.74,8098.63,164489.2,11074.74,8098.63,164489.2,11115.68,7939.37,164590.9,11115.68,7939.37,164590.9,11158.57,7772.72,164678.51,11158.57,7772.72,164678.51,11195.06,7631.06,164739.85,11195.06,7631.06,164739.85,11232.39,7486.29,164791.63,11232.39,7486.29,164791.63,11272.09,7332.41,164835.92,11272.09,7332.41,164835.92,11312.27,7176.83,164870.66,11312.27,7176.83,164870.66,11349.28,7033.58,164894.59,11349.28,7033.58,164894.59,11386.45,6889.82,164911.53,11386.45,6889.82,164911.53,11460.92,6601.94,164926.44,11460.92,6601.94,164926.44,11528.18,6342.16,164920.8,11528.18,6342.16,164920.8,11633.55,5935.57,164880.9,11633.55,5935.57,164880.9,11646.55,5885.41,164873.63,10733.32,9289.72,161432.06,10738.37,9267.59,161670.11,10738.37,9267.59,161670.11,10753.23,9205.14,162129.25,10753.23,9205.14,162129.25,10776.15,9111.6,162582.87,10776.15,9111.6,162582.87,10801.12,9011.31,162934.16,10801.12,9011.31,162934.16,10821.04,8931.91,163156.22,10821.04,8931.91,163156.22,10844.35,8839.46,163372.91,10844.35,8839.46,163372.91,10867.8,8746.85,163556.78,10867.8,8746.85,163556.78,10894.34,8642.38,163733.82,10894.34,8642.38,163733.82,10916.42,8555.68,163861.32,10916.42,8555.68,163861.32,10940.41,8461.67,163983.25,10940.41,8461.67,163983.25,10965.25,8364.48,164094.26,10965.25,8364.48,164094.26,10991.86,8260.55,164198.6,10991.86,8260.55,164198.6,11021.32,8145.65,164299.16,11021.32,8145.65,164299.16,11052.51,8024.13,164391.04,11052.51,8024.13,164391.04,11091.33,7873.1,164487.5,11091.33,7873.1,164487.5,11132.06,7714.85,164570.67,11132.06,7714.85,164570.67,11166.78,7580.08,164629.02,11166.78,7580.08,164629.02,11202.37,7442.03,164678.4,11202.37,7442.03,164678.4,11240.34,7294.9,164720.74,11240.34,7294.9,164720.74,11278.87,7145.7,164754.05,11278.87,7145.7,164754.05,11314.47,7007.92,164777.06,11314.47,7007.92,164777.06,11350.31,6869.28,164793.39,11350.31,6869.28,164793.39,11422.4,6590.61,164807.82,11422.4,6590.61,164807.82,11487.79,6338.05,164802.34,11487.79,6338.05,164802.34,11590.7,5940.92,164763.35,11590.7,5940.92,164763.35,11603.44,5891.8,164756.24,10744,9409.14,161502.82,10724.88,9160.31,161481.73,10745.23,9403.7,161563.47,10726.08,9155.02,161540.76,10746.56,9397.91,161623.57,10727.37,9149.39,161599.22,10747.98,9391.77,161683.12,10728.76,9143.42,161657.11,10786.47,9232.9,162612.23,10765.84,8990.29,162553.52,10812.04,9130.14,162972.13,10790.19,8892.48,162896.19,10856.61,8952.99,163424.33,10832.09,8725.94,163321.5,10908.55,8748.25,163799.18,10880.14,8536.51,163668.46,10956.73,8559.25,164060.03,10924.09,8364.1,163906.48,11010.81,8347.85,164286.36,10972.91,8173.26,164110.85,11074.74,8098.63,164489.2,11030.28,7949.63,164292.88,11158.57,7772.72,164678.51,11105.55,7656.99,164462.83,11232.39,7486.29,164791.63,11172.36,7397.78,164565.17,11312.27,7176.83,164870.66,11245.46,7114.57,164637.44,11460.92,6601.94,164926.44,11383.88,6579.28,164689.2,11594.99,6084.32,164899.54,11510.98,6088.55,164663.63,11607.74,6035.1,164893.86,11523.16,6041.53,164658.21,11620.6,5985.52,164887.65,11535.46,5994.1,164652.27,11633.55,5935.57,164880.9,11547.85,5946.28,164645.81,10797.71,9281.01,161430.22,10802.74,9258.95,161667.6,10802.74,9258.95,161667.6,10817.55,9196.7,162125.21,10817.55,9196.7,162125.21,10840.38,9103.55,162576.96,10840.38,9103.55,162576.96,10865.22,9003.77,162926.45,10865.22,9003.77,162926.45,10885.02,8924.85,163147.18,10885.02,8924.85,163147.18,10908.18,8833.03,163362.41,10908.18,8833.03,163362.41,10931.45,8741.12,163544.87,10931.45,8741.12,163544.87,10957.76,8637.54,163720.42,10957.76,8637.54,163720.42,10979.64,8551.64,163846.74,10979.64,8551.64,163846.74,11003.39,8458.56,163967.47,11003.39,8458.56,163967.47,11027.97,8362.38,164077.33,11027.97,8362.38,164077.33,11054.29,8259.58,164180.54,11054.29,8259.58,164180.54,11083.42,8145.96,164279.97,11083.42,8145.96,164279.97,11114.26,8025.82,164370.82,11114.26,8025.82,164370.82,11152.64,7876.49,164466.18,11152.64,7876.49,164466.18,11192.92,7720,164548.43,11192.92,7720,164548.43,11227.27,7586.66,164606.16,11227.27,7586.66,164606.16,11262.5,7450.01,164655.04,11262.5,7450.01,164655.04,11300.11,7304.28,164696.98,11300.11,7304.28,164696.98,11338.29,7156.4,164729.98,11338.29,7156.4,164729.98,11373.6,7019.76,164752.8,11373.6,7019.76,164752.8,11409.16,6882.19,164769,11409.16,6882.19,164769,11480.76,6605.44,164783.34,11480.76,6605.44,164783.34,11545.76,6354.38,164777.89,11545.76,6354.38,164777.89,11648.16,5959.22,164739.09,11648.16,5959.22,164739.09,11660.84,5910.32,164732.01,10774.41,9153.62,161480.19,10823.24,9398.43,161500.35,10775.61,9148.34,161539.09,10824.47,9393.02,161560.79,10776.89,9142.72,161597.42,10825.79,9387.25,161620.68,10778.27,9136.77,161655.17,10827.21,9381.13,161680.02,10815.25,8984.1,162548.97,10865.52,9222.99,162604.94,10839.5,8886.68,162890.26,10890.94,9120.87,162962.64,10881.19,8720.99,163313.42,10935.16,8945.07,163411.4,10928.92,8532.79,163658.15,10986.6,8742.29,163782.68,10972.54,8361.71,163894.34,11034.24,8555.42,164040.61,11020.94,8172.51,164096.96,11087.65,8346.65,164264.12,11077.78,7950.93,164277.32,11150.74,8100.7,164464.31,11152.36,7660.95,164445.73,11233.47,7779.05,164651.14,11218.61,7403.91,164547.2,11306.4,7496.1,164762.88,11291.17,7122.8,164618.93,11385.41,7190.01,164841.04,11428.77,6590.68,164670.37,11532.75,6620.19,164896.31,11555.31,6102.1,164644.91,11665.92,6106.01,164869.57,11567.45,6055.26,164639.51,11678.61,6057.07,164863.93,11579.7,6008.01,164633.59,11691.39,6007.76,164857.76,11592.06,5960.35,164627.15,11704.27,5958.08,164851.04,10782.49,9408.84,161440.68,10787.6,9386.45,161681.57,10787.6,9386.45,161681.57,10802.66,9323.14,162147.07,10802.66,9323.14,162147.07,10825.99,9227.95,162608.59,10825.99,9227.95,162608.59,10851.49,9125.5,162967.39,10851.49,9125.5,162967.39,10871.91,9044.12,163195.01,10871.91,9044.12,163195.01,10895.89,8949.03,163417.86,10895.89,8949.03,163417.86,10920.09,8853.45,163607.61,10920.09,8853.45,163607.61,10947.57,8745.27,163790.93,10947.57,8745.27,163790.93,10970.51,8655.21,163923.36,10970.51,8655.21,163923.36,10995.49,8557.33,164050.32,10995.49,8557.33,164050.32,11021.41,8455.9,164166.16,11021.41,8455.9,164166.16,11049.23,8347.25,164275.24,11049.23,8347.25,164275.24,11080.06,8226.97,164380.5,11080.06,8226.97,164380.5,11112.74,8099.67,164476.76,11112.74,8099.67,164476.76,11153.41,7941.46,164577.79,11153.41,7941.46,164577.79,11196.02,7775.89,164664.82,11196.02,7775.89,164664.82,11232.29,7635.11,164725.78,11232.29,7635.11,164725.78,11269.39,7491.2,164777.26,11269.39,7491.2,164777.26,11308.87,7338.19,164821.29,11308.87,7338.19,164821.29,11348.84,7183.42,164855.85,11348.84,7183.42,164855.85,11385.67,7040.87,164879.66,11385.67,7040.87,164879.66,11422.67,6897.77,164896.52,11422.67,6897.77,164896.52,11496.84,6611.07,164911.38,11496.84,6611.07,164911.38,11563.86,6352.21,164905.76,11563.86,6352.21,164905.76,11668.91,5946.82,164865.97,11668.91,5946.82,164865.97,11681.88,5896.8,164858.72,10823.24,9398.43,161500.35,10744,9409.14,161502.82,10824.47,9393.02,161560.79,10745.23,9403.7,161563.47,10825.79,9387.25,161620.68,10746.56,9397.91,161623.57,10827.21,9381.13,161680.02,10747.98,9391.77,161683.12,10865.52,9222.99,162604.94,10786.47,9232.9,162612.23,10890.94,9120.87,162962.64,10812.04,9130.14,162972.13,10935.16,8945.07,163411.4,10856.61,8952.99,163424.33,10986.6,8742.29,163782.68,10908.55,8748.25,163799.18,11034.24,8555.42,164040.61,10956.73,8559.25,164060.03,11087.65,8346.65,164264.12,11010.81,8347.85,164286.36,11150.74,8100.7,164464.31,11074.74,8098.63,164489.2,11233.47,7779.05,164651.14,11158.57,7772.72,164678.51,11306.4,7496.1,164762.88,11232.39,7486.29,164791.63,11385.41,7190.01,164841.04,11312.27,7176.83,164870.66,11532.75,6620.19,164896.31,11460.92,6601.94,164926.44,11665.92,6106.01,164869.57,11594.99,6084.32,164899.54,11678.61,6057.07,164863.93,11607.74,6035.1,164893.86,11691.39,6007.76,164857.76,11620.6,5985.52,164887.65,11704.27,5958.08,164851.04,11633.55,5935.57,164880.9,8788.71,9264.15,162473.11,8833.73,9182.38,163094.2,8833.73,9182.38,163094.2,8874.34,9103.9,163474.57,8874.34,9103.9,163474.57,8922.69,9007.7,163819.75,8922.69,9007.7,163819.75,8966.76,8918.36,164070.69,8966.76,8918.36,164070.69,9018.19,8812.72,164310.98,9018.19,8812.72,164310.98,9046.97,8753.11,164426.48,9046.97,8753.11,164426.48,9077.9,8688.71,164538.3,9077.9,8688.71,164538.3,9115.74,8609.56,164660.12,9115.74,8609.56,164660.12,9156.53,8523.84,164775.76,9156.53,8523.84,164775.76,9198.36,8435.55,164879.87,9198.36,8435.55,164879.87,9242.86,8341.24,164976.84,9242.86,8341.24,164976.84,9285.94,8249.67,165058.86,9285.94,8249.67,165058.86,9331.08,8153.41,165133.92,9331.08,8153.41,165133.92,9381.34,8045.93,165205.92,9381.34,8045.93,165205.92,9433.57,7933.96,165269.41,9433.57,7933.96,165269.41,9488.81,7815.24,165325.46,9488.81,7815.24,165325.46,9545.57,7692.99,165372.58,9545.57,7692.99,165372.58,9606.2,7562.12,165412.52,9606.2,7562.12,165412.52,9667.88,7428.74,165443.37,9667.88,7428.74,165443.37,9725.13,7304.73,165464.07,9725.13,7304.73,165464.07,9782.87,7179.48,165477.95,9782.87,7179.48,165477.95,9899.23,6926.55,165487.05,9899.23,6926.55,165487.05,9985.32,6739.06,165479.46,9985.32,6739.06,165479.46,10071.32,6551.48,165461.18,10071.32,6551.48,165461.18,10164.75,6347.43,165430.45,10164.75,6347.43,165430.45,10344.93,5953.18,165343.18,10344.93,5953.18,165343.18,10500.21,5972.53,165538.73,10309.5,5929.99,165369.78,10128.49,6326.07,165457.45,10128.49,6326.07,165457.45,10034.54,6531.26,165488.35,10034.54,6531.26,165488.35,9947.99,6720.03,165506.74,9947.99,6720.03,165506.74,9861.29,6908.85,165514.38,9861.29,6908.85,165514.38,9743.96,7163.86,165505.21,9743.96,7163.86,165505.21,9685.69,7290.28,165491.19,9685.69,7290.28,165491.19,9627.86,7415.54,165470.28,9627.86,7415.54,165470.28,9565.5,7550.39,165439.1,9565.5,7550.39,165439.1,9504.16,7682.79,165398.69,9504.16,7682.79,165398.69,9446.69,7806.58,165350.97,9446.69,7806.58,165350.97,9390.73,7926.85,165294.18,9390.73,7926.85,165294.18,9337.79,8040.35,165229.83,9337.79,8040.35,165229.83,9286.83,8149.31,165156.84,9286.83,8149.31,165156.84,9241.07,8246.9,165080.74,9241.07,8246.9,165080.74,9197.41,8339.72,164997.61,9197.41,8339.72,164997.61,9152.31,8435.27,164899.37,9152.31,8435.27,164899.37,9109.96,8524.66,164793.95,9109.96,8524.66,164793.95,9068.7,8611.4,164676.95,9068.7,8611.4,164676.95,9030.44,8691.41,164553.79,9030.44,8691.41,164553.79,8999.19,8756.47,164440.85,8999.19,8756.47,164440.85,8970.14,8816.63,164324.26,8970.14,8816.63,164324.26,8918.28,8923.15,164081.97,8918.28,8923.15,164081.97,8873.9,9013.13,163829.25,8873.9,9013.13,163829.25,8825.27,9109.9,163482.03,8825.27,9109.9,163482.03,8784.46,9188.76,163099.84,8784.46,9188.76,163099.84,8739.27,9270.84,162476.46,8739.27,9270.84,162476.46,8759.24,9519.5,162498.69,10443.52,5935.43,165581.28,10309.5,5929.99,165369.78,10500.21,5972.53,165538.73,10443.52,5935.43,165581.28,8838.34,9508.8,162493.33,8788.71,9264.15,162473.11,8759.24,9519.5,162498.69,8838.34,9508.8,162493.33,8838.34,9508.8,162493.33,8884.61,9424.73,163131.7,8884.61,9424.73,163131.7,8926.71,9343.4,163525.82,8926.71,9343.4,163525.82,8977.22,9242.9,163886.36,8977.22,9242.9,163886.36,9023.65,9148.76,164150.72,9023.65,9148.76,164150.72,9078.32,9036.47,164406.13,9078.32,9036.47,164406.13,9109.13,8972.65,164529.8,9109.13,8972.65,164529.8,9142.44,8903.32,164650.14,9142.44,8903.32,164650.14,9183.4,8817.63,164782.01,9183.4,8817.63,164782.01,9227.82,8724.28,164907.92,9227.82,8724.28,164907.92,9273.6,8627.63,165021.87,9273.6,8627.63,165021.87,9322.53,8523.97,165128.46,9322.53,8523.97,165128.46,9370.01,8423.01,165218.88,9370.01,8423.01,165218.88,9419.86,8316.73,165301.75,9419.86,8316.73,165301.75,9475.36,8198.05,165381.25,9475.36,8198.05,165381.25,9532.94,8074.6,165451.25,9532.94,8074.6,165451.25,9593.65,7944.12,165512.86,9593.65,7944.12,165512.86,9655.78,7810.3,165564.46,9655.78,7810.3,165564.46,9721.79,7667.82,165607.95,9721.79,7667.82,165607.95,9788.56,7523.44,165641.35,9788.56,7523.44,165641.35,9850.16,7389.99,165663.64,9850.16,7389.99,165663.64,9911.96,7255.94,165678.51,9911.96,7255.94,165678.51,10035.57,6987.26,165688.18,10035.57,6987.26,165688.18,10126.29,6789.68,165680.19,10126.29,6789.68,165680.19,10216.39,6593.18,165661.04,10216.39,6593.18,165661.04,10313.74,6380.54,165629.03,10313.74,6380.54,165629.03,10500.21,5972.53,165538.73,8759.24,9519.5,162498.69,8805.78,9434.94,163140.73,8805.78,9434.94,163140.73,8848.19,9353,163537.77,8848.19,9353,163537.77,8899.16,9251.59,163901.56,8899.16,9251.59,163901.56,8946.09,9156.44,164168.76,8946.09,9156.44,164168.76,9001.44,9042.73,164427.38,9001.44,9042.73,164427.38,9032.69,8978.01,164552.79,9032.69,8978.01,164552.79,9066.5,8907.64,164674.93,9066.5,8907.64,164674.93,9108.13,8820.56,164808.94,9108.13,8820.56,164808.94,9153.31,8725.6,164937.02,9153.31,8725.6,164937.02,9199.93,8627.18,165053.07,9199.93,8627.18,165053.07,9249.8,8521.53,165161.7,9249.8,8521.53,165161.7,9298.22,8418.58,165253.89,9298.22,8418.58,165253.89,9349.06,8310.17,165338.42,9349.06,8310.17,165338.42,9405.67,8189.12,165419.51,9405.67,8189.12,165419.51,9464.39,8063.23,165490.9,9464.39,8063.23,165490.9,9526.27,7930.25,165553.69,9526.27,7930.25,165553.69,9589.53,7793.99,165606.23,9589.53,7793.99,165606.23,9656.68,7649.04,165650.47,9656.68,7649.04,165650.47,9724.53,7502.33,165684.42,9724.53,7502.33,165684.42,9787.06,7366.88,165707.05,9787.06,7366.88,165707.05,9849.71,7230.96,165722.13,9849.71,7230.96,165722.13,9974.87,6958.94,165731.92,9974.87,6958.94,165731.92,10066.57,6759.22,165723.84,10066.57,6759.22,165723.84,10157.53,6560.83,165704.51,10157.53,6560.83,165704.51,10255.72,6346.37,165672.22,10255.72,6346.37,165672.22,10443.52,5935.43,165581.28,8749.26,9395.17,162487.58,8795.12,9311.85,163120.28,8795.12,9311.85,163120.28,8836.73,9231.45,163509.9,8836.73,9231.45,163509.9,8886.53,9132.36,163865.41,8886.53,9132.36,163865.41,8932.19,9039.8,164125.37,8932.19,9039.8,164125.37,8985.79,8929.68,164375.82,8985.79,8929.68,164375.82,9015.94,8867.24,164496.82,9015.94,8867.24,164496.82,9048.47,8799.53,164614.36,9048.47,8799.53,164614.36,9088.41,8715.98,164742.94,9088.41,8715.98,164742.94,9131.64,8625.13,164865.49,9131.64,8625.13,164865.49,9176.12,8531.22,164976.22,9176.12,8531.22,164976.22,9223.6,8430.62,165079.65,9223.6,8430.62,165079.65,9269.64,8332.74,165167.32,9269.64,8332.74,165167.32,9317.95,8229.74,165247.63,9317.95,8229.74,165247.63,9371.73,8114.74,165324.67,9371.73,8114.74,165324.67,9427.56,7995.04,165392.54,9427.56,7995.04,165392.54,9486.48,7868.42,165452.33,9486.48,7868.42,165452.33,9546.85,7738.39,165502.46,9546.85,7738.39,165502.46,9611.09,7599.72,165544.79,9611.09,7599.72,165544.79,9676.19,7458.94,165577.35,9676.19,7458.94,165577.35,9736.37,7328.58,165599.12,9736.37,7328.58,165599.12,9796.84,7197.41,165613.67,9796.84,7197.41,165613.67,9918.08,6933.89,165623.15,9918.08,6933.89,165623.15,10007.28,6739.62,165615.29,10007.28,6739.62,165615.29,10096.04,6546.05,165596.43,10096.04,6546.05,165596.43,10192.11,6336.22,165564.83,10192.11,6336.22,165564.83,10376.51,5932.71,165475.53,8762.7,9513.56,162559.83,8742.65,9265.05,162536.03,8766.32,9507.26,162620.56,8746.17,9258.91,162595.18,8770.1,9500.61,162680.71,8749.85,9252.44,162653.71,8774.03,9493.61,162740.26,8753.67,9245.63,162711.62,8848.19,9353,163537.77,8825.27,9109.9,163482.03,8899.16,9251.59,163901.56,8873.9,9013.13,163829.25,8946.09,9156.44,164168.76,8918.28,8923.15,164081.97,9066.5,8907.64,164674.93,9030.44,8691.41,164553.79,9153.31,8725.6,164937.02,9109.96,8524.66,164793.95,9249.8,8521.53,165161.7,9197.41,8339.72,164997.61,9349.06,8310.17,165338.42,9286.83,8149.31,165156.84,9464.39,8063.23,165490.9,9390.73,7926.85,165294.18,9589.53,7793.99,165606.23,9504.16,7682.79,165398.69,9724.53,7502.33,165684.42,9627.86,7415.54,165470.28,9974.87,6958.94,165731.92,9861.29,6908.85,165514.38,10157.53,6560.83,165704.51,10034.54,6531.26,165488.35,10352.8,6134.07,165629.69,10221.87,6121.85,165416.54,10375.27,6084.9,165618.46,10243.54,6074.43,165405.71,10397.89,6035.38,165606.64,10265.38,6026.62,165394.29,10420.67,5985.5,165594.23,10287.39,5978.42,165382.3,8813.53,9386.48,162483.22,8859.17,9303.55,163112.95,8859.17,9303.55,163112.95,8900.53,9223.65,163500.19,8900.53,9223.65,163500.19,8949.95,9125.3,163853.06,8949.95,9125.3,163853.06,8995.2,9033.56,164110.7,8995.2,9033.56,164110.7,9048.25,8924.59,164358.55,9048.25,8924.59,164358.55,9078.05,8862.88,164478.14,9078.05,8862.88,164478.14,9110.17,8796.01,164594.22,9110.17,8796.01,164594.22,9149.57,8713.59,164721.07,9149.57,8713.59,164721.07,9192.17,8624.06,164841.84,9192.17,8624.06,164841.84,9235.98,8531.59,164950.87,9235.98,8531.59,164950.87,9282.69,8432.6,165052.65,9282.69,8432.6,165052.65,9327.98,8336.34,165138.87,9327.98,8336.34,165138.87,9375.47,8235.07,165217.83,9375.47,8235.07,165217.83,9428.35,8121.99,165293.58,9428.35,8121.99,165293.58,9483.26,8004.28,165360.33,9483.26,8004.28,165360.33,9541.23,7879.68,165419.16,9541.23,7879.68,165419.16,9600.67,7751.64,165468.52,9600.67,7751.64,165468.52,9663.99,7614.97,165510.24,9663.99,7614.97,165510.24,9728.22,7476.09,165542.36,9728.22,7476.09,165542.36,9787.64,7347.36,165563.85,9787.64,7347.36,165563.85,9847.41,7217.71,165578.23,9847.41,7217.71,165578.23,9967.4,6956.91,165587.61,9967.4,6956.91,165587.61,10055.81,6764.37,165579.83,10055.81,6764.37,165579.83,10143.86,6572.33,165561.11,10143.86,6572.33,165561.11,10239.25,6363.99,165529.74,10239.25,6363.99,165529.74,10422.57,5962.85,165440.96,8792.07,9258.38,162532.49,8841.78,9502.89,162554.16,8795.59,9252.27,162591.44,8845.39,9496.62,162614.58,8799.25,9245.82,162649.77,8849.14,9490.01,162674.41,8803.06,9239.03,162707.48,8853.05,9483.05,162733.64,8874.34,9103.9,163474.57,8926.71,9343.4,163525.82,8922.69,9007.7,163819.75,8977.22,9242.9,163886.36,8966.76,8918.36,164070.69,9023.65,9148.76,164150.72,9077.9,8688.71,164538.3,9142.44,8903.32,164650.14,9156.53,8523.84,164775.76,9227.82,8724.28,164907.92,9242.86,8341.24,164976.84,9322.53,8523.97,165128.46,9331.08,8153.41,165133.92,9419.86,8316.73,165301.75,9433.57,7933.96,165269.41,9532.94,8074.6,165451.25,9545.57,7692.99,165372.58,9655.78,7810.3,165564.46,9667.88,7428.74,165443.37,9788.56,7523.44,165641.35,9899.23,6926.55,165487.05,10035.57,6987.26,165688.18,10071.32,6551.48,165461.18,10216.39,6593.18,165661.04,10257.68,6144.2,165389.75,10410.1,6169.83,165586.82,10279.25,6096.99,165378.96,10432.41,6121,165575.66,10300.99,6049.39,165367.6,10454.87,6071.82,165563.92,10322.91,6001.4,165355.66,10477.5,6022.27,165551.59,8798.79,9514.15,162496.01,8845.2,9429.84,163136.22,8845.2,9429.84,163136.22,8887.45,9348.2,163531.79,8887.45,9348.2,163531.79,8938.19,9247.24,163893.96,8938.19,9247.24,163893.96,8984.87,9152.6,164159.74,8984.87,9152.6,164159.74,9039.88,9039.6,164416.76,9039.88,9039.6,164416.76,9070.91,8975.33,164541.29,9070.91,8975.33,164541.29,9104.47,8905.48,164662.53,9104.47,8905.48,164662.53,9145.76,8819.1,164795.47,9145.76,8819.1,164795.47,9190.56,8724.94,164922.47,9190.56,8724.94,164922.47,9236.77,8627.41,165037.47,9236.77,8627.41,165037.47,9286.16,8522.75,165145.08,9286.16,8522.75,165145.08,9334.12,8420.79,165236.39,9334.12,8420.79,165236.39,9384.46,8313.45,165320.09,9384.46,8313.45,165320.09,9440.51,8193.59,165400.38,9440.51,8193.59,165400.38,9498.66,8068.92,165471.07,9498.66,8068.92,165471.07,9559.96,7937.18,165533.28,9559.96,7937.18,165533.28,9622.65,7802.14,165585.34,9622.65,7802.14,165585.34,9689.24,7658.43,165629.21,9689.24,7658.43,165629.21,9756.54,7512.88,165662.88,9756.54,7512.88,165662.88,9818.61,7378.44,165685.35,9818.61,7378.44,165685.35,9880.84,7243.45,165700.32,9880.84,7243.45,165700.32,10005.22,6973.1,165710.05,10005.22,6973.1,165710.05,10096.43,6774.45,165702.02,10096.43,6774.45,165702.02,10186.96,6577,165682.77,10186.96,6577,165682.77,10284.73,6363.46,165650.62,10284.73,6363.46,165650.62,10471.87,5953.98,165560,8841.78,9502.89,162554.16,8762.7,9513.56,162559.83,8845.39,9496.62,162614.58,8766.32,9507.26,162620.56,8849.14,9490.01,162674.41,8770.1,9500.61,162680.71,8853.05,9483.05,162733.64,8774.03,9493.61,162740.26,8926.71,9343.4,163525.82,8848.19,9353,163537.77,8977.22,9242.9,163886.36,8899.16,9251.59,163901.56,9023.65,9148.76,164150.72,8946.09,9156.44,164168.76,9142.44,8903.32,164650.14,9066.5,8907.64,164674.93,9227.82,8724.28,164907.92,9153.31,8725.6,164937.02,9322.53,8523.97,165128.46,9249.8,8521.53,165161.7,9419.86,8316.73,165301.75,9349.06,8310.17,165338.42,9532.94,8074.6,165451.25,9464.39,8063.23,165490.9,9655.78,7810.3,165564.46,9589.53,7793.99,165606.23,9788.56,7523.44,165641.35,9724.53,7502.33,165684.42,10035.57,6987.26,165688.18,9974.87,6958.94,165731.92,10216.39,6593.18,165661.04,10157.53,6560.83,165704.51,10410.1,6169.83,165586.82,10352.8,6134.07,165629.69,10432.41,6121,165575.66,10375.27,6084.9,165618.46,10454.87,6071.82,165563.92,10397.89,6035.38,165606.64,10477.5,6022.27,165551.59,10420.67,5985.5,165594.23,6878.95,9344.31,163485.44,6902.65,9315.87,163719.75,6902.65,9315.87,163719.75,6953.33,9251.56,164116.6,6953.33,9251.56,164116.6,7019.04,9163.94,164504.88,7019.04,9163.94,164504.88,7075.6,9086.2,164769.53,7075.6,9086.2,164769.53,7142.12,8992.9,165025.21,7142.12,8992.9,165025.21,7199.56,8911.12,165210.2,7199.56,8911.12,165210.2,7263.79,8818.67,165386.64,7263.79,8818.67,165386.64,7316.42,8742.27,165511.66,7316.42,8742.27,165511.66,7373.12,8659.39,165629.95,7373.12,8659.39,165629.95,7431.25,8573.93,165736.01,7431.25,8573.93,165736.01,7493.07,8482.55,165834.26,7493.07,8482.55,165834.26,7532.63,8423.84,165890.17,7532.63,8423.84,165890.17,7573.46,8363.07,165942.75,7573.46,8363.07,165942.75,7615.5,8300.34,165991.92,7615.5,8300.34,165991.92,7658.68,8235.74,166037.55,7658.68,8235.74,166037.55,7712.78,8154.59,166088.29,7712.78,8154.59,166088.29,7768.31,8071.08,166133.65,7768.31,8071.08,166133.65,7825.09,7985.46,166173.67,7825.09,7985.46,166173.67,7882.96,7898,166208.37,7882.96,7898,166208.37,7965.63,7772.73,166248.24,7965.63,7772.73,166248.24,8049.68,7645.03,166278.28,8049.68,7645.03,166278.28,8163.74,7471.21,166304.11,8163.74,7471.21,166304.11,8278.83,7295.33,166314.85,8278.83,7295.33,166314.85,8432.05,7060.46,166308.45,8432.05,7060.46,166308.45,8585.04,6825.26,166281.54,8585.04,6825.26,166281.54,8801.66,6491.24,166213.55,8801.66,6491.24,166213.55,9076.89,6065.42,166084.4,9076.89,6065.42,166084.4,9139.03,5969.08,166049.51,9139.03,5969.08,166049.51,9317.75,6022.05,166216.77,9113.31,5940.57,166081.53,8989.3,6132.76,166149.18,8989.3,6132.76,166149.18,8774.29,6465.28,166246.38,8774.29,6465.28,166246.38,8556.27,6801.46,166314.79,8556.27,6801.46,166314.79,8402.08,7038.5,166341.92,8402.08,7038.5,166341.92,8247.45,7275.53,166348.38,8247.45,7275.53,166348.38,8131.14,7453.29,166337.51,8131.14,7453.29,166337.51,8015.7,7629.2,166311.37,8015.7,7629.2,166311.37,7930.53,7758.61,166280.93,7930.53,7758.61,166280.93,7846.68,7885.67,166240.48,7846.68,7885.67,166240.48,7787.93,7974.46,166205.25,7787.93,7974.46,166205.25,7730.25,8061.43,166164.6,7730.25,8061.43,166164.6,7673.82,8146.3,166118.5,7673.82,8146.3,166118.5,7618.82,8228.8,166066.92,7618.82,8228.8,166066.92,7574.92,8294.48,166020.52,7574.92,8294.48,166020.52,7532.17,8358.26,165970.54,7532.17,8358.26,165970.54,7490.66,8420.05,165917.07,7490.66,8420.05,165917.07,7450.45,8479.72,165860.25,7450.45,8479.72,165860.25,7387.64,8572.57,165760.41,7387.64,8572.57,165760.41,7328.62,8659.35,165652.73,7328.62,8659.35,165652.73,7271.09,8743.42,165532.75,7271.09,8743.42,165532.75,7217.77,8820.84,165406.06,7217.77,8820.84,165406.06,7152.76,8914.41,165227.49,7152.76,8914.41,165227.49,7094.7,8997.06,165040.52,7094.7,8997.06,165040.52,7027.56,9091.23,164782.47,7027.56,9091.23,164782.47,6970.56,9169.58,164515.75,6970.56,9169.58,164515.75,6904.42,9257.77,164124.96,6904.42,9257.77,164124.96,6841.18,9337.35,163609.6,6841.18,9337.35,163609.6,6829.68,9350.97,163490.71,6829.68,9350.97,163490.71,6850.7,9599.3,163515.58,9276.6,5976.44,166268.02,9113.31,5940.57,166081.53,9317.75,6022.05,166216.77,9276.6,5976.44,166268.02,6929.53,9588.64,163507.14,6878.95,9344.31,163485.44,6850.7,9599.3,163515.58,6929.53,9588.64,163507.14,6929.53,9588.64,163507.14,6953.81,9559.51,163747.1,6953.81,9559.51,163747.1,7005.9,9493.4,164155.11,7005.9,9493.4,164155.11,7073.94,9402.68,164557.05,7073.94,9402.68,164557.05,7132.91,9321.62,164832.99,7132.91,9321.62,164832.99,7202.79,9223.6,165101.53,7202.79,9223.6,165101.53,7263.59,9137.06,165297.28,7263.59,9137.06,165297.28,7332.05,9038.52,165485.31,7332.05,9038.52,165485.31,7388.49,8956.57,165619.4,7388.49,8956.57,165619.4,7449.64,8867.2,165746.93,7449.64,8867.2,165746.93,7512.61,8774.61,165861.82,7512.61,8774.61,165861.82,7579.83,8675.25,165968.65,7579.83,8675.25,165968.65,7622.94,8611.27,166029.57,7622.94,8611.27,166029.57,7667.49,8544.98,166086.93,7667.49,8544.98,166086.93,7713.37,8476.52,166140.59,7713.37,8476.52,166140.59,7760.48,8406.03,166190.38,7760.48,8406.03,166190.38,7819.46,8317.57,166245.7,7819.46,8317.57,166245.7,7879.89,8226.67,166295.06,7879.89,8226.67,166295.06,7941.56,8133.69,166338.53,7941.56,8133.69,166338.53,8004.21,8039,166376.12,8004.21,8039,166376.12,8093.34,7903.94,166419.11,8093.34,7903.94,166419.11,8183.48,7766.99,166451.34,8183.48,7766.99,166451.34,8305.02,7581.78,166478.88,8305.02,7581.78,166478.88,8426.78,7395.68,166490.26,8426.78,7395.68,166490.26,8587.69,7149.03,166483.57,8587.69,7149.03,166483.57,8747.19,6903.83,166455.5,8747.19,6903.83,166455.5,8971.42,6558.09,166385.16,8971.42,6558.09,166385.16,9254.16,6120.64,166252.48,9254.16,6120.64,166252.48,9317.75,6022.05,166216.77,6850.7,9599.3,163515.58,6875.14,9569.97,163757.19,6875.14,9569.97,163757.19,6927.65,9503.33,164168.49,6927.65,9503.33,164168.49,6996.37,9411.69,164574.45,6996.37,9411.69,164574.45,7056.05,9329.66,164853.7,7056.05,9329.66,164853.7,7126.92,9230.25,165126.02,7126.92,9230.25,165126.02,7188.7,9142.31,165324.95,7188.7,9142.31,165324.95,7258.41,9041.98,165516.38,7258.41,9041.98,165516.38,7315.98,8958.4,165653.13,7315.98,8958.4,165653.13,7378.43,8867.13,165783.39,7378.43,8867.13,165783.39,7442.83,8772.44,165900.87,7442.83,8772.44,165900.87,7511.64,8670.72,166010.23,7511.64,8670.72,166010.23,7555.79,8605.2,166072.62,7555.79,8605.2,166072.62,7601.43,8537.28,166131.38,7601.43,8537.28,166131.38,7648.43,8467.13,166186.36,7648.43,8467.13,166186.36,7696.71,8394.92,166237.38,7696.71,8394.92,166237.38,7757.12,8304.3,166294.04,7757.12,8304.3,166294.04,7819,8211.23,166344.59,7819,8211.23,166344.59,7882.09,8116.09,166389.06,7882.09,8116.09,166389.06,7946.16,8019.27,166427.5,7946.16,8019.27,166427.5,8037.19,7881.34,166471.42,8037.19,7881.34,166471.42,8129.11,7741.66,166504.28,8129.11,7741.66,166504.28,8252.85,7553.11,166532.33,8252.85,7553.11,166532.33,8376.58,7364,166543.9,8376.58,7364,166543.9,8539.75,7113.89,166537.11,8539.75,7113.89,166537.11,8701.17,6865.74,166508.71,8701.17,6865.74,166508.71,8927.63,6516.55,166437.67,8927.63,6516.55,166437.67,9212.58,6075.68,166303.97,9212.58,6075.68,166303.97,9276.6,5976.44,166268.02,6840.19,9475.13,163503.14,6864.31,9446.19,163741.63,6864.31,9446.19,163741.63,6916.04,9380.55,164146.72,6916.04,9380.55,164146.72,6983.47,9290.63,164545.1,6983.47,9290.63,164545.1,7041.81,9210.44,164818.09,7041.81,9210.44,164818.09,7110.81,9113.66,165083.27,7110.81,9113.66,165083.27,7170.73,9028.36,165276.22,7170.73,9028.36,165276.22,7238.09,8931.41,165461.22,7238.09,8931.41,165461.22,7293.54,8850.91,165592.94,7293.54,8850.91,165592.94,7353.52,8763.24,165718.06,7353.52,8763.24,165718.06,7415.23,8672.5,165830.64,7415.23,8672.5,165830.64,7481.04,8575.22,165935.24,7481.04,8575.22,165935.24,7523.23,8512.62,165994.84,7523.23,8512.62,165994.84,7566.8,8447.77,166050.96,7566.8,8447.77,166050.96,7611.68,8380.81,166103.44,7611.68,8380.81,166103.44,7657.76,8311.86,166152.15,7657.76,8311.86,166152.15,7715.47,8225.3,166206.27,7715.47,8225.3,166206.27,7774.62,8136.33,166254.59,7774.62,8136.33,166254.59,7835.01,8045.28,166297.15,7835.01,8045.28,166297.15,7896.42,7952.47,166333.99,7896.42,7952.47,166333.99,7983.86,7819.97,166376.17,7983.86,7819.97,166376.17,8072.41,7685.43,166407.83,8072.41,7685.43,166407.83,8191.99,7503.2,166434.92,8191.99,7503.2,166434.92,8312.02,7319.76,166446.14,8312.02,7319.76,166446.14,8470.92,7076.19,166439.52,8470.92,7076.19,166439.52,8628.72,6833.6,166411.75,8628.72,6833.6,166411.75,8850.96,6490.92,166342.02,8850.96,6490.92,166342.02,9131.74,6056.5,166210.27,9131.74,6056.5,166210.27,9194.96,5958.5,166174.77,6856.48,9592.49,163576.78,6835.32,9344.33,163550.39,6862.49,9585.32,163637.55,6841.18,9337.35,163609.6,6868.71,9577.81,163697.69,6847.23,9330.04,163668.16,6875.14,9569.97,163757.19,6853.48,9322.41,163726.06,6996.37,9411.69,164574.45,6970.56,9169.58,164515.75,7126.92,9230.25,165126.02,7094.7,8997.06,165040.52,7258.41,9041.98,165516.38,7217.77,8820.84,165406.06,7378.43,8867.13,165783.39,7328.62,8659.35,165652.73,7511.64,8670.72,166010.23,7450.45,8479.72,165860.25,7696.71,8394.92,166237.38,7618.82,8228.8,166066.92,7946.16,8019.27,166427.5,7846.68,7885.67,166240.48,8129.11,7741.66,166504.28,8015.7,7629.2,166311.37,8376.58,7364,166543.9,8247.45,7275.53,166348.38,8701.17,6865.74,166508.71,8556.27,6801.46,166314.79,9149.29,6173.72,166337.46,8989.3,6132.76,166149.18,9180.83,6124.88,166321.03,9019.99,6085.22,166133.19,9212.58,6075.68,166303.97,9050.9,6037.32,166116.58,9244.54,6026.15,166286.27,9082.05,5989.05,166099.34,6904.24,9466.47,163496.29,6928.23,9437.69,163733.43,6928.23,9437.69,163733.43,6979.61,9372.48,164135.85,6979.61,9372.48,164135.85,7046.49,9283.31,164530.97,7046.49,9283.31,164530.97,7104.25,9203.91,164801.26,7104.25,9203.91,164801.26,7172.45,9108.25,165063.37,7172.45,9108.25,165063.37,7231.57,9024.09,165253.74,7231.57,9024.09,165253.74,7297.92,8928.6,165435.97,7297.92,8928.6,165435.97,7352.45,8849.42,165565.53,7352.45,8849.42,165565.53,7411.38,8763.3,165688.44,7411.38,8763.3,165688.44,7471.93,8674.27,165798.91,7471.93,8674.27,165798.91,7536.45,8578.9,165901.46,7536.45,8578.9,165901.46,7577.79,8517.56,165959.87,7577.79,8517.56,165959.87,7620.47,8454.03,166014.84,7620.47,8454.03,166014.84,7664.43,8388.43,166066.25,7664.43,8388.43,166066.25,7709.58,8320.89,166113.96,7709.58,8320.89,166113.96,7766.12,8236.08,166166.99,7766.12,8236.08,166166.99,7824.1,8148.87,166214.36,7824.1,8148.87,166214.36,7883.32,8059.58,166256.1,7883.32,8059.58,166256.1,7943.59,7968.5,166292.24,7943.59,7968.5,166292.24,8029.48,7838.34,166333.68,8029.48,7838.34,166333.68,8116.58,7706.01,166364.81,8116.58,7706.01,166364.81,8234.38,7526.49,166391.49,8234.38,7526.49,166391.49,8352.81,7345.5,166402.56,8352.81,7345.5,166402.56,8509.87,7104.75,166396.01,8509.87,7104.75,166396.01,8666.12,6864.55,166368.52,8666.12,6864.55,166368.52,8886.54,6524.66,166299.35,8886.54,6524.66,166299.35,9165.53,6093.03,166168.44,9165.53,6093.03,166168.44,9228.39,5995.57,166133.14,6884.57,9337.7,163544.86,6935.28,9581.87,163567.94,6890.4,9330.74,163603.82,6941.25,9574.75,163628.3,6896.43,9323.47,163662.12,6947.43,9567.3,163688.02,6902.65,9315.87,163719.75,6953.81,9559.51,163747.1,7019.04,9163.94,164504.88,7073.94,9402.68,164557.05,7142.12,8992.9,165025.21,7202.79,9223.6,165101.53,7263.79,8818.67,165386.64,7332.05,9038.52,165485.31,7373.12,8659.39,165629.95,7449.64,8867.2,165746.93,7493.07,8482.55,165834.26,7579.83,8675.25,165968.65,7658.68,8235.74,166037.55,7760.48,8406.03,166190.38,7882.96,7898,166208.37,8004.21,8039,166376.12,8049.68,7645.03,166278.28,8183.48,7766.99,166451.34,8278.83,7295.33,166314.85,8426.78,7395.68,166490.26,8585.04,6825.26,166281.54,8747.19,6903.83,166455.5,9015.56,6160.42,166116.86,9191.32,6217.99,166285.74,9046.11,6113.1,166100.94,9222.63,6169.49,166269.43,9076.89,6065.42,166084.4,9254.16,6120.64,166252.48,9107.9,6017.35,166067.24,9285.9,6071.44,166234.91,6890.12,9593.97,163511.36,6914.47,9564.74,163752.15,6914.47,9564.74,163752.15,6966.78,9498.37,164161.8,6966.78,9498.37,164161.8,7035.16,9407.19,164565.75,7035.16,9407.19,164565.75,7094.48,9325.64,164843.34,7094.48,9325.64,164843.34,7164.86,9226.93,165113.77,7164.86,9226.93,165113.77,7226.15,9139.68,165311.12,7226.15,9139.68,165311.12,7295.23,9040.25,165500.84,7295.23,9040.25,165500.84,7352.23,8957.48,165636.27,7352.23,8957.48,165636.27,7414.03,8867.16,165765.16,7414.03,8867.16,165765.16,7477.72,8773.52,165881.35,7477.72,8773.52,165881.35,7545.74,8672.99,165989.44,7545.74,8672.99,165989.44,7589.37,8608.23,166051.09,7589.37,8608.23,166051.09,7634.46,8541.13,166109.16,7634.46,8541.13,166109.16,7680.9,8471.82,166163.48,7680.9,8471.82,166163.48,7728.59,8400.47,166213.88,7728.59,8400.47,166213.88,7788.29,8310.93,166269.87,7788.29,8310.93,166269.87,7849.44,8218.95,166319.82,7849.44,8218.95,166319.82,7911.83,8124.89,166363.79,7911.83,8124.89,166363.79,7975.19,8029.13,166401.81,7975.19,8029.13,166401.81,8065.26,7892.64,166445.27,8065.26,7892.64,166445.27,8156.29,7754.33,166477.81,8156.29,7754.33,166477.81,8278.93,7567.44,166505.6,8278.93,7567.44,166505.6,8401.68,7379.84,166517.08,8401.68,7379.84,166517.08,8563.72,7131.46,166510.34,8563.72,7131.46,166510.34,8724.18,6884.79,166482.11,8724.18,6884.79,166482.11,8949.52,6537.32,166411.41,8949.52,6537.32,166411.41,9233.37,6098.16,166278.22,9233.37,6098.16,166278.22,9297.18,5999.24,166242.39,6935.28,9581.87,163567.94,6856.48,9592.49,163576.78,6941.25,9574.75,163628.3,6862.49,9585.32,163637.55,6947.43,9567.3,163688.02,6868.71,9577.81,163697.69,6953.81,9559.51,163747.1,6875.14,9569.97,163757.19,7073.94,9402.68,164557.05,6996.37,9411.69,164574.45,7202.79,9223.6,165101.53,7126.92,9230.25,165126.02,7332.05,9038.52,165485.31,7258.41,9041.98,165516.38,7449.64,8867.2,165746.93,7378.43,8867.13,165783.39,7579.83,8675.25,165968.65,7511.64,8670.72,166010.23,7760.48,8406.03,166190.38,7696.71,8394.92,166237.38,8004.21,8039,166376.12,7946.16,8019.27,166427.5,8183.48,7766.99,166451.34,8129.11,7741.66,166504.28,8426.78,7395.68,166490.26,8376.58,7364,166543.9,8747.19,6903.83,166455.5,8701.17,6865.74,166508.71,9191.32,6217.99,166285.74,9149.29,6173.72,166337.46,9222.63,6169.49,166269.43,9180.83,6124.88,166321.03,9254.16,6120.64,166252.48,9212.58,6075.68,166303.97,9285.9,6071.44,166234.91,9244.54,6026.15,166286.27,5039.85,9400.44,164460.12,5112.58,9329.14,164933.35,5112.58,9329.14,164933.35,5183.44,9256.03,165281.03,5183.44,9256.03,165281.03,5255.61,9179.3,165565.25,5255.61,9179.3,165565.25,5335.89,9092.12,165824.36,5335.89,9092.12,165824.36,5407.22,9013.46,166017.26,5407.22,9013.46,166017.26,5487.09,8924.34,166200.97,5487.09,8924.34,166200.97,5552.61,8850.56,166330.98,5552.61,8850.56,166330.98,5623.27,8770.43,166453.72,5623.27,8770.43,166453.72,5695.82,8687.64,166563.59,5695.82,8687.64,166563.59,5772.99,8599.08,166665,5772.99,8599.08,166665,5832.58,8530.38,166733.71,5832.58,8530.38,166733.71,5894.43,8458.83,166797.21,5894.43,8458.83,166797.21,5958.37,8384.62,166855.35,5958.37,8384.62,166855.35,6024.24,8307.93,166907.95,6024.24,8307.93,166907.95,6116.36,8200.32,166970.27,6116.36,8200.32,166970.27,6211.17,8089.17,167022.24,6211.17,8089.17,167022.24,6312.25,7970.28,167065.64,6312.25,7970.28,167065.64,6415.13,7848.92,167098.52,6415.13,7848.92,167098.52,6554.59,7683.89,167127.04,6554.59,7683.89,167127.04,6695.36,7516.77,167139.38,6695.36,7516.77,167139.38,6882.7,7293.66,167133.61,6882.7,7293.66,167133.61,7069.75,7070.18,167105.84,7069.75,7070.18,167105.84,7215.39,6895.75,167070.97,7215.39,6895.75,167070.97,7360.07,6722.12,167026.02,7360.07,6722.12,167026.02,7593.81,6441.02,166934.02,7593.81,6441.02,166934.02,7981.99,5972.7,166735.37,7981.99,5972.7,166735.37,8168.98,6059.47,166877.6,7965.23,5941.83,166770.96,7575.3,6412.27,166970.5,7575.3,6412.27,166970.5,7340.22,6694.99,167063.03,7340.22,6694.99,167063.03,7194.56,6869.78,167108.27,7194.56,6869.78,167108.27,7047.82,7045.53,167143.42,7047.82,7045.53,167143.42,6859.13,7270.97,167171.42,6859.13,7270.97,167171.42,6669.85,7496.39,167177.25,6669.85,7496.39,167177.25,6527.39,7665.52,167164.76,6527.39,7665.52,167164.76,6386.04,7832.78,167135.85,6386.04,7832.78,167135.85,6281.64,7955.95,167102.48,6281.64,7955.95,167102.48,6178.93,8076.74,167058.39,6178.93,8076.74,167058.39,6082.51,8189.79,167005.52,6082.51,8189.79,167005.52,5988.75,8299.31,166942.1,5988.75,8299.31,166942.1,5921.69,8377.39,166888.54,5921.69,8377.39,166888.54,5856.57,8452.96,166829.33,5856.57,8452.96,166829.33,5793.59,8525.83,166764.66,5793.59,8525.83,166764.66,5732.92,8595.77,166694.71,5732.92,8595.77,166694.71,5654.38,8685.9,166591.51,5654.38,8685.9,166591.51,5580.61,8770.08,166479.79,5580.61,8770.08,166479.79,5508.83,8851.48,166355.1,5508.83,8851.48,166355.1,5442.33,8926.36,166223.18,5442.33,8926.36,166223.18,5361.4,9016.66,166037.02,5361.4,9016.66,166037.02,5289.23,9096.26,165841.85,5289.23,9096.26,165841.85,5208.13,9184.32,165580.1,5208.13,9184.32,165580.1,5135.33,9261.71,165293.42,5135.33,9261.71,165293.42,5063.96,9335.36,164943.24,5063.96,9335.36,164943.24,4990.81,9407.07,164467.29,4990.81,9407.07,164467.29,5013.05,9655.02,164494.68,8142.16,6010.08,166934.54,7965.23,5941.83,166770.96,8168.98,6059.47,166877.6,8142.16,6010.08,166934.54,5091.5,9644.41,164483.21,5039.85,9400.44,164460.12,5013.05,9655.02,164494.68,5091.5,9644.41,164483.21,5091.5,9644.41,164483.21,5165.99,9571.39,164967.84,5165.99,9571.39,164967.84,5239,9496.05,165326.02,5239,9496.05,165326.02,5313.8,9416.54,165620.52,5313.8,9416.54,165620.52,5397.52,9325.63,165890.72,5397.52,9325.63,165890.72,5472.38,9243.07,166093.16,5472.38,9243.07,166093.16,5556.71,9148.97,166287.12,5556.71,9148.97,166287.12,5626.29,9070.62,166425.14,5626.29,9070.62,166425.14,5701.65,8985.16,166556.04,5701.65,8985.16,166556.04,5779.33,8896.52,166673.68,5779.33,8896.52,166673.68,5862.22,8801.39,166782.59,5862.22,8801.39,166782.59,5926.35,8727.46,166856.51,5926.35,8727.46,166856.51,5992.96,8650.4,166924.89,5992.96,8650.4,166924.89,6061.82,8570.48,166987.52,6061.82,8570.48,166987.52,6132.71,8487.95,167044.14,6132.71,8487.95,167044.14,6231.68,8372.33,167111.11,6231.68,8372.33,167111.11,6333.26,8253.25,167166.8,6333.26,8253.25,167166.8,6441.14,8126.37,167213.12,6441.14,8126.37,167213.12,6550.44,7997.43,167248.06,6550.44,7997.43,167248.06,6697.8,7823.04,167278.22,6697.8,7823.04,167278.22,6845.66,7647.52,167291.19,6845.66,7647.52,167291.19,7041.13,7414.71,167285.19,7041.13,7414.71,167285.19,7235.06,7183.02,167256.4,7235.06,7183.02,167256.4,7385.33,7003.04,167220.42,7385.33,7003.04,167220.42,7534.08,6824.54,167174.21,7534.08,6824.54,167174.21,7773.45,6536.66,167080,7773.45,6536.66,167080,8168.98,6059.47,166877.6,5013.05,9655.02,164494.68,5088.2,9581.34,164983.66,5088.2,9581.34,164983.66,5162.04,9505.16,165345.85,5162.04,9505.16,165345.85,5237.83,9424.58,165644.28,5237.83,9424.58,165644.28,5322.86,9332.24,165918.7,5322.86,9332.24,165918.7,5399.07,9248.2,166124.78,5399.07,9248.2,166124.78,5485.11,9152.19,166322.66,5485.11,9152.19,166322.66,5556.23,9072.11,166463.74,5556.23,9072.11,166463.74,5633.38,8984.61,166597.75,5633.38,8984.61,166597.75,5713.03,8893.73,166718.35,5713.03,8893.73,166718.35,5798.1,8796.1,166830.13,5798.1,8796.1,166830.13,5863.96,8720.18,166906.03,5863.96,8720.18,166906.03,5932.38,8641.01,166976.28,5932.38,8641.01,166976.28,6003.12,8558.91,167040.61,6003.12,8558.91,167040.61,6075.93,8474.15,167098.78,6075.93,8474.15,167098.78,6177.52,8355.47,167167.52,6177.52,8355.47,167167.52,6281.68,8233.36,167224.63,6281.68,8233.36,167224.63,6392.15,8103.44,167272.06,6392.15,8103.44,167272.06,6503.9,7971.6,167307.79,6503.9,7971.6,167307.79,6654.28,7793.65,167338.57,6654.28,7793.65,167338.57,6804.84,7614.91,167351.78,6804.84,7614.91,167351.78,7003.43,7378.4,167345.69,7003.43,7378.4,167345.69,7199.97,7143.58,167316.52,7199.97,7143.58,167316.52,7352.01,6961.49,167280.11,7352.01,6961.49,167280.11,7502.31,6781.13,167233.42,7502.31,6781.13,167233.42,7743.83,6490.66,167138.37,7743.83,6490.66,167138.37,8142.16,6010.08,166934.54,5001.93,9531.04,164480.99,5076.08,9458.35,164963.45,5076.08,9458.35,164963.45,5148.68,9383.44,165319.64,5148.68,9383.44,165319.64,5222.98,9304.45,165612.19,5222.98,9304.45,165612.19,5306.05,9214.25,165880.28,5306.05,9214.25,165880.28,5380.24,9132.43,166080.9,5380.24,9132.43,166080.9,5463.72,9039.27,166272.92,5463.72,9039.27,166272.92,5532.53,8961.79,166409.42,5532.53,8961.79,166409.42,5607,8877.35,166538.77,5607,8877.35,166538.77,5683.7,8789.82,166654.93,5683.7,8789.82,166654.93,5765.51,8695.94,166762.42,5765.51,8695.94,166762.42,5828.77,8623,166835.35,5828.77,8623,166835.35,5894.48,8546.99,166902.8,5894.48,8546.99,166902.8,5962.4,8468.15,166964.57,5962.4,8468.15,166964.57,6032.34,8386.73,167020.44,6032.34,8386.73,167020.44,6130.01,8272.63,167086.52,6130.01,8272.63,167086.52,6230.31,8155.05,167141.51,6230.31,8155.05,167141.51,6336.89,8029.69,167187.27,6336.89,8029.69,167187.27,6444.97,7902.19,167221.82,6444.97,7902.19,167221.82,6590.84,7729.58,167251.66,6590.84,7729.58,167251.66,6737.35,7555.65,167264.52,6737.35,7555.65,167264.52,6931.28,7324.69,167258.56,6931.28,7324.69,167258.56,7123.9,7094.56,167229.97,7123.9,7094.56,167229.97,7273.28,6915.63,167194.19,7273.28,6915.63,167194.19,7421.26,6738.06,167148.22,7421.26,6738.06,167148.22,7659.56,6451.47,167054.44,7659.56,6451.47,167054.44,8053.7,5975.96,166852.75,5017.07,9651.22,164525.42,4994.74,9403.35,164497.3,5021.17,9647.33,164556.02,4998.74,9399.56,164527.17,5029.55,9639.31,164616.68,5006.92,9391.73,164586.38,5162.04,9505.16,165345.85,5135.33,9261.71,165293.42,5237.83,9424.58,165644.28,5208.13,9184.32,165580.1,5322.86,9332.24,165918.7,5289.23,9096.26,165841.85,5485.11,9152.19,166322.66,5442.33,8926.36,166223.18,5633.38,8984.61,166597.75,5580.61,8770.08,166479.79,5798.1,8796.1,166830.13,5732.92,8595.77,166694.71,6075.93,8474.15,167098.78,5988.75,8299.31,166942.1,6281.68,8233.36,167224.63,6178.93,8076.74,167058.39,6503.9,7971.6,167307.79,6386.04,7832.78,167135.85,6804.84,7614.91,167351.78,6669.85,7496.39,167177.25,7199.97,7143.58,167316.52,7047.82,7045.53,167143.42,7502.31,6781.13,167233.42,7340.22,6694.99,167063.03,7980.74,6205.05,167023.6,7806.94,6133.01,166858.29,8020.74,6156.76,167002.32,7846.13,6085.7,166837.44,8061,6108.15,166980.37,7885.6,6038.04,166815.92,8101.52,6059.2,166957.75,7925.34,5990.03,166793.73,5065.68,9522.42,164471.67,5139.29,9450.27,164950.59,5139.29,9450.27,164950.59,5211.22,9376.04,165303.52,5211.22,9376.04,165303.52,5284.71,9297.92,165592.89,5284.71,9297.92,165592.89,5366.7,9208.88,165857.54,5366.7,9208.88,165857.54,5439.8,9128.26,166055.21,5439.8,9128.26,166055.21,5521.9,9036.65,166244.04,5521.9,9036.65,166244.04,5589.45,8960.59,166378.06,5589.45,8960.59,166378.06,5662.46,8877.8,166504.88,5662.46,8877.8,166504.88,5737.57,8792.08,166618.63,5737.57,8792.08,166618.63,5817.6,8700.23,166723.8,5817.6,8700.23,166723.8,5879.46,8628.92,166795.11,5879.46,8628.92,166795.11,5943.69,8554.62,166861.05,5943.69,8554.62,166861.05,6010.09,8477.55,166921.43,6010.09,8477.55,166921.43,6078.47,8397.94,166976.05,6078.47,8397.94,166976.05,6174.02,8286.32,167040.69,6174.02,8286.32,167040.69,6272.22,8171.21,167094.52,6272.22,8171.21,167094.52,6376.7,8048.33,167139.38,6376.7,8048.33,167139.38,6482.78,7923.18,167173.29,6482.78,7923.18,167173.29,6626.19,7753.47,167202.63,6626.19,7753.47,167202.63,6770.51,7582.14,167215.29,6770.51,7582.14,167215.29,6961.92,7354.18,167209.4,6961.92,7354.18,167209.4,7152.4,7126.6,167181.12,7152.4,7126.6,167181.12,7300.36,6949.39,167145.69,7300.36,6949.39,167145.69,7447.07,6773.33,167100.11,7447.07,6773.33,167100.11,7683.63,6488.84,167007.01,7683.63,6488.84,167007.01,8075.48,6016.08,166806.49,5043.76,9396.74,164489.98,5095.5,9640.64,164513.71,5047.74,9392.97,164519.7,5099.57,9636.78,164544.07,5055.88,9385.18,164578.6,5107.88,9628.83,164604.24,5183.44,9256.03,165281.03,5239,9496.05,165326.02,5255.61,9179.3,165565.25,5313.8,9416.54,165620.52,5335.89,9092.12,165824.36,5397.52,9325.63,165890.72,5487.09,8924.34,166200.97,5556.71,9148.97,166287.12,5623.27,8770.43,166453.72,5701.65,8985.16,166556.04,5772.99,8599.08,166665,5862.22,8801.39,166782.59,6024.24,8307.93,166907.95,6132.71,8487.95,167044.14,6211.17,8089.17,167022.24,6333.26,8253.25,167166.8,6415.13,7848.92,167098.52,6550.44,7997.43,167248.06,6695.36,7516.77,167139.38,6845.66,7647.52,167291.19,7069.75,7070.18,167105.84,7235.06,7183.02,167256.4,7360.07,6722.12,167026.02,7534.08,6824.54,167174.21,7824.35,6163.09,166822.34,8008.59,6253.17,166966.09,7863.37,6115.98,166801.58,8048.33,6205.21,166944.95,7902.67,6068.52,166780.15,8088.32,6156.91,166923.14,7942.25,6020.71,166758.06,8128.58,6108.28,166900.67,5052.27,9649.71,164488.94,5127.1,9576.37,164975.75,5127.1,9576.37,164975.75,5200.52,9500.61,165335.93,5200.52,9500.61,165335.93,5275.81,9420.56,165632.4,5275.81,9420.56,165632.4,5360.19,9328.94,165904.71,5360.19,9328.94,165904.71,5435.73,9245.63,166108.97,5435.73,9245.63,166108.97,5520.91,9150.58,166304.89,5520.91,9150.58,166304.89,5591.26,9071.36,166444.44,5591.26,9071.36,166444.44,5667.52,8984.89,166576.9,5667.52,8984.89,166576.9,5746.18,8895.12,166696.01,5746.18,8895.12,166696.01,5830.16,8798.75,166806.36,5830.16,8798.75,166806.36,5895.15,8723.82,166881.27,5895.15,8723.82,166881.27,5962.67,8645.71,166950.59,5962.67,8645.71,166950.59,6032.47,8564.69,167014.06,6032.47,8564.69,167014.06,6104.32,8481.05,167071.46,6104.32,8481.05,167071.46,6204.6,8363.9,167139.31,6204.6,8363.9,167139.31,6307.47,8243.3,167195.72,6307.47,8243.3,167195.72,6416.64,8114.9,167242.59,6416.64,8114.9,167242.59,6527.17,7984.52,167277.93,6527.17,7984.52,167277.93,6676.04,7808.35,167308.39,6676.04,7808.35,167308.39,6825.25,7631.21,167321.49,6825.25,7631.21,167321.49,7022.28,7396.56,167315.44,7022.28,7396.56,167315.44,7217.52,7163.3,167286.46,7217.52,7163.3,167286.46,7368.67,6982.27,167250.26,7368.67,6982.27,167250.26,7518.19,6802.84,167203.81,7518.19,6802.84,167203.81,7758.64,6513.66,167109.19,7758.64,6513.66,167109.19,8155.57,6034.78,166906.07,5095.5,9640.64,164513.71,5017.07,9651.22,164525.42,5099.57,9636.78,164544.07,5021.17,9647.33,164556.02,5107.88,9628.83,164604.24,5029.55,9639.31,164616.68,5239,9496.05,165326.02,5162.04,9505.16,165345.85,5313.8,9416.54,165620.52,5237.83,9424.58,165644.28,5397.52,9325.63,165890.72,5322.86,9332.24,165918.7,5556.71,9148.97,166287.12,5485.11,9152.19,166322.66,5701.65,8985.16,166556.04,5633.38,8984.61,166597.75,5862.22,8801.39,166782.59,5798.1,8796.1,166830.13,6132.71,8487.95,167044.14,6075.93,8474.15,167098.78,6333.26,8253.25,167166.8,6281.68,8233.36,167224.63,6550.44,7997.43,167248.06,6503.9,7971.6,167307.79,6845.66,7647.52,167291.19,6804.84,7614.91,167351.78,7235.06,7183.02,167256.4,7199.97,7143.58,167316.52,7534.08,6824.54,167174.21,7502.31,6781.13,167233.42,8008.59,6253.17,166966.09,7980.74,6205.05,167023.6,8048.33,6205.21,166944.95,8020.74,6156.76,167002.32,8088.32,6156.91,166923.14,8061,6108.15,166980.37,8128.58,6108.28,166900.67,8101.52,6059.2,166957.75,3268.88,9433.91,165399.04,3284.21,9421.33,165488.11,3284.21,9421.33,165488.11,3376.72,9342.99,165935.56,3376.72,9342.99,165935.56,3435.2,9291.93,166161.69,3435.2,9291.93,166161.69,3501.95,9232.66,166382.77,3501.95,9232.66,166382.77,3597.53,9146.4,166648.02,3597.53,9146.4,166648.02,3661.02,9088.4,166798.25,3661.02,9088.4,166798.25,3730.2,9024.69,166942.98,3730.2,9024.69,166942.98,3805.79,8954.56,167082.09,3805.79,8954.56,167082.09,3887.53,8878.22,167213.63,3887.53,8878.22,167213.63,3971.55,8799.27,167331.39,3971.55,8799.27,167331.39,4061.14,8714.65,167440.31,4061.14,8714.65,167440.31,4118.66,8660.1,167502.25,4118.66,8660.1,167502.25,4178.12,8603.56,167560.36,4178.12,8603.56,167560.36,4283.09,8503.37,167649.79,4283.09,8503.37,167649.79,4392.72,8398.31,167727.4,4392.72,8398.31,167727.4,4501.83,8293.37,167790.58,4501.83,8293.37,167790.58,4614,8185.14,167842.72,4614,8185.14,167842.72,4733.66,8069.34,167885.63,4733.66,8069.34,167885.63,4855.29,7951.31,167917.35,4855.29,7951.31,167917.35,5020.17,7790.86,167943.4,5020.17,7790.86,167943.4,5186.37,7628.66,167952.34,5186.37,7628.66,167952.34,5407.41,7412.3,167940.87,5407.41,7412.3,167940.87,5627.82,7195.94,167906.33,5627.82,7195.94,167906.33,5969.58,6859.41,167814.23,5969.58,6859.41,167814.23,6312.96,6520.21,167681.79,6312.96,6520.21,167681.79,6819.13,6018.58,167426.52,6819.13,6018.58,167426.52,6866.92,5971.14,167399.19,6866.92,5971.14,167399.19,7052.54,6087.56,167520.48,6857.73,5939.85,167437.09,6667.4,6128.74,167542.82,6667.4,6128.74,167542.82,6301.42,6491.26,167720.89,6301.42,6491.26,167720.89,5956.1,6832.37,167854.07,5956.1,6832.37,167854.07,5611.88,7171.32,167946.82,5611.88,7171.32,167946.82,5389.52,7389.6,167981.67,5389.52,7389.6,167981.67,5166.17,7608.22,167993.26,5166.17,7608.22,167993.26,4997.95,7772.4,167984.21,4997.95,7772.4,167984.21,4830.81,7935.05,167957.79,4830.81,7935.05,167957.79,4707.33,8054.87,167925.6,4707.33,8054.87,167925.6,4585.71,8172.56,167881.98,4585.71,8172.56,167881.98,4471.59,8282.68,167828.93,4471.59,8282.68,167828.93,4360.48,8389.54,167764.6,4360.48,8389.54,167764.6,4248.79,8496.57,167685.53,4248.79,8496.57,167685.53,4141.82,8598.67,167594.39,4141.82,8598.67,167594.39,4081.24,8656.28,167535.18,4081.24,8656.28,167535.18,4022.64,8711.85,167472.09,4022.64,8711.85,167472.09,3931.43,8798.01,167361.19,3931.43,8798.01,167361.19,3845.95,8878.32,167241.4,3845.95,8878.32,167241.4,3762.88,8955.9,167107.72,3762.88,8955.9,167107.72,3686.16,9027.08,166966.53,3686.16,9027.08,166966.53,3616.02,9091.68,166819.8,3616.02,9091.68,166819.8,3551.74,9150.4,166667.69,3551.74,9150.4,166667.69,3455.1,9237.62,166399.51,3455.1,9237.62,166399.51,3387.71,9297.46,166176.31,3387.71,9297.46,166176.31,3328.74,9348.94,165948.29,3328.74,9348.94,165948.29,3230.35,9432.14,165467.98,3230.35,9432.14,165467.98,3220.15,9440.5,165408.08,3220.15,9440.5,165408.08,3243.74,9688.05,165437.85,7037.85,6037.5,167581.12,6857.73,5939.85,167437.09,7052.54,6087.56,167520.48,7037.85,6037.5,167581.12,3321.72,9677.51,165423.39,3268.88,9433.91,165399.04,3243.74,9688.05,165437.85,3321.72,9677.51,165423.39,3321.72,9677.51,165423.39,3337.36,9664.67,165514.29,3337.36,9664.67,165514.29,3432.07,9584.47,165972.31,3432.07,9584.47,165972.31,3492.19,9531.98,166204.79,3492.19,9531.98,166204.79,3561.09,9470.79,166432.97,3561.09,9470.79,166432.97,3660.23,9381.32,166708.07,3660.23,9381.32,166708.07,3726.4,9320.88,166864.63,3726.4,9320.88,166864.63,3798.78,9254.21,167016.06,3798.78,9254.21,167016.06,3878.18,9180.55,167162.17,3878.18,9180.55,167162.17,3964.38,9100.05,167300.87,3964.38,9100.05,167300.87,4053.28,9016.52,167425.46,4053.28,9016.52,167425.46,4148.33,8926.74,167541.02,4148.33,8926.74,167541.02,4209.45,8868.77,167606.84,4209.45,8868.77,167606.84,4272.69,8808.63,167668.64,4272.69,8808.63,167668.64,4384.37,8702.04,167763.79,4384.37,8702.04,167763.79,4500.93,8590.34,167846.31,4500.93,8590.34,167846.31,4616.73,8478.96,167913.37,4616.73,8478.96,167913.37,4735.47,8364.4,167968.56,4735.47,8364.4,167968.56,4861.7,8242.24,168013.84,4861.7,8242.24,168013.84,4989.53,8118.2,168047.17,4989.53,8118.2,168047.17,5162.01,7950.35,168074.44,5162.01,7950.35,168074.44,5334.99,7781.53,168083.75,5334.99,7781.53,168083.75,5563.81,7557.56,168071.91,5563.81,7557.56,168071.91,5790.77,7334.77,168036.33,5790.77,7334.77,168036.33,6140.78,6990.11,167942.03,6140.78,6990.11,167942.03,6490.68,6644.47,167807.09,6490.68,6644.47,167807.09,7004.18,6135.59,167548.15,7004.18,6135.59,167548.15,7052.54,6087.56,167520.48,3243.74,9688.05,165437.85,3259.54,9675.09,165529.62,3259.54,9675.09,165529.62,3355.29,9594,165992.69,3355.29,9594,165992.69,3416.2,9540.82,166228.19,3416.2,9540.82,166228.19,3486.12,9478.73,166459.74,3486.12,9478.73,166459.74,3586.96,9387.72,166739.54,3586.96,9387.72,166739.54,3654.41,9326.11,166899.13,3654.41,9326.11,166899.13,3728.32,9258.04,167053.74,3728.32,9258.04,167053.74,3809.53,9182.7,167203.19,3809.53,9182.7,167203.19,3897.85,9100.21,167345.29,3897.85,9100.21,167345.29,3989.08,9014.5,167473.14,3989.08,9014.5,167473.14,4086.73,8922.26,167591.86,4086.73,8922.26,167591.86,4149.57,8862.66,167659.53,4149.57,8862.66,167659.53,4214.61,8800.81,167723.1,4214.61,8800.81,167723.1,4329.49,8691.17,167820.96,4329.49,8691.17,167820.96,4449.35,8576.3,167905.82,4449.35,8576.3,167905.82,4568.34,8461.86,167974.73,4568.34,8461.86,167974.73,4690.2,8344.28,168031.37,4690.2,8344.28,168031.37,4819.57,8219.09,168077.78,4819.57,8219.09,168077.78,4950.35,8092.18,168111.89,4950.35,8092.18,168111.89,5126.45,7920.81,168139.74,5126.45,7920.81,168139.74,5302.67,7748.83,168149.22,5302.67,7748.83,168149.22,5535.19,7521.23,168137.19,5535.19,7521.23,168137.19,5765.27,7295.38,168101.13,5765.27,7295.38,168101.13,6119.22,6946.85,168005.77,6119.22,6946.85,168005.77,6472.23,6598.14,167869.64,6472.23,6598.14,167869.64,6989.21,6085.8,167608.95,6989.21,6085.8,167608.95,7037.85,6037.5,167581.12,3231.94,9564.27,165422.96,3247.55,9551.47,165513.66,3247.55,9551.47,165513.66,3342.01,9471.47,165970.49,3342.01,9471.47,165970.49,3401.95,9419.14,166202.25,3401.95,9419.14,166202.25,3470.61,9358.17,166429.63,3470.61,9358.17,166429.63,3569.35,9269.06,166703.62,3569.35,9269.06,166703.62,3635.21,9208.89,166859.47,3635.21,9208.89,166859.47,3707.24,9142.56,167010.14,3707.24,9142.56,167010.14,3786.21,9069.3,167155.46,3786.21,9069.3,167155.46,3871.9,8989.26,167293.35,3871.9,8989.26,167293.35,3960.25,8906.25,167417.17,3960.25,8906.25,167417.17,4054.68,8817.05,167531.98,4054.68,8817.05,167531.98,4115.4,8759.47,167597.36,4115.4,8759.47,167597.36,4178.21,8699.74,167658.75,4178.21,8699.74,167658.75,4289.14,8593.87,167753.25,4289.14,8593.87,167753.25,4404.92,8482.92,167835.21,4404.92,8482.92,167835.21,4519.96,8372.27,167901.83,4519.96,8372.27,167901.83,4637.96,8258.42,167956.68,4637.96,8258.42,167956.68,4763.45,8136.98,168001.69,4763.45,8136.98,168001.69,4890.58,8013.62,168034.84,4890.58,8013.62,168034.84,5062.2,7846.6,168061.97,5062.2,7846.6,168061.97,5234.42,7678.52,168071.24,5234.42,7678.52,168071.24,5462.36,7455.42,168059.43,5462.36,7455.42,168059.43,5688.58,7233.35,168023.98,5688.58,7233.35,168023.98,6037.66,6889.61,167929.92,6037.66,6889.61,167929.92,6386.82,6544.7,167795.26,6386.82,6544.7,167795.26,6899.49,6036.63,167536.73,6899.49,6036.63,167536.73,6947.79,5988.67,167509.11,3248.93,9683.81,165468.58,3225.21,9436.36,165438.1,3254.19,9679.49,165499.18,3230.35,9432.14,165467.98,3259.54,9675.09,165529.62,3235.57,9427.84,165497.69,3355.29,9594,165992.69,3328.74,9348.94,165948.29,3486.12,9478.73,166459.74,3455.1,9237.62,166399.51,3586.96,9387.72,166739.54,3551.74,9150.4,166667.69,3728.32,9258.04,167053.74,3686.16,9027.08,166966.53,3897.85,9100.21,167345.29,3845.95,8878.32,167241.4,4086.73,8922.26,167591.86,4022.64,8711.85,167472.09,4214.61,8800.81,167723.1,4141.82,8598.67,167594.39,4449.35,8576.3,167905.82,4360.48,8389.54,167764.6,4690.2,8344.28,168031.37,4585.71,8172.56,167881.98,4950.35,8092.18,168111.89,4830.81,7935.05,167957.79,5302.67,7748.83,168149.22,5166.17,7608.22,167993.26,5765.27,7295.38,168101.13,5611.88,7171.32,167946.82,6119.22,6946.85,168005.77,5956.1,6832.37,167854.07,6472.23,6598.14,167869.64,6301.42,6491.26,167720.89,6844.72,6229.16,167688.41,6667.4,6128.74,167542.82,6940.73,6133.91,167636.14,6761.99,6034.89,167491.32,6989.21,6085.8,167608.95,6809.78,5987.46,167464.52,3295.3,9555.71,165411.21,3310.78,9543,165501.2,3310.78,9543,165501.2,3404.39,9463.73,165953.94,3404.39,9463.73,165953.94,3463.7,9411.96,166183.24,3463.7,9411.96,166183.24,3531.52,9351.73,166407.87,3531.52,9351.73,166407.87,3628.88,9263.86,166678.05,3628.88,9263.86,166678.05,3693.71,9204.64,166831.44,3693.71,9204.64,166831.44,3764.49,9139.45,166979.52,3764.49,9139.45,166979.52,3841.99,9067.56,167122.13,3841.99,9067.56,167122.13,3925.96,8989.13,167257.25,3925.96,8989.13,167257.25,4012.42,8907.9,167378.43,4012.42,8907.9,167378.43,4104.73,8820.69,167490.66,4104.73,8820.69,167490.66,4164.06,8764.43,167554.54,4164.06,8764.43,167554.54,4225.4,8706.09,167614.5,4225.4,8706.09,167614.5,4333.73,8602.71,167706.79,4333.73,8602.71,167706.79,4446.83,8494.32,167786.86,4446.83,8494.32,167786.86,4559.28,8386.17,167851.97,4559.28,8386.17,167851.97,4674.73,8274.77,167905.64,4674.73,8274.77,167905.64,4797.68,8155.79,167949.74,4797.68,8155.79,167949.74,4922.41,8034.76,167982.26,4922.41,8034.76,167982.26,5091.09,7870.61,168008.92,5091.09,7870.61,168008.92,5260.68,7705.09,168018.04,5260.68,7705.09,168018.04,5485.61,7484.93,168006.39,5485.61,7484.93,168006.39,5709.29,7265.36,167971.33,5709.29,7265.36,167971.33,6055.18,6924.76,167878.13,6055.18,6924.76,167878.13,6401.82,6582.34,167744.44,6401.82,6582.34,167744.44,6911.65,6077.08,167487.33,6911.65,6077.08,167487.33,6959.73,6029.35,167459.83,3273.91,9429.8,165428.88,3326.85,9673.31,165453.83,3279.02,9425.6,165458.58,3332.07,9669.03,165484.14,3284.21,9421.33,165488.11,3337.36,9664.67,165514.29,3376.72,9342.99,165935.56,3432.07,9584.47,165972.31,3501.95,9232.66,166382.77,3561.09,9470.79,166432.97,3597.53,9146.4,166648.02,3660.23,9381.32,166708.07,3730.2,9024.69,166942.98,3798.78,9254.21,167016.06,3887.53,8878.22,167213.63,3964.38,9100.05,167300.87,4061.14,8714.65,167440.31,4148.33,8926.74,167541.02,4178.12,8603.56,167560.36,4272.69,8808.63,167668.64,4392.72,8398.31,167727.4,4500.93,8590.34,167846.31,4614,8185.14,167842.72,4735.47,8364.4,167968.56,4855.29,7951.31,167917.35,4989.53,8118.2,168047.17,5186.37,7628.66,167952.34,5334.99,7781.53,168083.75,5627.82,7195.94,167906.33,5790.77,7334.77,168036.33,5969.58,6859.41,167814.23,6140.78,6990.11,167942.03,6312.96,6520.21,167681.79,6490.68,6644.47,167807.09,6677.29,6159.33,167504.52,6860.54,6278.11,167627.14,6771.52,6065.83,167453.22,6955.98,6183.42,167575.18,6819.13,6018.58,167426.52,7004.18,6135.59,167548.15,3282.73,9682.78,165430.62,3298.45,9669.88,165521.95,3298.45,9669.88,165521.95,3393.68,9589.23,165982.5,3393.68,9589.23,165982.5,3454.2,9536.4,166216.49,3454.2,9536.4,166216.49,3523.61,9474.76,166446.35,3523.61,9474.76,166446.35,3623.6,9384.52,166723.81,3623.6,9384.52,166723.81,3690.4,9323.49,166881.88,3690.4,9323.49,166881.88,3763.55,9256.13,167034.9,3763.55,9256.13,167034.9,3843.86,9181.62,167182.68,3843.86,9181.62,167182.68,3931.11,9100.13,167323.08,3931.11,9100.13,167323.08,4021.18,9015.51,167449.3,4021.18,9015.51,167449.3,4117.53,8924.5,167566.44,4117.53,8924.5,167566.44,4179.51,8865.71,167633.18,4179.51,8865.71,167633.18,4243.65,8804.72,167695.87,4243.65,8804.72,167695.87,4356.93,8696.6,167792.38,4356.93,8696.6,167792.38,4475.14,8583.32,167876.07,4475.14,8583.32,167876.07,4592.53,8470.41,167944.05,4592.53,8470.41,167944.05,4712.83,8354.34,167999.96,4712.83,8354.34,167999.96,4840.63,8230.66,168045.81,4840.63,8230.66,168045.81,4969.94,8105.19,168079.53,4969.94,8105.19,168079.53,5144.23,7935.58,168107.09,5144.23,7935.58,168107.09,5318.83,7765.18,168116.49,5318.83,7765.18,168116.49,5549.5,7539.4,168104.55,5549.5,7539.4,168104.55,5778.02,7315.07,168068.73,5778.02,7315.07,168068.73,6130,6968.48,167973.9,6130,6968.48,167973.9,6481.45,6621.31,167838.37,6481.45,6621.31,167838.37,6996.69,6110.69,167578.55,6996.69,6110.69,167578.55,7045.2,6062.53,167550.8,3326.85,9673.31,165453.83,3248.93,9683.81,165468.58,3332.07,9669.03,165484.14,3254.19,9679.49,165499.18,3337.36,9664.67,165514.29,3259.54,9675.09,165529.62,3432.07,9584.47,165972.31,3355.29,9594,165992.69,3561.09,9470.79,166432.97,3486.12,9478.73,166459.74,3660.23,9381.32,166708.07,3586.96,9387.72,166739.54,3798.78,9254.21,167016.06,3728.32,9258.04,167053.74,3964.38,9100.05,167300.87,3897.85,9100.21,167345.29,4148.33,8926.74,167541.02,4086.73,8922.26,167591.86,4272.69,8808.63,167668.64,4214.61,8800.81,167723.1,4500.93,8590.34,167846.31,4449.35,8576.3,167905.82,4735.47,8364.4,167968.56,4690.2,8344.28,168031.37,4989.53,8118.2,168047.17,4950.35,8092.18,168111.89,5334.99,7781.53,168083.75,5302.67,7748.83,168149.22,5790.77,7334.77,168036.33,5765.27,7295.38,168101.13,6140.78,6990.11,167942.03,6119.22,6946.85,168005.77,6490.68,6644.47,167807.09,6472.23,6598.14,167869.64,6860.54,6278.11,167627.14,6844.72,6229.16,167688.41,6955.98,6183.42,167575.18,6940.73,6133.91,167636.14,7004.18,6135.59,167548.15,6989.21,6085.8,167608.95,1857.02,8842,166220.54,1944.11,8769.87,166655.69,1944.11,8769.87,166655.69,2009.09,8715.95,166909.45,2009.09,8715.95,166909.45,2098.92,8641.32,167196.65,2098.92,8641.32,167196.65,2192,8563.9,167439.13,2192,8563.9,167439.13,2243.97,8520.66,167555.88,2243.97,8520.66,167555.88,2299.77,8474.2,167669.08,2299.77,8474.2,167669.08,2376.88,8409.98,167807.8,2376.88,8409.98,167807.8,2460.7,8340.15,167938.87,2460.7,8340.15,167938.87,2546.67,8268.5,168055.3,2546.67,8268.5,168055.3,2638.72,8191.75,168162.81,2638.72,8191.75,168162.81,2697.61,8142.64,168223.44,2697.61,8142.64,168223.44,2758.61,8091.77,168280.29,2758.61,8091.77,168280.29,2821.6,8039.22,168333.23,2821.6,8039.22,168333.23,2886.49,7985.08,168382.12,2886.49,7985.08,168382.12,2994.15,7895.25,168451.81,2994.15,7895.25,168451.81,3108.2,7800.06,168511.88,3108.2,7800.06,168511.88,3225.68,7701.99,168560.89,3225.68,7701.99,168560.89,3351.95,7596.56,168600.75,3351.95,7596.56,168600.75,3480.54,7489.18,168629.36,3480.54,7489.18,168629.36,3610.72,7380.46,168647.39,3610.72,7380.46,168647.39,3741.97,7270.82,168655.65,3741.97,7270.82,168655.65,3974.34,7076.7,168648.84,3974.34,7076.7,168648.84,4206.94,6882.35,168618.2,4206.94,6882.35,168618.2,4434.73,6691.99,168568.45,4434.73,6691.99,168568.45,4660.87,6502.98,168502.09,4660.87,6502.98,168502.09,5035.63,6189.71,168360.12,5035.63,6189.71,168360.12,5564.7,5747.38,168102.51,5564.7,5747.38,168102.51,5750.19,5592.28,167998.63,5750.19,5592.28,167998.63,5889.45,5616.06,168205.43,5726.28,5551.84,168015.75,5540.5,5707.19,168119.8,5540.5,5707.19,168119.8,5010.39,6150.39,168377.91,5010.39,6150.39,168377.91,4634.65,6464.48,168520.26,4634.65,6464.48,168520.26,4407.8,6654.08,168586.82,4407.8,6654.08,168586.82,4179.17,6845.14,168636.76,4179.17,6845.14,168636.76,3945.55,7040.34,168667.53,3945.55,7040.34,168667.53,3711.96,7235.49,168674.37,3711.96,7235.49,168674.37,3579.92,7345.78,168666.07,3579.92,7345.78,168666.07,3448.88,7455.22,168647.92,3448.88,7455.22,168647.92,3319.36,7563.38,168619.1,3319.36,7563.38,168619.1,3192.09,7669.64,168578.92,3192.09,7669.64,168578.92,3073.61,7768.54,168529.5,3073.61,7768.54,168529.5,2958.55,7864.57,168468.9,2958.55,7864.57,168468.9,2849.9,7955.23,168398.57,2849.9,7955.23,168398.57,2784.42,8009.87,168349.23,2784.42,8009.87,168349.23,2720.84,8062.91,168295.8,2720.84,8062.91,168295.8,2659.28,8114.25,168238.42,2659.28,8114.25,168238.42,2599.85,8163.81,168177.24,2599.85,8163.81,168177.24,2506.98,8241.23,168068.78,2506.98,8241.23,168068.78,2420.3,8313.48,167951.38,2420.3,8313.48,167951.38,2335.83,8383.86,167819.3,2335.83,8383.86,167819.3,2258.17,8448.53,167679.6,2258.17,8448.53,167679.6,2202,8495.29,167565.66,2202,8495.29,167565.66,2149.72,8538.8,167448.2,2149.72,8538.8,167448.2,2056.13,8616.64,167204.42,2056.13,8616.64,167204.42,1965.9,8691.61,166915.91,1965.9,8691.61,166915.91,1900.66,8745.74,166661.17,1900.66,8745.74,166661.17,1813.3,8818.1,166224.63,1813.3,8818.1,166224.63,1686.3,9027.83,166275.74,5851.19,5551.36,168232.83,5726.28,5551.84,168015.75,5889.45,5616.06,168205.43,5851.19,5551.36,168232.83,1756.26,9066.07,166269.19,1857.02,8842,166220.54,1686.3,9027.83,166275.74,1756.26,9066.07,166269.19,1756.26,9066.07,166269.19,1846.73,8991.14,166721.18,1846.73,8991.14,166721.18,1914.76,8934.68,166986.81,1914.76,8934.68,166986.81,2009.55,8855.93,167289.85,2009.55,8855.93,167289.85,2108.72,8773.45,167548.16,2108.72,8773.45,167548.16,2164.5,8727.03,167673.48,2164.5,8727.03,167673.48,2224.73,8676.89,167795.63,2224.73,8676.89,167795.63,2308.49,8607.13,167946.28,2308.49,8607.13,167946.28,2400.17,8530.75,168089.64,2400.17,8530.75,168089.64,2494.82,8451.87,168217.8,2494.82,8451.87,168217.8,2596.68,8366.94,168336.76,2596.68,8366.94,168336.76,2662.07,8312.42,168404.06,2662.07,8312.42,168404.06,2729.89,8255.85,168467.27,2729.89,8255.85,168467.27,2799.98,8197.38,168526.18,2799.98,8197.38,168526.18,2872.17,8137.15,168580.6,2872.17,8137.15,168580.6,2991.81,8037.32,168658.05,2991.81,8037.32,168658.05,3118.13,7931.89,168724.58,3118.13,7931.89,168724.58,3247.62,7823.79,168778.61,3247.62,7823.79,168778.61,3385.94,7708.3,168822.3,3385.94,7708.3,168822.3,3525.83,7591.49,168853.43,3525.83,7591.49,168853.43,3666.44,7474.05,168872.92,3666.44,7474.05,168872.92,3807.25,7356.44,168881.79,3807.25,7356.44,168881.79,4054.35,7150,168874.6,4054.35,7150,168874.6,4299.33,6945.31,168842.33,4299.33,6945.31,168842.33,4537.35,6746.4,168790.35,4537.35,6746.4,168790.35,4772.13,6550.17,168721.46,4772.13,6550.17,168721.46,5158.65,6227.07,168575.05,5158.65,6227.07,168575.05,5700.38,5774.16,168311.32,5700.38,5774.16,168311.32,5889.45,5616.06,168205.43,1686.3,9027.83,166275.74,1777.22,8952.53,166729.95,1777.22,8952.53,166729.95,1845.65,8895.74,166997.14,1845.65,8895.74,166997.14,1941.1,8816.44,167302.27,1941.1,8816.44,167302.27,2041.07,8733.29,167562.68,2041.07,8733.29,167562.68,2097.35,8686.45,167689.13,2097.35,8686.45,167689.13,2158.17,8635.82,167812.46,2158.17,8635.82,167812.46,2242.81,8565.33,167964.69,2242.81,8565.33,167964.69,2335.53,8488.08,168109.67,2335.53,8488.08,168109.67,2431.32,8408.24,168239.38,2431.32,8408.24,168239.38,2534.49,8322.24,168359.85,2534.49,8322.24,168359.85,2600.73,8267,168428.03,2600.73,8267,168428.03,2669.45,8209.68,168492.08,2669.45,8209.68,168492.08,2740.48,8150.43,168551.78,2740.48,8150.43,168551.78,2813.64,8089.39,168606.92,2813.64,8089.39,168606.92,2934.86,7988.24,168685.39,2934.86,7988.24,168685.39,3062.8,7881.45,168752.78,3062.8,7881.45,168752.78,3193.88,7772.03,168807.47,3193.88,7772.03,168807.47,3333.79,7655.22,168851.66,3333.79,7655.22,168851.66,3475.17,7537.16,168883.12,3475.17,7537.16,168883.12,3617.16,7418.57,168902.8,3617.16,7418.57,168902.8,3759.23,7299.9,168911.75,3759.23,7299.9,168911.75,4008.28,7091.84,168904.51,4008.28,7091.84,168904.51,4254.89,6885.78,168872.02,4254.89,6885.78,168872.02,4494.26,6685.74,168819.75,4494.26,6685.74,168819.75,4730.18,6488.56,168750.52,4730.18,6488.56,168750.52,5118.26,6164.17,168603.52,5118.26,6164.17,168603.52,5661.65,5709.85,168338.98,5661.65,5709.85,168338.98,5851.19,5551.36,168232.83,1749.8,8922.97,166250.18,1838.94,8849.13,166695.56,1838.94,8849.13,166695.56,1905.77,8793.67,166956.53,1905.77,8793.67,166956.53,1998.62,8716.54,167253.34,1998.62,8716.54,167253.34,2095.39,8636.05,167505.44,2095.39,8636.05,167505.44,2149.68,8590.87,167627.39,2149.68,8590.87,167627.39,2208.17,8542.18,167746.03,2208.17,8542.18,167746.03,2289.32,8474.59,167891.99,2289.32,8474.59,167891.99,2377.91,8400.78,168030.53,2377.91,8400.78,168030.53,2469.15,8324.74,168154.08,2469.15,8324.74,168154.08,2567.17,8243.02,168268.54,2567.17,8243.02,168268.54,2630,8190.63,168333.23,2630,8190.63,168333.23,2695.14,8136.29,168393.94,2695.14,8136.29,168393.94,2762.45,8080.15,168450.5,2762.45,8080.15,168450.5,2831.77,8022.31,168502.75,2831.77,8022.31,168502.75,2946.71,7926.4,168577.14,2946.71,7926.4,168577.14,3068.21,7825,168641.14,3068.21,7825,168641.14,3192.98,7720.84,168693.2,3192.98,7720.84,168693.2,3326.57,7609.3,168735.38,3326.57,7609.3,168735.38,3462.02,7496.19,168765.52,3462.02,7496.19,168765.52,3598.54,7382.17,168784.43,3598.54,7382.17,168784.43,3735.59,7267.69,168793.06,3735.59,7267.69,168793.06,3976.91,7066.09,168786.02,3976.91,7066.09,168786.02,4217.03,6865.46,168754.39,4217.03,6865.46,168754.39,4451.03,6669.91,168703.28,4451.03,6669.91,168703.28,4682.42,6476.52,168635.39,4682.42,6476.52,168635.39,5064.32,6157.28,168490.72,5064.32,6157.28,168490.72,5601.07,5708.52,168229.39,5601.07,5708.52,168229.39,5788.74,5551.6,168124.29,1691.64,9023.41,166306.77,1818.45,8813.84,166254.57,1697.07,9018.92,166337.67,1823.69,8809.51,166284.37,1702.59,9014.35,166368.39,1829.01,8805.1,166313.98,1719.67,9000.21,166459.45,1845.45,8791.5,166401.64,1845.65,8895.74,166997.14,1965.9,8691.61,166915.91,1941.1,8816.44,167302.27,2056.13,8616.64,167204.42,2158.17,8635.82,167812.46,2258.17,8448.53,167679.6,2335.53,8488.08,168109.67,2420.3,8313.48,167951.38,2534.49,8322.24,168359.85,2599.85,8163.81,168177.24,2813.64,8089.39,168606.92,2849.9,7955.23,168398.57,2934.86,7988.24,168685.39,2958.55,7864.57,168468.9,3193.88,7772.03,168807.47,3192.09,7669.64,168578.92,3475.17,7537.16,168883.12,3448.88,7455.22,168647.92,3759.23,7299.9,168911.75,3711.96,7235.49,168674.37,4254.89,6885.78,168872.02,4179.17,6845.14,168636.76,4730.18,6488.56,168750.52,4634.65,6464.48,168520.26,5118.26,6164.17,168603.52,5010.39,6150.39,168377.91,5661.65,5709.85,168338.98,5540.5,5707.19,168119.8,5769.45,5619.72,168279.42,5646.12,5618.87,168061.44,5805.81,5589.31,168258.85,5681.75,5589.08,168041.28,1806.64,8954.04,166244.86,1895.42,8880.5,166688.44,1895.42,8880.5,166688.44,1961.93,8825.31,166948.13,1961.93,8825.31,166948.13,2054.23,8748.62,167243.25,2054.23,8748.62,167243.25,2150.36,8668.68,167493.65,2150.36,8668.68,167493.65,2204.23,8623.85,167614.68,2204.23,8623.85,167614.68,2262.25,8575.55,167732.35,2262.25,8575.55,167732.35,2342.69,8508.56,167877.04,2342.69,8508.56,167877.04,2430.44,8435.45,168014.25,2430.44,8435.45,168014.25,2520.74,8360.18,168136.55,2520.74,8360.18,168136.55,2617.7,8279.35,168249.79,2617.7,8279.35,168249.79,2679.84,8227.53,168313.75,2679.84,8227.53,168313.75,2744.25,8173.81,168373.78,2744.25,8173.81,168373.78,2810.79,8118.3,168429.71,2810.79,8118.3,168429.71,2879.33,8061.12,168481.36,2879.33,8061.12,168481.36,2992.98,7966.28,168554.93,2992.98,7966.28,168554.93,3113.16,7865.97,168618.23,3113.16,7865.97,168618.23,3236.65,7762.89,168669.75,3236.65,7762.89,168669.75,3368.95,7652.43,168711.53,3368.95,7652.43,168711.53,3503.18,7540.34,168741.39,3503.18,7540.34,168741.39,3638.58,7427.25,168760.15,3638.58,7427.25,168760.15,3774.61,7313.63,168768.72,3774.61,7313.63,168768.72,4014.35,7113.35,168761.72,4014.35,7113.35,168761.72,4253.14,6913.83,168730.26,4253.14,6913.83,168730.26,4486.04,6719.19,168679.4,4486.04,6719.19,168679.4,4716.5,6526.58,168611.78,4716.5,6526.58,168611.78,5097.14,6208.39,168467.58,5097.14,6208.39,168467.58,5632.54,5760.77,168206.92,5632.54,5760.77,168206.92,5819.82,5604.17,168102.03,1862.16,8837.75,166250.39,1761.58,9061.67,166300.08,1867.39,8833.43,166280.11,1766.99,9057.2,166330.84,1872.69,8829.04,166309.63,1772.48,9052.65,166361.43,1889.08,8815.47,166397.02,1789.48,9038.58,166452.06,2009.09,8715.95,166909.45,1914.76,8934.68,166986.81,2098.92,8641.32,167196.65,2009.55,8855.93,167289.85,2299.77,8474.2,167669.08,2224.73,8676.89,167795.63,2460.7,8340.15,167938.87,2400.17,8530.75,168089.64,2638.72,8191.75,168162.81,2596.68,8366.94,168336.76,2886.49,7985.08,168382.12,2872.17,8137.15,168580.6,2994.15,7895.25,168451.81,2991.81,8037.32,168658.05,3225.68,7701.99,168560.89,3247.62,7823.79,168778.61,3480.54,7489.18,168629.36,3525.83,7591.49,168853.43,3741.97,7270.82,168655.65,3807.25,7356.44,168881.79,4206.94,6882.35,168618.2,4299.33,6945.31,168842.33,4660.87,6502.98,168502.09,4772.13,6550.17,168721.46,5035.63,6189.71,168360.12,5158.65,6227.07,168575.05,5564.7,5747.38,168102.51,5700.38,5774.16,168311.32,5670.15,5659.2,168044.25,5807.9,5684.25,168251.91,5705.72,5629.46,168024.12,5844.17,5653.92,168231.39,1721.28,9046.95,166272.46,1811.97,8971.83,166725.56,1811.97,8971.83,166725.56,1880.21,8915.21,166991.98,1880.21,8915.21,166991.98,1975.32,8836.18,167296.06,1975.32,8836.18,167296.06,2074.89,8753.37,167555.42,2074.89,8753.37,167555.42,2130.93,8706.74,167681.3,2130.93,8706.74,167681.3,2191.45,8656.36,167804.04,2191.45,8656.36,167804.04,2275.65,8586.23,167955.49,2275.65,8586.23,167955.49,2367.85,8509.42,168099.65,2367.85,8509.42,168099.65,2463.07,8430.05,168228.59,2463.07,8430.05,168228.59,2565.58,8344.59,168348.31,2565.58,8344.59,168348.31,2631.4,8289.71,168416.05,2631.4,8289.71,168416.05,2699.67,8232.76,168479.67,2699.67,8232.76,168479.67,2770.23,8173.9,168538.98,2770.23,8173.9,168538.98,2842.91,8113.27,168593.76,2842.91,8113.27,168593.76,2963.34,8012.78,168671.72,2963.34,8012.78,168671.72,3090.47,7906.67,168738.68,3090.47,7906.67,168738.68,3220.75,7797.91,168793.04,3220.75,7797.91,168793.04,3359.87,7681.76,168836.98,3359.87,7681.76,168836.98,3500.5,7564.33,168868.27,3500.5,7564.33,168868.27,3641.8,7446.31,168887.86,3641.8,7446.31,168887.86,3783.24,7328.17,168896.77,3783.24,7328.17,168896.77,4031.32,7120.92,168889.55,4031.32,7120.92,168889.55,4277.11,6915.55,168857.18,4277.11,6915.55,168857.18,4515.81,6716.07,168805.05,4515.81,6716.07,168805.05,4751.16,6519.37,168735.99,4751.16,6519.37,168735.99,5138.46,6195.62,168589.29,5138.46,6195.62,168589.29,5681.01,5742,168325.15,5681.01,5742,168325.15,5870.32,5583.71,168219.13,1761.58,9061.67,166300.08,1691.64,9023.41,166306.77,1766.99,9057.2,166330.84,1697.07,9018.92,166337.67,1772.48,9052.65,166361.43,1702.59,9014.35,166368.39,1789.48,9038.58,166452.06,1719.67,9000.21,166459.45,1914.76,8934.68,166986.81,1845.65,8895.74,166997.14,2009.55,8855.93,167289.85,1941.1,8816.44,167302.27,2224.73,8676.89,167795.63,2158.17,8635.82,167812.46,2400.17,8530.75,168089.64,2335.53,8488.08,168109.67,2596.68,8366.94,168336.76,2534.49,8322.24,168359.85,2872.17,8137.15,168580.6,2813.64,8089.39,168606.92,2991.81,8037.32,168658.05,2934.86,7988.24,168685.39,3247.62,7823.79,168778.61,3193.88,7772.03,168807.47,3525.83,7591.49,168853.43,3475.17,7537.16,168883.12,3807.25,7356.44,168881.79,3759.23,7299.9,168911.75,4299.33,6945.31,168842.33,4254.89,6885.78,168872.02,4772.13,6550.17,168721.46,4730.18,6488.56,168750.52,5158.65,6227.07,168575.05,5118.26,6164.17,168603.52,5700.38,5774.16,168311.32,5661.65,5709.85,168338.98,5807.9,5684.25,168251.91,5769.45,5619.72,168279.42,5844.17,5653.92,168231.39,5805.81,5589.31,168258.85,1303.45,8387.46,166510.27,1409.76,8334.53,166907.27,1409.76,8334.53,166907.27,1481.33,8295.76,167128.89,1481.33,8295.76,167128.89,1588.7,8234.14,167411.27,1588.7,8234.14,167411.27,1648.06,8198.64,167546.71,1648.06,8198.64,167546.71,1711.83,8159.57,167678.58,1711.83,8159.57,167678.58,1780.2,8116.74,167806.29,1780.2,8116.74,167806.29,1853.38,8069.94,167929.25,1853.38,8069.94,167929.25,1942.04,8012.11,168061.64,1942.04,8012.11,168061.64,2037.11,7948.88,168186.12,2037.11,7948.88,168186.12,2134.08,7883.28,168296.8,2134.08,7883.28,168296.8,2236.74,7812.74,168398.36,2236.74,7812.74,168398.36,2309.05,7762.47,168461.28,2309.05,7762.47,168461.28,2383.67,7710.12,168519.52,2383.67,7710.12,168519.52,2460.45,7655.82,168572.96,2460.45,7655.82,168572.96,2539.21,7599.67,168621.48,2539.21,7599.67,168621.48,2659.03,7513.49,168684.07,2659.03,7513.49,168684.07,2782.15,7424.06,168735.76,2782.15,7424.06,168735.76,2913.41,7327.85,168778.32,2913.41,7327.85,168778.32,3046.79,7229.28,168809.77,3046.79,7229.28,168809.77,3165.93,7140.6,168828.79,3165.93,7140.6,168828.79,3285.86,7050.8,168840.08,3285.86,7050.8,168840.08,3406.28,6960.13,168844.17,3406.28,6960.13,168844.17,3526.87,6868.86,168841.55,3526.87,6868.86,168841.55,3769.95,6683.64,168817.89,3769.95,6683.64,168817.89,3954.31,6542.13,168785.23,3954.31,6542.13,168785.23,4137.44,6400.8,168741.56,4137.44,6400.8,168741.56,4421.61,6180.13,168653.96,4421.61,6180.13,168653.96,4701.79,5961.09,168546.38,4701.79,5961.09,168546.38,5291.41,5496.12,168261.68,5291.41,5496.12,168261.68,5480.09,5346.32,168155.98,5480.09,5346.32,168155.98,5630.64,5394.68,168350.19,5460.31,5305.77,168177.54,5271.3,5455.83,168283.43,5271.3,5455.83,168283.43,4680.39,5921.83,168568.76,4680.39,5921.83,168568.76,4399.41,6141.49,168676.64,4399.41,6141.49,168676.64,4114.28,6362.91,168764.53,4114.28,6362.91,168764.53,3930.43,6504.8,168808.38,3930.43,6504.8,168808.38,3745.24,6646.94,168841.18,3745.24,6646.94,168841.18,3500.9,6833.12,168864.97,3500.9,6833.12,168864.97,3379.59,6924.93,168867.6,3379.59,6924.93,168867.6,3258.4,7016.18,168863.49,3258.4,7016.18,168863.49,3137.63,7106.62,168852.12,3137.63,7106.62,168852.12,3017.59,7195.97,168832.95,3017.59,7195.97,168832.95,2883.12,7295.35,168801.24,2883.12,7295.35,168801.24,2750.69,7392.41,168758.3,2750.69,7392.41,168758.3,2626.41,7482.68,168706.13,2626.41,7482.68,168706.13,2505.41,7569.71,168642.93,2505.41,7569.71,168642.93,2425.86,7626.42,168593.92,2425.86,7626.42,168593.92,2348.3,7681.27,168539.94,2348.3,7681.27,168539.94,2272.93,7734.15,168481.1,2272.93,7734.15,168481.1,2199.9,7784.93,168417.56,2199.9,7784.93,168417.56,2096.23,7856.15,168315.01,2096.23,7856.15,168315.01,1998.36,7922.37,168203.29,1998.36,7922.37,168203.29,1902.44,7986.16,168077.73,1902.44,7986.16,168077.73,1813.07,8044.46,167944.26,1813.07,8044.46,167944.26,1739.34,8091.6,167820.38,1739.34,8091.6,167820.38,1670.49,8134.74,167691.79,1670.49,8134.74,167691.79,1606.32,8174.06,167559.08,1606.32,8174.06,167559.08,1546.61,8209.76,167422.86,1546.61,8209.76,167422.86,1438.69,8271.69,167139.03,1438.69,8271.69,167139.03,1366.81,8310.64,166916.43,1366.81,8310.64,166916.43,1260.1,8363.76,166517.96,1260.1,8363.76,166517.96,1136.58,8575.18,166570.61,5599.01,5329.8,168384.69,5460.31,5305.77,168177.54,5630.64,5394.68,168350.19,5599.01,5329.8,168384.69,1205.95,8613.09,166558.31,1303.45,8387.46,166510.27,1136.58,8575.18,166570.61,1205.95,8613.09,166558.31,1205.95,8613.09,166558.31,1316.43,8558.09,166970.8,1316.43,8558.09,166970.8,1391.32,8517.52,167202.68,1391.32,8517.52,167202.68,1504.48,8452.57,167500.28,1504.48,8452.57,167500.28,1567.47,8414.9,167644.04,1567.47,8414.9,167644.04,1635.5,8373.22,167784.73,1635.5,8373.22,167784.73,1708.85,8327.27,167921.71,1708.85,8327.27,167921.71,1787.8,8276.78,168054.33,1787.8,8276.78,168054.33,1884.04,8214,168198.03,1884.04,8214,168198.03,1987.9,8144.94,168333.98,1987.9,8144.94,168333.98,2094.4,8072.88,168455.54,2094.4,8072.88,168455.54,2207.63,7995.08,168567.54,2207.63,7995.08,168567.54,2287.57,7939.5,168637.08,2287.57,7939.5,168637.08,2370.15,7881.57,168701.53,2370.15,7881.57,168701.53,2455.12,7821.47,168760.68,2455.12,7821.47,168760.68,2542.2,7759.39,168814.35,2542.2,7759.39,168814.35,2674.41,7664.3,168883.42,2674.41,7664.3,168883.42,2809.71,7566.03,168940.23,2809.71,7566.03,168940.23,2953.2,7460.86,168986.77,2953.2,7460.86,168986.77,3098.1,7353.77,169020.95,3098.1,7353.77,169020.95,3226.73,7258.03,169041.51,3226.73,7258.03,169041.51,3355.49,7161.62,169053.65,3355.49,7161.62,169053.65,3484.07,7064.8,169058.01,3484.07,7064.8,169058.01,3612.19,6967.84,169055.22,3612.19,6967.84,169055.22,3868.57,6772.47,169030.27,3868.57,6772.47,169030.27,4061.62,6624.31,168996.09,4061.62,6624.31,168996.09,4252.34,6477.11,168950.61,4252.34,6477.11,168950.61,4546.62,6248.59,168859.92,4546.62,6248.59,168859.92,4835.15,6023.03,168749.14,4835.15,6023.03,168749.14,5438.43,5547.28,168457.88,5438.43,5547.28,168457.88,5630.64,5394.68,168350.19,1136.58,8575.18,166570.61,1247.7,8519.87,166985.46,1247.7,8519.87,166985.46,1323.09,8479.02,167218.9,1323.09,8479.02,167218.9,1437.14,8413.56,167518.81,1437.14,8413.56,167518.81,1500.69,8375.56,167663.84,1500.69,8375.56,167663.84,1569.36,8333.49,167805.87,1569.36,8333.49,167805.87,1643.47,8287.06,167944.26,1643.47,8287.06,167944.26,1723.3,8236.01,168078.35,1723.3,8236.01,168078.35,1820.69,8172.48,168223.77,1820.69,8172.48,168223.77,1925.88,8102.52,168361.46,1925.88,8102.52,168361.46,2033.84,8029.48,168484.67,2033.84,8029.48,168484.67,2148.67,7950.58,168598.25,2148.67,7950.58,168598.25,2229.77,7894.19,168668.8,2229.77,7894.19,168668.8,2313.57,7835.41,168734.19,2313.57,7835.41,168734.19,2399.78,7774.43,168794.22,2399.78,7774.43,168794.22,2488.13,7711.45,168848.66,2488.13,7711.45,168848.66,2622.22,7615,168918.71,2622.22,7615,168918.71,2759.38,7515.38,168976.31,2759.38,7515.38,168976.31,2904.72,7408.85,169023.45,2904.72,7408.85,169023.45,3051.37,7300.47,169058.05,3051.37,7300.47,169058.05,3181.45,7203.66,169078.84,3181.45,7203.66,169078.84,3311.55,7106.24,169091.11,3311.55,7106.24,169091.11,3441.38,7008.48,169095.5,3441.38,7008.48,169095.5,3570.64,6910.66,169092.68,3570.64,6910.66,169092.68,3829.04,6713.75,169067.54,3829.04,6713.75,169067.54,4023.41,6564.57,169033.13,4023.41,6564.57,169033.13,4215.29,6416.49,168987.37,4215.29,6416.49,168987.37,4511.11,6186.77,168896.21,4511.11,6186.77,168896.21,4800.9,5960.22,168784.94,4800.9,5960.22,168784.94,5406.26,5482.83,168492.68,5406.26,5482.83,168492.68,5599.01,5329.8,168384.69,1198.34,8469.47,166544.29,1307.25,8415.25,166950.95,1307.25,8415.25,166950.95,1380.89,8375.36,167178.97,1380.89,8375.36,167178.97,1491.87,8311.66,167470.83,1491.87,8311.66,167470.83,1553.5,8274.81,167611.46,1553.5,8274.81,167611.46,1619.93,8234.11,167748.83,1619.93,8234.11,167748.83,1691.4,8189.33,167882.32,1691.4,8189.33,167882.32,1768.18,8140.23,168011.3,1768.18,8140.23,168011.3,1861.57,8079.32,168150.75,1861.57,8079.32,168150.75,1962.12,8012.45,168282.38,1962.12,8012.45,168282.38,2065.03,7942.81,168399.84,2065.03,7942.81,168399.84,2174.28,7867.75,168507.91,2174.28,7867.75,168507.91,2251.35,7814.17,168574.95,2251.35,7814.17,168574.95,2330.94,7758.34,168637.06,2330.94,7758.34,168637.06,2412.82,7700.42,168694.07,2412.82,7700.42,168694.07,2496.77,7640.58,168745.8,2496.77,7640.58,168745.8,2624.32,7548.84,168812.42,2624.32,7548.84,168812.42,2755.03,7453.89,168867.31,2755.03,7453.89,168867.31,2893.92,7352.1,168912.35,2893.92,7352.1,168912.35,3034.48,7248.22,168945.5,3034.48,7248.22,168945.5,3159.54,7155.14,168965.48,3159.54,7155.14,168965.48,3284.98,7061.21,168977.3,3284.98,7061.21,168977.3,3410.48,6966.71,168981.55,3410.48,6966.71,168981.55,3535.77,6871.89,168978.83,3535.77,6871.89,168978.83,3787.14,6680.34,168954.36,3787.14,6680.34,168954.36,3976.92,6534.69,168920.75,3976.92,6534.69,168920.75,4164.79,6389.7,168875.95,4164.79,6389.7,168875.95,4455.26,6164.13,168786.42,4455.26,6164.13,168786.42,4740.64,5941.02,168676.85,4740.64,5941.02,168676.85,5338.78,5469.33,168388.06,5338.78,5469.33,168388.06,5529.66,5317.78,168281.12,1143.8,8571.81,166600.76,1267.06,8360.51,166547.03,1151.12,8568.35,166630.78,1274.1,8357.18,166575.95,1158.51,8564.83,166660.62,1281.22,8353.79,166604.69,1181.17,8553.81,166749.06,1303.02,8343.19,166689.74,1323.09,8479.02,167218.9,1438.69,8271.69,167139.03,1437.14,8413.56,167518.81,1546.61,8209.76,167422.86,1723.3,8236.01,168078.35,1813.07,8044.46,167944.26,1925.88,8102.52,168361.46,1998.36,7922.37,168203.29,2148.67,7950.58,168598.25,2199.9,7784.93,168417.56,2488.13,7711.45,168848.66,2505.41,7569.71,168642.93,2759.38,7515.38,168976.31,2750.69,7392.41,168758.3,3051.37,7300.47,169058.05,3017.59,7195.97,168832.95,3570.64,6910.66,169092.68,3500.9,6833.12,168864.97,3829.04,6713.75,169067.54,3745.24,6646.94,168841.18,4215.29,6416.49,168987.37,4114.28,6362.91,168764.53,4800.9,5960.22,168784.94,4680.39,5921.83,168568.76,5406.26,5482.83,168492.68,5271.3,5455.83,168283.43,5442.73,5453.91,168472.76,5307.04,5427.49,168263.92,5488.52,5417.57,168447.41,5351.93,5391.88,168239.06,5543.69,5373.77,168416.36,5406.03,5348.91,168208.62,1254.7,8500.27,166534.29,1363.1,8446.31,166939.03,1363.1,8446.31,166939.03,1436.33,8406.64,167165.79,1436.33,8406.64,167165.79,1546.59,8343.36,167455.77,1546.59,8343.36,167455.77,1607.77,8306.77,167595.37,1607.77,8306.77,167595.37,1673.67,8266.4,167731.65,1673.67,8266.4,167731.65,1744.53,8222,167864,1744.53,8222,167864,1820.59,8173.36,167991.79,1820.59,8173.36,167991.79,1913.04,8113.06,168129.84,1913.04,8113.06,168129.84,2012.51,8046.91,168260.05,2012.51,8046.91,168260.05,2114.24,7978.08,168376.17,2114.24,7978.08,168376.17,2222.18,7903.91,168482.95,2222.18,7903.91,168482.95,2298.31,7850.98,168549.18,2298.31,7850.98,168549.18,2376.91,7795.84,168610.52,2376.91,7795.84,168610.52,2457.78,7738.64,168666.82,2457.78,7738.64,168666.82,2540.71,7679.53,168717.92,2540.71,7679.53,168717.92,2666.72,7588.89,168783.74,2666.72,7588.89,168783.74,2795.93,7495.04,168837.99,2795.93,7495.04,168837.99,2933.3,7394.36,168882.54,2933.3,7394.36,168882.54,3072.44,7291.53,168915.36,3072.44,7291.53,168915.36,3196.33,7199.32,168935.15,3196.33,7199.32,168935.15,3320.68,7106.21,168946.87,3320.68,7106.21,168946.87,3445.18,7012.46,168951.09,3445.18,7012.46,168951.09,3569.53,6918.35,168948.39,3569.53,6918.35,168948.39,3819.26,6728.06,168924.08,3819.26,6728.06,168924.08,4007.96,6583.22,168890.66,4007.96,6583.22,168890.66,4194.89,6438.96,168846.08,4194.89,6438.96,168846.08,4484.11,6214.36,168756.94,4484.11,6214.36,168756.94,4768.47,5992.06,168647.76,4768.47,5992.06,168647.76,5364.92,5521.7,168359.78,5364.92,5521.7,168359.78,5555.36,5370.5,168253.09,1310.38,8384.21,166539.24,1213.13,8609.74,166588.3,1317.41,8380.9,166568.06,1220.4,8606.3,166618.16,1324.5,8377.51,166596.7,1227.76,8602.79,166647.84,1346.22,8366.96,166681.45,1250.3,8591.84,166735.79,1481.33,8295.76,167128.89,1391.32,8517.52,167202.68,1588.7,8234.14,167411.27,1504.48,8452.57,167500.28,1853.38,8069.94,167929.25,1787.8,8276.78,168054.33,2037.11,7948.88,168186.12,1987.9,8144.94,168333.98,2236.74,7812.74,168398.36,2207.63,7995.08,168567.54,2539.21,7599.67,168621.48,2542.2,7759.39,168814.35,2782.15,7424.06,168735.76,2809.71,7566.03,168940.23,3046.79,7229.28,168809.77,3098.1,7353.77,169020.95,3526.87,6868.86,168841.55,3612.19,6967.84,169055.22,3769.95,6683.64,168817.89,3868.57,6772.47,169030.27,4137.44,6400.8,168741.56,4252.34,6477.11,168950.61,4701.79,5961.09,168546.38,4835.15,6023.03,168749.14,5291.41,5496.12,168261.68,5438.43,5547.28,168457.88,5327.08,5467.83,168242.2,5474.8,5518.44,168438.01,5371.89,5432.27,168217.4,5520.46,5482.21,168412.74,5425.9,5389.39,168187,5575.47,5438.52,168381.78,1171.27,8594.14,166564.46,1282.06,8538.98,166978.13,1282.06,8538.98,166978.13,1357.2,8498.27,167210.79,1357.2,8498.27,167210.79,1470.81,8433.07,167509.55,1470.81,8433.07,167509.55,1534.08,8395.23,167653.94,1534.08,8395.23,167653.94,1602.43,8353.35,167795.3,1602.43,8353.35,167795.3,1676.16,8307.17,167932.98,1676.16,8307.17,167932.98,1755.55,8256.4,168066.34,1755.55,8256.4,168066.34,1852.37,8193.24,168210.9,1852.37,8193.24,168210.9,1956.89,8123.73,168347.72,1956.89,8123.73,168347.72,2064.12,8051.18,168470.1,2064.12,8051.18,168470.1,2178.15,7972.83,168582.89,2178.15,7972.83,168582.89,2258.67,7916.84,168652.94,2258.67,7916.84,168652.94,2341.86,7858.49,168717.86,2341.86,7858.49,168717.86,2427.45,7797.95,168777.45,2427.45,7797.95,168777.45,2515.17,7735.42,168831.51,2515.17,7735.42,168831.51,2648.32,7639.65,168901.06,2648.32,7639.65,168901.06,2784.54,7540.7,168958.27,2784.54,7540.7,168958.27,2928.96,7434.86,169005.11,2928.96,7434.86,169005.11,3074.74,7327.12,169039.5,3074.74,7327.12,169039.5,3204.09,7230.84,169060.18,3204.09,7230.84,169060.18,3333.52,7133.93,169072.38,3333.52,7133.93,169072.38,3462.72,7036.64,169076.75,3462.72,7036.64,169076.75,3591.41,6939.25,169073.95,3591.41,6939.25,169073.95,3848.81,6743.11,169048.91,3848.81,6743.11,169048.91,4042.51,6594.44,169014.61,4042.51,6594.44,169014.61,4233.82,6446.8,168968.99,4233.82,6446.8,168968.99,4528.87,6217.68,168878.06,4528.87,6217.68,168878.06,4818.02,5991.62,168767.04,4818.02,5991.62,168767.04,5422.34,5515.06,168475.28,5422.34,5515.06,168475.28,5614.82,5362.24,168367.44,1213.13,8609.74,166588.3,1143.8,8571.81,166600.76,1220.4,8606.3,166618.16,1151.12,8568.35,166630.78,1227.76,8602.79,166647.84,1158.51,8564.83,166660.62,1250.3,8591.84,166735.79,1181.17,8553.81,166749.06,1391.32,8517.52,167202.68,1323.09,8479.02,167218.9,1504.48,8452.57,167500.28,1437.14,8413.56,167518.81,1787.8,8276.78,168054.33,1723.3,8236.01,168078.35,1987.9,8144.94,168333.98,1925.88,8102.52,168361.46,2207.63,7995.08,168567.54,2148.67,7950.58,168598.25,2542.2,7759.39,168814.35,2488.13,7711.45,168848.66,2809.71,7566.03,168940.23,2759.38,7515.38,168976.31,3098.1,7353.77,169020.95,3051.37,7300.47,169058.05,3612.19,6967.84,169055.22,3570.64,6910.66,169092.68,3868.57,6772.47,169030.27,3829.04,6713.75,169067.54,4252.34,6477.11,168950.61,4215.29,6416.49,168987.37,4835.15,6023.03,168749.14,4800.9,5960.22,168784.94,5438.43,5547.28,168457.88,5406.26,5482.83,168492.68,5474.8,5518.44,168438.01,5442.73,5453.91,168472.76,5520.46,5482.21,168412.74,5488.52,5417.57,168447.41,5575.47,5438.52,168381.78,5543.69,5373.77,168416.36,783.68,7951.99,166782.71,913.82,7912.49,167168.36,913.82,7912.49,167168.36,999.11,7881.72,167383.2,999.11,7881.72,167383.2,1124.72,7830.92,167656.87,1124.72,7830.92,167656.87,1238.96,7780.06,167869.52,1238.96,7780.06,167869.52,1365.06,7719.68,168071.28,1365.06,7719.68,168071.28,1461.88,7670.75,168206.17,1461.88,7670.75,168206.17,1565.05,7616.47,168333.34,1565.05,7616.47,168333.34,1669.53,7559.52,168446.64,1669.53,7559.52,168446.64,1779.63,7497.57,168551.05,1779.63,7497.57,168551.05,1913.94,7419.63,168659.92,1913.94,7419.63,168659.92,1983.57,7378.31,168709.18,1983.57,7378.31,168709.18,2054.71,7335.48,168754.86,2054.71,7335.48,168754.86,2177.76,7260.08,168823.53,2177.76,7260.08,168823.53,2306.53,7179.53,168882.63,2306.53,7179.53,168882.63,2438.12,7095.66,168930.92,2438.12,7095.66,168930.92,2577.75,7005.11,168970.06,2577.75,7005.11,168970.06,2719.05,6912.01,168998.23,2719.05,6912.01,168998.23,2909.78,6784.23,169019.82,2909.78,6784.23,169019.82,3101.19,6653.81,169024.55,3101.19,6653.81,169024.55,3354.78,6478.07,169007.74,3354.78,6478.07,169007.74,3606.54,6300.62,168968.02,3606.54,6300.62,168968.02,3995.2,6021.7,168867.91,3995.2,6021.7,168867.91,4293.26,5804.24,168763.35,4293.26,5804.24,168763.35,4586.23,5587.81,168639.78,4586.23,5587.81,168639.78,5225.46,5107.68,168308.74,5225.46,5107.68,168308.74,5383.78,5179.06,168489.19,5209.77,5067.61,168334.2,4569.14,5548.79,168665.96,4569.14,5548.79,168665.96,4275.35,5765.82,168789.87,4275.35,5765.82,168789.87,3976.3,5984.01,168894.78,3976.3,5984.01,168894.78,3586.04,6264.08,168995.31,3586.04,6264.08,168995.31,3333.01,6442.42,169035.23,3333.01,6442.42,169035.23,3077.91,6619.21,169052.14,3077.91,6619.21,169052.14,2885.17,6750.53,169047.37,2885.17,6750.53,169047.37,2692.95,6879.31,169025.61,2692.95,6879.31,169025.61,2550.44,6973.22,168997.2,2550.44,6973.22,168997.2,2409.51,7064.61,168957.69,2409.51,7064.61,168957.69,2276.62,7149.3,168908.92,2276.62,7149.3,168908.92,2146.52,7230.68,168849.22,2146.52,7230.68,168849.22,2022.17,7306.88,168779.83,2022.17,7306.88,168779.83,1950.26,7350.17,168733.66,1950.26,7350.17,168733.66,1879.89,7391.94,168683.87,1879.89,7391.94,168683.87,1744.16,7470.7,168573.85,1744.16,7470.7,168573.85,1632.94,7533.28,168468.37,1632.94,7533.28,168468.37,1527.44,7590.79,168353.98,1527.44,7590.79,168353.98,1423.34,7645.55,168225.66,1423.34,7645.55,168225.66,1325.71,7694.89,168089.63,1325.71,7694.89,168089.63,1198.65,7755.74,167886.35,1198.65,7755.74,167886.35,1083.65,7806.94,167672.29,1083.65,7806.94,167672.29,957.31,7858.03,167397.05,957.31,7858.03,167397.05,871.6,7888.95,167181.15,871.6,7888.95,167181.15,740.91,7928.62,166793.89,740.91,7928.62,166793.89,620.88,8141.79,166847.52,5358.68,5114.95,168529.93,5209.77,5067.61,168334.2,5383.78,5179.06,168489.19,5358.68,5114.95,168529.93,689.3,8179.19,166829.64,783.68,7951.99,166782.71,620.88,8141.79,166847.52,689.3,8179.19,166829.64,689.3,8179.19,166829.64,824.55,8138.13,167230.37,824.55,8138.13,167230.37,913.78,8105.94,167455.12,913.78,8105.94,167455.12,1046.11,8052.42,167743.4,1046.11,8052.42,167743.4,1167.44,7998.4,167969.25,1167.44,7998.4,167969.25,1302.46,7933.74,168185.23,1302.46,7933.74,168185.23,1406.88,7880.97,168330.71,1406.88,7880.97,168330.71,1518.8,7822.09,168468.64,1518.8,7822.09,168468.64,1632.74,7759.97,168592.19,1632.74,7759.97,168592.19,1753.32,7692.14,168706.53,1753.32,7692.14,168706.53,1900.87,7606.51,168826.12,1900.87,7606.51,168826.12,1977.45,7561.05,168880.31,1977.45,7561.05,168880.31,2055.7,7513.95,168930.57,2055.7,7513.95,168930.57,2190.93,7431.08,169006.04,2190.93,7431.08,169006.04,2332.09,7342.79,169070.82,2332.09,7342.79,169070.82,2475.79,7251.2,169123.56,2475.79,7251.2,169123.56,2627.51,7152.82,169166.11,2627.51,7152.82,169166.11,2780.16,7052.23,169196.55,2780.16,7052.23,169196.55,2984.79,6915.14,169219.74,2984.79,6915.14,169219.74,3188.57,6776.3,169224.79,3188.57,6776.3,169224.79,3456.31,6590.75,169207.07,3456.31,6590.75,169207.07,3719.95,6404.93,169165.48,3719.95,6404.93,169165.48,4123.56,6115.29,169061.54,4123.56,6115.29,169061.54,4430.88,5891.07,168953.75,4430.88,5891.07,168953.75,4731.51,5668.98,168826.95,4731.51,5668.98,168826.95,5383.78,5179.06,168489.19,620.88,8141.79,166847.52,757,8100.46,167250.83,757,8100.46,167250.83,846.91,8068.03,167477.28,846.91,8068.03,167477.28,980.39,8014.04,167768.07,980.39,8014.04,167768.07,1102.94,7959.48,167996.17,1102.94,7959.48,167996.17,1239.49,7894.09,168214.6,1239.49,7894.09,168214.6,1345.21,7840.65,168361.88,1345.21,7840.65,168361.88,1458.63,7780.99,168501.67,1458.63,7780.99,168501.67,1574.2,7717.99,168626.97,1574.2,7717.99,168626.97,1696.57,7649.14,168743.01,1696.57,7649.14,168743.01,1846.39,7562.19,168864.43,1846.39,7562.19,168864.43,1924.16,7516.03,168919.47,1924.16,7516.03,168919.47,2003.63,7468.19,168970.51,2003.63,7468.19,168970.51,2140.95,7384.05,169047.14,2140.95,7384.05,169047.14,2284.23,7294.42,169112.89,2284.23,7294.42,169112.89,2430.01,7201.51,169166.4,2430.01,7201.51,169166.4,2583.8,7101.78,169209.53,2583.8,7101.78,169209.53,2738.4,6999.92,169240.35,2738.4,6999.92,169240.35,2945.41,6861.23,169263.82,2945.41,6861.23,169263.82,3151.31,6720.95,169268.92,3151.31,6720.95,169268.92,3421.47,6533.72,169251.05,3421.47,6533.72,169251.05,3687.15,6346.46,169209.13,3687.15,6346.46,169209.13,4093.32,6054.99,169104.54,4093.32,6054.99,169104.54,4402.23,5829.6,168996.19,4402.23,5829.6,168996.19,4704.17,5606.54,168868.84,4704.17,5606.54,168868.84,5358.68,5114.95,168529.93,680.89,8035.21,166820.7,814.3,7994.7,167215.99,814.3,7994.7,167215.99,902.11,7963.03,167437.16,902.11,7963.03,167437.16,1032.02,7910.49,167720.18,1032.02,7910.49,167720.18,1150.79,7857.61,167941.26,1150.79,7857.61,167941.26,1282.6,7794.49,168152.11,1282.6,7794.49,168152.11,1384.27,7743.1,168293.77,1384.27,7743.1,168293.77,1493.04,7685.89,168427.82,1493.04,7685.89,168427.82,1603.57,7625.63,168547.67,1603.57,7625.63,168547.67,1720.37,7559.92,168658.43,1720.37,7559.92,168658.43,1863.14,7477.06,168774.15,1863.14,7477.06,168774.15,1937.21,7433.1,168826.56,1937.21,7433.1,168826.56,2012.9,7387.54,168875.17,2012.9,7387.54,168875.17,2143.74,7307.36,168948.18,2143.74,7307.36,168948.18,2280.43,7221.86,169010.91,2280.43,7221.86,169010.91,2419.76,7133.06,169062.05,2419.76,7133.06,169062.05,2567.12,7037.5,169103.36,2567.12,7037.5,169103.36,2715.68,6939.61,169132.98,2715.68,6939.61,169132.98,2915.29,6805.88,169155.59,2915.29,6805.88,169155.59,3114.61,6670.08,169160.53,3114.61,6670.08,169160.53,3377.24,6488.07,169143.14,3377.24,6488.07,169143.14,3636.6,6305.27,169102.22,3636.6,6305.27,169102.22,4034.81,6019.5,168999.66,4034.81,6019.5,168999.66,4338.79,5797.71,168893.03,4338.79,5797.71,168893.03,4636.66,5577.66,168767.4,4636.66,5577.66,168767.4,5284.23,5091.28,168432.06,629.88,8139.4,166876.83,749.58,7926.32,166822.14,638.96,8136.93,166906.02,758.33,7923.94,166850.25,648.13,8134.39,166935.03,767.15,7921.49,166878.17,676.06,8126.32,167020.99,794.01,7913.73,166960.82,846.91,8068.03,167477.28,957.31,7858.03,167397.05,980.39,8014.04,167768.07,1083.65,7806.94,167672.29,1239.49,7894.09,168214.6,1325.71,7694.89,168089.63,1458.63,7780.99,168501.67,1527.44,7590.79,168353.98,1696.57,7649.14,168743.01,1744.16,7470.7,168573.85,2003.63,7468.19,168970.51,2022.17,7306.88,168779.83,2140.95,7384.05,169047.14,2146.52,7230.68,168849.22,2430.01,7201.51,169166.4,2409.51,7064.61,168957.69,2738.4,6999.92,169240.35,2692.95,6879.31,169025.61,3151.31,6720.95,169268.92,3077.91,6619.21,169052.14,3687.15,6346.46,169209.13,3586.04,6264.08,168995.31,4093.32,6054.99,169104.54,3976.3,5984.01,168894.78,4704.17,5606.54,168868.84,4569.14,5548.79,168665.96,5135.82,5283.49,168654.27,4991.14,5232.95,168456.18,5191.12,5241.77,168624.24,5045.35,5192.05,168426.74,5246.73,5199.75,168593.48,5099.89,5150.85,168396.58,5302.64,5157.43,168562.01,5154.75,5109.32,168365.7,736.49,8065.59,166806.18,869.18,8025.31,167199.36,869.18,8025.31,167199.36,956.44,7993.83,167419.16,956.44,7993.83,167419.16,1085.41,7941.67,167700.14,1085.41,7941.67,167700.14,1203.2,7889.23,167919.38,1203.2,7889.23,167919.38,1333.76,7826.71,168128.25,1333.76,7826.71,168128.25,1434.38,7775.86,168268.44,1434.38,7775.86,168268.44,1541.92,7719.28,168400.99,1541.92,7719.28,168400.99,1651.14,7659.75,168519.41,1651.14,7659.75,168519.41,1766.47,7594.86,168628.79,1766.47,7594.86,168628.79,1907.4,7513.07,168743.02,1907.4,7513.07,168743.02,1980.51,7469.68,168794.75,1980.51,7469.68,168794.75,2055.21,7424.71,168842.71,2055.21,7424.71,168842.71,2184.35,7345.58,168914.79,2184.35,7345.58,168914.79,2319.31,7261.16,168976.72,2319.31,7261.16,168976.72,2456.95,7173.43,169027.24,2456.95,7173.43,169027.24,2602.63,7078.96,169068.09,2602.63,7078.96,169068.09,2749.61,6982.12,169097.39,2749.61,6982.12,169097.39,2947.29,6849.68,169119.78,2947.29,6849.68,169119.78,3144.88,6715.06,169124.67,3144.88,6715.06,169124.67,3405.54,6534.41,169107.41,3405.54,6534.41,169107.41,3663.24,6352.78,169066.75,3663.24,6352.78,169066.75,4059.38,6068.5,168964.73,4059.38,6068.5,168964.73,4362.07,5847.65,168858.55,4362.07,5847.65,168858.55,4658.87,5628.39,168733.37,4658.87,5628.39,168733.37,5304.62,5143.37,168398.97,792.31,7949.7,166810.86,698.25,8176.81,166858.78,801.03,7947.33,166838.86,707.28,8174.36,166887.79,809.82,7944.89,166866.68,716.39,8171.83,166916.63,836.57,7937.16,166948.98,744.15,8163.81,167002.06,999.11,7881.72,167383.2,913.78,8105.94,167455.12,1124.72,7830.92,167656.87,1046.11,8052.42,167743.4,1365.06,7719.68,168071.28,1302.46,7933.74,168185.23,1565.05,7616.47,168333.34,1518.8,7822.09,168468.64,1779.63,7497.57,168551.05,1753.32,7692.14,168706.53,2054.71,7335.48,168754.86,2055.7,7513.95,168930.57,2177.76,7260.08,168823.53,2190.93,7431.08,169006.04,2438.12,7095.66,168930.92,2475.79,7251.2,169123.56,2719.05,6912.01,168998.23,2780.16,7052.23,169196.55,3101.19,6653.81,169024.55,3188.57,6776.3,169224.79,3606.54,6300.62,168968.02,3719.95,6404.93,169165.48,3995.2,6021.7,168867.91,4123.56,6115.29,169061.54,4586.23,5587.81,168639.78,4731.51,5668.98,168826.95,5007.26,5272.69,168430.48,5161.6,5347.09,168613.15,5061.36,5231.89,168401.1,5216.73,5305.5,168583.22,5115.79,5190.76,168371,5272.16,5263.62,168552.56,5170.54,5149.31,168340.18,5327.91,5221.42,168521.19,655.09,8160.49,166838.58,790.77,8119.29,167240.6,790.77,8119.29,167240.6,880.34,8086.98,167466.2,880.34,8086.98,167466.2,1013.25,8033.23,167755.74,1013.25,8033.23,167755.74,1135.19,7978.94,167982.71,1135.19,7978.94,167982.71,1270.97,7913.91,168199.92,1270.97,7913.91,168199.92,1376.04,7860.81,168346.29,1376.04,7860.81,168346.29,1488.71,7801.54,168485.16,1488.71,7801.54,168485.16,1603.47,7738.98,168609.58,1603.47,7738.98,168609.58,1724.94,7670.64,168724.77,1724.94,7670.64,168724.77,1873.63,7584.35,168845.28,1873.63,7584.35,168845.28,1950.81,7538.54,168899.89,1950.81,7538.54,168899.89,2029.67,7491.07,168950.54,2029.67,7491.07,168950.54,2165.94,7407.56,169026.59,2165.94,7407.56,169026.59,2308.16,7318.6,169091.86,2308.16,7318.6,169091.86,2452.9,7226.36,169144.98,2452.9,7226.36,169144.98,2605.65,7127.3,169187.82,2605.65,7127.3,169187.82,2759.28,7026.07,169218.45,2759.28,7026.07,169218.45,2965.1,6888.19,169241.78,2965.1,6888.19,169241.78,3169.94,6748.62,169246.85,3169.94,6748.62,169246.85,3438.89,6562.23,169229.06,3438.89,6562.23,169229.06,3703.55,6375.7,169187.3,3703.55,6375.7,169187.3,4108.44,6085.14,169083.04,4108.44,6085.14,169083.04,4416.56,5860.33,168974.97,4416.56,5860.33,168974.97,4717.84,5637.76,168847.89,4717.84,5637.76,168847.89,5371.23,5147,168509.56,698.25,8176.81,166858.78,629.88,8139.4,166876.83,707.28,8174.36,166887.79,638.96,8136.93,166906.02,716.39,8171.83,166916.63,648.13,8134.39,166935.03,744.15,8163.81,167002.06,676.06,8126.32,167020.99,913.78,8105.94,167455.12,846.91,8068.03,167477.28,1046.11,8052.42,167743.4,980.39,8014.04,167768.07,1302.46,7933.74,168185.23,1239.49,7894.09,168214.6,1518.8,7822.09,168468.64,1458.63,7780.99,168501.67,1753.32,7692.14,168706.53,1696.57,7649.14,168743.01,2055.7,7513.95,168930.57,2003.63,7468.19,168970.51,2190.93,7431.08,169006.04,2140.95,7384.05,169047.14,2475.79,7251.2,169123.56,2430.01,7201.51,169166.4,2780.16,7052.23,169196.55,2738.4,6999.92,169240.35,3188.57,6776.3,169224.79,3151.31,6720.95,169268.92,3719.95,6404.93,169165.48,3687.15,6346.46,169209.13,4123.56,6115.29,169061.54,4093.32,6054.99,169104.54,4731.51,5668.98,168826.95,4704.17,5606.54,168868.84,5161.6,5347.09,168613.15,5135.82,5283.49,168654.27,5216.73,5305.5,168583.22,5191.12,5241.77,168624.24,5272.16,5263.62,168552.56,5246.73,5199.75,168593.48,5327.91,5221.42,168521.19,5302.64,5157.43,168562.01,294.8,7533.97,167039.45,357.28,7524.49,167201.17,357.28,7524.49,167201.17,511.41,7492.54,167552.88,511.41,7492.54,167552.88,597,7470.27,167723.21,597,7470.27,167723.21,688.78,7443.32,167888.95,688.78,7443.32,167888.95,811.26,7403.01,168086.26,811.26,7403.01,168086.26,944.25,7354.34,168273.44,944.25,7354.34,168273.44,1050.88,7312.07,168405.59,1050.88,7312.07,168405.59,1163.65,7264.55,168529.92,1163.65,7264.55,168529.92,1277.43,7213.98,168640.82,1277.43,7213.98,168640.82,1396.55,7158.47,168742.83,1396.55,7158.47,168742.83,1487.32,7114.56,168811.65,1487.32,7114.56,168811.65,1580.64,7068.07,168875.01,1580.64,7068.07,168875.01,1724.86,6993.75,168959.34,1724.86,6993.75,168959.34,1873.52,6914.31,169030.63,1873.52,6914.31,169030.63,2011.97,6837.97,169084.04,2011.97,6837.97,169084.04,2152.71,6758.26,169126.7,2152.71,6758.26,169126.7,2301.51,6671.86,169160.13,2301.51,6671.86,169160.13,2451.42,6582.81,169182.74,2451.42,6582.81,169182.74,2589.38,6499.22,169194.5,2589.38,6499.22,169194.5,2727.44,6414.1,169198.23,2727.44,6414.1,169198.23,3002.77,6240.4,169183.83,3002.77,6240.4,169183.83,3204.29,6110.24,169156.6,3204.29,6110.24,169156.6,3403.95,5978.99,169117.03,3403.95,5978.99,169117.03,3710.19,5773.67,169034.28,3710.19,5773.67,169034.28,4105.8,5502.04,168892.11,4105.8,5502.04,168892.11,4438.58,5268.6,168745.25,4438.58,5268.6,168745.25,4985.14,4876.59,168456.59,4985.14,4876.59,168456.59,5148.18,4969.04,168622.71,4973.38,4837.45,168485.4,4425.57,5230.36,168774.72,4425.57,5230.36,168774.72,4091.84,5464.47,168922,4091.84,5464.47,168922,3694.84,5737.06,169064.67,3694.84,5737.06,169064.67,3387.28,5943.25,169147.77,3387.28,5943.25,169147.77,3186.63,6075.15,169187.54,3186.63,6075.15,169187.54,2983.97,6206.06,169214.92,2983.97,6206.06,169214.92,2706.83,6380.9,169229.42,2706.83,6380.9,169229.42,2567.75,6466.64,169225.66,2567.75,6466.64,169225.66,2428.68,6550.9,169213.8,2428.68,6550.9,169213.8,2277.47,6640.73,169191,2277.47,6640.73,169191,2127.27,6727.94,169157.25,2127.27,6727.94,169157.25,1985.13,6808.44,169114.17,1985.13,6808.44,169114.17,1845.23,6885.59,169060.19,1845.23,6885.59,169060.19,1694.96,6965.89,168988.14,1694.96,6965.89,168988.14,1549.14,7041.02,168902.87,1549.14,7041.02,168902.87,1454.79,7088.02,168838.82,1454.79,7088.02,168838.82,1363.04,7132.41,168769.25,1363.04,7132.41,168769.25,1242.66,7188.51,168666.17,1242.66,7188.51,168666.17,1127.74,7239.6,168554.15,1127.74,7239.6,168554.15,1013.9,7287.56,168428.64,1013.9,7287.56,168428.64,906.33,7330.21,168295.33,906.33,7330.21,168295.33,772.27,7379.27,168106.65,772.27,7379.27,168106.65,648.91,7419.86,167907.93,648.91,7419.86,167907.93,556.55,7446.99,167741.14,556.55,7446.99,167741.14,470.46,7469.39,167569.83,470.46,7469.39,167569.83,315.56,7501.5,167216.37,315.56,7501.5,167216.37,252.81,7511.02,167053.94,252.81,7511.02,167053.94,136.15,7725.94,167108.02,5129.35,4906.43,168668.81,4973.38,4837.45,168485.4,5148.18,4969.04,168622.71,5129.35,4906.43,168668.81,203.33,7762.66,167084.83,294.8,7533.97,167039.45,136.15,7725.94,167108.02,203.33,7762.66,167084.83,203.33,7762.66,167084.83,268.11,7752.83,167252.48,268.11,7752.83,167252.48,428.69,7719.55,167618.93,428.69,7719.55,167618.93,518.45,7696.19,167797.55,518.45,7696.19,167797.55,615.16,7667.78,167972.18,615.16,7667.78,167972.18,745.01,7625.05,168181.33,745.01,7625.05,168181.33,886.98,7573.09,168381.12,886.98,7573.09,168381.12,1001.53,7527.67,168523.08,1001.53,7527.67,168523.08,1123.31,7476.36,168657.33,1123.31,7476.36,168657.33,1246.74,7421.5,168777.64,1246.74,7421.5,168777.64,1376.46,7361.05,168888.71,1376.46,7361.05,168888.71,1475.52,7313.12,168963.82,1475.52,7313.12,168963.82,1577.48,7262.33,169033.05,1577.48,7262.33,169033.05,1735.11,7181.1,169125.21,1735.11,7181.1,169125.21,1897.36,7094.4,169203.02,1897.36,7094.4,169203.02,2048.03,7011.33,169261.15,2048.03,7011.33,169261.15,2200.6,6924.91,169307.41,2200.6,6924.91,169307.41,2361.15,6831.69,169343.49,2361.15,6831.69,169343.49,2522.04,6736.13,169367.77,2522.04,6736.13,169367.77,2669.32,6646.89,169380.34,2669.32,6646.89,169380.34,2816,6556.47,169384.32,2816,6556.47,169384.32,3106.52,6373.18,169369.13,3106.52,6373.18,169369.13,3317.65,6236.81,169340.61,3317.65,6236.81,169340.61,3525.69,6100.05,169299.37,3525.69,6100.05,169299.37,3843,5887.32,169213.65,3843,5887.32,169213.65,4250.28,5607.67,169067.31,4250.28,5607.67,169067.31,4591.1,5368.59,168916.9,4591.1,5368.59,168916.9,5148.18,4969.04,168622.71,136.15,7725.94,167108.02,201.36,7716.04,167276.8,201.36,7716.04,167276.8,363.17,7682.51,167646.05,363.17,7682.51,167646.05,453.72,7658.94,167826.23,453.72,7658.94,167826.23,551.37,7630.26,168002.56,551.37,7630.26,168002.56,682.62,7587.07,168213.96,682.62,7587.07,168213.96,826.3,7534.48,168416.14,826.3,7534.48,168416.14,942.35,7488.46,168559.96,942.35,7488.46,168559.96,1065.84,7436.43,168696.1,1065.84,7436.43,168696.1,1191.11,7380.75,168818.2,1191.11,7380.75,168818.2,1322.84,7319.36,168930.98,1322.84,7319.36,168930.98,1423.48,7270.67,169007.29,1423.48,7270.67,169007.29,1527.09,7219.06,169077.63,1527.09,7219.06,169077.63,1687.26,7136.52,169171.28,1687.26,7136.52,169171.28,1852.09,7048.44,169250.33,1852.09,7048.44,169250.33,2005.08,6964.08,169309.36,2005.08,6964.08,169309.36,2159.9,6876.4,169356.29,2159.9,6876.4,169356.29,2322.69,6781.88,169392.88,2322.69,6781.88,169392.88,2485.66,6685.08,169417.47,2485.66,6685.08,169417.47,2634.71,6594.76,169430.2,2634.71,6594.76,169430.2,2783.02,6503.33,169434.22,2783.02,6503.33,169434.22,3076.44,6318.22,169418.88,3076.44,6318.22,169418.88,3289.38,6180.68,169390.11,3289.38,6180.68,169390.11,3499.03,6042.87,169348.56,3499.03,6042.87,169348.56,3818.43,5828.73,169262.27,3818.43,5828.73,169262.27,4227.93,5547.56,169115.13,4227.93,5547.56,169115.13,4570.28,5307.41,168964.05,4570.28,5307.41,168964.05,5129.35,4906.43,168668.81,194.48,7618.48,167080.98,258.46,7608.77,167246.58,258.46,7608.77,167246.58,416.82,7575.95,167607.94,416.82,7575.95,167607.94,505.13,7552.96,167783.69,505.13,7552.96,167783.69,600.14,7525.06,167955.25,600.14,7525.06,167955.25,727.44,7483.17,168160.3,727.44,7483.17,168160.3,866.31,7432.34,168355.73,866.31,7432.34,168355.73,978.12,7388.01,168494.3,978.12,7388.01,168494.3,1096.79,7338.01,168625.13,1096.79,7338.01,168625.13,1216.89,7284.63,168742.18,1216.89,7284.63,168742.18,1342.94,7225.89,168850.12,1342.94,7225.89,168850.12,1439.14,7179.35,168923.06,1439.14,7179.35,168923.06,1538.11,7130.04,168990.25,1538.11,7130.04,168990.25,1691.11,7051.2,169079.71,1691.11,7051.2,169079.71,1848.66,6967.01,169155.26,1848.66,6967.01,169155.26,1995.11,6886.26,169211.76,1995.11,6886.26,169211.76,2143.59,6802.17,169256.77,2143.59,6802.17,169256.77,2300.08,6711.31,169291.94,2300.08,6711.31,169291.94,2457.17,6617.99,169315.64,2457.17,6617.99,169315.64,2601.23,6530.7,169327.93,2601.23,6530.7,169327.93,2744.93,6442.12,169331.82,2744.93,6442.12,169331.82,3030.2,6262.14,169316.9,3030.2,6262.14,169316.9,3238.01,6127.92,169288.83,3238.01,6127.92,169288.83,3443.15,5993.06,169248.17,3443.15,5993.06,169248.17,3756.64,5782.89,169163.47,3756.64,5782.89,169163.47,4159.88,5506.02,169018.57,4159.88,5506.02,169018.57,4497.92,5268.89,168869.38,4497.92,5268.89,168869.38,5051.36,4871.94,168577.11,146.83,7724.48,167136.54,263.1,7509.61,167081.44,157.59,7722.94,167164.94,273.47,7508.13,167108.79,168.43,7721.33,167193.17,283.9,7506.58,167135.96,201.36,7716.04,167276.8,315.56,7501.5,167216.37,551.37,7630.26,168002.56,648.91,7419.86,167907.93,826.3,7534.48,168416.14,906.33,7330.21,168295.33,1065.84,7436.43,168696.1,1127.74,7239.6,168554.15,1322.84,7319.36,168930.98,1363.04,7132.41,168769.25,1527.09,7219.06,169077.63,1549.14,7041.02,168902.87,1852.09,7048.44,169250.33,1845.23,6885.59,169060.19,2159.9,6876.4,169356.29,2127.27,6727.94,169157.25,2485.66,6685.08,169417.47,2428.68,6550.9,169213.8,3076.44,6318.22,169418.88,2983.97,6206.06,169214.92,3499.03,6042.87,169348.56,3387.28,5943.25,169147.77,3818.43,5828.73,169262.27,3694.84,5737.06,169064.67,4227.93,5547.56,169115.13,4091.84,5464.47,168922,4903.96,5069.31,168794.59,4752.18,4997.3,168608.84,4959.92,5029.02,168764.18,4807.06,4957.79,168579.02,5016.17,4988.42,168733.07,4862.25,4917.95,168548.49,5072.71,4947.51,168701.24,4917.75,4877.8,168517.25,249.07,7648.31,167062.14,312.69,7638.66,167226.83,312.69,7638.66,167226.83,470.05,7606.04,167585.91,470.05,7606.04,167585.91,557.73,7583.23,167760.38,557.73,7583.23,167760.38,651.97,7555.55,167930.56,651.97,7555.55,167930.56,778.13,7514.03,168133.79,778.13,7514.03,168133.79,915.62,7463.72,168327.28,915.62,7463.72,168327.28,1026.21,7419.87,168464.33,1026.21,7419.87,168464.33,1143.48,7370.46,168593.63,1143.48,7370.46,168593.63,1262.08,7317.74,168709.23,1262.08,7317.74,168709.23,1386.5,7259.76,168815.77,1386.5,7259.76,168815.77,1481.42,7213.84,168887.74,1481.42,7213.84,168887.74,1579.06,7165.2,168954.03,1579.06,7165.2,168954.03,1729.99,7087.43,169042.28,1729.99,7087.43,169042.28,1885.44,7004.36,169116.82,1885.44,7004.36,169116.82,2030,6924.65,169172.6,2030,6924.65,169172.6,2176.65,6841.59,169217.05,2176.65,6841.59,169217.05,2331.33,6751.78,169251.81,2331.33,6751.78,169251.81,2486.73,6659.47,169275.25,2486.73,6659.47,169275.25,2629.35,6573.05,169287.42,2629.35,6573.05,169287.42,2771.72,6485.28,169291.27,2771.72,6485.28,169291.27,3054.65,6306.79,169276.48,3054.65,6306.79,169276.48,3260.97,6173.52,169248.61,3260.97,6173.52,169248.61,3464.82,6039.52,169208.2,3464.82,6039.52,169208.2,3776.6,5830.49,169123.96,3776.6,5830.49,169123.96,4178.04,5554.86,168979.71,4178.04,5554.86,168979.71,4514.84,5318.6,168831.07,4514.84,5318.6,168831.07,5066.66,4922.81,168539.65,305.05,7532.57,167066.83,213.94,7761.21,167113.17,315.38,7531.09,167094.07,224.64,7759.68,167141.38,325.76,7529.55,167121.12,235.4,7758.08,167169.42,357.28,7524.49,167201.17,268.11,7752.83,167252.48,688.78,7443.32,167888.95,615.16,7667.78,167972.18,944.25,7354.34,168273.44,886.98,7573.09,168381.12,1163.65,7264.55,168529.92,1123.31,7476.36,168657.33,1396.55,7158.47,168742.83,1376.46,7361.05,168888.71,1580.64,7068.07,168875.01,1577.48,7262.33,169033.05,1873.52,6914.31,169030.63,1897.36,7094.4,169203.02,2152.71,6758.26,169126.7,2200.6,6924.91,169307.41,2451.42,6582.81,169182.74,2522.04,6736.13,169367.77,3002.77,6240.4,169183.83,3106.52,6373.18,169369.13,3403.95,5978.99,169117.03,3525.69,6100.05,169299.37,3710.19,5773.67,169034.28,3843,5887.32,169213.65,4105.8,5502.04,168892.11,4250.28,5607.67,169067.31,4764.41,5036.1,168579.77,4923.53,5131.39,168748.08,4819.17,4996.67,168550.01,4979.3,5091.23,168717.77,4874.25,4956.92,168519.55,5035.36,5050.77,168686.76,4929.62,4916.85,168488.38,5091.71,5009.99,168655.04,169.74,7744.3,167096.42,234.73,7734.44,167264.64,234.73,7734.44,167264.64,395.93,7701.03,167632.49,395.93,7701.03,167632.49,486.08,7677.56,167811.89,486.08,7677.56,167811.89,583.27,7649.02,167987.37,583.27,7649.02,167987.37,713.81,7606.06,168197.64,713.81,7606.06,168197.64,856.64,7553.78,168398.63,856.64,7553.78,168398.63,971.94,7508.07,168541.52,971.94,7508.07,168541.52,1094.58,7456.4,168676.72,1094.58,7456.4,168676.72,1218.93,7401.12,168797.92,1218.93,7401.12,168797.92,1349.65,7340.2,168909.85,1349.65,7340.2,168909.85,1449.5,7291.9,168985.56,1449.5,7291.9,168985.56,1552.28,7240.69,169055.34,1552.28,7240.69,169055.34,1711.18,7158.81,169148.25,1711.18,7158.81,169148.25,1874.72,7071.42,169226.68,1874.72,7071.42,169226.68,2026.56,6987.7,169285.26,2026.56,6987.7,169285.26,2180.25,6900.65,169331.85,2180.25,6900.65,169331.85,2341.92,6806.79,169368.18,2341.92,6806.79,169368.18,2503.85,6710.6,169392.62,2503.85,6710.6,169392.62,2652.02,6620.83,169405.27,2652.02,6620.83,169405.27,2799.51,6529.9,169409.27,2799.51,6529.9,169409.27,3091.48,6345.7,169394.01,3091.48,6345.7,169394.01,3303.51,6208.74,169365.36,3303.51,6208.74,169365.36,3512.36,6071.46,169323.97,3512.36,6071.46,169323.97,3830.72,5858.02,169237.96,3830.72,5858.02,169237.96,4239.11,5577.62,169091.22,4239.11,5577.62,169091.22,4580.69,5338,168940.48,4580.69,5338,168940.48,5138.76,4937.73,168645.76,213.94,7761.21,167113.17,146.83,7724.48,167136.54,224.64,7759.68,167141.38,157.59,7722.94,167164.94,235.4,7758.08,167169.42,168.43,7721.33,167193.17,268.11,7752.83,167252.48,201.36,7716.04,167276.8,615.16,7667.78,167972.18,551.37,7630.26,168002.56,886.98,7573.09,168381.12,826.3,7534.48,168416.14,1123.31,7476.36,168657.33,1065.84,7436.43,168696.1,1376.46,7361.05,168888.71,1322.84,7319.36,168930.98,1577.48,7262.33,169033.05,1527.09,7219.06,169077.63,1897.36,7094.4,169203.02,1852.09,7048.44,169250.33,2200.6,6924.91,169307.41,2159.9,6876.4,169356.29,2522.04,6736.13,169367.77,2485.66,6685.08,169417.47,3106.52,6373.18,169369.13,3076.44,6318.22,169418.88,3525.69,6100.05,169299.37,3499.03,6042.87,169348.56,3843,5887.32,169213.65,3818.43,5828.73,169262.27,4250.28,5607.67,169067.31,4227.93,5547.56,169115.13,4923.53,5131.39,168748.08,4903.96,5069.31,168794.59,4979.3,5091.23,168717.77,4959.92,5029.02,168764.18,5035.36,5050.77,168686.76,5016.17,4988.42,168733.07,5091.71,5009.99,168655.04,5072.71,4947.51,168701.24,-279.61,6810.99,167366.92,-124.73,6785.84,167741.54,-124.73,6785.84,167741.54,-24.7,6764.53,167949.43,-24.7,6764.53,167949.43,121.05,6727.69,168213.45,121.05,6727.69,168213.45,252.35,6689.53,168417.92,252.35,6689.53,168417.92,395.83,6643.29,168610.76,395.83,6643.29,168610.76,505.41,6605.18,168739.32,505.41,6605.18,168739.32,621.42,6562.51,168859.82,621.42,6562.51,168859.82,738.56,6517.24,168966.79,738.56,6517.24,168966.79,861.28,6467.7,169064.64,861.28,6467.7,169064.64,994.62,6411.65,169156.02,994.62,6411.65,169156.02,1133.09,6351.24,169236.13,1133.09,6351.24,169236.13,1216.88,6313.68,169277.88,1216.88,6313.68,169277.88,1302.07,6274.79,169315.53,1302.07,6274.79,169315.53,1443.79,6208.58,169368.14,1443.79,6208.58,169368.14,1588.12,6139.41,169409.95,1588.12,6139.41,169409.95,1740.99,6064.39,169442.41,1740.99,6064.39,169442.41,1895.26,5987.01,169463.96,1895.26,5987.01,169463.96,2049.33,5908.2,169475.19,2049.33,5908.2,169475.19,2203.65,5827.85,169476.97,2203.65,5827.85,169476.97,2464.99,5688.86,169460.41,2464.99,5688.86,169460.41,2674.11,5575.26,169431.12,2674.11,5575.26,169431.12,2881.52,5460.7,169389.35,2881.52,5460.7,169389.35,3301.6,5223.52,169270.15,3301.6,5223.52,169270.15,3622.62,5038.14,169151.36,3622.62,5038.14,169151.36,3937.71,4853.1,169013.99,3937.71,4853.1,169013.99,4593.22,4459.6,168670.81,4593.22,4459.6,168670.81,4716.94,4456.33,168888.55,4571.23,4415.48,168679.2,3915.59,4809.06,169022.45,3915.59,4809.06,169022.45,3600.43,4994.15,169159.85,3600.43,4994.15,169159.85,3279.31,5179.58,169278.67,3279.31,5179.58,169278.67,2859.08,5416.85,169397.91,2859.08,5416.85,169397.91,2651.59,5531.46,169439.71,2651.59,5531.46,169439.71,2442.37,5645.11,169469.01,2442.37,5645.11,169469.01,2180.88,5784.17,169485.58,2180.88,5784.17,169485.58,2026.46,5864.57,169483.79,2026.46,5864.57,169483.79,1872.29,5943.44,169472.56,1872.29,5943.44,169472.56,1717.9,6020.88,169451,1717.9,6020.88,169451,1564.9,6095.96,169418.51,1564.9,6095.96,169418.51,1420.45,6165.19,169376.66,1420.45,6165.19,169376.66,1278.6,6231.46,169324,1278.6,6231.46,169324,1193.33,6270.39,169286.32,1193.33,6270.39,169286.32,1109.46,6307.98,169244.53,1109.46,6307.98,169244.53,970.87,6368.45,169164.34,970.87,6368.45,169164.34,837.4,6424.55,169072.88,837.4,6424.55,169072.88,714.57,6474.14,168974.95,714.57,6474.14,168974.95,597.33,6519.45,168867.87,597.33,6519.45,168867.87,481.22,6562.15,168747.29,481.22,6562.15,168747.29,371.55,6600.29,168618.62,371.55,6600.29,168618.62,227.98,6646.57,168425.65,227.98,6646.57,168425.65,96.6,6684.74,168221.06,96.6,6684.74,168221.06,-49.23,6721.61,167956.89,-49.23,6721.61,167956.89,-149.3,6742.93,167748.91,-149.3,6742.93,167748.91,-304.25,6768.09,167374.15,-304.25,6768.09,167374.15,-510.6,6883.1,167457.31,4681.76,4385.75,168901.96,4571.23,4415.48,168679.2,4716.94,4456.33,168888.55,4681.76,4385.75,168901.96,-471.18,6951.75,167445.74,-279.61,6810.99,167366.92,-510.6,6883.1,167457.31,-471.18,6951.75,167445.74,-471.18,6951.75,167445.74,-309.12,6925.43,167837.69,-309.12,6925.43,167837.69,-203.65,6902.95,168056.87,-203.65,6902.95,168056.87,-48.75,6863.8,168337.42,-48.75,6863.8,168337.42,92.06,6822.88,168556.69,92.06,6822.88,168556.69,247.31,6772.83,168765.32,247.31,6772.83,168765.32,366.83,6731.26,168905.52,366.83,6731.26,168905.52,494.13,6684.44,169037.73,494.13,6684.44,169037.73,623.38,6634.49,169155.76,623.38,6634.49,169155.76,759.37,6579.59,169264.18,759.37,6579.59,169264.18,907.56,6517.29,169365.72,907.56,6517.29,169365.72,1061.6,6450.09,169454.85,1061.6,6450.09,169454.85,1154.76,6408.34,169501.28,1154.76,6408.34,169501.28,1249.36,6365.14,169543.08,1249.36,6365.14,169543.08,1406.31,6291.83,169601.35,1406.31,6291.83,169601.35,1565.45,6215.56,169647.46,1565.45,6215.56,169647.46,1733.05,6133.31,169683.06,1733.05,6133.31,169683.06,1901.14,6049,169706.55,1901.14,6049,169706.55,2067.89,5963.7,169718.71,2067.89,5963.7,169718.71,2233.86,5877.28,169720.63,2233.86,5877.28,169720.63,2512.66,5729.02,169702.98,2512.66,5729.02,169702.98,2733.89,5608.84,169672.02,2733.89,5608.84,169672.02,2951.9,5488.43,169628.1,2951.9,5488.43,169628.1,3389.89,5241.14,169503.86,3389.89,5241.14,169503.86,3722.03,5049.35,169380.99,3722.03,5049.35,169380.99,4046.31,4858.91,169239.6,4046.31,4858.91,169239.6,4716.94,4456.33,168888.55,-510.6,6883.1,167457.31,-348.44,6856.76,167849.48,-348.44,6856.76,167849.48,-242.89,6834.28,168068.82,-242.89,6834.28,168068.82,-87.87,6795.09,168349.59,-87.87,6795.09,168349.59,53.07,6754.13,168569.06,53.07,6754.13,168569.06,208.47,6704.03,168777.9,208.47,6704.03,168777.9,328.12,6662.42,168918.25,328.12,6662.42,168918.25,455.58,6615.54,169050.62,455.58,6615.54,169050.62,585,6565.53,169168.8,585,6565.53,169168.8,721.16,6510.55,169277.37,721.16,6510.55,169277.37,869.55,6448.17,169379.04,869.55,6448.17,169379.04,1023.8,6380.88,169468.29,1023.8,6380.88,169468.29,1117.08,6339.07,169514.78,1117.08,6339.07,169514.78,1211.81,6295.82,169556.64,1211.81,6295.82,169556.64,1368.97,6222.4,169614.98,1368.97,6222.4,169614.98,1528.31,6146.04,169661.15,1528.31,6146.04,169661.15,1696.11,6063.69,169696.79,1696.11,6063.69,169696.79,1864.38,5979.29,169720.3,1864.38,5979.29,169720.3,2031.3,5893.9,169732.48,2031.3,5893.9,169732.48,2197.43,5807.41,169734.4,2197.43,5807.41,169734.4,2476.46,5659.02,169716.74,2476.46,5659.02,169716.74,2697.86,5538.75,169685.75,2697.86,5538.75,169685.75,2916.01,5418.26,169641.81,2916.01,5418.26,169641.81,3354.24,5170.83,169517.5,3354.24,5170.83,169517.5,3686.53,4978.95,169394.57,3686.53,4978.95,169394.57,4010.93,4788.44,169253.13,4010.93,4788.44,169253.13,4681.76,4385.75,168901.96,-407.43,6825.59,167415.73,-248.87,6799.84,167799.2,-248.87,6799.84,167799.2,-146.06,6777.94,168012.86,-146.06,6777.94,168012.86,4.36,6739.92,168285.32,4.36,6739.92,168285.32,140.52,6700.35,168497.35,140.52,6700.35,168497.35,290.01,6652.16,168698.26,290.01,6652.16,168698.26,404.67,6612.28,168832.77,404.67,6612.28,168832.77,526.46,6567.49,168959.25,526.46,6567.49,168959.25,649.78,6519.83,169071.87,649.78,6519.83,169071.87,779.28,6467.55,169175.12,779.28,6467.55,169175.12,920.21,6408.31,169271.69,920.21,6408.31,169271.69,1066.63,6344.43,169356.41,1066.63,6344.43,169356.41,1155.21,6304.73,169400.55,1155.21,6304.73,169400.55,1245.2,6263.64,169440.32,1245.2,6263.64,169440.32,1394.71,6193.8,169495.82,1394.71,6193.8,169495.82,1546.6,6121,169539.83,1546.6,6121,169539.83,1707,6042.28,169573.9,1707,6042.28,169573.9,1868.33,5961.36,169596.43,1868.33,5961.36,169596.43,2028.88,5879.24,169608.14,2028.88,5879.24,169608.14,2189.15,5795.79,169609.99,2189.15,5795.79,169609.99,2459.42,5652.06,169592.87,2459.42,5652.06,169592.87,2674.72,5535.1,169562.73,2674.72,5535.1,169562.73,2887.54,5417.55,169519.86,2887.54,5417.55,169519.86,3316.78,5175.2,169398.08,3316.78,5175.2,169398.08,3643.48,4986.55,169277.21,3643.48,4986.55,169277.21,3963.26,4798.75,169137.79,3963.26,4798.75,169137.79,4626.5,4400.61,168790.58,-499.79,6881.7,167485.86,-293.87,6766.74,167401.55,-488.88,6880.23,167514.27,-283.41,6765.33,167428.79,-477.9,6878.7,167542.51,-272.89,6763.86,167455.85,-444.5,6873.7,167626.15,-240.93,6759.08,167535.88,-242.89,6834.28,168068.82,-49.23,6721.61,167956.89,-87.87,6795.09,168349.59,96.6,6684.74,168221.06,208.47,6704.03,168777.9,371.55,6600.29,168618.62,455.58,6615.54,169050.62,597.33,6519.45,168867.87,721.16,6510.55,169277.37,837.4,6424.55,169072.88,1023.8,6380.88,169468.29,1109.46,6307.98,169244.53,1211.81,6295.82,169556.64,1278.6,6231.46,169324,1528.31,6146.04,169661.15,1564.9,6095.96,169418.51,1864.38,5979.29,169720.3,1872.29,5943.44,169472.56,2197.43,5807.41,169734.4,2180.88,5784.17,169485.58,2476.46,5659.02,169716.74,2442.37,5645.11,169469.01,2916.01,5418.26,169641.81,2859.08,5416.85,169397.91,3354.24,5170.83,169517.5,3279.31,5179.58,169278.67,4010.93,4788.44,169253.13,3915.59,4809.06,169022.45,4502.85,4494.21,169002.8,4395.96,4521.74,168777.98,4591.99,4440.26,168953.18,4483.25,4468.91,168729.39,4621.86,4422.14,168936.28,4512.51,4451.16,168712.83,4651.79,4403.96,168919.2,4541.85,4433.34,168696.09,-375.4,6881.37,167406.33,-216.92,6855.63,167789.61,-216.92,6855.63,167789.61,-114.17,6833.74,168003.15,-114.17,6833.74,168003.15,36.15,6795.74,168275.44,36.15,6795.74,168275.44,172.21,6756.2,168487.3,172.21,6756.2,168487.3,321.57,6708.06,168688.04,321.57,6708.06,168688.04,436.12,6668.22,168822.42,436.12,6668.22,168822.42,557.78,6623.48,168948.77,557.78,6623.48,168948.77,680.97,6575.87,169061.28,680.97,6575.87,169061.28,810.33,6523.64,169164.41,810.33,6523.64,169164.41,951.09,6464.47,169260.87,951.09,6464.47,169260.87,1097.34,6400.67,169345.49,1097.34,6400.67,169345.49,1185.82,6361.01,169389.58,1185.82,6361.01,169389.58,1275.71,6319.96,169429.3,1275.71,6319.96,169429.3,1425.05,6250.21,169484.74,1425.05,6250.21,169484.74,1576.78,6177.49,169528.7,1576.78,6177.49,169528.7,1737.02,6098.85,169562.74,1737.02,6098.85,169562.74,1898.2,6018,169585.25,1898.2,6018,169585.25,2058.61,5935.95,169596.95,2058.61,5935.95,169596.95,2218.76,5852.57,169598.8,2218.76,5852.57,169598.8,2488.83,5708.94,169581.69,2488.83,5708.94,169581.69,2704,5592.05,169551.57,2704,5592.05,169551.57,2916.71,5474.56,169508.72,2916.71,5474.56,169508.72,3345.74,5232.33,169387,3345.74,5232.33,169387,3672.33,5043.74,169266.17,3672.33,5043.74,169266.17,3992.01,4856,169126.8,3992.01,4856,169126.8,4655.08,4457.96,168779.68,-269.24,6809.65,167394.31,-460.37,6950.35,167474.28,-258.78,6808.24,167421.54,-449.47,6948.88,167502.68,-248.27,6806.77,167448.59,-438.5,6947.35,167530.9,-216.32,6801.99,167528.59,-405.12,6942.36,167614.49,-24.7,6764.53,167949.43,-203.65,6902.95,168056.87,121.05,6727.69,168213.45,-48.75,6863.8,168337.42,395.83,6643.29,168610.76,247.31,6772.83,168765.32,621.42,6562.51,168859.82,494.13,6684.44,169037.73,861.28,6467.7,169064.64,759.37,6579.59,169264.18,1133.09,6351.24,169236.13,1061.6,6450.09,169454.85,1302.07,6274.79,169315.53,1249.36,6365.14,169543.08,1588.12,6139.41,169409.95,1565.45,6215.56,169647.46,1895.26,5987.01,169463.96,1901.14,6049,169706.55,2203.65,5827.85,169476.97,2233.86,5877.28,169720.63,2464.99,5688.86,169460.41,2512.66,5729.02,169702.98,2881.52,5460.7,169389.35,2951.9,5488.43,169628.1,3301.6,5223.52,169270.15,3389.89,5241.14,169503.86,3937.71,4853.1,169013.99,4046.31,4858.91,169239.6,4417.97,4565.84,168769.58,4538.08,4564.77,168989.35,4505.25,4513.02,168721,4627.2,4510.83,168939.74,4534.51,4495.27,168704.44,4657.05,4492.72,168922.85,4563.85,4477.46,168687.7,4686.98,4474.55,168905.77,-490.89,6917.43,167451.52,-328.78,6891.1,167843.58,-328.78,6891.1,167843.58,-223.27,6868.61,168062.84,-223.27,6868.61,168062.84,-68.31,6829.44,168343.51,-68.31,6829.44,168343.51,72.56,6788.5,168562.87,72.56,6788.5,168562.87,227.89,6738.43,168771.61,227.89,6738.43,168771.61,347.47,6696.84,168911.89,347.47,6696.84,168911.89,474.86,6649.99,169044.17,474.86,6649.99,169044.17,604.19,6600.01,169162.28,604.19,6600.01,169162.28,740.27,6545.07,169270.77,740.27,6545.07,169270.77,888.56,6482.73,169372.38,888.56,6482.73,169372.38,1042.7,6415.49,169461.57,1042.7,6415.49,169461.57,1135.92,6373.7,169508.03,1135.92,6373.7,169508.03,1230.58,6330.48,169549.86,1230.58,6330.48,169549.86,1387.64,6257.12,169608.17,1387.64,6257.12,169608.17,1546.88,6180.8,169654.3,1546.88,6180.8,169654.3,1714.58,6098.5,169689.93,1714.58,6098.5,169689.93,1882.76,6014.14,169713.42,1882.76,6014.14,169713.42,2049.6,5928.8,169725.59,2049.6,5928.8,169725.59,2215.65,5842.35,169727.51,2215.65,5842.35,169727.51,2494.56,5694.02,169709.86,2494.56,5694.02,169709.86,2715.88,5573.8,169678.88,2715.88,5573.8,169678.88,2933.95,5453.34,169634.96,2933.95,5453.34,169634.96,3372.07,5205.98,169510.68,3372.07,5205.98,169510.68,3704.28,5014.15,169387.78,3704.28,5014.15,169387.78,4028.62,4823.67,169246.37,4028.62,4823.67,169246.37,4699.35,4421.04,168895.26,-460.37,6950.35,167474.28,-499.79,6881.7,167485.86,-449.47,6948.88,167502.68,-488.88,6880.23,167514.27,-438.5,6947.35,167530.9,-477.9,6878.7,167542.51,-405.12,6942.36,167614.49,-444.5,6873.7,167626.15,-203.65,6902.95,168056.87,-242.89,6834.28,168068.82,-48.75,6863.8,168337.42,-87.87,6795.09,168349.59,247.31,6772.83,168765.32,208.47,6704.03,168777.9,494.13,6684.44,169037.73,455.58,6615.54,169050.62,759.37,6579.59,169264.18,721.16,6510.55,169277.37,1061.6,6450.09,169454.85,1023.8,6380.88,169468.29,1249.36,6365.14,169543.08,1211.81,6295.82,169556.64,1565.45,6215.56,169647.46,1528.31,6146.04,169661.15,1901.14,6049,169706.55,1864.38,5979.29,169720.3,2233.86,5877.28,169720.63,2197.43,5807.41,169734.4,2512.66,5729.02,169702.98,2476.46,5659.02,169716.74,2951.9,5488.43,169628.1,2916.01,5418.26,169641.81,3389.89,5241.14,169503.86,3354.24,5170.83,169517.5,4046.31,4858.91,169239.6,4010.93,4788.44,169253.13,4538.08,4564.77,168989.35,4502.85,4494.21,169002.8,4627.2,4510.83,168939.74,4591.99,4440.26,168953.18,4657.05,4492.72,168922.85,4621.86,4422.14,168936.28,4686.98,4474.55,168905.77,4651.79,4403.96,168919.2,-495.82,5253.35,167494.61,-339.22,5230.86,167873.6,-339.22,5230.86,167873.6,-237.71,5212.18,168084.11,-237.71,5212.18,168084.11,-89.35,5180.17,168351.68,-89.35,5180.17,168351.68,44.66,5147.25,168558.97,44.66,5147.25,168558.97,191.63,5107.44,168754.76,191.63,5107.44,168754.76,304.02,5074.75,168885.19,304.02,5074.75,168885.19,423.33,5038.17,169007.55,423.33,5038.17,169007.55,543.78,4999.46,169115.97,543.78,4999.46,169115.97,670.31,4957.09,169215.19,670.31,4957.09,169215.19,824.1,4903.46,169317.59,824.1,4903.46,169317.59,984.78,4845.21,169405.65,984.78,4845.21,169405.65,1071.87,4812.78,169446.02,1071.87,4812.78,169446.02,1160.44,4779.22,169482.16,1160.44,4779.22,169482.16,1307.7,4722.24,169532.07,1307.7,4722.24,169532.07,1457.65,4662.82,169570.94,1457.65,4662.82,169570.94,1616.32,4598.54,169600.07,1616.32,4598.54,169600.07,1776.37,4532.37,169618.09,1776.37,4532.37,169618.09,1936.03,4465.15,169625.65,1936.03,4465.15,169625.65,2095.87,4396.73,169623.64,2095.87,4396.73,169623.64,2366.26,4278.68,169600.48,2366.26,4278.68,169600.48,2582.38,4182.43,169565.8,2582.38,4182.43,169565.8,2796.58,4085.55,169518.63,2796.58,4085.55,169518.63,3095.26,3948.19,169433.58,3095.26,3948.19,169433.58,3389.11,3810.72,169329.96,3389.11,3810.72,169329.96,3828.95,3601.14,169142.19,3828.95,3601.14,169142.19,4499.88,3273.8,168790.34,4499.88,3273.8,168790.34,4568.53,3162.9,169004.15,4472.13,3234.91,168775.57,3802.64,3561.56,169126.67,3802.64,3561.56,169126.67,3364.02,3770.55,169313.92,3364.02,3770.55,169313.92,3071.16,3907.56,169417.19,3071.16,3907.56,169417.19,2773.66,4044.37,169501.91,2773.66,4044.37,169501.91,2560.45,4140.81,169548.87,2560.45,4140.81,169548.87,2345.46,4236.56,169583.36,2345.46,4236.56,169583.36,2076.69,4353.9,169606.38,2076.69,4353.9,169606.38,1917.93,4421.85,169608.38,1917.93,4421.85,169608.38,1759.45,4488.58,169600.88,1759.45,4488.58,169600.88,1600.68,4554.22,169583.01,1600.68,4554.22,169583.01,1443.39,4617.94,169554.13,1443.39,4617.94,169554.13,1294.81,4676.82,169515.62,1294.81,4676.82,169515.62,1148.97,4733.25,169466.18,1148.97,4733.25,169466.18,1061.27,4766.48,169430.4,1061.27,4766.48,169430.4,975.05,4798.59,169390.44,975.05,4798.59,169390.44,815.98,4856.25,169303.26,815.98,4856.25,169303.26,663.71,4909.35,169201.87,663.71,4909.35,169201.87,538.39,4951.32,169103.6,538.39,4951.32,169103.6,419.03,4989.67,168996.16,419.03,4989.67,168996.16,300.74,5025.95,168874.84,300.74,5025.95,168874.84,189.24,5058.38,168745.44,189.24,5058.38,168745.44,43.32,5097.9,168551.04,43.32,5097.9,168551.04,-89.85,5130.62,168345.05,-89.85,5130.62,168345.05,-237.41,5162.45,168078.92,-237.41,5162.45,168078.92,-338.44,5181.05,167869.4,-338.44,5181.05,167869.4,-494.42,5203.45,167491.92,-494.42,5203.45,167491.92,-727.96,5177.19,167578.47,4524.14,3100.68,168980.52,4472.13,3234.91,168775.57,4568.53,3162.9,169004.15,4524.14,3100.68,168980.52,-730.21,5257.04,167582.77,-495.82,5253.35,167494.61,-727.96,5177.19,167578.47,-730.21,5257.04,167582.77,-730.21,5257.04,167582.77,-567.09,5233.61,167977.48,-567.09,5233.61,167977.48,-460.63,5214.01,168198.25,-460.63,5214.01,168198.25,-303.91,5180.2,168480.87,-303.91,5180.2,168480.87,-161.16,5145.12,168701.68,-161.16,5145.12,168701.68,-3.3,5102.37,168911.93,-3.3,5102.37,168911.93,118.31,5066.99,169053.05,118.31,5066.99,169053.05,248.17,5027.16,169186.22,248.17,5027.16,169186.22,380,4984.8,169304.87,380,4984.8,169304.87,519.07,4938.23,169413.91,519.07,4938.23,169413.91,688.67,4879.08,169526.82,688.67,4879.08,169526.82,866.1,4814.77,169624.08,866.1,4814.77,169624.08,962.24,4778.97,169668.64,962.24,4778.97,169668.64,1059.9,4741.97,169708.49,1059.9,4741.97,169708.49,1221.88,4679.29,169763.4,1221.88,4679.29,169763.4,1386.15,4614.19,169805.99,1386.15,4614.19,169805.99,1559.07,4544.14,169837.75,1559.07,4544.14,169837.75,1732.48,4472.45,169857.27,1732.48,4472.45,169857.27,1904.42,4400.06,169865.42,1904.42,4400.06,169865.42,2075.52,4326.82,169863.27,2075.52,4326.82,169863.27,2362.77,4201.41,169838.68,2362.77,4201.41,169838.68,2590.6,4099.95,169802.15,2590.6,4099.95,169802.15,2815.02,3998.44,169752.73,2815.02,3998.44,169752.73,3126.06,3855.4,169664.18,3126.06,3855.4,169664.18,3430.2,3713.12,169556.93,3430.2,3713.12,169556.93,3882.76,3497.48,169363.74,3882.76,3497.48,169363.74,4568.53,3162.9,169004.15,-727.96,5177.19,167578.47,-565.85,5153.9,167970.76,-565.85,5153.9,167970.76,-460.15,5134.44,168189.96,-460.15,5134.44,168189.96,-304.71,5100.91,168470.26,-304.71,5100.91,168470.26,-163.31,5066.16,168688.98,-163.31,5066.16,168688.98,-7.13,5023.86,168897.02,-7.13,5023.86,168897.02,113.06,4988.9,169036.48,113.06,4988.9,169036.48,241.3,4949.57,169167.99,241.3,4949.57,169167.99,371.38,4907.77,169285.07,371.38,4907.77,169285.07,508.52,4861.85,169392.6,508.52,4861.85,169392.6,675.68,4803.55,169503.9,675.68,4803.55,169503.9,850.54,4740.17,169599.74,850.54,4740.17,169599.74,945.29,4704.88,169643.65,945.29,4704.88,169643.65,1041.55,4668.41,169682.93,1041.55,4668.41,169682.93,1201.26,4606.61,169737.07,1201.26,4606.61,169737.07,1363.33,4542.39,169779.09,1363.33,4542.39,169779.09,1534.06,4473.23,169810.44,1534.06,4473.23,169810.44,1705.41,4402.39,169829.74,1705.41,4402.39,169829.74,1875.46,4330.79,169837.79,1875.46,4330.79,169837.79,2044.83,4258.29,169835.66,2044.83,4258.29,169835.66,2329.49,4134.01,169811.3,2329.49,4134.01,169811.3,2555.51,4033.36,169775.05,2555.51,4033.36,169775.05,2778.36,3932.56,169725.98,2778.36,3932.56,169725.98,3087.49,3790.4,169637.96,3087.49,3790.4,169637.96,3390.05,3648.86,169531.27,3390.05,3648.86,169531.27,3840.66,3434.15,169338.92,3840.66,3434.15,169338.92,4524.14,3100.68,168980.52,-611.19,5190.32,167535.2,-452.14,5167.47,167920.08,-452.14,5167.47,167920.08,-348.78,5148.44,168134.44,-348.78,5148.44,168134.44,-197.28,5115.76,168407.65,-197.28,5115.76,168407.65,-60,5082.03,168620.01,-60,5082.03,168620.01,91.06,5041.12,168821.23,91.06,5041.12,168821.23,206.9,5007.42,168955.66,206.9,5007.42,168955.66,330.17,4969.62,169082.07,330.17,4969.62,169082.07,454.88,4929.55,169194.33,454.88,4929.55,169194.33,586.12,4885.6,169297.24,586.12,4885.6,169297.24,745.83,4829.9,169403.58,745.83,4829.9,169403.58,912.79,4769.38,169495.09,912.79,4769.38,169495.09,1003.28,4735.68,169537.03,1003.28,4735.68,169537.03,1095.26,4700.83,169574.56,1095.26,4700.83,169574.56,1248.04,4641.72,169626.35,1248.04,4641.72,169626.35,1403.36,4580.17,169666.61,1403.36,4580.17,169666.61,1567.37,4513.73,169696.73,1567.37,4513.73,169696.73,1732.43,4445.49,169715.31,1732.43,4445.49,169715.31,1896.7,4376.32,169723.08,1896.7,4376.32,169723.08,2060.76,4306.1,169721.02,2060.76,4306.1,169721.02,2337.47,4185.29,169697.33,2337.47,4185.29,169697.33,2557.98,4087.09,169661.96,2557.98,4087.09,169661.96,2776.01,3988.46,169613.95,2776.01,3988.46,169613.95,3079.33,3848.98,169527.58,3079.33,3848.98,169527.58,3377.04,3709.71,169422.6,3377.04,3709.71,169422.6,3821.65,3497.85,169232.8,3821.65,3497.85,169232.8,4498.14,3167.8,168878.04,-717.16,5175.92,167607.05,-483.99,5202.22,167519.51,-706.27,5174.6,167635.48,-473.48,5200.95,167546.95,-695.3,5173.22,167663.74,-462.9,5199.62,167574.2,-661.93,5168.77,167747.41,-430.75,5195.33,167654.81,-460.15,5134.44,168189.96,-237.41,5162.45,168078.92,-304.71,5100.91,168470.26,-89.85,5130.62,168345.05,-7.13,5023.86,168897.02,189.24,5058.38,168745.44,241.3,4949.57,169167.99,419.03,4989.67,168996.16,508.52,4861.85,169392.6,663.71,4909.35,169201.87,850.54,4740.17,169599.74,975.05,4798.59,169390.44,1041.55,4668.41,169682.93,1148.97,4733.25,169466.18,1363.33,4542.39,169779.09,1443.39,4617.94,169554.13,1705.41,4402.39,169829.74,1759.45,4488.58,169600.88,2044.83,4258.29,169835.66,2076.69,4353.9,169606.38,2329.49,4134.01,169811.3,2345.46,4236.56,169583.36,2778.36,3932.56,169725.98,2773.66,4044.37,169501.91,3390.05,3648.86,169531.27,3364.02,3770.55,169313.92,3840.66,3434.15,169338.92,3802.64,3561.56,169126.67,4341.78,3190.49,169083.33,4293.12,3323.08,168876.5,4432.64,3145.82,169032.73,4382.27,3279.24,168826.85,4463.08,3130.82,169015.5,4412.16,3264.51,168809.93,4493.59,3115.77,168998.08,4442.13,3249.73,168792.83,-613.02,5255.2,167538.69,-453.16,5232.24,167925.54,-453.16,5232.24,167925.54,-349.17,5213.09,168141.18,-349.17,5213.09,168141.18,-196.63,5180.19,168416.28,-196.63,5180.19,168416.28,-58.25,5146.18,168630.33,-58.25,5146.18,168630.33,94.17,5104.91,168833.35,94.17,5104.91,168833.35,211.16,5070.87,168969.12,211.16,5070.87,168969.12,335.75,5032.67,169096.88,335.75,5032.67,169096.88,461.89,4992.13,169210.42,461.89,4992.13,169210.42,594.69,4947.66,169314.55,594.69,4947.66,169314.55,756.38,4891.27,169422.21,756.38,4891.27,169422.21,925.44,4829.99,169514.87,925.44,4829.99,169514.87,1017.05,4795.87,169557.33,1017.05,4795.87,169557.33,1110.17,4760.59,169595.33,1110.17,4760.59,169595.33,1264.79,4700.77,169647.74,1264.79,4700.77,169647.74,1421.9,4638.51,169688.47,1421.9,4638.51,169688.47,1587.69,4571.34,169718.91,1587.69,4571.34,169718.91,1754.43,4502.41,169737.68,1754.43,4502.41,169737.68,1920.23,4432.6,169745.53,1920.23,4432.6,169745.53,2085.7,4361.77,169743.45,2085.7,4361.77,169743.45,2364.52,4240.04,169719.58,2364.52,4240.04,169719.58,2586.49,4141.19,169683.98,2586.49,4141.19,169683.98,2805.8,4041.99,169635.68,2805.8,4041.99,169635.68,3110.66,3901.8,169548.88,3110.66,3901.8,169548.88,3409.66,3761.92,169443.44,3409.66,3761.92,169443.44,3855.86,3549.31,169252.96,3855.86,3549.31,169252.96,4534.2,3218.35,168897.24,-485.36,5252.13,167522.3,-719.35,5255.77,167611.51,-474.8,5250.85,167549.84,-708.39,5254.44,167640.1,-464.18,5249.51,167577.2,-697.36,5253.05,167668.53,-431.91,5245.21,167658.11,-663.79,5248.57,167752.7,-237.71,5212.18,168084.11,-460.63,5214.01,168198.25,-89.35,5180.17,168351.68,-303.91,5180.2,168480.87,191.63,5107.44,168754.76,-3.3,5102.37,168911.93,423.33,5038.17,169007.55,248.17,5027.16,169186.22,670.31,4957.09,169215.19,519.07,4938.23,169413.91,984.78,4845.21,169405.65,866.1,4814.77,169624.08,1160.44,4779.22,169482.16,1059.9,4741.97,169708.49,1457.65,4662.82,169570.94,1386.15,4614.19,169805.99,1776.37,4532.37,169618.09,1732.48,4472.45,169857.27,2095.87,4396.73,169623.64,2075.52,4326.82,169863.27,2366.26,4278.68,169600.48,2362.77,4201.41,169838.68,2796.58,4085.55,169518.63,2815.02,3998.44,169752.73,3389.11,3810.72,169329.96,3430.2,3713.12,169556.93,3828.95,3601.14,169142.19,3882.76,3497.48,169363.74,4320.52,3362.13,168891.46,4385.63,3252.98,169107.27,4409.85,3318.21,168841.71,4476.76,3208.17,169056.51,4439.79,3303.45,168824.76,4507.29,3193.13,169039.23,4469.81,3288.64,168807.63,4537.89,3178.03,169021.77,-729.09,5217.11,167580.62,-566.47,5193.75,167974.12,-566.47,5193.75,167974.12,-460.39,5174.22,168194.11,-460.39,5174.22,168194.11,-304.31,5140.55,168475.57,-304.31,5140.55,168475.57,-162.24,5105.64,168695.33,-162.24,5105.64,168695.33,-5.21,5063.11,168904.47,-5.21,5063.11,168904.47,115.69,5027.95,169044.76,115.69,5027.95,169044.76,244.74,4988.37,169177.11,244.74,4988.37,169177.11,375.69,4946.29,169294.97,375.69,4946.29,169294.97,513.8,4900.04,169403.26,513.8,4900.04,169403.26,682.18,4841.32,169515.36,682.18,4841.32,169515.36,858.32,4777.47,169611.91,858.32,4777.47,169611.91,953.76,4741.93,169656.15,953.76,4741.93,169656.15,1050.72,4705.19,169695.71,1050.72,4705.19,169695.71,1211.57,4642.95,169750.24,1211.57,4642.95,169750.24,1374.74,4578.29,169792.54,1374.74,4578.29,169792.54,1546.56,4508.69,169824.09,1546.56,4508.69,169824.09,1718.95,4437.42,169843.5,1718.95,4437.42,169843.5,1889.94,4365.42,169851.6,1889.94,4365.42,169851.6,2060.18,4292.56,169849.47,2060.18,4292.56,169849.47,2346.13,4167.71,169824.99,2346.13,4167.71,169824.99,2573.05,4066.66,169788.6,2573.05,4066.66,169788.6,2796.69,3965.5,169739.35,2796.69,3965.5,169739.35,3106.78,3822.9,169651.07,3106.78,3822.9,169651.07,3410.13,3680.99,169544.1,3410.13,3680.99,169544.1,3861.71,3465.81,169351.33,3861.71,3465.81,169351.33,4546.33,3131.79,168992.33,-719.35,5255.77,167611.51,-717.16,5175.92,167607.05,-708.39,5254.44,167640.1,-706.27,5174.6,167635.48,-697.36,5253.05,167668.53,-695.3,5173.22,167663.74,-663.79,5248.57,167752.7,-661.93,5168.77,167747.41,-460.63,5214.01,168198.25,-460.15,5134.44,168189.96,-303.91,5180.2,168480.87,-304.71,5100.91,168470.26,-3.3,5102.37,168911.93,-7.13,5023.86,168897.02,248.17,5027.16,169186.22,241.3,4949.57,169167.99,519.07,4938.23,169413.91,508.52,4861.85,169392.6,866.1,4814.77,169624.08,850.54,4740.17,169599.74,1059.9,4741.97,169708.49,1041.55,4668.41,169682.93,1386.15,4614.19,169805.99,1363.33,4542.39,169779.09,1732.48,4472.45,169857.27,1705.41,4402.39,169829.74,2075.52,4326.82,169863.27,2044.83,4258.29,169835.66,2362.77,4201.41,169838.68,2329.49,4134.01,169811.3,2815.02,3998.44,169752.73,2778.36,3932.56,169725.98,3430.2,3713.12,169556.93,3390.05,3648.86,169531.27,3882.76,3497.48,169363.74,3840.66,3434.15,169338.92,4385.63,3252.98,169107.27,4341.78,3190.49,169083.33,4476.76,3208.17,169056.51,4432.64,3145.82,169032.73,4507.29,3193.13,169039.23,4463.08,3130.82,169015.5,4537.89,3178.03,169021.77,4493.59,3115.77,168998.08,-499,2643.6,167497.22,-344.64,2632.36,167876.51,-344.64,2632.36,167876.51,-244.34,2623.02,168087.34,-244.34,2623.02,168087.34,-102.19,2607.57,168347.42,-102.19,2607.57,168347.42,57.73,2587.62,168594.87,57.73,2587.62,168594.87,190.81,2569.29,168770.47,190.81,2569.29,168770.47,335.55,2547.83,168934.86,335.55,2547.83,168934.86,451.44,2529.65,169048.93,451.44,2529.65,169048.93,574.07,2509.56,169154.57,574.07,2509.56,169154.57,697.81,2488.46,169246.97,697.81,2488.46,169246.97,827.37,2465.6,169329.93,827.37,2465.6,169329.93,922.12,2448.4,169382.42,922.12,2448.4,169382.42,1019.37,2430.38,169429.71,1019.37,2430.38,169429.71,1118.89,2411.58,169471.71,1118.89,2411.58,169471.71,1220.43,2392.03,169508.3,1220.43,2392.03,169508.3,1367.46,2363.14,169550.84,1367.46,2363.14,169550.84,1517.32,2333.02,169582.59,1517.32,2333.02,169582.59,1676.03,2300.46,169604.59,1676.03,2300.46,169604.59,1836.2,2266.98,169615.78,1836.2,2266.98,169615.78,1978.41,2236.76,169617.19,1978.41,2236.76,169617.19,2120.86,2206.07,169611.19,2120.86,2206.07,169611.19,2405.31,2143.63,169579.04,2405.31,2143.63,169579.04,2689.79,2079.82,169522.85,2689.79,2079.82,169522.85,2904.16,2030.92,169466.34,2904.16,2030.92,169466.34,3116.21,1981.93,169399.54,3116.21,1981.93,169399.54,3443.19,1905.29,169277.22,3443.19,1905.29,169277.22,3763.98,1828.91,169136.43,3763.98,1828.91,169136.43,4433.46,1666.23,168785.17,4433.46,1666.23,168785.17,4543.65,1605.75,169001.8,4417.25,1619.65,168776.95,3748.68,1782.11,169127.74,3748.68,1782.11,169127.74,3428.45,1858.35,169268.28,3428.45,1858.35,169268.28,3102.14,1934.84,169390.35,3102.14,1934.84,169390.35,2890.6,1983.71,169456.98,2890.6,1983.71,169456.98,2676.82,2032.47,169513.34,2676.82,2032.47,169513.34,2393.23,2096.09,169569.36,2393.23,2096.09,169569.36,2109.84,2158.29,169601.39,2109.84,2158.29,169601.39,1967.99,2188.85,169607.36,1967.99,2188.85,169607.36,1826.44,2218.93,169605.96,1826.44,2218.93,169605.96,1667.05,2252.25,169594.82,1667.05,2252.25,169594.82,1509.18,2284.64,169572.94,1509.18,2284.64,169572.94,1360.17,2314.59,169541.37,1360.17,2314.59,169541.37,1214,2343.31,169499.09,1214,2343.31,169499.09,1113.08,2362.74,169462.71,1113.08,2362.74,169462.71,1014.18,2381.43,169420.98,1014.18,2381.43,169420.98,917.52,2399.34,169373.97,917.52,2399.34,169373.97,823.34,2416.43,169321.8,823.34,2416.43,169321.8,694.55,2439.16,169239.33,694.55,2439.16,169239.33,571.51,2460.13,169147.45,571.51,2460.13,169147.45,449.54,2480.12,169042.38,449.54,2480.12,169042.38,334.22,2498.21,168928.87,334.22,2498.21,168928.87,190.13,2519.57,168765.22,190.13,2519.57,168765.22,57.59,2537.83,168590.32,57.59,2537.83,168590.32,-101.78,2557.71,168343.73,-101.78,2557.71,168343.73,-243.51,2573.11,168084.4,-243.51,2573.11,168084.4,-343.56,2582.43,167874.11,-343.56,2582.43,167874.11,-497.59,2593.64,167495.62,-497.59,2593.64,167495.62,-731.59,2569.29,167581.52,4517.71,1531.22,168988.64,4417.25,1619.65,168776.95,4543.65,1605.75,169001.8,4517.71,1531.22,168988.64,-733.84,2649.22,167584.08,-499,2643.6,167497.22,-731.59,2569.29,167581.52,-733.84,2649.22,167584.08,-733.84,2649.22,167584.08,-573.03,2637.51,167979.17,-573.03,2637.51,167979.17,-467.79,2627.71,168200.38,-467.79,2627.71,168200.38,-317.54,2611.39,168475.31,-317.54,2611.39,168475.31,-146.79,2590.08,168739.44,-146.79,2590.08,168739.44,-3.29,2570.31,168928.77,-3.29,2570.31,168928.77,154.24,2546.96,169107.64,154.24,2546.96,169107.64,281.41,2527,169232.8,281.41,2527,169232.8,416.88,2504.8,169349.48,416.88,2504.8,169349.48,554.38,2481.36,169452.14,554.38,2481.36,169452.14,698.97,2455.84,169544.71,698.97,2455.84,169544.71,804.99,2436.6,169603.42,804.99,2436.6,169603.42,913.9,2416.42,169656.37,913.9,2416.42,169656.37,1025.34,2395.36,169703.41,1025.34,2395.36,169703.41,1138.92,2373.5,169744.36,1138.92,2373.5,169744.36,1302.95,2341.27,169791.84,1302.95,2341.27,169791.84,1469.38,2307.82,169827.11,1469.38,2307.82,169827.11,1644.6,2271.88,169851.41,1644.6,2271.88,169851.41,1820.25,2235.16,169863.7,1820.25,2235.16,169863.7,1975.14,2202.25,169865.26,1975.14,2202.25,169865.26,2129.34,2169.02,169858.78,2129.34,2169.02,169858.78,2434.58,2102.02,169824.28,2434.58,2102.02,169824.28,2736.63,2034.27,169764.63,2736.63,2034.27,169764.63,2962.41,1982.77,169705.12,2962.41,1982.77,169705.12,3184.44,1931.47,169635.18,3184.44,1931.47,169635.18,3524.67,1851.73,169507.94,3524.67,1851.73,169507.94,3856.36,1772.75,169362.36,3856.36,1772.75,169362.36,4543.65,1605.75,169001.8,-731.59,2569.29,167581.52,-571.31,2557.62,167975.32,-571.31,2557.62,167975.32,-466.47,2547.86,168195.68,-466.47,2547.86,168195.68,-316.88,2531.61,168469.4,-316.88,2531.61,168469.4,-147.01,2510.41,168732.17,-147.01,2510.41,168732.17,-4.36,2490.76,168920.37,-4.36,2490.76,168920.37,152.12,2467.56,169098.06,152.12,2467.56,169098.06,278.37,2447.75,169222.32,278.37,2447.75,169222.32,412.78,2425.72,169338.09,412.78,2425.72,169338.09,549.16,2402.48,169439.92,549.16,2402.48,169439.92,692.52,2377.17,169531.7,692.52,2377.17,169531.7,797.62,2358.1,169589.9,797.62,2358.1,169589.9,905.59,2338.09,169642.39,905.59,2338.09,169642.39,1016.05,2317.22,169689.02,1016.05,2317.22,169689.02,1128.64,2295.55,169729.62,1128.64,2295.55,169729.62,1291.28,2263.58,169776.69,1291.28,2263.58,169776.69,1456.37,2230.41,169811.67,1456.37,2230.41,169811.67,1630.24,2194.74,169835.79,1630.24,2194.74,169835.79,1804.62,2158.29,169847.98,1804.62,2158.29,169847.98,1958.47,2125.6,169849.54,1958.47,2125.6,169849.54,2111.71,2092.58,169843.09,2111.71,2092.58,169843.09,2415.26,2025.95,169808.79,2415.26,2025.95,169808.79,2715.87,1958.52,169749.42,2715.87,1958.52,169749.42,2940.72,1907.23,169690.15,2940.72,1907.23,169690.15,3161.94,1856.13,169620.47,3161.94,1856.13,169620.47,3501.08,1776.63,169493.63,3501.08,1776.63,169493.63,3831.88,1697.87,169348.44,3831.88,1697.87,169348.44,4517.71,1531.22,168988.64,-614.59,2581.47,167538.57,-457.43,2570.02,167924.71,-457.43,2570.02,167924.71,-354.99,2560.48,168140.04,-354.99,2560.48,168140.04,-209.33,2544.66,168406.57,-209.33,2544.66,168406.57,-44.71,2524.12,168661.25,-44.71,2524.12,168661.25,92.88,2505.16,168842.8,92.88,2505.16,168842.8,243.17,2482.89,169013.47,243.17,2482.89,169013.47,363.95,2463.94,169132.35,363.95,2463.94,169132.35,492.15,2442.93,169242.77,492.15,2442.93,169242.77,621.86,2420.82,169339.62,621.86,2420.82,169339.62,757.93,2396.8,169426.75,757.93,2396.8,169426.75,857.57,2378.72,169481.94,857.57,2378.72,169481.94,959.88,2359.76,169531.69,959.88,2359.76,169531.69,1064.56,2339.98,169575.87,1064.56,2339.98,169575.87,1171.32,2319.43,169614.35,1171.32,2319.43,169614.35,1325.73,2289.09,169659.03,1325.73,2289.09,169659.03,1482.77,2257.52,169692.31,1482.77,2257.52,169692.31,1648.64,2223.5,169715.31,1648.64,2223.5,169715.31,1815.53,2188.61,169726.97,1815.53,2188.61,169726.97,1963.23,2157.23,169728.45,1963.23,2157.23,169728.45,2110.78,2125.44,169722.24,2110.78,2125.44,169722.24,2404.24,2061.02,169689.07,2404.24,2061.02,169689.07,2696.35,1995.5,169631.38,2696.35,1995.5,169631.38,2915.66,1945.47,169573.57,2915.66,1945.47,169573.57,3132.04,1895.48,169505.41,3132.04,1895.48,169505.41,3464.77,1817.49,169380.95,3464.77,1817.49,169380.95,3790.28,1739.99,169238.09,3790.28,1739.99,169238.09,4467.48,1575.44,168882.79,-720.92,2568.66,167610.21,-487.3,2593.03,167523.3,-710.16,2567.99,167638.76,-476.92,2592.39,167550.83,-699.31,2567.3,167667.14,-466.48,2591.73,167578.17,-666.32,2565.07,167751.17,-434.73,2589.58,167659.02,-466.47,2547.86,168195.68,-243.51,2573.11,168084.4,-147.01,2510.41,168732.17,57.59,2537.83,168590.32,152.12,2467.56,169098.06,334.22,2498.21,168928.87,412.78,2425.72,169338.09,571.51,2460.13,169147.45,692.52,2377.17,169531.7,823.34,2416.43,169321.8,1128.64,2295.55,169729.62,1214,2343.31,169499.09,1456.37,2230.41,169811.67,1509.18,2284.64,169572.94,1804.62,2158.29,169847.98,1826.44,2218.93,169605.96,2415.26,2025.95,169808.79,2393.23,2096.09,169569.36,2715.87,1958.52,169749.42,2676.82,2032.47,169513.34,3161.94,1856.13,169620.47,3102.14,1934.84,169390.35,3831.88,1697.87,169348.44,3748.68,1782.11,169127.74,4334.68,1576.11,169091.85,4238.33,1663.53,168877.84,4425.87,1553.78,169041.05,4327.42,1641.72,168828.21,4456.42,1546.29,169023.75,4357.29,1634.39,168811.3,4487.05,1538.76,169006.27,4387.25,1627.03,168794.2,-616.42,2646.41,167540.65,-458.83,2634.93,167927.84,-458.83,2634.93,167927.84,-356.06,2625.36,168143.86,-356.06,2625.36,168143.86,-209.87,2609.48,168411.37,-209.87,2609.48,168411.37,-44.53,2588.85,168667.16,-44.53,2588.85,168667.16,93.76,2569.8,168849.62,93.76,2569.8,168849.62,244.9,2547.39,169021.25,244.9,2547.39,169021.25,366.42,2528.33,169140.87,366.42,2528.33,169140.87,495.47,2507.18,169252.02,495.47,2507.18,169252.02,626.1,2484.91,169349.56,626.1,2484.91,169349.56,763.17,2460.72,169437.32,763.17,2460.72,169437.32,863.56,2442.5,169492.92,863.56,2442.5,169492.92,966.64,2423.4,169543.04,966.64,2423.4,169543.04,1072.11,2403.47,169587.56,1072.11,2403.47,169587.56,1179.67,2382.77,169626.33,1179.67,2382.77,169626.33,1335.2,2352.2,169671.34,1335.2,2352.2,169671.34,1493.35,2320.42,169704.85,1493.35,2320.42,169704.85,1660.32,2286.17,169728,1660.32,2286.17,169728,1828.23,2251.07,169739.74,1828.23,2251.07,169739.74,1976.77,2219.5,169741.23,1976.77,2219.5,169741.23,2125.1,2187.55,169734.99,2125.1,2187.55,169734.99,2419.94,2122.83,169701.66,2419.94,2122.83,169701.66,2713.21,2057.04,169643.74,2713.21,2057.04,169643.74,2933.29,2006.84,169585.73,2933.29,2006.84,169585.73,3150.32,1956.7,169517.36,3150.32,1956.7,169517.36,3483.93,1878.51,169392.58,3483.93,1878.51,169392.58,3810.17,1800.83,169249.4,3810.17,1800.83,169249.4,4488.55,1635.99,168893.49,-488.69,2642.98,167524.95,-723.14,2648.58,167612.85,-478.29,2642.34,167552.54,-712.34,2647.92,167641.49,-467.82,2641.68,167579.93,-701.47,2647.23,167669.96,-436.01,2639.52,167660.95,-668.37,2644.98,167754.26,-244.34,2623.02,168087.34,-467.79,2627.71,168200.38,57.73,2587.62,168594.87,-146.79,2590.08,168739.44,335.55,2547.83,168934.86,154.24,2546.96,169107.64,574.07,2509.56,169154.57,416.88,2504.8,169349.48,827.37,2465.6,169329.93,698.97,2455.84,169544.71,1220.43,2392.03,169508.3,1138.92,2373.5,169744.36,1517.32,2333.02,169582.59,1469.38,2307.82,169827.11,1836.2,2266.98,169615.78,1820.25,2235.16,169863.7,2405.31,2143.63,169579.04,2434.58,2102.02,169824.28,2689.79,2079.82,169522.85,2736.63,2034.27,169764.63,3116.21,1981.93,169399.54,3184.44,1931.47,169635.18,3763.98,1828.91,169136.43,3856.36,1772.75,169362.36,4254.32,1710.16,168886.19,4360.26,1650.72,169105.2,4343.52,1688.32,168836.49,4451.63,1628.35,169054.3,4373.43,1680.98,168819.56,4482.24,1620.84,169036.97,4403.42,1673.62,168802.45,4512.93,1613.3,169019.46,-732.71,2609.26,167582.8,-572.17,2597.56,167977.24,-572.17,2597.56,167977.24,-467.13,2587.78,168198.03,-467.13,2587.78,168198.03,-317.21,2571.5,168472.36,-317.21,2571.5,168472.36,-146.9,2550.24,168735.81,-146.9,2550.24,168735.81,-3.82,2530.53,168924.57,-3.82,2530.53,168924.57,153.18,2507.26,169102.85,153.18,2507.26,169102.85,279.89,2487.38,169227.56,279.89,2487.38,169227.56,414.83,2465.26,169343.79,414.83,2465.26,169343.79,551.77,2441.92,169446.03,551.77,2441.92,169446.03,695.74,2416.51,169538.21,695.74,2416.51,169538.21,801.31,2397.35,169596.66,801.31,2397.35,169596.66,909.74,2377.26,169649.38,909.74,2377.26,169649.38,1020.69,2356.29,169696.22,1020.69,2356.29,169696.22,1133.78,2334.53,169736.99,1133.78,2334.53,169736.99,1297.11,2302.43,169784.26,1297.11,2302.43,169784.26,1462.88,2269.11,169819.39,1462.88,2269.11,169819.39,1637.42,2233.31,169843.6,1637.42,2233.31,169843.6,1812.44,2196.72,169855.84,1812.44,2196.72,169855.84,1966.8,2163.92,169857.4,1966.8,2163.92,169857.4,2120.52,2130.8,169850.94,2120.52,2130.8,169850.94,2424.92,2063.99,169816.53,2424.92,2063.99,169816.53,2726.25,1996.39,169757.03,2726.25,1996.39,169757.03,2951.57,1945,169697.64,2951.57,1945,169697.64,3173.19,1893.8,169627.83,3173.19,1893.8,169627.83,3512.88,1814.18,169500.78,3512.88,1814.18,169500.78,3844.12,1735.31,169355.4,3844.12,1735.31,169355.4,4530.68,1568.49,168995.22,-723.14,2648.58,167612.85,-720.92,2568.66,167610.21,-712.34,2647.92,167641.49,-710.16,2567.99,167638.76,-701.47,2647.23,167669.96,-699.31,2567.3,167667.14,-668.37,2644.98,167754.26,-666.32,2565.07,167751.17,-467.79,2627.71,168200.38,-466.47,2547.86,168195.68,-146.79,2590.08,168739.44,-147.01,2510.41,168732.17,154.24,2546.96,169107.64,152.12,2467.56,169098.06,416.88,2504.8,169349.48,412.78,2425.72,169338.09,698.97,2455.84,169544.71,692.52,2377.17,169531.7,1138.92,2373.5,169744.36,1128.64,2295.55,169729.62,1469.38,2307.82,169827.11,1456.37,2230.41,169811.67,1820.25,2235.16,169863.7,1804.62,2158.29,169847.98,2434.58,2102.02,169824.28,2415.26,2025.95,169808.79,2736.63,2034.27,169764.63,2715.87,1958.52,169749.42,3184.44,1931.47,169635.18,3161.94,1856.13,169620.47,3856.36,1772.75,169362.36,3831.88,1697.87,169348.44,4360.26,1650.72,169105.2,4334.68,1576.11,169091.85,4451.63,1628.35,169054.3,4425.87,1553.78,169041.05,4482.24,1620.84,169036.97,4456.42,1546.29,169023.75,4512.93,1613.3,169019.46,4487.05,1538.76,169006.27,-502.18,33.97,167499.95,-440.11,33.97,167663.94,-440.11,33.97,167663.94,-262.56,33.97,168067.24,-262.56,33.97,168067.24,-157.8,33.97,168267.81,-157.8,33.97,168267.81,-42.93,33.97,168461.75,-42.93,33.97,168461.75,114.48,33.97,168690.25,114.48,33.97,168690.25,215.36,33.97,168817.2,215.36,33.97,168817.2,322.84,33.97,168937.79,322.84,33.97,168937.79,437.39,33.97,169051.36,437.39,33.97,169051.36,558.8,33.97,169156.62,558.8,33.97,169156.62,680.99,33.97,169248.39,680.99,33.97,169248.39,809.13,33.97,169330.89,809.13,33.97,169330.89,948.07,33.97,169405.96,948.07,33.97,169405.96,1092.43,33.97,169469.72,1092.43,33.97,169469.72,1232.74,33.97,169519.06,1232.74,33.97,169519.06,1379.25,33.97,169558.58,1379.25,33.97,169558.58,1528.61,33.97,169587.45,1528.61,33.97,169587.45,1687.02,33.97,169606.6,1687.02,33.97,169606.6,1846.96,33.97,169615.04,1846.96,33.97,169615.04,2062.98,33.97,169610.75,2062.98,33.97,169610.75,2279.19,33.97,169590.21,2279.19,33.97,169590.21,2565.98,33.97,169540.7,2565.98,33.97,169540.7,2849.84,33.97,169469.43,2849.84,33.97,169469.43,3070.25,33.97,169400.48,3070.25,33.97,169400.48,3288.02,33.97,169321.68,3288.02,33.97,169321.68,3725.45,33.97,169134.54,3725.45,33.97,169134.54,4395.51,33.97,168782.86,4395.51,33.97,168782.86,4520.68,41.48,168999.66,4394.76,-16.01,168781.56,3724.82,-16.01,169133.18,3724.82,-16.01,169133.18,3287.48,-16.01,169320.29,3287.48,-16.01,169320.29,3069.77,-16.01,169399.06,3069.77,-16.01,169399.06,2849.42,-16.01,169468,2849.42,-16.01,169468,2565.67,-16.01,169539.24,2565.67,-16.01,169539.24,2279,-16.01,169588.72,2279,-16.01,169588.72,2062.89,-16.01,169609.25,2062.89,-16.01,169609.25,1846.99,-16.01,169613.55,1846.99,-16.01,169613.55,1687.15,-16.01,169605.11,1687.15,-16.01,169605.11,1528.84,-16.01,169585.97,1528.84,-16.01,169585.97,1379.59,-16.01,169557.12,1379.59,-16.01,169557.12,1233.19,-16.01,169517.63,1233.19,-16.01,169517.63,1092.98,-16.01,169468.32,1092.98,-16.01,169468.32,948.73,-16.01,169404.62,948.73,-16.01,169404.62,809.89,-16.01,169329.6,809.89,-16.01,169329.6,681.84,-16.01,169247.17,681.84,-16.01,169247.17,559.74,-16.01,169155.46,559.74,-16.01,169155.46,438.41,-16.01,169050.27,438.41,-16.01,169050.27,323.93,-16.01,168936.77,323.93,-16.01,168936.77,216.51,-16.01,168816.24,216.51,-16.01,168816.24,115.67,-16.01,168689.35,115.67,-16.01,168689.35,-41.66,-16.01,168460.96,-41.66,-16.01,168460.96,-156.5,-16.01,168267.08,-156.5,-16.01,168267.08,-261.22,-16.01,168066.58,-261.22,-16.01,168066.58,-438.72,-16.01,167663.39,-438.72,-16.01,167663.39,-500.78,-16.01,167499.44,-500.78,-16.01,167499.44,-735.23,-38.49,167584.59,4519.48,-38.49,168997.58,4394.76,-16.01,168781.56,4520.68,41.48,168999.66,4519.48,-38.49,168997.58,-737.48,41.48,167585.41,-502.18,33.97,167499.95,-735.23,-38.49,167584.59,-737.48,41.48,167585.41,-737.48,41.48,167585.41,-672.97,41.48,167755.84,-672.97,41.48,167755.84,-487.22,41.48,168177.69,-487.22,41.48,168177.69,-376.67,41.48,168389.35,-376.67,41.48,168389.35,-254.54,41.48,168595.52,-254.54,41.48,168595.52,-85.58,41.48,168840.74,-85.58,41.48,168840.74,23.72,41.48,168978.27,23.72,41.48,168978.27,141.03,41.48,169109.88,141.03,41.48,169109.88,267.03,41.48,169234.79,267.03,41.48,169234.79,401.57,41.48,169351.41,401.57,41.48,169351.41,537.87,41.48,169453.77,537.87,41.48,169453.77,681.54,41.48,169546.27,681.54,41.48,169546.27,837.91,41.48,169630.73,837.91,41.48,169630.73,1000.59,41.48,169702.59,1000.59,41.48,169702.59,1158.55,41.48,169758.15,1158.55,41.48,169758.15,1322.97,41.48,169802.5,1322.97,41.48,169802.5,1489.79,41.48,169834.75,1489.79,41.48,169834.75,1665.58,41.48,169856.01,1665.58,41.48,169856.01,1841.79,41.48,169865.33,1841.79,41.48,169865.33,2077.68,41.48,169860.67,2077.68,41.48,169860.67,2311.46,41.48,169838.48,2311.46,41.48,169838.48,2618.3,41.48,169785.55,2618.3,41.48,169785.55,2918.85,41.48,169710.09,2918.85,41.48,169710.09,3150.44,41.48,169637.64,3150.44,41.48,169637.64,3377.94,41.48,169555.32,3377.94,41.48,169555.32,3831.72,41.48,169361.2,3831.72,41.48,169361.2,4520.68,41.48,168999.66,-735.23,-38.49,167584.59,-670.74,-38.49,167754.96,-670.74,-38.49,167754.96,-485.07,-38.49,168176.63,-485.07,-38.49,168176.63,-374.58,-38.49,168388.18,-374.58,-38.49,168388.18,-252.51,-38.49,168594.24,-252.51,-38.49,168594.24,-83.67,-38.49,168839.3,-83.67,-38.49,168839.3,25.55,-38.49,168976.73,25.55,-38.49,168976.73,142.77,-38.49,169108.24,142.77,-38.49,169108.24,268.66,-38.49,169233.04,268.66,-38.49,169233.04,403.07,-38.49,169349.55,403.07,-38.49,169349.55,539.24,-38.49,169451.81,539.24,-38.49,169451.81,682.76,-38.49,169544.21,682.76,-38.49,169544.21,838.96,-38.49,169628.58,838.96,-38.49,169628.58,1001.46,-38.49,169700.36,1001.46,-38.49,169700.36,1159.25,-38.49,169755.86,1159.25,-38.49,169755.86,1323.51,-38.49,169800.16,1323.51,-38.49,169800.16,1490.16,-38.49,169832.39,1490.16,-38.49,169832.39,1665.79,-38.49,169853.63,1665.79,-38.49,169853.63,1841.84,-38.49,169862.94,1841.84,-38.49,169862.94,2077.54,-38.49,169858.28,2077.54,-38.49,169858.28,2311.15,-38.49,169836.1,2311.15,-38.49,169836.1,2617.8,-38.49,169783.21,2617.8,-38.49,169783.21,2918.19,-38.49,169707.79,2918.19,-38.49,169707.79,3149.67,-38.49,169635.37,3149.67,-38.49,169635.37,3377.08,-38.49,169553.09,3377.08,-38.49,169553.09,3830.7,-38.49,169359.04,3830.7,-38.49,169359.04,4519.48,-38.49,168997.58,-618,-27.25,167542.01,-554.73,-27.25,167709.18,-554.73,-27.25,167709.18,-373.15,-27.25,168121.61,-373.15,-27.25,168121.61,-265.54,-27.25,168327.63,-265.54,-27.25,168327.63,-147.09,-27.25,168527.6,-147.09,-27.25,168527.6,16,-27.25,168764.32,16,-27.25,168764.32,121.03,-27.25,168896.49,121.03,-27.25,168896.49,233.35,-27.25,169022.5,233.35,-27.25,169022.5,353.54,-27.25,169141.65,353.54,-27.25,169141.65,481.41,-27.25,169252.51,481.41,-27.25,169252.51,610.54,-27.25,169349.49,610.54,-27.25,169349.49,746.33,-27.25,169436.9,746.33,-27.25,169436.9,893.85,-27.25,169516.6,893.85,-27.25,169516.6,1047.22,-27.25,169584.34,1047.22,-27.25,169584.34,1196.22,-27.25,169636.75,1196.22,-27.25,169636.75,1351.55,-27.25,169678.64,1351.55,-27.25,169678.64,1509.5,-27.25,169709.18,1509.5,-27.25,169709.18,1676.47,-27.25,169729.37,1676.47,-27.25,169729.37,1844.41,-27.25,169738.24,1844.41,-27.25,169738.24,2070.21,-27.25,169733.76,2070.21,-27.25,169733.76,2295.08,-27.25,169712.41,2295.08,-27.25,169712.41,2591.74,-27.25,169661.23,2591.74,-27.25,169661.23,2883.81,-27.25,169587.89,2883.81,-27.25,169587.89,3109.72,-27.25,169517.22,3109.72,-27.25,169517.22,3332.28,-27.25,169436.69,3332.28,-27.25,169436.69,3777.76,-27.25,169246.11,3777.76,-27.25,169246.11,4457.12,-27.25,168889.57,-724.7,-38.49,167613.4,-490.62,-16.01,167527.21,-714.06,-38.49,167642.08,-480.38,-16.01,167554.83,-703.35,-38.49,167670.57,-470.07,-16.01,167582.26,-670.74,-38.49,167754.96,-438.72,-16.01,167663.39,-485.07,-38.49,168176.63,-261.22,-16.01,168066.58,-252.51,-38.49,168594.24,-41.66,-16.01,168460.96,-83.67,-38.49,168839.3,115.67,-16.01,168689.35,142.77,-38.49,169108.24,323.93,-16.01,168936.77,403.07,-38.49,169349.55,559.74,-16.01,169155.46,682.76,-38.49,169544.21,809.89,-16.01,169329.6,1001.46,-38.49,169700.36,1092.98,-16.01,169468.32,1159.25,-38.49,169755.86,1233.19,-16.01,169517.63,1490.16,-38.49,169832.39,1528.84,-16.01,169585.97,1841.84,-38.49,169862.94,1846.99,-16.01,169613.55,2311.15,-38.49,169836.1,2279,-16.01,169588.72,2918.19,-38.49,169707.79,2849.42,-16.01,169468,3377.08,-38.49,169553.09,3287.48,-16.01,169320.29,3830.7,-38.49,169359.04,3724.82,-16.01,169133.18,4335.63,-38.49,169101.27,4215.39,-16.01,168882.72,4427.23,-38.49,169050.23,4304.7,-16.01,168832.96,4457.92,-38.49,169032.85,4334.65,-16.01,168816,4488.68,-38.49,169015.3,4364.69,-16.01,168798.86,-619.83,37.72,167542.68,-556.54,37.72,167709.89,-556.54,37.72,167709.89,-374.89,37.72,168122.46,-374.89,37.72,168122.46,-267.24,37.72,168328.58,-267.24,37.72,168328.58,-148.73,37.72,168528.64,-148.73,37.72,168528.64,14.45,37.72,168765.49,14.45,37.72,168765.49,119.54,37.72,168897.74,119.54,37.72,168897.74,231.94,37.72,169023.84,231.94,37.72,169023.84,352.21,37.72,169143.08,352.21,37.72,169143.08,480.18,37.72,169254.02,480.18,37.72,169254.02,609.43,37.72,169351.08,609.43,37.72,169351.08,745.34,37.72,169438.58,745.34,37.72,169438.58,892.99,37.72,169518.35,892.99,37.72,169518.35,1046.51,37.72,169586.15,1046.51,37.72,169586.15,1195.64,37.72,169638.61,1195.64,37.72,169638.61,1351.11,37.72,169680.54,1351.11,37.72,169680.54,1509.2,37.72,169711.1,1509.2,37.72,169711.1,1676.3,37.72,169731.3,1676.3,37.72,169731.3,1844.37,37.72,169740.19,1844.37,37.72,169740.19,2070.33,37.72,169735.71,2070.33,37.72,169735.71,2295.33,37.72,169714.34,2295.33,37.72,169714.34,2592.14,37.72,169663.13,2592.14,37.72,169663.13,2884.35,37.72,169589.76,2884.35,37.72,169589.76,3110.34,37.72,169519.06,3110.34,37.72,169519.06,3332.98,37.72,169438.5,3332.98,37.72,169438.5,3778.59,37.72,169247.87,3778.59,37.72,169247.87,4458.1,37.72,168891.26,-492.03,33.97,167527.73,-726.94,41.48,167614.23,-481.78,33.97,167555.35,-716.31,41.48,167642.91,-471.47,33.97,167582.79,-705.59,41.48,167671.42,-440.11,33.97,167663.94,-672.97,41.48,167755.84,-262.56,33.97,168067.24,-487.22,41.48,168177.69,-42.93,33.97,168461.75,-254.54,41.48,168595.52,114.48,33.97,168690.25,-85.58,41.48,168840.74,322.84,33.97,168937.79,141.03,41.48,169109.88,558.8,33.97,169156.62,401.57,41.48,169351.41,809.13,33.97,169330.89,681.54,41.48,169546.27,1092.43,33.97,169469.72,1000.59,41.48,169702.59,1232.74,33.97,169519.06,1158.55,41.48,169758.15,1528.61,33.97,169587.45,1489.79,41.48,169834.75,1846.96,33.97,169615.04,1841.79,41.48,169865.33,2279.19,33.97,169590.21,2311.46,41.48,169838.48,2849.84,33.97,169469.43,2918.85,41.48,169710.09,3288.02,33.97,169321.68,3377.94,41.48,169555.32,3725.45,33.97,169134.54,3831.72,41.48,169361.2,4216.11,33.97,168884.03,4336.78,41.48,169103.36,4305.44,33.97,168834.26,4428.4,41.48,169052.32,4335.39,33.97,168817.3,4459.1,41.48,169034.94,4365.43,33.97,168800.16,4489.87,41.48,169017.37,-736.36,1.5,167585,-671.85,1.5,167755.4,-671.85,1.5,167755.4,-486.15,1.5,168177.16,-486.15,1.5,168177.16,-375.63,1.5,168388.77,-375.63,1.5,168388.77,-253.52,1.5,168594.88,-253.52,1.5,168594.88,-84.63,1.5,168840.02,-84.63,1.5,168840.02,24.63,1.5,168977.5,24.63,1.5,168977.5,141.9,1.5,169109.06,141.9,1.5,169109.06,267.85,1.5,169233.91,267.85,1.5,169233.91,402.32,1.5,169350.48,402.32,1.5,169350.48,538.55,1.5,169452.79,538.55,1.5,169452.79,682.15,1.5,169545.24,682.15,1.5,169545.24,838.43,1.5,169629.66,838.43,1.5,169629.66,1001.03,1.5,169701.48,1001.03,1.5,169701.48,1158.9,1.5,169757.01,1158.9,1.5,169757.01,1323.24,1.5,169801.33,1323.24,1.5,169801.33,1489.97,1.5,169833.57,1489.97,1.5,169833.57,1665.69,1.5,169854.82,1665.69,1.5,169854.82,1841.82,1.5,169864.13,1841.82,1.5,169864.13,2077.61,1.5,169859.47,2077.61,1.5,169859.47,2311.31,1.5,169837.29,2311.31,1.5,169837.29,2618.05,1.5,169784.38,2618.05,1.5,169784.38,2918.52,1.5,169708.94,2918.52,1.5,169708.94,3150.05,1.5,169636.5,3150.05,1.5,169636.5,3377.51,1.5,169554.2,3377.51,1.5,169554.2,3831.21,1.5,169360.12,3831.21,1.5,169360.12,4520.08,1.5,168998.62,-726.94,41.48,167614.23,-724.7,-38.49,167613.4,-716.31,41.48,167642.91,-714.06,-38.49,167642.08,-705.59,41.48,167671.42,-703.35,-38.49,167670.57,-672.97,41.48,167755.84,-670.74,-38.49,167754.96,-487.22,41.48,168177.69,-485.07,-38.49,168176.63,-254.54,41.48,168595.52,-252.51,-38.49,168594.24,-85.58,41.48,168840.74,-83.67,-38.49,168839.3,141.03,41.48,169109.88,142.77,-38.49,169108.24,401.57,41.48,169351.41,403.07,-38.49,169349.55,681.54,41.48,169546.27,682.76,-38.49,169544.21,1000.59,41.48,169702.59,1001.46,-38.49,169700.36,1158.55,41.48,169758.15,1159.25,-38.49,169755.86,1489.79,41.48,169834.75,1490.16,-38.49,169832.39,1841.79,41.48,169865.33,1841.84,-38.49,169862.94,2311.46,41.48,169838.48,2311.15,-38.49,169836.1,2918.85,41.48,169710.09,2918.19,-38.49,169707.79,3377.94,41.48,169555.32,3377.08,-38.49,169553.09,3831.72,41.48,169361.2,3830.7,-38.49,169359.04,4336.78,41.48,169103.36,4335.63,-38.49,169101.27,4428.4,41.48,169052.32,4427.23,-38.49,169050.23,4459.1,41.48,169034.94,4457.92,-38.49,169032.85,4489.87,41.48,169017.37,4488.68,-38.49,169015.3,24938.26,-2663.37,153538.31,24929.49,-2662.7,153762.44,24929.49,-2662.7,153762.44,25163.67,-2751.01,153771.87,24944.28,-2614.94,153762.88,24953.05,-2615.61,153538.75,24953.05,-2615.61,153538.75,25196.1,-2675.26,153548.44,25187.33,-2674.59,153772.57,24944.28,-2614.94,153762.88,25163.67,-2751.01,153771.87,25187.33,-2674.59,153772.57,25172.44,-2751.67,153547.74,24938.26,-2663.37,153538.31,25196.1,-2675.26,153548.44,25172.44,-2751.67,153547.74,25172.44,-2751.67,153547.74,25163.67,-2751.01,153771.87,25196.1,-2675.26,153548.44,25187.33,-2674.59,153772.57,25074.58,-2645.43,153543.59,25065.81,-2644.77,153767.72,25191.72,-2674.92,153660.5,24948.67,-2615.27,153650.81,25055.35,-2707.52,153543.02,25046.58,-2706.86,153767.15,24933.88,-2663.04,153650.37,25168.05,-2751.34,153659.8,25184.27,-2713.46,153548.09,25175.5,-2712.8,153772.22,25168.05,-2751.34,153659.8,25191.72,-2674.92,153660.5,25104.8,2055.51,153550.07,25104.88,2055.37,153685.1,25104.88,2055.37,153685.1,25351.49,2099.05,153685,25093.23,2103.99,153685.15,25093.15,2104.13,153550.13,25093.15,2104.13,153550.13,25332.77,2176.99,153550.06,25332.85,2176.85,153685.09,25093.23,2103.99,153685.15,25351.49,2099.05,153685,25332.85,2176.85,153685.09,25351.41,2099.19,153549.97,25104.8,2055.51,153550.07,25332.77,2176.99,153550.06,25351.41,2099.19,153549.97,25351.41,2099.19,153549.97,25351.49,2099.05,153685,25332.77,2176.99,153550.06,25332.85,2176.85,153685.09,25212.96,2140.56,153550.09,25213.04,2140.42,153685.12,25332.81,2176.92,153617.58,25093.19,2104.06,153617.64,25228.11,2077.35,153550.02,25228.19,2077.21,153685.05,25104.84,2055.44,153617.58,25351.45,2099.12,153617.48,25342.09,2138.09,153550.02,25342.17,2137.95,153685.04,25351.45,2099.12,153617.48,25332.81,2176.92,153617.58,24953.05,2615.61,153538.75,24944.28,2614.94,153762.88,24944.28,2614.94,153762.88,25187.33,2674.59,153772.57,24929.49,2662.7,153762.44,24938.26,2663.37,153538.31,24938.26,2663.37,153538.31,25172.44,2751.67,153547.74,25163.67,2751.01,153771.87,24929.49,2662.7,153762.44,25187.33,2674.59,153772.57,25163.67,2751.01,153771.87,25196.1,2675.26,153548.44,24953.05,2615.61,153538.75,25172.44,2751.67,153547.74,25196.1,2675.26,153548.44,25196.1,2675.26,153548.44,25187.33,2674.59,153772.57,25172.44,2751.67,153547.74,25163.67,2751.01,153771.87,25055.35,2707.52,153543.02,25046.58,2706.86,153767.15,25168.05,2751.34,153659.8,24933.88,2663.04,153650.37,25074.58,2645.43,153543.59,25065.81,2644.77,153767.72,24948.67,2615.27,153650.81,25191.72,2674.92,153660.5,25184.27,2713.46,153548.09,25175.5,2712.8,153772.22,25191.72,2674.92,153660.5,25168.05,2751.34,153659.8,23730.76,5120.07,153528.21,23651.65,5108.36,154465.87,23651.65,5108.36,154465.87,23863.63,5240.31,154485.4,23622.87,5149.19,154463.95,23701.97,5160.9,153526.3,23701.97,5160.9,153526.3,23896.67,5317.36,153544.67,23817.57,5305.65,154482.33,23622.87,5149.19,154463.95,23863.63,5240.31,154485.4,23817.57,5305.65,154482.33,23942.73,5252.02,153547.74,23730.76,5120.07,153528.21,23896.67,5317.36,153544.67,23942.73,5252.02,153547.74,23942.73,5252.02,153547.74,23863.63,5240.31,154485.4,23896.67,5317.36,153544.67,23817.57,5305.65,154482.33,23799.32,5239.13,153535.48,23720.22,5227.42,154473.14,23857.12,5311.51,154013.5,23662.42,5155.05,153995.12,23836.74,5186.04,153537.98,23757.64,5174.33,154475.64,23691.21,5114.21,153997.04,23903.18,5246.16,154016.57,23919.7,5284.69,153546.21,23840.6,5272.98,154483.87,23903.18,5246.16,154016.57,23857.12,5311.51,154013.5,23382.55,5584.29,153528.31,23282.71,5569.2,154669.13,23282.71,5569.2,154669.13,23485.57,5714.75,154688.81,23251.34,5608.07,154666.9,23351.18,5623.16,153526.07,23351.18,5623.16,153526.07,23535.22,5792.03,153544.41,23435.38,5776.94,154685.24,23251.34,5608.07,154666.9,23485.57,5714.75,154688.81,23435.38,5776.94,154685.24,23585.41,5729.83,153547.98,23382.55,5584.29,153528.31,23535.22,5792.03,153544.41,23585.41,5729.83,153547.98,23585.41,5729.83,153547.98,23485.57,5714.75,154688.81,23535.22,5792.03,153544.41,23435.38,5776.94,154685.24,23443.2,5707.59,153535.24,23343.36,5692.5,154676.07,23485.3,5784.48,154114.82,23301.26,5615.61,154096.49,23483.98,5657.06,153538.14,23384.14,5641.97,154678.97,23332.63,5576.74,154098.72,23535.49,5722.29,154118.39,23560.31,5760.93,153546.2,23460.48,5745.84,154687.02,23535.49,5722.29,154118.39,23485.3,5784.48,154114.82,21320.11,7459.3,153530.98,21105.74,7406,155869.15,21105.74,7406,155869.15,21253.64,7607.3,155887.3,21063.95,7433.27,155865.94,21278.32,7486.57,153527.77,21278.32,7486.57,153527.77,21401.15,7704.23,153544,21186.78,7650.92,155882.17,21063.95,7433.27,155865.94,21253.64,7607.3,155887.3,21186.78,7650.92,155882.17,21468.01,7660.6,153549.13,21320.11,7459.3,153530.98,21401.15,7704.23,153544,21468.01,7660.6,153549.13,21468.01,7660.6,153549.13,21253.64,7607.3,155887.3,21401.15,7704.23,153544,21186.78,7650.92,155882.17,21339.73,7595.4,153535.88,21125.37,7542.09,155874.05,21293.96,7677.58,154713.08,21171.13,7459.92,154696.86,21394.06,7559.95,153540.06,21179.69,7506.65,155878.23,21212.92,7432.65,154700.07,21360.82,7633.95,154718.22,21434.58,7682.42,153546.56,21220.21,7629.11,155884.73,21360.82,7633.95,154718.22,21293.96,7677.58,154713.08,20824.84,7761.91,153531.89,20580.56,7698.81,156158.63,20580.56,7698.81,156158.63,20715.05,7909.35,156176.19,20537.1,7723.29,156155.18,20781.38,7786.39,153528.44,20781.38,7786.39,153528.44,20889.8,8011.63,153543.93,20645.51,7948.53,156170.67,20537.1,7723.29,156155.18,20715.05,7909.35,156176.19,20645.51,7948.53,156170.67,20959.33,7972.45,153549.46,20824.84,7761.91,153531.89,20889.8,8011.63,153543.93,20959.33,7972.45,153549.46,20959.33,7972.45,153549.46,20715.05,7909.35,156176.19,20889.8,8011.63,153543.93,20645.51,7948.53,156170.67,20835.59,7899.01,153536.19,20591.31,7835.91,156162.92,20767.65,7980.08,154857.3,20659.24,7754.84,154841.81,20892.09,7867.18,153540.67,20647.8,7804.08,156167.41,20702.7,7730.36,154845.26,20837.19,7940.9,154862.83,20924.56,7992.04,153546.69,20680.28,7928.94,156173.43,20837.19,7940.9,154862.83,20767.65,7980.08,154857.3,18214.97,8741.58,153536.67,17840.49,8599.51,157668.35,17840.49,8599.51,157668.35,17903.57,8841.48,157682.39,17791.64,8609.39,157664.26,18166.13,8751.46,153532.58,18166.13,8751.46,153532.58,18199.9,8999.35,153544.17,17825.42,8857.28,157675.85,17791.64,8609.39,157664.26,17903.57,8841.48,157682.39,17825.42,8857.28,157675.85,18278.06,8983.55,153550.71,18214.97,8741.58,153536.67,18199.9,8999.35,153544.17,18278.06,8983.55,153550.71,18278.06,8983.55,153550.71,17903.57,8841.48,157682.39,18199.9,8999.35,153544.17,17825.42,8857.28,157675.85,18183.02,8875.4,153538.37,17808.53,8733.33,157670.05,18012.66,8928.31,155610.01,17978.89,8680.42,155598.42,18246.51,8862.57,153543.69,17872.03,8720.5,157675.37,18027.73,8670.55,155602.51,18090.81,8912.52,155616.55,18238.98,8991.45,153547.44,17864.5,8849.38,157679.12,18090.81,8912.52,155616.55,18012.66,8928.31,155610.01,17642.86,8839.64,153537.81,17235.74,8677.79,158001.38,17235.74,8677.79,158001.38,17282.99,8923.39,158014.59,17186.37,8684.47,157997.12,17593.49,8846.31,153533.55,17593.49,8846.31,153533.55,17611.12,9095.91,153544.2,17204,8934.07,158007.78,17186.37,8684.47,157997.12,17282.99,8923.39,158014.59,17204,8934.07,158007.78,17690.11,9085.23,153551.02,17642.86,8839.64,153537.81,17611.12,9095.91,153544.2,17690.11,9085.23,153551.02,17690.11,9085.23,153551.02,17282.99,8923.39,158014.59,17611.12,9095.91,153544.2,17204,8934.07,158007.78,17602.31,8971.11,153538.87,17195.19,8809.27,158002.45,17407.56,9014.99,155775.99,17389.93,8765.39,155765.33,17666.49,8962.43,153544.41,17259.37,8800.59,158007.99,17439.3,8758.71,155769.59,17486.55,9004.31,155782.81,17650.62,9090.57,153547.61,17243.5,8928.73,158011.18,17486.55,9004.31,155782.81,17407.56,9014.99,155775.99,15901,9075.23,153534.56,15611.25,8815.32,158861.7,15611.25,8815.32,158861.7,15658.89,9060.77,158876.26,15561.75,8822.01,158859.33,15851.51,9081.92,153532.19,15851.51,9081.92,153532.19,15869.45,9331.38,153545.34,15579.7,9071.47,158872.48,15561.75,8822.01,158859.33,15658.89,9060.77,158876.26,15579.7,9071.47,158872.48,15948.64,9320.67,153549.12,15901,9075.23,153534.56,15869.45,9331.38,153545.34,15948.64,9320.67,153549.12,15948.64,9320.67,153549.12,15658.89,9060.77,158876.26,15869.45,9331.38,153545.34,15579.7,9071.47,158872.48,15860.48,9206.65,153538.76,15570.72,8946.74,158865.9,15724.57,9201.42,156208.91,15706.63,8951.96,156195.76,15924.82,9197.95,153541.84,15635.07,8938.04,158868.98,15756.13,8945.27,156198.13,15803.76,9190.72,156212.69,15909.04,9326.02,153547.23,15619.29,9066.12,158874.37,15803.76,9190.72,156212.69,15724.57,9201.42,156208.91,15306.45,9155.63,153533.97,14996.54,8868.8,159187.98,14996.54,8868.8,159187.98,15044.14,9114.22,159203.04,14947.04,8875.49,159185.6,15256.95,9162.32,153531.6,15256.95,9162.32,153531.6,15274.86,9411.76,153545.23,14964.95,9124.93,159199.24,14947.04,8875.49,159185.6,15044.14,9114.22,159203.04,14964.95,9124.93,159199.24,15354.05,9401.05,153549.03,15306.45,9155.63,153533.97,15274.86,9411.76,153545.23,15354.05,9401.05,153549.03,15354.05,9401.05,153549.03,15044.14,9114.22,159203.04,15274.86,9411.76,153545.23,14964.95,9124.93,159199.24,15265.91,9287.04,153538.41,14956,9000.21,159192.42,15119.91,9268.34,156372.24,15102,9018.91,156358.6,15330.25,9278.34,153541.5,15020.34,8991.51,159195.51,15151.49,9012.22,156360.97,15199.1,9257.64,156376.03,15314.46,9406.41,153547.13,15004.55,9119.58,159201.14,15199.1,9257.64,156376.03,15119.91,9268.34,156372.24,13564.35,9391.27,153530.79,13449.56,8982.34,160007.02,13449.56,8982.34,160007.02,13497.7,9227.58,160023.36,13400.01,8989.04,160006.57,13514.8,9397.97,153530.33,13514.8,9397.97,153530.33,13533.21,9647.23,153546.4,13418.42,9238.3,160022.63,13400.01,8989.04,160006.57,13497.7,9227.58,160023.36,13418.42,9238.3,160022.63,13612.49,9636.51,153547.12,13564.35,9391.27,153530.79,13533.21,9647.23,153546.4,13612.49,9636.51,153547.12,13612.49,9636.51,153547.12,13497.7,9227.58,160023.36,13533.21,9647.23,153546.4,13418.42,9238.3,160022.63,13524.01,9522.6,153538.36,13409.21,9113.67,160014.6,13475.82,9442.76,156784.51,13457.41,9193.51,156768.45,13588.42,9513.89,153538.95,13473.63,9104.96,160015.19,13506.95,9186.81,156768.9,13555.09,9432.04,156785.24,13572.85,9641.87,153546.76,13458.06,9232.94,160023,13555.09,9432.04,156785.24,13475.82,9442.76,156784.51,12969.77,9471.69,153530.2,12846.79,9029.38,160326.94,12846.79,9029.38,160326.94,12894.92,9274.58,160343.77,12797.25,9036.08,160326.48,12920.22,9478.39,153529.74,12920.22,9478.39,153529.74,12938.62,9727.61,153546.29,12815.65,9285.3,160343.03,12797.25,9036.08,160326.48,12894.92,9274.58,160343.77,12815.65,9285.3,160343.03,13017.9,9716.89,153547.03,12969.77,9471.69,153530.2,12938.62,9727.61,153546.29,13017.9,9716.89,153547.03,13017.9,9716.89,153547.03,12894.92,9274.58,160343.77,12938.62,9727.61,153546.29,12815.65,9285.3,160343.03,12929.42,9603,153538.02,12806.45,9160.69,160334.76,12877.14,9506.45,156944.66,12858.74,9257.23,156928.11,12993.84,9594.29,153538.62,12870.86,9151.98,160335.35,12908.28,9250.53,156928.57,12956.41,9495.74,156945.4,12978.26,9722.25,153546.66,12855.29,9279.94,160343.4,12956.41,9495.74,156945.4,12877.14,9506.45,156944.66,11227.45,9707.38,153527.1,11372.51,9120.48,161107.29,11372.51,9120.48,161107.29,11421.3,9365.46,161125.33,11322.98,9127.17,161108.76,11177.92,9714.07,153528.56,11177.92,9714.07,153528.56,11197,9963.08,153547.48,11342.06,9376.18,161127.67,11322.98,9127.17,161108.76,11421.3,9365.46,161125.33,11342.06,9376.18,161127.67,11276.25,9952.36,153545.13,11227.45,9707.38,153527.1,11197,9963.08,153547.48,11276.25,9952.36,153545.13,11276.25,9952.36,153545.13,11421.3,9365.46,161125.33,11197,9963.08,153547.48,11342.06,9376.18,161127.67,11187.46,9838.57,153538.02,11332.52,9251.67,161118.22,11269.53,9669.63,157337.58,11250.45,9420.62,157318.66,11251.85,9829.87,153536.11,11396.91,9242.97,161116.31,11299.98,9413.93,157317.2,11348.77,9658.91,157335.23,11236.62,9957.72,153546.31,11381.68,9370.82,161126.5,11348.77,9658.91,157335.23,11269.53,9669.63,157337.58,10632.85,9787.8,153526.52,10781.24,9161.31,161421.09,10781.24,9161.31,161421.09,10830.04,9406.26,161439.61,10731.71,9168,161422.55,10583.32,9794.5,153527.98,10583.32,9794.5,153527.98,10602.41,10043.46,153547.38,10750.8,9416.97,161441.95,10731.71,9168,161422.55,10830.04,9406.26,161439.61,10750.8,9416.97,161441.95,10681.65,10032.75,153545.04,10632.85,9787.8,153526.52,10602.41,10043.46,153547.38,10681.65,10032.75,153545.04,10681.65,10032.75,153545.04,10830.04,9406.26,161439.61,10602.41,10043.46,153547.38,10750.8,9416.97,161441.95,10592.87,9918.98,153537.68,10741.26,9292.49,161432.25,10676.6,9730.22,157494.66,10657.52,9481.25,157475.27,10657.25,9910.27,153535.78,10805.64,9283.78,161430.35,10707.05,9474.55,157473.8,10755.85,9719.5,157492.32,10642.03,10038.11,153546.21,10790.42,9411.62,161440.78,10755.85,9719.5,157492.32,10676.6,9730.22,157494.66,8890.31,10023.53,153523.51,9375.21,9231.39,162165.14,9375.21,9231.39,162165.14,9424.8,9476.09,162184.78,9325.77,9238.07,162168.52,8840.88,10030.21,153526.9,8840.88,10030.21,153526.9,8860.81,10278.93,153548.58,9345.71,9486.78,162190.2,9325.77,9238.07,162168.52,9424.8,9476.09,162184.78,9345.71,9486.78,162190.2,8939.91,10268.23,153543.16,8890.31,10023.53,153523.51,8860.81,10278.93,153548.58,8939.91,10268.23,153543.16,8939.91,10268.23,153543.16,9424.8,9476.09,162184.78,8860.81,10278.93,153548.58,9345.71,9486.78,162190.2,8850.85,10154.57,153537.74,9335.74,9362.43,162179.36,9103.26,9882.85,157869.39,9083.33,9634.14,157847.71,8915.11,10145.88,153533.33,9400.01,9353.74,162174.96,9132.76,9627.46,157844.32,9182.36,9872.16,157863.97,8900.36,10273.58,153545.87,9385.26,9481.44,162187.49,9182.36,9872.16,157863.97,9103.26,9882.85,157869.39,8295.69,10103.96,153522.93,8795,9266.26,162473.04,8795,9266.26,162473.04,8844.63,9510.91,162493.17,8745.57,9272.94,162476.43,8246.26,10110.65,153526.32,8246.26,10110.65,153526.32,8266.22,10359.31,153548.48,8765.53,9521.61,162498.59,8745.57,9272.94,162476.43,8844.63,9510.91,162493.17,8765.53,9521.61,162498.59,8345.31,10348.62,153543.06,8295.69,10103.96,153522.93,8266.22,10359.31,153548.48,8345.31,10348.62,153543.06,8345.31,10348.62,153543.06,8844.63,9510.91,162493.17,8266.22,10359.31,153548.48,8765.53,9521.61,162498.59,8256.24,10234.98,153537.4,8755.55,9397.27,162487.51,8515.87,9940.46,158023.53,8495.91,9691.79,158001.37,8320.5,10226.29,153533,8819.81,9388.58,162483.11,8545.35,9685.11,157997.99,8594.97,9929.77,158018.12,8305.77,10353.97,153545.77,8805.08,9516.26,162495.88,8594.97,9929.77,158018.12,8515.87,9940.46,158023.53,6552.95,10339.73,153520.04,7453.13,9316.62,163182.98,7453.13,9316.62,163182.98,7503.67,9561,163204.15,7403.86,9323.28,163188.28,6503.68,10346.4,153525.34,6503.68,10346.4,153525.34,6524.65,10594.78,153549.68,7424.83,9571.66,163212.62,7403.86,9323.28,163188.28,7503.67,9561,163204.15,7424.83,9571.66,163212.62,6603.49,10584.12,153541.21,6552.95,10339.73,153520.04,6524.65,10594.78,153549.68,6603.49,10584.12,153541.21,6603.49,10584.12,153541.21,7503.67,9561,163204.15,6524.65,10594.78,153549.68,7424.83,9571.66,163212.62,6514.17,10470.59,153537.51,7414.35,9447.47,163200.45,6974.74,10083.22,158381.15,6953.77,9834.84,158356.81,6578.22,10461.93,153530.63,7478.4,9438.81,163193.57,7003.04,9828.18,158351.51,7053.58,10072.56,158372.68,6564.07,10589.45,153545.45,7464.25,9566.33,163208.39,7053.58,10072.56,158372.68,6974.74,10083.22,158381.15,5958.31,10420.17,153519.47,6883.59,9345.75,163485.22,6883.59,9345.75,163485.22,6934.16,9590.08,163506.86,6834.31,9352.41,163490.51,5909.04,10426.84,153524.77,5909.04,10426.84,153524.77,5930.05,10675.16,153549.59,6855.33,9600.74,163515.33,6834.31,9352.41,163490.51,6934.16,9590.08,163506.86,6855.33,9600.74,163515.33,6008.89,10664.51,153541.12,5958.31,10420.17,153519.47,5930.05,10675.16,153549.59,6008.89,10664.51,153541.12,6008.89,10664.51,153541.12,6934.16,9590.08,163506.86,5930.05,10675.16,153549.59,6855.33,9600.74,163515.33,5919.55,10551,153537.18,6844.82,9476.57,163502.92,6392.69,10137.95,158532.46,6371.68,9889.62,158507.64,5983.6,10542.34,153530.3,6908.87,9467.91,163496.04,6420.95,9882.96,158502.34,6471.52,10127.29,158523.99,5969.47,10669.84,153545.35,6894.75,9595.41,163511.1,6471.52,10127.29,158523.99,6392.69,10137.95,158532.46,4215.38,10655.98,153516.72,5602.11,9377.6,164163.09,5602.11,9377.6,164163.09,5653.7,9621.64,164185.67,5553.07,9384.23,164170.27,4166.35,10662.61,153523.91,4166.35,10662.61,153523.91,4188.52,10910.62,153550.8,5575.24,9632.24,164197.16,5553.07,9384.23,164170.27,5653.7,9621.64,164185.67,5575.24,9632.24,164197.16,4266.98,10900.02,153539.31,4215.38,10655.98,153516.72,4188.52,10910.62,153550.8,4266.98,10900.02,153539.31,4266.98,10900.02,153539.31,5653.7,9621.64,164185.67,4188.52,10910.62,153550.8,5575.24,9632.24,164197.16,4177.43,10786.62,153537.35,5564.16,9508.24,164183.72,4881.88,10271.43,158873.98,4859.71,10023.42,158847.09,4241.18,10778,153528.01,5627.9,9499.62,164174.38,4908.74,10016.79,158839.9,4960.34,10260.83,158862.49,4227.75,10905.32,153545.05,5614.47,9626.94,164191.42,4960.34,10260.83,158862.49,4881.88,10271.43,158873.98,3620.72,10736.43,153516.16,5042.83,9401.19,164459.86,5042.83,9401.19,164459.86,5094.48,9645.17,164482.91,4993.79,9407.82,164467.04,3571.68,10743.06,153523.34,3571.68,10743.06,153523.34,3593.92,10991.01,153550.7,5016.02,9655.78,164494.4,4993.79,9407.82,164467.04,5094.48,9645.17,164482.91,5016.02,9655.78,164494.4,3672.37,10980.41,153539.21,3620.72,10736.43,153516.16,3593.92,10991.01,153550.7,3672.37,10980.41,153539.21,3672.37,10980.41,153539.21,5094.48,9645.17,164482.91,3593.92,10991.01,153550.7,5016.02,9655.78,164494.4,3582.8,10867.04,153537.02,5004.91,9531.8,164480.72,4304.97,10323.4,159022.55,4282.74,10075.44,158995.19,3646.55,10858.42,153527.69,5068.65,9523.18,164471.38,4331.77,10068.81,158988.01,4383.43,10312.79,159011.06,3633.14,10985.71,153544.96,5055.25,9650.47,164488.66,4383.43,10312.79,159011.06,4304.97,10323.4,159022.55,1877.63,10972.27,153513.56,3818.25,9415.65,165107.54,3818.25,9415.65,165107.54,3871.01,9659.31,165131.42,3769.52,9422.24,165116.58,1828.89,10978.86,153522.61,1828.89,10978.86,153522.61,1852.41,11226.47,153551.91,3793.04,9669.86,165145.89,3769.52,9422.24,165116.58,3871.01,9659.31,165131.42,3793.04,9669.86,165145.89,1930.39,11215.93,153537.45,1877.63,10972.27,153513.56,1852.41,11226.47,153551.91,1930.39,11215.93,153537.45,1930.39,11215.93,153537.45,3871.01,9659.31,165131.42,1852.41,11226.47,153551.91,3793.04,9669.86,165145.89,1840.65,11102.66,153537.26,3781.28,9546.05,165131.23,2822.73,10448.16,159348.9,2799.21,10200.55,159319.59,1904.01,11094.1,153525.51,3844.63,9537.48,165119.48,2847.94,10193.96,159310.55,2900.7,10437.62,159334.43,1891.4,11221.2,153544.68,3832.02,9664.58,165138.65,2900.7,10437.62,159334.43,2822.73,10448.16,159348.9,1282.94,11052.72,153513.01,3268.88,9433.91,165399.04,3268.88,9433.91,165399.04,3321.72,9677.51,165423.39,3220.15,9440.5,165408.08,1234.21,11059.31,153522.05,1234.21,11059.31,153522.05,1257.81,11306.86,153551.82,3243.74,9688.05,165437.85,3220.15,9440.5,165408.08,3321.72,9677.51,165423.39,3243.74,9688.05,165437.85,1335.78,11296.32,153537.36,1282.94,11052.72,153513.01,1257.81,11306.86,153551.82,1335.78,11296.32,153537.36,1335.78,11296.32,153537.36,3321.72,9677.51,165423.39,1257.81,11306.86,153551.82,3243.74,9688.05,165437.85,1246.01,11183.09,153536.93,3231.94,9564.27,165422.96,2250.78,10497.46,159494.83,2227.18,10249.9,159465.06,1309.36,11174.52,153525.18,3295.3,9555.71,165411.21,2275.91,10243.32,159456.02,2328.75,10486.91,159480.37,1296.79,11301.59,153544.59,3282.73,9682.78,165430.62,2328.75,10486.91,159480.37,2250.78,10497.46,159494.83,82.48,10846.97,153488.37,2213.83,9095.54,166031.12,2213.83,9095.54,166031.12,2113.03,9319.64,166079.54,2170.1,9071.64,166035.22,38.76,10823.07,153492.47,38.76,10823.07,153492.47,-88.28,11032.83,153543.34,2043.06,9281.4,166086.09,2170.1,9071.64,166035.22,2113.03,9319.64,166079.54,2043.06,9281.4,166086.09,-18.32,11071.07,153536.8,82.48,10846.97,153488.37,-88.28,11032.83,153543.34,-18.32,11071.07,153536.8,-18.32,11071.07,153536.8,2113.03,9319.64,166079.54,-88.28,11032.83,153543.34,2043.06,9281.4,166086.09,-24.76,10927.95,153517.91,2106.58,9176.52,166060.66,977.39,10157.11,159814.72,1104.43,9947.36,159763.84,32.08,10959.02,153512.59,2163.43,9207.59,166055.33,1148.15,9971.26,159759.75,1047.36,10195.35,159808.17,-53.3,11051.95,153540.07,2078.05,9300.52,166082.82,1047.36,10195.35,159808.17,977.39,10157.11,159814.72,-312.43,10631.19,153488.1,1857.02,8842,166220.54,1857.02,8842,166220.54,1756.26,9066.07,166269.19,1813.3,8818.1,166224.63,-356.16,10607.29,153492.19,-356.16,10607.29,153492.19,-483.16,10817.02,153543.3,1686.3,9027.83,166275.74,1813.3,8818.1,166224.63,1756.26,9066.07,166269.19,1686.3,9027.83,166275.74,-413.19,10855.26,153536.75,-312.43,10631.19,153488.1,-483.16,10817.02,153543.3,-413.19,10855.26,153536.75,-413.19,10855.26,153536.75,1756.26,9066.07,166269.19,-483.16,10817.02,153543.3,1686.3,9027.83,166275.74,-419.66,10712.16,153517.74,1749.8,8922.97,166250.18,601.57,9922.42,159909.52,728.57,9712.7,159858.41,-362.81,10743.22,153512.42,1806.64,8954.04,166244.86,772.29,9736.6,159854.32,671.54,9960.66,159902.97,-448.18,10836.14,153540.02,1721.28,9046.95,166272.46,671.54,9960.66,159902.97,601.57,9922.42,159909.52,-1397.21,10038.49,153486.01,1648.8,8634.85,166326.95,1648.8,8634.85,166326.95,1551.25,8860.51,166374.76,1605.45,8611.16,166334.64,-1440.56,10014.79,153493.71,-1440.56,10014.79,153493.71,-1564.13,10226.24,153546.13,1481.89,8822.6,166387.07,1605.45,8611.16,166334.64,1551.25,8860.51,166374.76,1481.89,8822.6,166387.07,-1494.76,10264.15,153533.82,-1397.21,10038.49,153486.01,-1564.13,10226.24,153546.13,-1494.76,10264.15,153533.82,-1494.76,10264.15,153533.82,1551.25,8860.51,166374.76,-1564.13,10226.24,153546.13,1481.89,8822.6,166387.07,-1502.34,10120.52,153519.92,1543.67,8716.88,166360.85,-41.12,9524.42,159966.6,82.45,9312.97,159914.18,-1445.99,10151.32,153509.92,1600.03,8747.68,166350.85,125.8,9336.67,159906.48,28.25,9562.33,159954.29,-1529.44,10245.19,153539.98,1516.57,8841.56,166380.91,28.25,9562.33,159954.29,-41.12,9524.42,159966.6,-1792.14,9822.7,153485.74,1303.45,8387.46,166510.27,1303.45,8387.46,166510.27,1205.95,8613.09,166558.31,1260.1,8363.76,166517.96,-1835.5,9799,153493.43,-1835.5,9799,153493.43,-1959.01,10010.42,153546.09,1136.58,8575.18,166570.61,1260.1,8363.76,166517.96,1205.95,8613.09,166558.31,1136.58,8575.18,166570.61,-1889.64,10048.33,153533.78,-1792.14,9822.7,153485.74,-1959.01,10010.42,153546.09,-1889.64,10048.33,153533.78,-1889.64,10048.33,153533.78,1205.95,8613.09,166558.31,-1959.01,10010.42,153546.09,1136.58,8575.18,166570.61,-1897.25,9904.71,153519.76,1198.34,8469.47,166544.29,-411.21,9292.8,160058.35,-287.7,9081.38,160005.7,-1840.89,9935.52,153509.76,1254.7,8500.27,166534.29,-244.35,9105.08,159998,-341.85,9330.71,160046.04,-1924.32,10029.38,153539.93,1171.27,8594.14,166564.46,-341.85,9330.71,160046.04,-411.21,9292.8,160058.35,-2876.92,9229.92,153484.35,1118.3,8193.63,166605.1,1118.3,8193.63,166605.1,1023.86,8420.84,166651.8,1075.54,8170.26,166616.28,-2919.69,9206.55,153495.52,-2919.69,9206.55,153495.52,-3039.79,9419.73,153548.93,955.44,8383.44,166669.68,1075.54,8170.26,166616.28,1023.86,8420.84,166651.8,955.44,8383.44,166669.68,-2971.36,9457.13,153531.05,-2876.92,9229.92,153484.35,-3039.79,9419.73,153548.93,-2971.36,9457.13,153531.05,-2971.36,9457.13,153531.05,1023.86,8420.84,166651.8,-3039.79,9419.73,153548.93,955.44,8383.44,166669.68,-2979.74,9313.14,153522.23,1015.49,8276.85,166642.98,-1042.18,8901.59,160109.31,-922.08,8688.4,160055.9,-2924.14,9343.52,153507.7,1071.08,8307.24,166628.45,-879.31,8711.77,160044.72,-973.75,8938.99,160091.43,-3005.57,9438.43,153539.99,989.65,8402.14,166660.74,-973.75,8938.99,160091.43,-1042.18,8901.59,160109.31,-3271.87,9014.12,153484.08,783.68,7951.99,166782.71,783.68,7951.99,166782.71,689.3,8179.19,166829.64,740.91,7928.62,166793.89,-3314.64,8990.75,153495.25,-3314.64,8990.75,153495.25,-3434.67,9203.92,153548.88,620.88,8141.79,166847.52,740.91,7928.62,166793.89,689.3,8179.19,166829.64,620.88,8141.79,166847.52,-3366.25,9241.31,153531,-3271.87,9014.12,153484.08,-3434.67,9203.92,153548.88,-3366.25,9241.31,153531,-3366.25,9241.31,153531,689.3,8179.19,166829.64,-3434.67,9203.92,153548.88,620.88,8141.79,166847.52,-3374.65,9097.33,153522.07,680.89,8035.21,166820.7,-1406.9,8672.85,160198.2,-1286.86,8459.68,160144.57,-3319.06,9127.72,153507.54,736.49,8065.59,166806.18,-1244.1,8483.06,160133.4,-1338.47,8710.25,160180.32,-3400.46,9222.62,153539.94,655.09,8160.49,166838.58,-1338.47,8710.25,160180.32,-1406.9,8672.85,160198.2,-4356.53,8421.33,153483.34,619.34,7770.19,166867.2,619.34,7770.19,166867.2,527.79,7998.89,166912.36,577.35,7747.24,166881.69,-4398.52,8398.38,153497.83,-4398.52,8398.38,153497.83,-4515.27,8613.31,153551.69,460.6,7962.17,166935.55,577.35,7747.24,166881.69,527.79,7998.89,166912.36,460.6,7962.17,166935.55,-4448.08,8650.03,153528.5,-4356.53,8421.33,153483.34,-4515.27,8613.31,153551.69,-4448.08,8650.03,153528.5,-4448.08,8650.03,153528.5,527.79,7998.89,166912.36,-4515.27,8613.31,153551.69,460.6,7962.17,166935.55,-4456.9,8505.85,153524.76,518.98,7854.71,166908.62,-2027.33,8287.74,160243.62,-1910.59,8072.81,160189.76,-4402.31,8535.68,153505.92,573.56,7884.54,166889.78,-1868.6,8095.76,160175.27,-1960.15,8324.46,160220.43,-4481.67,8631.67,153540.1,494.2,7980.53,166923.96,-1960.15,8324.46,160220.43,-2027.33,8287.74,160243.62,-4751.5,8205.53,153483.08,294.8,7533.97,167039.45,294.8,7533.97,167039.45,203.33,7762.66,167084.83,252.81,7511.02,167053.94,-4793.49,8182.58,153497.58,-4793.49,8182.58,153497.58,-4910.15,8397.5,153551.65,136.15,7725.94,167108.02,252.81,7511.02,167053.94,203.33,7762.66,167084.83,136.15,7725.94,167108.02,-4842.97,8434.22,153528.46,-4751.5,8205.53,153483.08,-4910.15,8397.5,153551.65,-4842.97,8434.22,153528.46,-4842.97,8434.22,153528.46,203.33,7762.66,167084.83,-4910.15,8397.5,153551.65,136.15,7725.94,167108.02,-4851.82,8290.04,153524.61,194.48,7618.48,167080.98,-2387,8061.72,160329.83,-2270.34,7846.8,160275.76,-4797.23,8319.87,153505.77,249.07,7648.31,167062.14,-2228.35,7869.75,160261.27,-2319.82,8098.44,160306.64,-4876.56,8415.86,153540.05,169.74,7744.3,167096.42,-2319.82,8098.44,160306.64,-2387,8061.72,160329.83,-5518.42,7474.24,153449.2,-279.61,6810.99,167366.92,-279.61,6810.99,167366.92,-471.18,6951.75,167445.74,-304.25,6768.09,167374.15,-5543.05,7431.34,153456.43,-5543.05,7431.34,153456.43,-5749.41,7546.35,153539.59,-510.6,6883.1,167457.31,-304.25,6768.09,167374.15,-471.18,6951.75,167445.74,-510.6,6883.1,167457.31,-5709.99,7615,153528.02,-5518.42,7474.24,153449.2,-5749.41,7546.35,153539.59,-5709.99,7615,153528.02,-5709.99,7615,153528.02,-471.18,6951.75,167445.74,-5749.41,7546.35,153539.59,-510.6,6883.1,167457.31,-5646.23,7488.85,153498.01,-407.43,6825.59,167415.73,-3130,7214.73,160498.45,-2923.65,7099.71,160415.29,-5614.2,7544.62,153488.61,-375.4,6881.37,167406.33,-2899.02,7142.62,160408.06,-3090.59,7283.38,160486.88,-5729.7,7580.68,153533.8,-490.89,6917.43,167451.52,-3090.59,7283.38,160486.88,-3130,7214.73,160498.45,-5518.42,7474.24,153449.2,-279.61,6810.99,167366.92,-279.61,6810.99,167366.92,-471.18,6951.75,167445.74,-304.25,6768.09,167374.15,-5543.05,7431.34,153456.43,-5543.05,7431.34,153456.43,-5749.41,7546.35,153539.59,-510.6,6883.1,167457.31,-304.25,6768.09,167374.15,-471.18,6951.75,167445.74,-510.6,6883.1,167457.31,-5709.99,7615,153528.02,-5518.42,7474.24,153449.2,-5749.41,7546.35,153539.59,-5709.99,7615,153528.02,-5709.99,7615,153528.02,-471.18,6951.75,167445.74,-5749.41,7546.35,153539.59,-510.6,6883.1,167457.31,-5646.23,7488.85,153498.01,-407.43,6825.59,167415.73,-3130,7214.73,160498.45,-2923.65,7099.71,160415.29,-5614.2,7544.62,153488.61,-375.4,6881.37,167406.33,-2899.02,7142.62,160408.06,-3090.59,7283.38,160486.88,-5729.7,7580.68,153533.8,-490.89,6917.43,167451.52,-3090.59,7283.38,160486.88,-3130,7214.73,160498.45,-5787.42,6461.09,153446.25,-497.61,5853.65,167495.25,-497.61,5853.65,167495.25,-731.92,5857.32,167583.63,-496.21,5803.74,167492.56,-5786.02,6411.18,153443.57,-5786.02,6411.18,153443.57,-6019.48,6384.91,153530.34,-729.67,5777.47,167579.33,-496.21,5803.74,167492.56,-731.92,5857.32,167583.63,-729.67,5777.47,167579.33,-6021.73,6464.76,153534.63,-5787.42,6461.09,153446.25,-6019.48,6384.91,153530.34,-6021.73,6464.76,153534.63,-6021.73,6464.76,153534.63,-731.92,5857.32,167583.63,-6019.48,6384.91,153530.34,-729.67,5777.47,167579.33,-5902.75,6398.04,153486.95,-612.94,5790.6,167535.95,-3374.58,6081.19,160554.83,-3141.11,6107.46,160468.06,-5904.58,6462.92,153490.44,-614.77,5855.49,167539.44,-3142.52,6157.37,160470.75,-3376.83,6161.04,160559.13,-6020.61,6424.84,153532.48,-730.8,5817.4,167581.48,-3376.83,6161.04,160559.13,-3374.58,6081.19,160554.83,-5770.45,5861.31,153446.51,-495.82,5253.35,167494.61,-495.82,5253.35,167494.61,-730.21,5257.04,167582.77,-494.42,5203.45,167491.92,-5769.04,5811.41,153443.83,-5769.04,5811.41,153443.83,-6002.59,5785.15,153530.38,-727.96,5177.19,167578.47,-494.42,5203.45,167491.92,-730.21,5257.04,167582.77,-727.96,5177.19,167578.47,-6004.84,5865,153534.68,-5770.45,5861.31,153446.51,-6002.59,5785.15,153530.38,-6004.84,5865,153534.68,-6004.84,5865,153534.68,-730.21,5257.04,167582.77,-6002.59,5785.15,153530.38,-727.96,5177.19,167578.47,-5885.82,5798.28,153487.1,-611.19,5190.32,167535.2,-3365.28,5481.17,160554.43,-3131.73,5507.43,160467.87,-5887.64,5863.16,153490.6,-613.02,5255.2,167538.69,-3133.14,5557.33,160470.56,-3367.52,5561.02,160558.73,-6003.71,5825.07,153532.53,-729.09,5217.11,167580.62,-3367.52,5561.02,160558.73,-3365.28,5481.17,160554.43,-5704.95,3547.39,153446.89,-500.79,3243.9,167497.86,-500.79,3243.9,167497.86,-735.55,3249.52,167584.93,-499.38,3193.95,167496.26,-5703.54,3497.43,153445.29,-5703.54,3497.43,153445.29,-5937.46,3473.08,153531.4,-733.3,3169.6,167582.37,-499.38,3193.95,167496.26,-735.55,3249.52,167584.93,-733.3,3169.6,167582.37,-5939.71,3553.01,153533.96,-5704.95,3547.39,153446.89,-5937.46,3473.08,153531.4,-5939.71,3553.01,153533.96,-5939.71,3553.01,153533.96,-735.55,3249.52,167584.93,-5937.46,3473.08,153531.4,-733.3,3169.6,167582.37,-5820.5,3485.26,153488.35,-616.34,3181.77,167539.32,-3335.38,3321.34,160556.89,-3101.46,3345.69,160470.78,-5822.33,3550.2,153490.43,-618.17,3246.71,167541.4,-3102.87,3395.65,160472.38,-3337.63,3401.27,160559.45,-5938.59,3513.04,153532.68,-734.42,3209.56,167583.65,-3337.63,3401.27,160559.45,-3335.38,3321.34,160556.89,-5687.98,2947.62,153447.15,-499,2643.6,167497.22,-499,2643.6,167497.22,-733.84,2649.22,167584.08,-497.59,2593.64,167495.62,-5686.57,2897.67,153445.55,-5686.57,2897.67,153445.55,-5920.57,2873.32,153531.45,-731.59,2569.29,167581.52,-497.59,2593.64,167495.62,-733.84,2649.22,167584.08,-731.59,2569.29,167581.52,-5922.82,2953.24,153534.01,-5687.98,2947.62,153447.15,-5920.57,2873.32,153531.45,-5922.82,2953.24,153534.01,-5922.82,2953.24,153534.01,-733.84,2649.22,167584.08,-5920.57,2873.32,153531.45,-731.59,2569.29,167581.52,-5803.57,2885.49,153488.5,-614.59,2581.47,167538.57,-3326.08,2721.3,160556.48,-3092.08,2745.66,160470.59,-5805.4,2950.43,153490.58,-616.42,2646.41,167540.65,-3093.49,2795.61,160472.19,-3328.33,2801.23,160559.04,-5921.69,2913.28,153532.73,-732.71,2609.26,167582.8,-3328.33,2801.23,160559.04,-3326.08,2721.3,160556.48,-5622.47,633.73,153447.63,-503.98,634.29,167500.59,-503.98,634.29,167500.59,-739.2,641.8,167586.26,-502.57,584.31,167500.08,-5621.06,583.75,153447.12,-5621.06,583.75,153447.12,-5855.44,561.28,153532.49,-736.95,561.84,167585.45,-502.57,584.31,167500.08,-739.2,641.8,167586.26,-736.95,561.84,167585.45,-5857.69,641.24,153533.3,-5622.47,633.73,153447.63,-5855.44,561.28,153532.49,-5857.69,641.24,153533.3,-5857.69,641.24,153533.3,-739.2,641.8,167586.26,-5855.44,561.28,153532.49,-736.95,561.84,167585.45,-5738.25,572.51,153489.8,-619.76,573.07,167542.76,-3296.19,561.56,160558.97,-3061.81,584.03,160473.6,-5740.08,637.48,153490.47,-621.59,638.04,167543.43,-3063.22,634.01,160474.11,-3298.44,641.52,160559.78,-5856.56,601.26,153532.9,-738.07,601.82,167585.86,-3298.44,641.52,160559.78,-3296.19,561.56,160558.97,-5605.49,33.97,153447.89,-502.18,33.97,167499.95,-502.18,33.97,167499.95,-737.48,41.48,167585.41,-500.78,-16.01,167499.44,-5604.09,-16.01,153447.38,-5604.09,-16.01,153447.38,-5838.54,-38.49,153532.53,-735.23,-38.49,167584.59,-500.78,-16.01,167499.44,-737.48,41.48,167585.41,-735.23,-38.49,167584.59,-5840.79,41.48,153533.35,-5605.49,33.97,153447.89,-5838.54,-38.49,153532.53,-5840.79,41.48,153533.35,-5840.79,41.48,153533.35,-737.48,41.48,167585.41,-5838.54,-38.49,153532.53,-735.23,-38.49,167584.59,-5721.31,-27.25,153489.96,-618,-27.25,167542.01,-3286.89,-38.49,160558.56,-3052.43,-16.01,160473.41,-5723.14,37.72,153490.62,-619.83,37.72,167542.68,-3053.84,33.97,160473.92,-3289.14,41.48,160559.38,-5839.67,1.5,153532.94,-736.36,1.5,167585,-3289.14,41.48,160559.38,-3286.89,-38.49,160558.56,17170.79,8484.56,158013.57,2870.04,10208.26,158013.57,2870.04,10208.26,158013.57,2501.25,10242.47,158013.57,2501.25,10242.47,158013.57,2318.76,10248.88,158013.57,2318.76,10248.88,158013.57,2030.45,10240.4,158013.57,2030.45,10240.4,158013.57,1869.01,10224.38,158013.57,1869.01,10224.38,158013.57,1707.82,10200.5,158013.57,1707.82,10200.5,158013.57,1387.45,10131.06,158013.57,1387.45,10131.06,158013.57,1175.18,10069.82,158013.57,1175.18,10069.82,158013.57,965.41,9997.83,158013.57,965.41,9997.83,158013.57,554.79,9824.86,158013.57,554.79,9824.86,158013.57,86.93,9579.77,158013.57,86.93,9579.77,158013.57,-2621.38,8035.51,158013.57,-2621.38,8035.51,158013.57,-2921.92,7847.78,158013.57,-2921.92,7847.78,158013.57,-3148.51,7685.52,158013.57,-3148.51,7685.52,158013.57,-3251.11,7603,158013.57,-3251.11,7603,158013.57,-3348.52,7517.05,158013.57,-3348.52,7517.05,158013.57,-3455.45,7410.72,158013.57,-3455.45,7410.72,158013.57,-3504.89,7355.59,158013.57,-3504.89,7355.59,158013.57,-3551.23,7299.14,158013.57,-3551.23,7299.14,158013.57,-3599.22,7234.09,158013.57,-3599.22,7234.09,158013.57,-3642.26,7167.59,158013.57,-3642.26,7167.59,158013.57,-3664.25,7129.33,158013.57,-3664.25,7129.33,158013.57,-3707.01,7043.07,158013.57,-3707.01,7043.07,158013.57,-3743.69,6952.02,158013.57,-3743.69,6952.02,158013.57,-3784.87,6820.08,158013.57,-3784.87,6820.08,158013.57,-3816.43,6681.91,158013.57,-3816.43,6681.91,158013.57,-3842.67,6515.95,158013.57,-3842.67,6515.95,158013.57,-3859.81,6345.34,158013.57,-3859.81,6345.34,158013.57,-3874.41,5611.7,158013.57,-3874.41,5611.7,158013.57,-3765.68,8.83,158013.57,-3765.68,8.83,158013.57,-4215.61,.88,158013.57,-3765.68,8.83,157813.57,-3875.35,5747.88,157813.57,-3875.35,5747.88,157813.57,-3859.81,6345.34,157813.57,-3859.81,6345.34,157813.57,-3842.67,6515.95,157813.57,-3842.67,6515.95,157813.57,-3816.43,6681.91,157813.57,-3816.43,6681.91,157813.57,-3784.87,6820.08,157813.57,-3784.87,6820.08,157813.57,-3743.69,6952.02,157813.57,-3743.69,6952.02,157813.57,-3707.01,7043.07,157813.57,-3707.01,7043.07,157813.57,-3664.25,7129.33,157813.57,-3664.25,7129.33,157813.57,-3642.26,7167.59,157813.57,-3642.26,7167.59,157813.57,-3599.22,7234.09,157813.57,-3599.22,7234.09,157813.57,-3551.23,7299.14,157813.57,-3551.23,7299.14,157813.57,-3504.89,7355.59,157813.57,-3504.89,7355.59,157813.57,-3455.45,7410.72,157813.57,-3455.45,7410.72,157813.57,-3348.52,7517.05,157813.57,-3348.52,7517.05,157813.57,-3251.11,7603,157813.57,-3251.11,7603,157813.57,-3148.51,7685.52,157813.57,-3148.51,7685.52,157813.57,-2921.92,7847.78,157813.57,-2921.92,7847.78,157813.57,-2621.38,8035.51,157813.57,-2621.38,8035.51,157813.57,436.96,9767.57,157813.57,436.96,9767.57,157813.57,554.79,9824.86,157813.57,554.79,9824.86,157813.57,965.41,9997.83,157813.57,965.41,9997.83,157813.57,1175.18,10069.82,157813.57,1175.18,10069.82,157813.57,1387.45,10131.06,157813.57,1387.45,10131.06,157813.57,1707.82,10200.5,157813.57,1707.82,10200.5,157813.57,1869.01,10224.38,157813.57,1869.01,10224.38,157813.57,2137.92,10246.51,157813.57,2137.92,10246.51,157813.57,2318.76,10248.88,157813.57,2318.76,10248.88,157813.57,2501.25,10242.47,157813.57,2501.25,10242.47,157813.57,2870.04,10208.26,157813.57,2870.04,10208.26,157813.57,17170.79,8484.56,157813.57,17170.79,8484.56,157813.57,17242.07,8928.88,157923.57,-4215.61,.88,157923.57,-3765.68,8.83,157813.57,-4215.61,.88,158013.57,-4215.61,.88,157923.57,17242.07,8928.88,158013.57,17170.79,8484.56,158013.57,17242.07,8928.88,157923.57,17242.07,8928.88,158013.57,17242.07,8928.88,158013.57,2925.49,10654.89,158013.57,2925.49,10654.89,158013.57,2526.71,10691.89,158013.57,2526.71,10691.89,158013.57,2324.27,10698.94,158013.57,2324.27,10698.94,158013.57,1997.18,10689.17,158013.57,1997.18,10689.17,158013.57,1813.46,10670.98,158013.57,1813.46,10670.98,158013.57,1631.54,10644.05,158013.57,1631.54,10644.05,158013.57,1273.89,10566.55,158013.57,1273.89,10566.55,158013.57,1039.39,10498.93,158013.57,1039.39,10498.93,158013.57,809.32,10419.98,158013.57,809.32,10419.98,158013.57,362.83,10231.87,158013.57,362.83,10231.87,158013.57,-135.32,9971.08,158013.57,-135.32,9971.08,158013.57,-2849.24,8423.58,158013.57,-2849.24,8423.58,158013.57,-3172.4,8221.63,158013.57,-3172.4,8221.63,158013.57,-3423.45,8041.79,158013.57,-3423.45,8041.79,158013.57,-3540.65,7947.52,158013.57,-3540.65,7947.52,158013.57,-3654.8,7846.81,158013.57,-3654.8,7846.81,158013.57,-3784.39,7717.98,158013.57,-3784.39,7717.98,158013.57,-3846.24,7648.96,158013.57,-3846.24,7648.96,158013.57,-3905.64,7576.51,158013.57,-3905.64,7576.51,158013.57,-3969.03,7490.54,158013.57,-3969.03,7490.54,158013.57,-4027.93,7399.46,158013.57,-4027.93,7399.46,158013.57,-4058.8,7345.73,158013.57,-4058.8,7345.73,158013.57,-4117.85,7226.68,158013.57,-4117.85,7226.68,158013.57,-4166.85,7105.2,158013.57,-4166.85,7105.2,158013.57,-4219.69,6936.35,158013.57,-4219.69,6936.35,158013.57,-4258.34,6767.19,158013.57,-4258.34,6767.19,158013.57,-4289.2,6572.43,158013.57,-4289.2,6572.43,158013.57,-4308.56,6379.67,158013.57,-4308.56,6379.67,158013.57,-4324.39,5607.93,158013.57,-4324.39,5607.93,158013.57,-4215.61,.88,158013.57,17242.07,8928.88,157923.57,2925.49,10654.89,157923.57,2925.49,10654.89,157923.57,2526.71,10691.89,157923.57,2526.71,10691.89,157923.57,2324.27,10698.94,157923.57,2324.27,10698.94,157923.57,1997.18,10689.17,157923.57,1997.18,10689.17,157923.57,1813.46,10670.98,157923.57,1813.46,10670.98,157923.57,1631.54,10644.05,157923.57,1631.54,10644.05,157923.57,1273.89,10566.55,157923.57,1273.89,10566.55,157923.57,1039.39,10498.93,157923.57,1039.39,10498.93,157923.57,809.32,10419.98,157923.57,809.32,10419.98,157923.57,362.83,10231.87,157923.57,362.83,10231.87,157923.57,-135.32,9971.08,157923.57,-135.32,9971.08,157923.57,-2849.24,8423.58,157923.57,-2849.24,8423.58,157923.57,-3172.4,8221.63,157923.57,-3172.4,8221.63,157923.57,-3423.45,8041.79,157923.57,-3423.45,8041.79,157923.57,-3540.65,7947.52,157923.57,-3540.65,7947.52,157923.57,-3654.8,7846.81,157923.57,-3654.8,7846.81,157923.57,-3784.39,7717.98,157923.57,-3784.39,7717.98,157923.57,-3846.24,7648.96,157923.57,-3846.24,7648.96,157923.57,-3905.64,7576.51,157923.57,-3905.64,7576.51,157923.57,-3969.03,7490.54,157923.57,-3969.03,7490.54,157923.57,-4027.93,7399.46,157923.57,-4027.93,7399.46,157923.57,-4058.8,7345.73,157923.57,-4058.8,7345.73,157923.57,-4117.85,7226.68,157923.57,-4117.85,7226.68,157923.57,-4166.85,7105.2,157923.57,-4166.85,7105.2,157923.57,-4219.69,6936.35,157923.57,-4219.69,6936.35,157923.57,-4258.34,6767.19,157923.57,-4258.34,6767.19,157923.57,-4289.2,6572.43,157923.57,-4289.2,6572.43,157923.57,-4308.56,6379.67,157923.57,-4308.56,6379.67,157923.57,-4324.39,5607.93,157923.57,-4324.39,5607.93,157923.57,-4215.61,.88,157923.57,17206.43,8706.72,157868.57,2897.76,10431.58,157868.57,2897.76,10431.58,157868.57,2513.98,10467.18,157868.57,2513.98,10467.18,157868.57,2321.52,10473.91,157868.57,2321.52,10473.91,157868.57,2013.81,10464.79,157868.57,2013.81,10464.79,157868.57,1841.23,10447.68,157868.57,1841.23,10447.68,157868.57,1669.68,10422.28,157868.57,1669.68,10422.28,157868.57,1330.67,10348.81,157868.57,1330.67,10348.81,157868.57,1107.28,10284.37,157868.57,1107.28,10284.37,157868.57,887.36,10208.91,157868.57,887.36,10208.91,157868.57,458.81,10028.36,157868.57,458.81,10028.36,157868.57,-24.19,9775.42,157868.57,-24.19,9775.42,157868.57,-2735.31,8229.55,157868.57,-2735.31,8229.55,157868.57,-3047.16,8034.71,157868.57,-3047.16,8034.71,157868.57,-3285.98,7863.66,157868.57,-3285.98,7863.66,157868.57,-3395.88,7775.26,157868.57,-3395.88,7775.26,157868.57,-3501.66,7681.93,157868.57,-3501.66,7681.93,157868.57,-3619.92,7564.35,157868.57,-3619.92,7564.35,157868.57,-3675.56,7502.28,157868.57,-3675.56,7502.28,157868.57,-3728.44,7437.82,157868.57,-3728.44,7437.82,157868.57,-3784.13,7362.32,157868.57,-3784.13,7362.32,157868.57,-3835.1,7283.52,157868.57,-3835.1,7283.52,157868.57,-3861.53,7237.53,157868.57,-3861.53,7237.53,157868.57,-3912.43,7134.88,157868.57,-3912.43,7134.88,157868.57,-3955.27,7028.61,157868.57,-3955.27,7028.61,157868.57,-4002.28,6878.21,157868.57,-4002.28,6878.21,157868.57,-4037.38,6724.55,157868.57,-4037.38,6724.55,157868.57,-4065.94,6544.19,157868.57,-4065.94,6544.19,157868.57,-4084.18,6362.51,157868.57,-4084.18,6362.51,157868.57,-4099.4,5609.81,157868.57,-4099.4,5609.81,157868.57,-3990.64,4.86,157868.57,17106.86,8949.93,157923.57,17039.65,8504.98,157813.57,16971.6,8969.77,157923.57,16908.11,8524.28,157813.57,16836.24,8988.53,157923.57,16776.17,8542.55,157813.57,16700.82,9006.29,157923.57,16643.81,8559.91,157813.57,15116.46,9175.04,157923.57,15070.39,8727.41,157813.57,14935.27,9193.98,157923.57,14887.74,8746.5,157813.57,13350.82,9377.19,157923.57,13296.98,8930.42,157813.57,12898.46,9431.54,157923.57,12845.01,8984.73,157813.57,8827.19,9903.53,157923.57,8774.23,9456.66,157813.57,8465.43,9946.71,157923.57,8411.74,9499.93,157813.57,6521.47,10173.91,157923.57,6473.9,9726.43,157813.57,6340.64,10192.82,157923.57,6294.58,9745.18,157813.57,4620.69,10380.1,157923.57,4559.93,9934.21,157813.57,4348.53,10419.48,157923.57,4280.31,9974.68,157813.57,4076.67,10463.75,157923.57,4000.44,10020.24,157813.57,3398.46,10583.84,157923.57,3322.98,10140.19,157813.57,2925.49,10654.89,157923.57,2870.04,10208.26,157813.57,2120.02,10696.16,157923.57,2137.92,10246.51,157813.57,1997.18,10689.17,157923.57,2030.45,10240.4,157813.57,1273.89,10566.55,157923.57,1387.45,10131.06,157813.57,362.83,10231.87,157923.57,554.79,9824.86,157813.57,235.63,10170.02,157923.57,436.96,9767.57,157813.57,-135.32,9971.08,157923.57,86.93,9579.77,157813.57,-715.38,9626.03,157923.57,-481.73,9241.45,157813.57,-1005.32,9451.39,157923.57,-775.07,9064.77,157813.57,-1888.37,8946.6,157923.57,-1672.71,8551.64,157813.57,-2036.76,8866.25,157923.57,-1823.92,8469.77,157813.57,-2185.36,8787.01,157923.57,-1974.36,8389.53,157813.57,-2849.24,8423.58,157923.57,-2621.38,8035.51,157813.57,-3172.4,8221.63,157923.57,-2921.92,7847.78,157813.57,-3423.45,8041.79,157923.57,-3148.51,7685.52,157813.57,-3654.8,7846.81,157923.57,-3348.52,7517.05,157813.57,-3905.64,7576.51,157923.57,-3551.23,7299.14,157813.57,-4027.93,7399.46,157923.57,-3642.26,7167.59,157813.57,-4058.8,7345.73,157923.57,-3664.25,7129.33,157813.57,-4166.85,7105.2,157923.57,-3743.69,6952.02,157813.57,-4258.34,6767.19,157923.57,-3816.43,6681.91,157813.57,-4308.56,6379.67,157923.57,-3859.81,6345.34,157813.57,-4325.36,5745.72,157923.57,-3875.35,5747.88,157813.57,-4324.39,5607.93,157923.57,-3874.41,5611.7,157813.57,-4320.88,5268.21,157923.57,-3870.91,5273.95,157813.57,-4272.73,2931.13,157923.57,-3822.85,2941.51,157813.57,-4262.36,2466.82,157923.57,-3812.46,2476.52,157813.57,-4241.15,1413.24,157923.57,-3791.23,1421.75,157813.57,-4228.17,707.72,157923.57,-3778.24,715.81,157813.57,17206.43,8706.72,158013.57,2897.76,10431.58,158013.57,2897.76,10431.58,158013.57,2513.98,10467.18,158013.57,2513.98,10467.18,158013.57,2321.52,10473.91,158013.57,2321.52,10473.91,158013.57,2013.81,10464.79,158013.57,2013.81,10464.79,158013.57,1841.23,10447.68,158013.57,1841.23,10447.68,158013.57,1669.68,10422.28,158013.57,1669.68,10422.28,158013.57,1330.67,10348.81,158013.57,1330.67,10348.81,158013.57,1107.28,10284.37,158013.57,1107.28,10284.37,158013.57,887.36,10208.91,158013.57,887.36,10208.91,158013.57,458.81,10028.36,158013.57,458.81,10028.36,158013.57,-24.19,9775.42,158013.57,-24.19,9775.42,158013.57,-2735.31,8229.55,158013.57,-2735.31,8229.55,158013.57,-3047.16,8034.71,158013.57,-3047.16,8034.71,158013.57,-3285.98,7863.66,158013.57,-3285.98,7863.66,158013.57,-3395.88,7775.26,158013.57,-3395.88,7775.26,158013.57,-3501.66,7681.93,158013.57,-3501.66,7681.93,158013.57,-3619.92,7564.35,158013.57,-3619.92,7564.35,158013.57,-3675.56,7502.28,158013.57,-3675.56,7502.28,158013.57,-3728.44,7437.82,158013.57,-3728.44,7437.82,158013.57,-3784.13,7362.32,158013.57,-3784.13,7362.32,158013.57,-3835.1,7283.52,158013.57,-3835.1,7283.52,158013.57,-3861.53,7237.53,158013.57,-3861.53,7237.53,158013.57,-3912.43,7134.88,158013.57,-3912.43,7134.88,158013.57,-3955.27,7028.61,158013.57,-3955.27,7028.61,158013.57,-4002.28,6878.21,158013.57,-4002.28,6878.21,158013.57,-4037.38,6724.55,158013.57,-4037.38,6724.55,158013.57,-4065.94,6544.19,158013.57,-4065.94,6544.19,158013.57,-4084.18,6362.51,158013.57,-4084.18,6362.51,158013.57,-4099.4,5609.81,158013.57,-4099.4,5609.81,158013.57,-3990.64,4.86,158013.57,17039.65,8504.98,158013.57,17106.86,8949.93,158013.57,16908.11,8524.28,158013.57,16971.6,8969.77,158013.57,16776.17,8542.55,158013.57,16836.24,8988.53,158013.57,16643.81,8559.91,158013.57,16700.82,9006.29,158013.57,15070.39,8727.41,158013.57,15116.46,9175.04,158013.57,14887.74,8746.5,158013.57,14935.27,9193.98,158013.57,13296.98,8930.42,158013.57,13350.82,9377.19,158013.57,12845.01,8984.73,158013.57,12898.46,9431.54,158013.57,8774.23,9456.66,158013.57,8827.19,9903.53,158013.57,8411.74,9499.93,158013.57,8465.43,9946.71,158013.57,6473.9,9726.43,158013.57,6521.47,10173.91,158013.57,6294.58,9745.18,158013.57,6340.64,10192.82,158013.57,4559.93,9934.21,158013.57,4620.69,10380.1,158013.57,4280.31,9974.68,158013.57,4348.53,10419.48,158013.57,4000.44,10020.24,158013.57,4076.67,10463.75,158013.57,3322.98,10140.19,158013.57,3398.46,10583.84,158013.57,2870.04,10208.26,158013.57,2925.49,10654.89,158013.57,2137.92,10246.51,158013.57,2120.02,10696.16,158013.57,2030.45,10240.4,158013.57,1997.18,10689.17,158013.57,1387.45,10131.06,158013.57,1273.89,10566.55,158013.57,554.79,9824.86,158013.57,362.83,10231.87,158013.57,436.96,9767.57,158013.57,235.63,10170.02,158013.57,86.93,9579.77,158013.57,-135.32,9971.08,158013.57,-481.73,9241.45,158013.57,-715.38,9626.03,158013.57,-775.07,9064.77,158013.57,-1005.32,9451.39,158013.57,-1672.71,8551.64,158013.57,-1888.37,8946.6,158013.57,-1823.92,8469.77,158013.57,-2036.76,8866.25,158013.57,-1974.36,8389.53,158013.57,-2185.36,8787.01,158013.57,-2621.38,8035.51,158013.57,-2849.24,8423.58,158013.57,-2921.92,7847.78,158013.57,-3172.4,8221.63,158013.57,-3148.51,7685.52,158013.57,-3423.45,8041.79,158013.57,-3348.52,7517.05,158013.57,-3654.8,7846.81,158013.57,-3551.23,7299.14,158013.57,-3905.64,7576.51,158013.57,-3642.26,7167.59,158013.57,-4027.93,7399.46,158013.57,-3664.25,7129.33,158013.57,-4058.8,7345.73,158013.57,-3743.69,6952.02,158013.57,-4166.85,7105.2,158013.57,-3816.43,6681.91,158013.57,-4258.34,6767.19,158013.57,-3859.81,6345.34,158013.57,-4308.56,6379.67,158013.57,-3875.35,5747.88,158013.57,-4325.36,5745.72,158013.57,-3874.41,5611.7,158013.57,-4324.39,5607.93,158013.57,-3870.91,5273.95,158013.57,-4320.88,5268.21,158013.57,-3822.85,2941.51,158013.57,-4272.73,2931.13,158013.57,-3812.46,2476.52,158013.57,-4262.36,2466.82,158013.57,-3791.23,1421.75,158013.57,-4241.15,1413.24,158013.57,-3778.24,715.81,158013.57,-4228.17,707.72,158013.57,17242.07,8928.88,157968.57,2925.49,10654.89,157968.57,2925.49,10654.89,157968.57,2526.71,10691.89,157968.57,2526.71,10691.89,157968.57,2324.27,10698.94,157968.57,2324.27,10698.94,157968.57,1997.18,10689.17,157968.57,1997.18,10689.17,157968.57,1813.46,10670.98,157968.57,1813.46,10670.98,157968.57,1631.54,10644.05,157968.57,1631.54,10644.05,157968.57,1273.89,10566.55,157968.57,1273.89,10566.55,157968.57,1039.39,10498.93,157968.57,1039.39,10498.93,157968.57,809.32,10419.98,157968.57,809.32,10419.98,157968.57,362.83,10231.87,157968.57,362.83,10231.87,157968.57,-135.32,9971.08,157968.57,-135.32,9971.08,157968.57,-2849.24,8423.58,157968.57,-2849.24,8423.58,157968.57,-3172.4,8221.63,157968.57,-3172.4,8221.63,157968.57,-3423.45,8041.79,157968.57,-3423.45,8041.79,157968.57,-3540.65,7947.52,157968.57,-3540.65,7947.52,157968.57,-3654.8,7846.81,157968.57,-3654.8,7846.81,157968.57,-3784.39,7717.98,157968.57,-3784.39,7717.98,157968.57,-3846.24,7648.96,157968.57,-3846.24,7648.96,157968.57,-3905.64,7576.51,157968.57,-3905.64,7576.51,157968.57,-3969.03,7490.54,157968.57,-3969.03,7490.54,157968.57,-4027.93,7399.46,157968.57,-4027.93,7399.46,157968.57,-4058.8,7345.73,157968.57,-4058.8,7345.73,157968.57,-4117.85,7226.68,157968.57,-4117.85,7226.68,157968.57,-4166.85,7105.2,157968.57,-4166.85,7105.2,157968.57,-4219.69,6936.35,157968.57,-4219.69,6936.35,157968.57,-4258.34,6767.19,157968.57,-4258.34,6767.19,157968.57,-4289.2,6572.43,157968.57,-4289.2,6572.43,157968.57,-4308.56,6379.67,157968.57,-4308.56,6379.67,157968.57,-4324.39,5607.93,157968.57,-4324.39,5607.93,157968.57,-4215.61,.88,157968.57,17106.86,8949.93,158013.57,17106.86,8949.93,157923.57,16971.6,8969.77,158013.57,16971.6,8969.77,157923.57,16836.24,8988.53,158013.57,16836.24,8988.53,157923.57,16700.82,9006.29,158013.57,16700.82,9006.29,157923.57,15116.46,9175.04,158013.57,15116.46,9175.04,157923.57,14935.27,9193.98,158013.57,14935.27,9193.98,157923.57,13350.82,9377.19,158013.57,13350.82,9377.19,157923.57,12898.46,9431.54,158013.57,12898.46,9431.54,157923.57,8827.19,9903.53,158013.57,8827.19,9903.53,157923.57,8465.43,9946.71,158013.57,8465.43,9946.71,157923.57,6521.47,10173.91,158013.57,6521.47,10173.91,157923.57,6340.64,10192.82,158013.57,6340.64,10192.82,157923.57,4620.69,10380.1,158013.57,4620.69,10380.1,157923.57,4348.53,10419.48,158013.57,4348.53,10419.48,157923.57,4076.67,10463.75,158013.57,4076.67,10463.75,157923.57,3398.46,10583.84,158013.57,3398.46,10583.84,157923.57,2925.49,10654.89,158013.57,2925.49,10654.89,157923.57,2120.02,10696.16,158013.57,2120.02,10696.16,157923.57,1997.18,10689.17,158013.57,1997.18,10689.17,157923.57,1273.89,10566.55,158013.57,1273.89,10566.55,157923.57,362.83,10231.87,158013.57,362.83,10231.87,157923.57,235.63,10170.02,158013.57,235.63,10170.02,157923.57,-135.32,9971.08,158013.57,-135.32,9971.08,157923.57,-715.38,9626.03,158013.57,-715.38,9626.03,157923.57,-1005.32,9451.39,158013.57,-1005.32,9451.39,157923.57,-1888.37,8946.6,158013.57,-1888.37,8946.6,157923.57,-2036.76,8866.25,158013.57,-2036.76,8866.25,157923.57,-2185.36,8787.01,158013.57,-2185.36,8787.01,157923.57,-2849.24,8423.58,158013.57,-2849.24,8423.58,157923.57,-3172.4,8221.63,158013.57,-3172.4,8221.63,157923.57,-3423.45,8041.79,158013.57,-3423.45,8041.79,157923.57,-3654.8,7846.81,158013.57,-3654.8,7846.81,157923.57,-3905.64,7576.51,158013.57,-3905.64,7576.51,157923.57,-4027.93,7399.46,158013.57,-4027.93,7399.46,157923.57,-4058.8,7345.73,158013.57,-4058.8,7345.73,157923.57,-4166.85,7105.2,158013.57,-4166.85,7105.2,157923.57,-4258.34,6767.19,158013.57,-4258.34,6767.19,157923.57,-4308.56,6379.67,158013.57,-4308.56,6379.67,157923.57,-4325.36,5745.72,158013.57,-4325.36,5745.72,157923.57,-4324.39,5607.93,158013.57,-4324.39,5607.93,157923.57,-4320.88,5268.21,158013.57,-4320.88,5268.21,157923.57,-4272.73,2931.13,158013.57,-4272.73,2931.13,157923.57,-4262.36,2466.82,158013.57,-4262.36,2466.82,157923.57,-4241.15,1413.24,158013.57,-4241.15,1413.24,157923.57,-4228.17,707.72,158013.57,-4228.17,707.72,157923.57,10748.58,8963.38,161444.57,3343.64,9757.57,161444.57,3343.64,9757.57,161444.57,3048.62,9778.99,161444.57,3048.62,9778.99,161444.57,2878.54,9782.98,161444.57,2878.54,9782.98,161444.57,2605.77,9773.04,161444.57,2605.77,9773.04,161444.57,2444.73,9756.47,161444.57,2444.73,9756.47,161444.57,2284.1,9732.09,161444.57,2284.1,9732.09,161444.57,1965.44,9661.48,161444.57,1965.44,9661.48,161444.57,1756.28,9599.5,161444.57,1756.28,9599.5,161444.57,1550.17,9526.36,161444.57,1550.17,9526.36,161444.57,1347.62,9442.66,161444.57,1347.62,9442.66,161444.57,1047.61,9296.58,161444.57,1047.61,9296.58,161444.57,-1405.85,7832.17,161444.57,-1405.85,7832.17,161444.57,-1730.08,7618.68,161444.57,-1730.08,7618.68,161444.57,-1966.53,7435.36,161444.57,-1966.53,7435.36,161444.57,-2060.26,7351.79,161444.57,-2060.26,7351.79,161444.57,-2148.11,7264.8,161444.57,-2148.11,7264.8,161444.57,-2205.27,7202.04,161444.57,-2205.27,7202.04,161444.57,-2258.48,7137.6,161444.57,-2258.48,7137.6,161444.57,-2307.17,7071.61,161444.57,-2307.17,7071.61,161444.57,-2350.79,7004.14,161444.57,-2350.79,7004.14,161444.57,-2372.57,6966.17,161444.57,-2372.57,6966.17,161444.57,-2398.92,6915.08,161444.57,-2398.92,6915.08,161444.57,-2423.04,6862.2,161444.57,-2423.04,6862.2,161444.57,-2464.93,6751.58,161444.57,-2464.93,6751.58,161444.57,-2492.38,6660.21,161444.57,-2492.38,6660.21,161444.57,-2515.27,6565.89,161444.57,-2515.27,6565.89,161444.57,-2536.86,6452.41,161444.57,-2536.86,6452.41,161444.57,-2553.52,6336.24,161444.57,-2553.52,6336.24,161444.57,-2572.49,6133.9,161444.57,-2572.49,6133.9,161444.57,-2519.59,5.39,161444.57,-2519.59,5.39,161444.57,-2969.56,.54,161444.57,-2519.59,5.39,161244.57,-2572.49,6133.9,161244.57,-2572.49,6133.9,161244.57,-2553.52,6336.24,161244.57,-2553.52,6336.24,161244.57,-2536.86,6452.41,161244.57,-2536.86,6452.41,161244.57,-2515.27,6565.89,161244.57,-2515.27,6565.89,161244.57,-2492.38,6660.21,161244.57,-2492.38,6660.21,161244.57,-2464.93,6751.58,161244.57,-2464.93,6751.58,161244.57,-2423.04,6862.2,161244.57,-2423.04,6862.2,161244.57,-2398.92,6915.08,161244.57,-2398.92,6915.08,161244.57,-2372.57,6966.17,161244.57,-2372.57,6966.17,161244.57,-2350.79,7004.14,161244.57,-2350.79,7004.14,161244.57,-2307.17,7071.61,161244.57,-2307.17,7071.61,161244.57,-2258.48,7137.6,161244.57,-2258.48,7137.6,161244.57,-2205.27,7202.04,161244.57,-2205.27,7202.04,161244.57,-2148.11,7264.8,161244.57,-2148.11,7264.8,161244.57,-2060.26,7351.79,161244.57,-2060.26,7351.79,161244.57,-1966.53,7435.36,161244.57,-1966.53,7435.36,161244.57,-1730.08,7618.68,161244.57,-1730.08,7618.68,161244.57,-1405.85,7832.17,161244.57,-1405.85,7832.17,161244.57,1047.61,9296.58,161244.57,1047.61,9296.58,161244.57,1347.62,9442.66,161244.57,1347.62,9442.66,161244.57,1550.17,9526.36,161244.57,1550.17,9526.36,161244.57,1756.28,9599.5,161244.57,1756.28,9599.5,161244.57,1965.44,9661.48,161244.57,1965.44,9661.48,161244.57,2284.1,9732.09,161244.57,2284.1,9732.09,161244.57,2444.73,9756.47,161244.57,2444.73,9756.47,161244.57,2709.98,9779.46,161244.57,2709.98,9779.46,161244.57,2878.54,9782.98,161244.57,2878.54,9782.98,161244.57,3048.62,9778.99,161244.57,3048.62,9778.99,161244.57,3343.64,9757.57,161244.57,3343.64,9757.57,161244.57,10748.58,8963.38,161244.57,10748.58,8963.38,161244.57,10792.35,9411.24,161354.57,-2969.56,.54,161354.57,-2519.59,5.39,161244.57,-2969.56,.54,161444.57,-2969.56,.54,161354.57,10792.35,9411.24,161444.57,10748.58,8963.38,161444.57,10792.35,9411.24,161354.57,10792.35,9411.24,161444.57,10792.35,9411.24,161444.57,3387.73,10205.48,161444.57,3387.73,10205.48,161444.57,3068.13,10228.59,161444.57,3068.13,10228.59,161444.57,2879.66,10232.99,161444.57,2879.66,10232.99,161444.57,2570.73,10221.68,161444.57,2570.73,10221.68,161444.57,2387.61,10202.86,161444.57,2387.61,10202.86,161444.57,2206.18,10175.35,161444.57,2206.18,10175.35,161444.57,1849.3,10096.29,161444.57,1849.3,10096.29,161444.57,1616.86,10027.45,161444.57,1616.86,10027.45,161444.57,1388.92,9946.57,161444.57,1388.92,9946.57,161444.57,1165.75,9854.33,161444.57,1165.75,9854.33,161444.57,836.37,9693.93,161444.57,836.37,9693.93,161444.57,-1641.19,8215.76,161444.57,-1641.19,8215.76,161444.57,-1991.38,7985.05,161444.57,-1991.38,7985.05,161444.57,-2258.13,7778.13,161444.57,-2258.13,7778.13,161444.57,-2367.94,7680.23,161444.57,-2367.94,7680.23,161444.57,-2473.95,7575.31,161444.57,-2473.95,7575.31,161444.57,-2545.03,7497.39,161444.57,-2545.03,7497.39,161444.57,-2613.01,7415.1,161444.57,-2613.01,7415.1,161444.57,-2677.15,7327.99,161444.57,-2677.15,7327.99,161444.57,-2736.68,7235.65,161444.57,-2736.68,7235.65,161444.57,-2767.21,7182.42,161444.57,-2767.21,7182.42,161444.57,-2803.76,7111.57,161444.57,-2803.76,7111.57,161444.57,-2836.59,7039.63,161444.57,-2836.59,7039.63,161444.57,-2891.91,6893.67,161444.57,-2891.91,6893.67,161444.57,-2926.83,6777.54,161444.57,-2926.83,6777.54,161444.57,-2955.04,6661.34,161444.57,-2955.04,6661.34,161444.57,-2980.87,6525.8,161444.57,-2980.87,6525.8,161444.57,-3000.2,6391.1,161444.57,-3000.2,6391.1,161444.57,-3021.55,6164.31,161444.57,-3021.55,6164.31,161444.57,-2969.56,.54,161444.57,10792.35,9411.24,161354.57,3387.73,10205.48,161354.57,3387.73,10205.48,161354.57,3068.13,10228.59,161354.57,3068.13,10228.59,161354.57,2879.66,10232.99,161354.57,2879.66,10232.99,161354.57,2570.73,10221.68,161354.57,2570.73,10221.68,161354.57,2387.61,10202.86,161354.57,2387.61,10202.86,161354.57,2206.18,10175.35,161354.57,2206.18,10175.35,161354.57,1849.3,10096.29,161354.57,1849.3,10096.29,161354.57,1616.86,10027.45,161354.57,1616.86,10027.45,161354.57,1388.92,9946.57,161354.57,1388.92,9946.57,161354.57,1165.75,9854.33,161354.57,1165.75,9854.33,161354.57,836.37,9693.93,161354.57,836.37,9693.93,161354.57,-1641.19,8215.76,161354.57,-1641.19,8215.76,161354.57,-1991.38,7985.05,161354.57,-1991.38,7985.05,161354.57,-2258.13,7778.13,161354.57,-2258.13,7778.13,161354.57,-2367.94,7680.23,161354.57,-2367.94,7680.23,161354.57,-2473.95,7575.31,161354.57,-2473.95,7575.31,161354.57,-2545.03,7497.39,161354.57,-2545.03,7497.39,161354.57,-2613.01,7415.1,161354.57,-2613.01,7415.1,161354.57,-2677.15,7327.99,161354.57,-2677.15,7327.99,161354.57,-2736.68,7235.65,161354.57,-2736.68,7235.65,161354.57,-2767.21,7182.42,161354.57,-2767.21,7182.42,161354.57,-2803.76,7111.57,161354.57,-2803.76,7111.57,161354.57,-2836.59,7039.63,161354.57,-2836.59,7039.63,161354.57,-2891.91,6893.67,161354.57,-2891.91,6893.67,161354.57,-2926.83,6777.54,161354.57,-2926.83,6777.54,161354.57,-2955.04,6661.34,161354.57,-2955.04,6661.34,161354.57,-2980.87,6525.8,161354.57,-2980.87,6525.8,161354.57,-3000.2,6391.1,161354.57,-3000.2,6391.1,161354.57,-3021.55,6164.31,161354.57,-3021.55,6164.31,161354.57,-2969.56,.54,161354.57,10770.47,9187.31,161299.57,3365.69,9981.53,161299.57,3365.69,9981.53,161299.57,3058.37,10003.79,161299.57,3058.37,10003.79,161299.57,2879.1,10007.98,161299.57,2879.1,10007.98,161299.57,2588.25,9997.36,161299.57,2588.25,9997.36,161299.57,2416.17,9979.66,161299.57,2416.17,9979.66,161299.57,2245.14,9953.72,161299.57,2245.14,9953.72,161299.57,1907.37,9878.88,161299.57,1907.37,9878.88,161299.57,1686.57,9813.47,161299.57,1686.57,9813.47,161299.57,1469.54,9736.46,161299.57,1469.54,9736.46,161299.57,1256.68,9648.5,161299.57,1256.68,9648.5,161299.57,941.99,9495.26,161299.57,941.99,9495.26,161299.57,-1523.52,8023.96,161299.57,-1523.52,8023.96,161299.57,-1860.73,7801.87,161299.57,-1860.73,7801.87,161299.57,-2112.33,7606.74,161299.57,-2112.33,7606.74,161299.57,-2214.1,7516.01,161299.57,-2214.1,7516.01,161299.57,-2311.03,7420.05,161299.57,-2311.03,7420.05,161299.57,-2375.15,7349.71,161299.57,-2375.15,7349.71,161299.57,-2435.75,7276.35,161299.57,-2435.75,7276.35,161299.57,-2492.16,7199.8,161299.57,-2492.16,7199.8,161299.57,-2543.73,7119.9,161299.57,-2543.73,7119.9,161299.57,-2569.89,7074.29,161299.57,-2569.89,7074.29,161299.57,-2601.34,7013.33,161299.57,-2601.34,7013.33,161299.57,-2629.81,6950.92,161299.57,-2629.81,6950.92,161299.57,-2678.42,6822.63,161299.57,-2678.42,6822.63,161299.57,-2709.6,6718.87,161299.57,-2709.6,6718.87,161299.57,-2735.16,6613.62,161299.57,-2735.16,6613.62,161299.57,-2758.86,6489.11,161299.57,-2758.86,6489.11,161299.57,-2776.86,6363.67,161299.57,-2776.86,6363.67,161299.57,-2797.02,6149.11,161299.57,-2797.02,6149.11,161299.57,-2744.57,2.96,161299.57,10281.24,9461.26,161354.57,10237.31,9013.41,161244.57,9770.17,9511.62,161354.57,9725.79,9063.81,161244.57,9259.06,9562.65,161354.57,9213.98,9114.91,161244.57,8748.11,9614.64,161354.57,8702.09,9167,161244.57,6960.55,9795.1,161354.57,6919.05,9347.02,161244.57,6705.17,9818.17,161354.57,6665.75,9369.9,161244.57,6449.73,9840.13,161354.57,6411.89,9391.72,161244.57,4915.48,9987.79,161354.57,4859.26,9541.31,161244.57,4787.36,10004.46,161354.57,4727.51,9558.46,161244.57,4531.47,10041.11,161354.57,4464.13,9596.16,161244.57,3701.95,10168.21,161354.57,3641.53,9722.23,161244.57,3068.13,10228.59,161354.57,3048.62,9778.99,161244.57,2689.61,10229,161354.57,2709.98,9779.46,161244.57,2570.73,10221.68,161354.57,2605.77,9773.04,161244.57,1849.3,10096.29,161354.57,1965.44,9661.48,161244.57,947.62,9751.39,161354.57,1149.15,9349.04,161244.57,836.37,9693.93,161354.57,1047.61,9296.58,161244.57,72.68,9234.49,161354.57,314.03,8854.65,161244.57,-160.39,9087.5,161354.57,77.5,8705.51,161244.57,-870.26,8661.25,161354.57,-644.92,8271.73,161244.57,-1108.56,8525.18,161354.57,-886.78,8133.63,161244.57,-1641.19,8215.76,161354.57,-1405.85,7832.17,161244.57,-1991.38,7985.05,161354.57,-1730.08,7618.68,161244.57,-2258.13,7778.13,161354.57,-1966.53,7435.36,161244.57,-2473.95,7575.31,161354.57,-2148.11,7264.8,161244.57,-2736.68,7235.65,161354.57,-2350.79,7004.14,161244.57,-2767.21,7182.42,161354.57,-2372.57,6966.17,161244.57,-2891.91,6893.67,161354.57,-2464.93,6751.58,161244.57,-2955.04,6661.34,161354.57,-2515.27,6565.89,161244.57,-3000.2,6391.1,161354.57,-2553.52,6336.24,161244.57,-3032.17,5940.63,161354.57,-2582.33,5927.01,161244.57,-3036.5,5595.93,161354.57,-2586.5,5595.79,161244.57,-3036.07,5401.99,161354.57,-2586.07,5403.6,161244.57,-3034.77,5130.47,161354.57,-2584.78,5133.3,161244.57,-3011.95,3304.85,161354.57,-2562.01,3312.04,161244.57,-2993.44,2059.4,161354.57,-2543.48,2065.34,161244.57,-2984.86,1375.36,161354.57,-2534.89,1380.68,161244.57,-2977.03,688.63,161354.57,-2527.06,693.59,161244.57,10770.47,9187.31,161444.57,3365.69,9981.53,161444.57,3365.69,9981.53,161444.57,3058.37,10003.79,161444.57,3058.37,10003.79,161444.57,2879.1,10007.98,161444.57,2879.1,10007.98,161444.57,2588.25,9997.36,161444.57,2588.25,9997.36,161444.57,2416.17,9979.66,161444.57,2416.17,9979.66,161444.57,2245.14,9953.72,161444.57,2245.14,9953.72,161444.57,1907.37,9878.88,161444.57,1907.37,9878.88,161444.57,1686.57,9813.47,161444.57,1686.57,9813.47,161444.57,1469.54,9736.46,161444.57,1469.54,9736.46,161444.57,1256.68,9648.5,161444.57,1256.68,9648.5,161444.57,941.99,9495.26,161444.57,941.99,9495.26,161444.57,-1523.52,8023.96,161444.57,-1523.52,8023.96,161444.57,-1860.73,7801.87,161444.57,-1860.73,7801.87,161444.57,-2112.33,7606.74,161444.57,-2112.33,7606.74,161444.57,-2214.1,7516.01,161444.57,-2214.1,7516.01,161444.57,-2311.03,7420.05,161444.57,-2311.03,7420.05,161444.57,-2375.15,7349.71,161444.57,-2375.15,7349.71,161444.57,-2435.75,7276.35,161444.57,-2435.75,7276.35,161444.57,-2492.16,7199.8,161444.57,-2492.16,7199.8,161444.57,-2543.73,7119.9,161444.57,-2543.73,7119.9,161444.57,-2569.89,7074.29,161444.57,-2569.89,7074.29,161444.57,-2601.34,7013.33,161444.57,-2601.34,7013.33,161444.57,-2629.81,6950.92,161444.57,-2629.81,6950.92,161444.57,-2678.42,6822.63,161444.57,-2678.42,6822.63,161444.57,-2709.6,6718.87,161444.57,-2709.6,6718.87,161444.57,-2735.16,6613.62,161444.57,-2735.16,6613.62,161444.57,-2758.86,6489.11,161444.57,-2758.86,6489.11,161444.57,-2776.86,6363.67,161444.57,-2776.86,6363.67,161444.57,-2797.02,6149.11,161444.57,-2797.02,6149.11,161444.57,-2744.57,2.96,161444.57,10237.31,9013.41,161444.57,10281.24,9461.26,161444.57,9725.79,9063.81,161444.57,9770.17,9511.62,161444.57,9213.98,9114.91,161444.57,9259.06,9562.65,161444.57,8702.09,9167,161444.57,8748.11,9614.64,161444.57,6919.05,9347.02,161444.57,6960.55,9795.1,161444.57,6665.75,9369.9,161444.57,6705.17,9818.17,161444.57,6411.89,9391.72,161444.57,6449.73,9840.13,161444.57,4859.26,9541.31,161444.57,4915.48,9987.79,161444.57,4727.51,9558.46,161444.57,4787.36,10004.46,161444.57,4464.13,9596.16,161444.57,4531.47,10041.11,161444.57,3641.53,9722.23,161444.57,3701.95,10168.21,161444.57,3048.62,9778.99,161444.57,3068.13,10228.59,161444.57,2709.98,9779.46,161444.57,2689.61,10229,161444.57,2605.77,9773.04,161444.57,2570.73,10221.68,161444.57,1965.44,9661.48,161444.57,1849.3,10096.29,161444.57,1149.15,9349.04,161444.57,947.62,9751.39,161444.57,1047.61,9296.58,161444.57,836.37,9693.93,161444.57,314.03,8854.65,161444.57,72.68,9234.49,161444.57,77.5,8705.51,161444.57,-160.39,9087.5,161444.57,-644.92,8271.73,161444.57,-870.26,8661.25,161444.57,-886.78,8133.63,161444.57,-1108.56,8525.18,161444.57,-1405.85,7832.17,161444.57,-1641.19,8215.76,161444.57,-1730.08,7618.68,161444.57,-1991.38,7985.05,161444.57,-1966.53,7435.36,161444.57,-2258.13,7778.13,161444.57,-2148.11,7264.8,161444.57,-2473.95,7575.31,161444.57,-2350.79,7004.14,161444.57,-2736.68,7235.65,161444.57,-2372.57,6966.17,161444.57,-2767.21,7182.42,161444.57,-2464.93,6751.58,161444.57,-2891.91,6893.67,161444.57,-2515.27,6565.89,161444.57,-2955.04,6661.34,161444.57,-2553.52,6336.24,161444.57,-3000.2,6391.1,161444.57,-2582.33,5927.01,161444.57,-3032.17,5940.63,161444.57,-2586.5,5595.79,161444.57,-3036.5,5595.93,161444.57,-2586.07,5403.6,161444.57,-3036.07,5401.99,161444.57,-2584.78,5133.3,161444.57,-3034.77,5130.47,161444.57,-2562.01,3312.04,161444.57,-3011.95,3304.85,161444.57,-2543.48,2065.34,161444.57,-2993.44,2059.4,161444.57,-2534.89,1380.68,161444.57,-2984.86,1375.36,161444.57,-2527.06,693.59,161444.57,-2977.03,688.63,161444.57,10792.35,9411.24,161399.57,3387.73,10205.48,161399.57,3387.73,10205.48,161399.57,3068.13,10228.59,161399.57,3068.13,10228.59,161399.57,2879.66,10232.99,161399.57,2879.66,10232.99,161399.57,2570.73,10221.68,161399.57,2570.73,10221.68,161399.57,2387.61,10202.86,161399.57,2387.61,10202.86,161399.57,2206.18,10175.35,161399.57,2206.18,10175.35,161399.57,1849.3,10096.29,161399.57,1849.3,10096.29,161399.57,1616.86,10027.45,161399.57,1616.86,10027.45,161399.57,1388.92,9946.57,161399.57,1388.92,9946.57,161399.57,1165.75,9854.33,161399.57,1165.75,9854.33,161399.57,836.37,9693.93,161399.57,836.37,9693.93,161399.57,-1641.19,8215.76,161399.57,-1641.19,8215.76,161399.57,-1991.38,7985.05,161399.57,-1991.38,7985.05,161399.57,-2258.13,7778.13,161399.57,-2258.13,7778.13,161399.57,-2367.94,7680.23,161399.57,-2367.94,7680.23,161399.57,-2473.95,7575.31,161399.57,-2473.95,7575.31,161399.57,-2545.03,7497.39,161399.57,-2545.03,7497.39,161399.57,-2613.01,7415.1,161399.57,-2613.01,7415.1,161399.57,-2677.15,7327.99,161399.57,-2677.15,7327.99,161399.57,-2736.68,7235.65,161399.57,-2736.68,7235.65,161399.57,-2767.21,7182.42,161399.57,-2767.21,7182.42,161399.57,-2803.76,7111.57,161399.57,-2803.76,7111.57,161399.57,-2836.59,7039.63,161399.57,-2836.59,7039.63,161399.57,-2891.91,6893.67,161399.57,-2891.91,6893.67,161399.57,-2926.83,6777.54,161399.57,-2926.83,6777.54,161399.57,-2955.04,6661.34,161399.57,-2955.04,6661.34,161399.57,-2980.87,6525.8,161399.57,-2980.87,6525.8,161399.57,-3000.2,6391.1,161399.57,-3000.2,6391.1,161399.57,-3021.55,6164.31,161399.57,-3021.55,6164.31,161399.57,-2969.56,.54,161399.57,10281.24,9461.26,161444.57,10281.24,9461.26,161354.57,9770.17,9511.62,161444.57,9770.17,9511.62,161354.57,9259.06,9562.65,161444.57,9259.06,9562.65,161354.57,8748.11,9614.64,161444.57,8748.11,9614.64,161354.57,6960.55,9795.1,161444.57,6960.55,9795.1,161354.57,6705.17,9818.17,161444.57,6705.17,9818.17,161354.57,6449.73,9840.13,161444.57,6449.73,9840.13,161354.57,4915.48,9987.79,161444.57,4915.48,9987.79,161354.57,4787.36,10004.46,161444.57,4787.36,10004.46,161354.57,4531.47,10041.11,161444.57,4531.47,10041.11,161354.57,3701.95,10168.21,161444.57,3701.95,10168.21,161354.57,3068.13,10228.59,161444.57,3068.13,10228.59,161354.57,2689.61,10229,161444.57,2689.61,10229,161354.57,2570.73,10221.68,161444.57,2570.73,10221.68,161354.57,1849.3,10096.29,161444.57,1849.3,10096.29,161354.57,947.62,9751.39,161444.57,947.62,9751.39,161354.57,836.37,9693.93,161444.57,836.37,9693.93,161354.57,72.68,9234.49,161444.57,72.68,9234.49,161354.57,-160.39,9087.5,161444.57,-160.39,9087.5,161354.57,-870.26,8661.25,161444.57,-870.26,8661.25,161354.57,-1108.56,8525.18,161444.57,-1108.56,8525.18,161354.57,-1641.19,8215.76,161444.57,-1641.19,8215.76,161354.57,-1991.38,7985.05,161444.57,-1991.38,7985.05,161354.57,-2258.13,7778.13,161444.57,-2258.13,7778.13,161354.57,-2473.95,7575.31,161444.57,-2473.95,7575.31,161354.57,-2736.68,7235.65,161444.57,-2736.68,7235.65,161354.57,-2767.21,7182.42,161444.57,-2767.21,7182.42,161354.57,-2891.91,6893.67,161444.57,-2891.91,6893.67,161354.57,-2955.04,6661.34,161444.57,-2955.04,6661.34,161354.57,-3000.2,6391.1,161444.57,-3000.2,6391.1,161354.57,-3032.17,5940.63,161444.57,-3032.17,5940.63,161354.57,-3036.5,5595.93,161444.57,-3036.5,5595.93,161354.57,-3036.07,5401.99,161444.57,-3036.07,5401.99,161354.57,-3034.77,5130.47,161444.57,-3034.77,5130.47,161354.57,-3011.95,3304.85,161444.57,-3011.95,3304.85,161354.57,-2993.44,2059.4,161444.57,-2993.44,2059.4,161354.57,-2984.86,1375.36,161444.57,-2984.86,1375.36,161354.57,-2977.03,688.63,161444.57,-2977.03,688.63,161354.57,5001.61,9203.41,164493.7,3929.19,9340.2,164493.7,3929.19,9340.2,164493.7,3570.69,9365.33,164493.7,3570.69,9365.33,164493.7,3393.49,9368.66,164493.7,3393.49,9368.66,164493.7,3116.17,9357.73,164493.7,3116.17,9357.73,164493.7,2892.65,9332.41,164493.7,2892.65,9332.41,164493.7,2670.64,9292.54,164493.7,2670.64,9292.54,164493.7,2451.08,9238.69,164493.7,2451.08,9238.69,164493.7,2234.92,9171.39,164493.7,2234.92,9171.39,164493.7,1952.7,9061.22,164493.7,1952.7,9061.22,164493.7,1680.66,8928.75,164493.7,1680.66,8928.75,164493.7,1594.32,8880.76,164493.7,1594.32,8880.76,164493.7,147.56,7948.24,164493.7,147.56,7948.24,164493.7,-492.25,7539.84,164493.7,-492.25,7539.84,164493.7,-722.53,7369.37,164493.7,-722.53,7369.37,164493.7,-916.98,7201.79,164493.7,-916.98,7201.79,164493.7,-1021.11,7096.75,164493.7,-1021.11,7096.75,164493.7,-1114.55,6986.93,164493.7,-1114.55,6986.93,164493.7,-1161.4,6923.14,164493.7,-1161.4,6923.14,164493.7,-1203.49,6858.03,164493.7,-1203.49,6858.03,164493.7,-1225.08,6820.49,164493.7,-1225.08,6820.49,164493.7,-1251.27,6769.88,164493.7,-1251.27,6769.88,164493.7,-1275.26,6717.48,164493.7,-1275.26,6717.48,164493.7,-1316.98,6607.88,164493.7,-1316.98,6607.88,164493.7,-1344.38,6517.28,164493.7,-1344.38,6517.28,164493.7,-1367.3,6423.76,164493.7,-1367.3,6423.76,164493.7,-1389,6311.19,164493.7,-1389,6311.19,164493.7,-1405.83,6195.95,164493.7,-1405.83,6195.95,164493.7,-1425.26,5995.12,164493.7,-1425.26,5995.12,164493.7,-1412.21,2.19,164493.7,-1412.21,2.19,164493.7,-1862.2,.22,164493.7,-1412.21,2.19,164293.7,-1425.26,5995.12,164293.7,-1425.26,5995.12,164293.7,-1405.83,6195.95,164293.7,-1405.83,6195.95,164293.7,-1389,6311.19,164293.7,-1389,6311.19,164293.7,-1367.3,6423.76,164293.7,-1367.3,6423.76,164293.7,-1344.38,6517.28,164293.7,-1344.38,6517.28,164293.7,-1316.98,6607.88,164293.7,-1316.98,6607.88,164293.7,-1275.26,6717.48,164293.7,-1275.26,6717.48,164293.7,-1251.27,6769.88,164293.7,-1251.27,6769.88,164293.7,-1225.08,6820.49,164293.7,-1225.08,6820.49,164293.7,-1203.49,6858.03,164293.7,-1203.49,6858.03,164293.7,-1161.4,6923.14,164293.7,-1161.4,6923.14,164293.7,-1114.55,6986.93,164293.7,-1114.55,6986.93,164293.7,-1021.11,7096.75,164293.7,-1021.11,7096.75,164293.7,-916.98,7201.79,164293.7,-916.98,7201.79,164293.7,-722.53,7369.37,164293.7,-722.53,7369.37,164293.7,-492.25,7539.84,164293.7,-492.25,7539.84,164293.7,1025.54,8514.17,164293.7,1025.54,8514.17,164293.7,1594.32,8880.76,164293.7,1594.32,8880.76,164293.7,1680.66,8928.75,164293.7,1680.66,8928.75,164293.7,1952.7,9061.22,164293.7,1952.7,9061.22,164293.7,2234.92,9171.39,164293.7,2234.92,9171.39,164293.7,2451.08,9238.69,164293.7,2451.08,9238.69,164293.7,2670.64,9292.54,164293.7,2670.64,9292.54,164293.7,2892.65,9332.41,164293.7,2892.65,9332.41,164293.7,3116.17,9357.73,164293.7,3116.17,9357.73,164293.7,3393.49,9368.66,164293.7,3393.49,9368.66,164293.7,3570.69,9365.33,164293.7,3570.69,9365.33,164293.7,3929.19,9340.2,164293.7,3929.19,9340.2,164293.7,5001.61,9203.41,164293.7,5001.61,9203.41,164293.7,5056.54,9650.04,164403.7,-1862.2,.22,164403.7,-1412.21,2.19,164293.7,-1862.2,.22,164493.7,-1862.2,.22,164403.7,5056.54,9650.04,164493.7,5001.61,9203.41,164493.7,5056.54,9650.04,164403.7,5056.54,9650.04,164493.7,5056.54,9650.04,164493.7,3972.77,9788.14,164493.7,3972.77,9788.14,164493.7,3587.87,9815.13,164493.7,3587.87,9815.13,164493.7,3392.66,9818.74,164493.7,3392.66,9818.74,164493.7,3080.27,9806.3,164493.7,3080.27,9806.3,164493.7,2827.08,9777.68,164493.7,2827.08,9777.68,164493.7,2576.88,9732.79,164493.7,2576.88,9732.79,164493.7,2330.38,9672.31,164493.7,2330.38,9672.31,164493.7,2088.28,9596.9,164493.7,2088.28,9596.9,164493.7,1772.46,9473.6,164493.7,1772.46,9473.6,164493.7,1467.39,9325.01,164493.7,1467.39,9325.01,164493.7,1370.58,9271.22,164493.7,1370.58,9271.22,164493.7,-88.81,8331.18,164493.7,-88.81,8331.18,164493.7,-749.6,7909.04,164493.7,-749.6,7909.04,164493.7,-1002.42,7721.77,164493.7,-1002.42,7721.77,164493.7,-1226.11,7528.88,164493.7,-1226.11,7528.88,164493.7,-1351.8,7402.12,164493.7,-1351.8,7402.12,164493.7,-1469.77,7263.26,164493.7,-1469.77,7263.26,164493.7,-1531.56,7179.08,164493.7,-1531.56,7179.08,164493.7,-1589.13,7089.94,164493.7,-1589.13,7089.94,164493.7,-1619.45,7037.24,164493.7,-1619.45,7037.24,164493.7,-1655.84,6966.93,164493.7,-1655.84,6966.93,164493.7,-1688.54,6895.55,164493.7,-1688.54,6895.55,164493.7,-1743.7,6750.75,164493.7,-1743.7,6750.75,164493.7,-1778.6,6635.5,164493.7,-1778.6,6635.5,164493.7,-1806.85,6520.21,164493.7,-1806.85,6520.21,164493.7,-1832.81,6385.7,164493.7,-1832.81,6385.7,164493.7,-1852.36,6252.03,164493.7,-1852.36,6252.03,164493.7,-1874.22,6026.94,164493.7,-1874.22,6026.94,164493.7,-1862.2,.22,164493.7,5056.54,9650.04,164403.7,3972.77,9788.14,164403.7,3972.77,9788.14,164403.7,3587.87,9815.13,164403.7,3587.87,9815.13,164403.7,3392.66,9818.74,164403.7,3392.66,9818.74,164403.7,3080.27,9806.3,164403.7,3080.27,9806.3,164403.7,2827.08,9777.68,164403.7,2827.08,9777.68,164403.7,2576.88,9732.79,164403.7,2576.88,9732.79,164403.7,2330.38,9672.31,164403.7,2330.38,9672.31,164403.7,2088.28,9596.9,164403.7,2088.28,9596.9,164403.7,1772.46,9473.6,164403.7,1772.46,9473.6,164403.7,1467.39,9325.01,164403.7,1467.39,9325.01,164403.7,1370.58,9271.22,164403.7,1370.58,9271.22,164403.7,-88.81,8331.18,164403.7,-88.81,8331.18,164403.7,-749.6,7909.04,164403.7,-749.6,7909.04,164403.7,-1002.42,7721.77,164403.7,-1002.42,7721.77,164403.7,-1226.11,7528.88,164403.7,-1226.11,7528.88,164403.7,-1351.8,7402.12,164403.7,-1351.8,7402.12,164403.7,-1469.77,7263.26,164403.7,-1469.77,7263.26,164403.7,-1531.56,7179.08,164403.7,-1531.56,7179.08,164403.7,-1589.13,7089.94,164403.7,-1589.13,7089.94,164403.7,-1619.45,7037.24,164403.7,-1619.45,7037.24,164403.7,-1655.84,6966.93,164403.7,-1655.84,6966.93,164403.7,-1688.54,6895.55,164403.7,-1688.54,6895.55,164403.7,-1743.7,6750.75,164403.7,-1743.7,6750.75,164403.7,-1778.6,6635.5,164403.7,-1778.6,6635.5,164403.7,-1806.85,6520.21,164403.7,-1806.85,6520.21,164403.7,-1832.81,6385.7,164403.7,-1832.81,6385.7,164403.7,-1852.36,6252.03,164403.7,-1852.36,6252.03,164403.7,-1874.22,6026.94,164403.7,-1874.22,6026.94,164403.7,-1862.2,.22,164403.7,5029.07,9426.72,164348.7,3950.98,9564.17,164348.7,3950.98,9564.17,164348.7,3579.28,9590.23,164348.7,3579.28,9590.23,164348.7,3393.07,9593.7,164348.7,3393.07,9593.7,164348.7,3098.22,9582.01,164348.7,3098.22,9582.01,164348.7,2859.87,9555.04,164348.7,2859.87,9555.04,164348.7,2623.76,9512.67,164348.7,2623.76,9512.67,164348.7,2390.73,9455.5,164348.7,2390.73,9455.5,164348.7,2161.6,9384.15,164348.7,2161.6,9384.15,164348.7,1862.58,9267.41,164348.7,1862.58,9267.41,164348.7,1574.03,9126.88,164348.7,1574.03,9126.88,164348.7,1482.45,9075.99,164348.7,1482.45,9075.99,164348.7,29.37,8139.71,164348.7,29.37,8139.71,164348.7,-620.93,7724.44,164348.7,-620.93,7724.44,164348.7,-862.47,7545.57,164348.7,-862.47,7545.57,164348.7,-1071.55,7365.33,164348.7,-1071.55,7365.33,164348.7,-1186.46,7249.43,164348.7,-1186.46,7249.43,164348.7,-1292.16,7125.1,164348.7,-1292.16,7125.1,164348.7,-1346.48,7051.11,164348.7,-1346.48,7051.11,164348.7,-1396.31,6973.99,164348.7,-1396.31,6973.99,164348.7,-1422.27,6928.87,164348.7,-1422.27,6928.87,164348.7,-1453.56,6868.4,164348.7,-1453.56,6868.4,164348.7,-1481.9,6806.52,164348.7,-1481.9,6806.52,164348.7,-1530.34,6679.31,164348.7,-1530.34,6679.31,164348.7,-1561.49,6576.39,164348.7,-1561.49,6576.39,164348.7,-1587.08,6471.99,164348.7,-1587.08,6471.99,164348.7,-1610.9,6348.44,164348.7,-1610.9,6348.44,164348.7,-1629.1,6223.99,164348.7,-1629.1,6223.99,164348.7,-1649.74,6011.03,164348.7,-1649.74,6011.03,164348.7,-1637.2,1.21,164348.7,4935.82,9665.36,164403.7,4877.67,9219.13,164293.7,4774.88,9686.86,164403.7,4714.32,9240.95,164293.7,4614.3,9708.89,164403.7,4553.06,9263.08,164293.7,4453.49,9730.8,164403.7,4393.63,9284.8,164293.7,3972.77,9788.14,164403.7,3929.19,9340.2,164293.7,3195.81,9813.75,164403.7,3217.96,9364.29,164293.7,3080.27,9806.3,164403.7,3116.17,9357.73,164293.7,2088.28,9596.9,164403.7,2234.92,9171.39,164293.7,1467.39,9325.01,164403.7,1680.66,8928.75,164293.7,1370.58,9271.22,164403.7,1594.32,8880.76,164293.7,773.36,8886.92,164403.7,1025.54,8514.17,164293.7,590.82,8764.51,164403.7,839.31,8389.34,164293.7,35.01,8407.94,164403.7,273.06,8026.06,164293.7,-88.81,8331.18,164403.7,147.56,7948.24,164293.7,-749.6,7909.04,164403.7,-492.25,7539.84,164293.7,-1002.42,7721.77,164403.7,-722.53,7369.37,164293.7,-1226.11,7528.88,164403.7,-916.98,7201.79,164293.7,-1469.77,7263.26,164403.7,-1114.55,6986.93,164293.7,-1589.13,7089.94,164403.7,-1203.49,6858.03,164293.7,-1619.45,7037.24,164403.7,-1225.08,6820.49,164293.7,-1743.7,6750.75,164403.7,-1316.98,6607.88,164293.7,-1806.85,6520.21,164403.7,-1367.3,6423.76,164293.7,-1852.36,6252.03,164403.7,-1405.83,6195.95,164293.7,-1885.5,5804.98,164403.7,-1435.72,5789.75,164293.7,-1891.15,5462.88,164403.7,-1441.15,5460.81,164293.7,-1891.58,5272.38,164403.7,-1441.58,5271.86,164293.7,-1891.66,5006.84,164403.7,-1441.66,5007.24,164293.7,-1876.84,2673.7,164403.7,-1426.85,2677.09,164293.7,-1872.24,2009.5,164403.7,-1422.25,2012.3,164293.7,-1868.45,1341.85,164403.7,-1418.45,1344.19,164293.7,-1865.19,671.69,164403.7,-1415.2,673.75,164293.7,5029.07,9426.72,164493.7,3950.98,9564.17,164493.7,3950.98,9564.17,164493.7,3579.28,9590.23,164493.7,3579.28,9590.23,164493.7,3393.07,9593.7,164493.7,3393.07,9593.7,164493.7,3098.22,9582.01,164493.7,3098.22,9582.01,164493.7,2859.87,9555.04,164493.7,2859.87,9555.04,164493.7,2623.76,9512.67,164493.7,2623.76,9512.67,164493.7,2390.73,9455.5,164493.7,2390.73,9455.5,164493.7,2161.6,9384.15,164493.7,2161.6,9384.15,164493.7,1862.58,9267.41,164493.7,1862.58,9267.41,164493.7,1574.03,9126.88,164493.7,1574.03,9126.88,164493.7,1482.45,9075.99,164493.7,1482.45,9075.99,164493.7,29.37,8139.71,164493.7,29.37,8139.71,164493.7,-620.93,7724.44,164493.7,-620.93,7724.44,164493.7,-862.47,7545.57,164493.7,-862.47,7545.57,164493.7,-1071.55,7365.33,164493.7,-1071.55,7365.33,164493.7,-1186.46,7249.43,164493.7,-1186.46,7249.43,164493.7,-1292.16,7125.1,164493.7,-1292.16,7125.1,164493.7,-1346.48,7051.11,164493.7,-1346.48,7051.11,164493.7,-1396.31,6973.99,164493.7,-1396.31,6973.99,164493.7,-1422.27,6928.87,164493.7,-1422.27,6928.87,164493.7,-1453.56,6868.4,164493.7,-1453.56,6868.4,164493.7,-1481.9,6806.52,164493.7,-1481.9,6806.52,164493.7,-1530.34,6679.31,164493.7,-1530.34,6679.31,164493.7,-1561.49,6576.39,164493.7,-1561.49,6576.39,164493.7,-1587.08,6471.99,164493.7,-1587.08,6471.99,164493.7,-1610.9,6348.44,164493.7,-1610.9,6348.44,164493.7,-1629.1,6223.99,164493.7,-1629.1,6223.99,164493.7,-1649.74,6011.03,164493.7,-1649.74,6011.03,164493.7,-1637.2,1.21,164493.7,4877.67,9219.13,164493.7,4935.82,9665.36,164493.7,4714.32,9240.95,164493.7,4774.88,9686.86,164493.7,4553.06,9263.08,164493.7,4614.3,9708.89,164493.7,4393.63,9284.8,164493.7,4453.49,9730.8,164493.7,3929.19,9340.2,164493.7,3972.77,9788.14,164493.7,3217.96,9364.29,164493.7,3195.81,9813.75,164493.7,3116.17,9357.73,164493.7,3080.27,9806.3,164493.7,2234.92,9171.39,164493.7,2088.28,9596.9,164493.7,1680.66,8928.75,164493.7,1467.39,9325.01,164493.7,1594.32,8880.76,164493.7,1370.58,9271.22,164493.7,1025.54,8514.17,164493.7,773.36,8886.92,164493.7,839.31,8389.34,164493.7,590.82,8764.51,164493.7,273.06,8026.06,164493.7,35.01,8407.94,164493.7,147.56,7948.24,164493.7,-88.81,8331.18,164493.7,-492.25,7539.84,164493.7,-749.6,7909.04,164493.7,-722.53,7369.37,164493.7,-1002.42,7721.77,164493.7,-916.98,7201.79,164493.7,-1226.11,7528.88,164493.7,-1114.55,6986.93,164493.7,-1469.77,7263.26,164493.7,-1203.49,6858.03,164493.7,-1589.13,7089.94,164493.7,-1225.08,6820.49,164493.7,-1619.45,7037.24,164493.7,-1316.98,6607.88,164493.7,-1743.7,6750.75,164493.7,-1367.3,6423.76,164493.7,-1806.85,6520.21,164493.7,-1405.83,6195.95,164493.7,-1852.36,6252.03,164493.7,-1435.72,5789.75,164493.7,-1885.5,5804.98,164493.7,-1441.15,5460.81,164493.7,-1891.15,5462.88,164493.7,-1441.58,5271.86,164493.7,-1891.58,5272.38,164493.7,-1441.66,5007.24,164493.7,-1891.66,5006.84,164493.7,-1426.85,2677.09,164493.7,-1876.84,2673.7,164493.7,-1422.25,2012.3,164493.7,-1872.24,2009.5,164493.7,-1418.45,1344.19,164493.7,-1868.45,1341.85,164493.7,-1415.2,673.75,164493.7,-1865.19,671.69,164493.7,5056.54,9650.04,164448.7,3972.77,9788.14,164448.7,3972.77,9788.14,164448.7,3587.87,9815.13,164448.7,3587.87,9815.13,164448.7,3392.66,9818.74,164448.7,3392.66,9818.74,164448.7,3080.27,9806.3,164448.7,3080.27,9806.3,164448.7,2827.08,9777.68,164448.7,2827.08,9777.68,164448.7,2576.88,9732.79,164448.7,2576.88,9732.79,164448.7,2330.38,9672.31,164448.7,2330.38,9672.31,164448.7,2088.28,9596.9,164448.7,2088.28,9596.9,164448.7,1772.46,9473.6,164448.7,1772.46,9473.6,164448.7,1467.39,9325.01,164448.7,1467.39,9325.01,164448.7,1370.58,9271.22,164448.7,1370.58,9271.22,164448.7,-88.81,8331.18,164448.7,-88.81,8331.18,164448.7,-749.6,7909.04,164448.7,-749.6,7909.04,164448.7,-1002.42,7721.77,164448.7,-1002.42,7721.77,164448.7,-1226.11,7528.88,164448.7,-1226.11,7528.88,164448.7,-1351.8,7402.12,164448.7,-1351.8,7402.12,164448.7,-1469.77,7263.26,164448.7,-1469.77,7263.26,164448.7,-1531.56,7179.08,164448.7,-1531.56,7179.08,164448.7,-1589.13,7089.94,164448.7,-1589.13,7089.94,164448.7,-1619.45,7037.24,164448.7,-1619.45,7037.24,164448.7,-1655.84,6966.93,164448.7,-1655.84,6966.93,164448.7,-1688.54,6895.55,164448.7,-1688.54,6895.55,164448.7,-1743.7,6750.75,164448.7,-1743.7,6750.75,164448.7,-1778.6,6635.5,164448.7,-1778.6,6635.5,164448.7,-1806.85,6520.21,164448.7,-1806.85,6520.21,164448.7,-1832.81,6385.7,164448.7,-1832.81,6385.7,164448.7,-1852.36,6252.03,164448.7,-1852.36,6252.03,164448.7,-1874.22,6026.94,164448.7,-1874.22,6026.94,164448.7,-1862.2,.22,164448.7,4935.82,9665.36,164493.7,4935.82,9665.36,164403.7,4774.88,9686.86,164493.7,4774.88,9686.86,164403.7,4614.3,9708.89,164493.7,4614.3,9708.89,164403.7,4453.49,9730.8,164493.7,4453.49,9730.8,164403.7,3972.77,9788.14,164493.7,3972.77,9788.14,164403.7,3195.81,9813.75,164493.7,3195.81,9813.75,164403.7,3080.27,9806.3,164493.7,3080.27,9806.3,164403.7,2088.28,9596.9,164493.7,2088.28,9596.9,164403.7,1467.39,9325.01,164493.7,1467.39,9325.01,164403.7,1370.58,9271.22,164493.7,1370.58,9271.22,164403.7,773.36,8886.92,164493.7,773.36,8886.92,164403.7,590.82,8764.51,164493.7,590.82,8764.51,164403.7,35.01,8407.94,164493.7,35.01,8407.94,164403.7,-88.81,8331.18,164493.7,-88.81,8331.18,164403.7,-749.6,7909.04,164493.7,-749.6,7909.04,164403.7,-1002.42,7721.77,164493.7,-1002.42,7721.77,164403.7,-1226.11,7528.88,164493.7,-1226.11,7528.88,164403.7,-1469.77,7263.26,164493.7,-1469.77,7263.26,164403.7,-1589.13,7089.94,164493.7,-1589.13,7089.94,164403.7,-1619.45,7037.24,164493.7,-1619.45,7037.24,164403.7,-1743.7,6750.75,164493.7,-1743.7,6750.75,164403.7,-1806.85,6520.21,164493.7,-1806.85,6520.21,164403.7,-1852.36,6252.03,164493.7,-1852.36,6252.03,164403.7,-1885.5,5804.98,164493.7,-1885.5,5804.98,164403.7,-1891.15,5462.88,164493.7,-1891.15,5462.88,164403.7,-1891.58,5272.38,164493.7,-1891.58,5272.38,164403.7,-1891.66,5006.84,164493.7,-1891.66,5006.84,164403.7,-1876.84,2673.7,164493.7,-1876.84,2673.7,164403.7,-1872.24,2009.5,164493.7,-1872.24,2009.5,164403.7,-1868.45,1341.85,164493.7,-1868.45,1341.85,164403.7,-1865.19,671.69,164493.7,-1865.19,671.69,164403.7,25714.51,2091.88,147521.22,25417.02,2074.32,150521.22,25417.02,2074.32,150521.22,25662.49,2117.48,150545.82,25405.5,2122.97,150520.37,25702.99,2140.53,147520.37,25702.99,2140.53,147520.37,25941.55,2212.87,147544.45,25644.06,2195.32,150544.45,25405.5,2122.97,150520.37,25662.49,2117.48,150545.82,25644.06,2195.32,150544.45,25959.99,2135.04,147545.82,25714.51,2091.88,147521.22,25941.55,2212.87,147544.45,25959.99,2135.04,147545.82,25959.99,2135.04,147545.82,25662.49,2117.48,150545.82,25941.55,2212.87,147544.45,25644.06,2195.32,150544.45,25822.27,2176.7,147532.41,25524.78,2159.14,150532.41,25792.8,2204.09,149044.45,25554.24,2131.75,149020.37,25837.25,2113.46,147533.52,25539.76,2095.9,150533.52,25565.77,2083.1,149021.22,25811.24,2126.26,149045.82,25950.77,2173.96,147545.13,25653.27,2156.4,150545.13,25811.24,2126.26,149045.82,25792.8,2204.09,149044.45,25564.37,2652.98,147521.66,25265.87,2635.15,150521.66,25265.87,2635.15,150521.66,25508.1,2693.89,150546.11,25251.3,2682.96,150520.5,25549.79,2700.79,147520.5,25549.79,2700.79,147520.5,25783.28,2788.22,147544.25,25484.79,2770.39,150544.25,25251.3,2682.96,150520.5,25508.1,2693.89,150546.11,25484.79,2770.39,150544.25,25806.6,2711.72,147546.11,25564.37,2652.98,147521.66,25783.28,2788.22,147544.25,25806.6,2711.72,147546.11,25806.6,2711.72,147546.11,25508.1,2693.89,150546.11,25783.28,2788.22,147544.25,25484.79,2770.39,150544.25,25666.54,2744.51,147532.37,25368.04,2726.68,150532.37,25634.03,2779.31,149044.25,25400.55,2691.88,149020.5,25685.48,2682.35,147533.89,25386.99,2664.52,150533.89,25415.12,2644.06,149021.66,25657.35,2702.8,149046.11,25794.94,2749.97,147545.18,25496.44,2732.14,150545.18,25657.35,2702.8,149046.11,25634.03,2779.31,149044.25,24335.57,5208.88,147524.49,24039.35,5166.18,150524.49,24039.35,5166.18,150524.49,24252.01,5296.5,150547.34,24010.91,5207.24,150522.27,24307.13,5249.94,147522.27,24307.13,5249.94,147522.27,24502.71,5404.89,147543.78,24206.49,5362.19,150543.78,24010.91,5207.24,150522.27,24252.01,5296.5,150547.34,24206.49,5362.19,150543.78,24548.23,5339.2,147547.34,24335.57,5208.88,147524.49,24502.71,5404.89,147543.78,24548.23,5339.2,147547.34,24548.23,5339.2,147547.34,24252.01,5296.5,150547.34,24502.71,5404.89,147543.78,24206.49,5362.19,150543.78,24404.92,5327.42,147533.02,24108.7,5284.72,150533.02,24354.6,5383.54,149043.78,24159.02,5228.59,149022.27,24441.9,5274.04,147535.92,24145.68,5231.34,150535.92,24187.46,5187.53,149024.49,24400.12,5317.85,149047.34,24525.47,5372.05,147545.56,24229.25,5329.34,150545.56,24400.12,5317.85,149047.34,24354.6,5383.54,149043.78,23991.09,5676.6,147525.27,23692.79,5632.35,150525.27,23692.79,5632.35,150525.27,23896.75,5775.96,150547.67,23661.81,5671.52,150522.77,23960.11,5715.77,147522.77,23960.11,5715.77,147522.77,24145.48,5882.88,147543.67,23847.19,5838.63,150543.67,23661.81,5671.52,150522.77,23896.75,5775.96,150547.67,23847.19,5838.63,150543.67,24195.05,5820.21,147547.67,23991.09,5676.6,147525.27,24145.48,5882.88,147543.67,24195.05,5820.21,147547.67,24195.05,5820.21,147547.67,23896.75,5775.96,150547.67,24145.48,5882.88,147543.67,23847.19,5838.63,150543.67,24052.8,5799.32,147533.22,23754.5,5755.07,150533.22,23996.33,5860.75,149043.67,23810.96,5693.64,149022.77,24093.07,5748.41,147536.47,23794.77,5704.16,150536.47,23841.94,5654.48,149025.27,24045.9,5798.09,149047.67,24170.27,5851.55,147545.67,23871.97,5807.29,150545.67,24045.9,5798.09,149047.67,23996.33,5860.75,149043.67,21914.54,7608.39,147529.56,21622.34,7536.26,150529.56,21622.34,7536.26,150529.56,21772.75,7735.57,150549.01,21580.93,7564.08,150526.2,21873.13,7636.21,147526.2,21873.13,7636.21,147526.2,21998.7,7852.21,147543.62,21706.5,7780.08,150543.62,21580.93,7564.08,150526.2,21772.75,7735.57,150549.01,21706.5,7780.08,150543.62,22064.95,7807.7,147549.01,21914.54,7608.39,147529.56,21998.7,7852.21,147543.62,22064.95,7807.7,147549.01,22064.95,7807.7,147549.01,21772.75,7735.57,150549.01,21998.7,7852.21,147543.62,21706.5,7780.08,150543.62,21935.91,7744.21,147534.91,21643.71,7672.08,150534.91,21852.6,7816.14,149043.62,21727.03,7600.14,149026.2,21989.75,7708.05,147539.28,21697.55,7635.92,150539.28,21768.44,7572.33,149029.56,21918.85,7771.64,149049.01,22031.82,7829.96,147546.31,21739.62,7757.82,150546.31,21918.85,7771.64,149049.01,21852.6,7816.14,149043.62,21423.15,7918.27,147530.59,21128.76,7842.62,150530.59,21128.76,7842.62,150530.59,21266.26,8051.1,150549.34,21085.68,7867.75,150527,21380.07,7943.41,147527,21380.07,7943.41,147527,21491.73,8166.97,147543.59,21197.34,8091.32,150543.59,21085.68,7867.75,150527,21266.26,8051.1,150549.34,21197.34,8091.32,150543.59,21560.65,8126.76,147549.34,21423.15,7918.27,147530.59,21491.73,8166.97,147543.59,21560.65,8126.76,147549.34,21560.65,8126.76,147549.34,21266.26,8051.1,150549.34,21491.73,8166.97,147543.59,21197.34,8091.32,150543.59,21435.9,8055.19,147535.29,21141.51,7979.54,150535.29,21344.54,8129.15,149043.59,21232.88,7905.58,149027,21491.9,8022.52,147539.96,21197.51,7946.86,150539.96,21275.95,7880.45,149030.59,21413.46,8088.93,149049.34,21526.19,8146.87,147546.47,21231.8,8071.21,150546.47,21413.46,8088.93,149049.34,21344.54,8129.15,149043.59,18784.83,8959.64,147535.75,18503.59,8853.21,150535.75,18503.59,8853.21,150535.75,18571.09,9093.94,150550.62,18454.95,8864,150531.57,18736.19,8970.42,147531.57,18736.19,8970.42,147531.57,18774.5,9217.61,147543.94,18493.26,9111.19,150543.94,18454.95,8864,150531.57,18571.09,9093.94,150550.62,18493.26,9111.19,150543.94,18852.33,9200.36,147550.62,18784.83,8959.64,147535.75,18774.5,9217.61,147543.94,18852.33,9200.36,147550.62,18852.33,9200.36,147550.62,18571.09,9093.94,150550.62,18774.5,9217.61,147543.94,18493.26,9111.19,150543.94,18755.34,9094.01,147537.75,18474.1,8987.59,150537.75,18633.88,9164.4,149043.94,18595.57,8917.21,149031.57,18818.58,9080,147543.19,18537.34,8973.57,150543.19,18644.21,8906.42,149035.75,18711.71,9147.15,149050.62,18813.41,9208.98,147547.28,18532.17,9102.56,150547.28,18711.71,9147.15,149050.62,18633.88,9164.4,149043.94,18214.21,9068.93,147536.89,17931.94,8956.9,150536.89,17931.94,8956.9,150536.89,17984.12,9201.45,150550.93,17882.73,8964.58,150532.54,18165,9076.62,147532.54,18165,9076.62,147532.54,18187.64,9325.78,147543.98,17905.37,9213.74,150543.98,17882.73,8964.58,150532.54,17984.12,9201.45,150550.93,17905.37,9213.74,150543.98,18266.38,9313.49,147550.93,18214.21,9068.93,147536.89,18187.64,9325.78,147543.98,18266.38,9313.49,147550.93,18266.38,9313.49,147550.93,17984.12,9201.45,150550.93,18187.64,9325.78,147543.98,17905.37,9213.74,150543.98,18176.32,9201.2,147538.26,17894.05,9089.16,150538.26,18046.51,9269.76,149043.98,18023.86,9020.6,149032.54,18240.3,9191.21,147543.91,17958.03,9079.18,150543.91,18073.08,9012.92,149036.89,18125.25,9257.47,149050.93,18227.01,9319.63,147547.45,17944.74,9207.6,150547.45,18125.25,9257.47,149050.93,18046.51,9269.76,149043.98,16245.12,9376.41,147533.99,16075.62,9227.91,150533.99,16075.62,9227.91,150533.99,16128.24,9472.31,150549.06,16026.28,9235.61,150531.58,16195.77,9384.11,147531.58,16195.77,9384.11,147531.58,16218.78,9633.13,147545.21,16049.28,9484.63,150545.21,16026.28,9235.61,150531.58,16128.24,9472.31,150549.06,16049.28,9484.63,150545.21,16297.73,9620.81,147549.06,16245.12,9376.41,147533.99,16218.78,9633.13,147545.21,16297.73,9620.81,147549.06,16297.73,9620.81,147549.06,16128.24,9472.31,150549.06,16218.78,9633.13,147545.21,16049.28,9484.63,150545.21,16207.28,9508.62,147538.39,16037.78,9360.12,150538.39,16134.03,9558.88,149045.21,16111.03,9309.86,149031.58,16271.43,9498.61,147541.52,16101.93,9350.11,150541.52,16160.37,9302.16,149033.99,16212.98,9546.56,149049.06,16258.26,9626.97,147547.13,16088.76,9478.47,150547.13,16212.98,9546.56,149049.06,16134.03,9558.88,149045.21,15652.33,9468.98,147533.39,15481.94,9314.58,150533.39,15481.94,9314.58,150533.39,15534.53,9558.95,150548.96,15432.6,9322.28,150530.99,15602.99,9476.68,147530.99,15602.99,9476.68,147530.99,15625.97,9725.68,147545.11,15455.58,9571.28,150545.11,15432.6,9322.28,150530.99,15534.53,9558.95,150548.96,15455.58,9571.28,150545.11,15704.92,9713.35,147548.96,15652.33,9468.98,147533.39,15625.97,9725.68,147545.11,15704.92,9713.35,147548.96,15704.92,9713.35,147548.96,15534.53,9558.95,150548.96,15625.97,9725.68,147545.11,15455.58,9571.28,150545.11,15614.48,9601.18,147538.05,15444.09,9446.78,150538.05,15540.77,9648.48,149045.11,15517.79,9399.48,149030.99,15678.62,9591.17,147541.17,15508.24,9436.77,150541.17,15567.14,9391.78,149033.39,15619.72,9636.15,149048.96,15665.44,9719.51,147547.03,15495.05,9565.11,150547.03,15619.72,9636.15,149048.96,15540.77,9648.48,149045.11,13683.03,9776.5,147530.53,13625.42,9585.64,150530.53,13625.42,9585.64,150530.53,13678.56,9829.82,150547.08,13576.02,9593.35,150530.07,13633.63,9784.22,147530.07,13633.63,9784.22,147530.07,13657.14,10033.03,147546.35,13599.52,9842.16,150546.35,13576.02,9593.35,150530.07,13678.56,9829.82,150547.08,13599.52,9842.16,150546.35,13736.18,10020.69,147547.08,13683.03,9776.5,147530.53,13657.14,10033.03,147546.35,13736.18,10020.69,147547.08,13736.18,10020.69,147547.08,13678.56,9829.82,150547.08,13657.14,10033.03,147546.35,13599.52,9842.16,150546.35,13645.38,9908.62,147538.21,13587.77,9717.75,150538.21,13628.33,9937.59,149046.35,13604.82,9688.78,149030.07,13709.6,9898.6,147538.8,13651.99,9707.73,150538.8,13654.22,9681.07,149030.53,13707.37,9925.26,149047.08,13696.66,10026.86,147546.72,13639.04,9835.99,150546.72,13707.37,9925.26,149047.08,13628.33,9937.59,149046.35,13090.22,9869.08,147529.93,13031.72,9672.32,150529.93,13031.72,9672.32,150529.93,13084.85,9916.47,150546.98,12982.32,9680.03,150529.48,13040.82,9876.79,147529.48,13040.82,9876.79,147529.48,13064.32,10125.57,147546.25,13005.81,9928.81,150546.25,12982.32,9680.03,150529.48,13084.85,9916.47,150546.98,13005.81,9928.81,150546.25,13143.36,10113.23,147546.98,13090.22,9869.08,147529.93,13064.32,10125.57,147546.25,13143.36,10113.23,147546.98,13143.36,10113.23,147546.98,13084.85,9916.47,150546.98,13064.32,10125.57,147546.25,13005.81,9928.81,150546.25,13052.57,10001.18,147537.86,12994.06,9804.42,150537.86,13035.07,10027.19,149046.25,13011.57,9778.41,149029.48,13116.79,9991.16,147538.46,13058.28,9794.39,150538.46,13060.97,9770.7,149029.93,13114.1,10014.85,149046.98,13103.84,10119.4,147546.62,13045.33,9922.64,150546.62,13114.1,10014.85,149046.98,13035.07,10027.19,149046.25,11120.72,10176.65,147527.13,11174.98,9943.42,150527.13,11174.98,9943.42,150527.13,11228.79,10187.35,150545.12,11125.6,9951.12,150528.62,11071.34,10184.36,147528.62,11071.34,10184.36,147528.62,11095.52,10432.92,147547.51,11149.79,10199.69,150547.51,11125.6,9951.12,150528.62,11228.79,10187.35,150545.12,11149.79,10199.69,150547.51,11174.53,10420.59,147545.12,11120.72,10176.65,147527.13,11095.52,10432.92,147547.51,11174.53,10420.59,147545.12,11174.53,10420.59,147545.12,11228.79,10187.35,150545.12,11095.52,10432.92,147547.51,11149.79,10199.69,150547.51,11083.43,10308.64,147538.06,11137.7,10075.41,150538.06,11122.66,10316.3,149047.51,11098.47,10067.74,149028.62,11147.62,10298.62,147536.12,11201.89,10065.39,150536.12,11147.85,10060.03,149027.13,11201.66,10303.97,149045.12,11135.03,10426.75,147546.31,11189.29,10193.52,150546.31,11201.66,10303.97,149045.12,11122.66,10316.3,149047.51,10527.89,10269.24,147526.54,10581.26,10030.11,150526.54,10581.26,10030.11,150526.54,10635.08,10274,150545.02,10531.88,10037.81,150528.03,10478.51,10276.94,147528.03,10478.51,10276.94,147528.03,10502.7,10525.47,147547.41,10556.07,10286.34,150547.41,10531.88,10037.81,150528.03,10635.08,10274,150545.02,10556.07,10286.34,150547.41,10581.71,10513.13,147545.02,10527.89,10269.24,147526.54,10502.7,10525.47,147547.41,10581.71,10513.13,147545.02,10581.71,10513.13,147545.02,10635.08,10274,150545.02,10502.7,10525.47,147547.41,10556.07,10286.34,150547.41,10490.6,10401.21,147537.72,10543.98,10162.08,150537.72,10529.39,10405.9,149047.41,10505.2,10157.38,149028.03,10554.8,10391.19,147535.78,10608.17,10152.06,150535.78,10554.58,10149.67,149026.54,10608.39,10393.57,149045.02,10542.2,10519.3,147546.21,10595.58,10280.17,150546.21,10608.39,10393.57,149045.02,10529.39,10405.9,149047.41,8558.19,10576.85,147523.81,8724.34,10301.25,150523.81,8724.34,10301.25,150523.81,8778.94,10544.9,150543.17,8675.05,10308.94,150527.25,8508.91,10584.54,147527.25,8508.91,10584.54,147527.25,8533.94,10832.81,147548.67,8700.08,10557.21,150548.67,8675.05,10308.94,150527.25,8778.94,10544.9,150543.17,8700.08,10557.21,150548.67,8612.79,10820.5,147543.17,8558.19,10576.85,147523.81,8533.94,10832.81,147548.67,8612.79,10820.5,147543.17,8612.79,10820.5,147543.17,8778.94,10544.9,150543.17,8533.94,10832.81,147548.67,8700.08,10557.21,150548.67,8521.42,10708.68,147537.96,8687.57,10433.08,150537.96,8617.01,10695.01,149048.67,8591.98,10446.74,149027.25,8585.49,10698.68,147533.49,8751.64,10423.08,150533.49,8641.26,10439.05,149023.81,8695.87,10682.7,149043.17,8573.37,10826.66,147545.92,8739.51,10551.06,150545.92,8695.87,10682.7,149043.17,8617.01,10695.01,149048.67,7965.34,10669.44,147523.23,8130.59,10387.94,150523.23,8130.59,10387.94,150523.23,8185.22,10631.56,150543.07,8081.31,10395.64,150526.66,7916.05,10677.13,147526.66,7916.05,10677.13,147526.66,7941.11,10925.36,147548.57,8106.37,10643.87,150548.57,8081.31,10395.64,150526.66,8185.22,10631.56,150543.07,8106.37,10643.87,150548.57,8019.97,10913.05,147543.07,7965.34,10669.44,147523.23,7941.11,10925.36,147548.57,8019.97,10913.05,147543.07,8019.97,10913.05,147543.07,8185.22,10631.56,150543.07,7941.11,10925.36,147548.57,8106.37,10643.87,150548.57,7928.58,10801.25,147537.62,8093.84,10519.75,150537.62,8023.74,10784.61,149048.57,7998.68,10536.39,149026.66,7992.65,10791.25,147533.15,8157.91,10509.75,150533.15,8047.97,10528.69,149023.23,8102.6,10772.3,149043.07,7980.54,10919.21,147545.82,8145.79,10637.71,150545.82,8102.6,10772.3,149043.07,8023.74,10784.61,149048.57,5995.46,10977.09,147520.61,6273.49,10659.12,150520.61,6273.49,10659.12,150520.61,6329,10902.47,150541.26,6224.37,10666.79,150525.97,5946.34,10984.76,147525.97,5946.34,10984.76,147525.97,5972.38,11232.7,147549.84,6250.41,10914.74,150549.84,6224.37,10666.79,150525.97,6329,10902.47,150541.26,6250.41,10914.74,150549.84,6050.97,11220.44,147541.26,5995.46,10977.09,147520.61,5972.38,11232.7,147549.84,6050.97,11220.44,147541.26,6050.97,11220.44,147541.26,6329,10902.47,150541.26,5972.38,11232.7,147549.84,6250.41,10914.74,150549.84,5959.36,11108.73,147537.91,6237.39,10790.76,150537.91,6111.4,11073.72,149049.84,6085.36,10825.77,149025.97,6023.22,11098.76,147530.93,6301.24,10780.8,150530.93,6134.47,10818.11,149020.61,6189.98,11061.45,149041.26,6011.68,11226.57,147545.55,6289.7,10908.6,150545.55,6189.98,11061.45,149041.26,6111.4,11073.72,149049.84,5402.58,11069.69,147520.03,5679.72,10745.83,150520.03,5679.72,10745.83,150520.03,5735.28,10989.12,150541.16,5630.6,10753.5,150525.39,5353.47,11077.36,147525.39,5353.47,11077.36,147525.39,5379.55,11325.25,147549.74,5656.69,11001.39,150549.74,5630.6,10753.5,150525.39,5735.28,10989.12,150541.16,5656.69,11001.39,150549.74,5458.14,11312.98,147541.16,5402.58,11069.69,147520.03,5379.55,11325.25,147549.74,5458.14,11312.98,147541.16,5458.14,11312.98,147541.16,5735.28,10989.12,150541.16,5379.55,11325.25,147549.74,5656.69,11001.39,150549.74,5366.51,11201.31,147537.57,5643.65,10877.44,150537.57,5518.12,11163.32,149049.74,5492.04,10915.43,149025.39,5430.36,11191.34,147530.59,5707.5,10867.48,150530.59,5541.15,10907.76,149020.03,5596.71,11151.05,149041.16,5418.85,11319.12,147545.45,5695.98,10995.26,150545.45,5596.71,11151.05,149041.16,5518.12,11163.32,149049.74,3432.54,11377.37,147517.54,3822.45,11017.04,150517.54,3822.45,11017.04,150517.54,3878.97,11260.05,150539.38,3773.57,11024.67,150524.81,3383.66,11385,147524.81,3383.66,11385,147524.81,3410.86,11632.59,147551.01,3800.77,11272.26,150551.01,3773.57,11024.67,150524.81,3878.97,11260.05,150539.38,3800.77,11272.26,150551.01,3489.06,11620.38,147539.38,3432.54,11377.37,147517.54,3410.86,11632.59,147551.01,3489.06,11620.38,147539.38,3489.06,11620.38,147539.38,3878.97,11260.05,150539.38,3410.86,11632.59,147551.01,3800.77,11272.26,150551.01,3397.26,11508.8,147537.91,3787.17,11148.47,150537.91,3605.82,11452.42,149051.01,3578.62,11204.84,149024.81,3460.8,11498.88,147528.46,3850.71,11138.55,150528.46,3627.49,11197.21,149017.54,3684.02,11440.22,149039.38,3449.96,11626.49,147545.2,3839.87,11266.16,150545.2,3684.02,11440.22,149039.38,3605.82,11452.42,149051.01,2839.64,11469.98,147516.96,3228.66,11103.76,150516.96,3228.66,11103.76,150516.96,3285.25,11346.71,150539.28,3179.78,11111.39,150524.23,2790.77,11477.61,147524.23,2790.77,11477.61,147524.23,2818.03,11725.14,147550.92,3207.05,11358.91,150550.92,3179.78,11111.39,150524.23,3285.25,11346.71,150539.28,3207.05,11358.91,150550.92,2896.23,11712.93,147539.28,2839.64,11469.98,147516.96,2818.03,11725.14,147550.92,2896.23,11712.93,147539.28,2896.23,11712.93,147539.28,3285.25,11346.71,150539.28,2818.03,11725.14,147550.92,3207.05,11358.91,150550.92,2804.4,11601.38,147537.57,3193.41,11235.15,150537.57,3012.54,11542.03,149050.92,2985.27,11294.5,149024.23,2867.94,11591.46,147528.12,3256.95,11225.23,150528.12,3034.15,11286.87,149016.96,3090.74,11529.82,149039.28,2857.13,11719.04,147545.1,3246.15,11352.81,150545.1,3090.74,11529.82,149039.28,3012.54,11542.03,149050.92,869.45,11777.7,147514.62,1371.23,11375,150514.62,1371.23,11375,150514.62,1428.87,11617.65,150537.55,1322.67,11382.58,150523.76,820.88,11785.28,147523.76,820.88,11785.28,147523.76,849.37,12032.47,147552.18,1351.16,11629.78,150552.18,1322.67,11382.58,150523.76,1428.87,11617.65,150537.55,1351.16,11629.78,150552.18,927.08,12020.34,147537.55,869.45,11777.7,147514.62,849.37,12032.47,147552.18,927.08,12020.34,147537.55,927.08,12020.34,147537.55,1428.87,11617.65,150537.55,849.37,12032.47,147552.18,1351.16,11629.78,150552.18,835.12,11908.88,147537.97,1336.91,11506.18,150537.97,1100.27,11831.13,149052.18,1071.77,11583.93,149023.76,898.26,11899.02,147526.09,1400.05,11496.32,150526.09,1120.34,11576.35,149014.62,1177.98,11818.99,149037.55,888.23,12026.41,147544.87,1390.01,11623.71,150544.87,1177.98,11818.99,149037.55,1100.27,11831.13,149052.18,276.53,11870.31,147514.05,777.43,11461.72,150514.05,777.43,11461.72,150514.05,835.14,11704.3,150537.46,728.86,11469.3,150523.2,227.96,11877.89,147523.2,227.96,11877.89,147523.2,256.53,12125.03,147552.08,757.43,11716.43,150552.08,728.86,11469.3,150523.2,835.14,11704.3,150537.46,757.43,11716.43,150552.08,334.25,12112.89,147537.46,276.53,11870.31,147514.05,256.53,12125.03,147552.08,334.25,12112.89,147537.46,334.25,12112.89,147537.46,835.14,11704.3,150537.46,256.53,12125.03,147552.08,757.43,11716.43,150552.08,242.25,12001.46,147537.64,743.15,11592.87,150537.64,506.98,11920.73,149052.08,478.41,11673.6,149023.2,305.39,11991.6,147525.76,806.29,11583.01,150525.76,526.98,11666.02,149014.05,584.69,11908.6,149037.46,295.39,12118.96,147544.77,796.29,11710.37,150544.77,584.69,11908.6,149037.46,506.98,11920.73,149052.08,-936.22,11685.04,147488.7,-427.24,11265.66,150488.7,-427.24,11265.66,150488.7,-524.41,11491.44,150536.75,-471.33,11242.47,150492.94,-980.31,11661.84,147492.94,-980.31,11661.84,147492.94,-1103.94,11873.69,147543.53,-594.95,11454.32,150543.53,-471.33,11242.47,150492.94,-524.41,11491.44,150536.75,-594.95,11454.32,150543.53,-1033.4,11910.81,147536.75,-936.22,11685.04,147488.7,-1103.94,11873.69,147543.53,-1033.4,11910.81,147536.75,-1033.4,11910.81,147536.75,-524.41,11491.44,150536.75,-1103.94,11873.69,147543.53,-594.95,11454.32,150543.53,-1042.13,11767.77,147518.23,-533.14,11348.39,150518.23,-849.45,11664.01,149043.53,-725.82,11452.15,148992.94,-984.81,11797.93,147512.72,-475.82,11378.55,150512.72,-681.73,11475.35,148988.7,-778.9,11701.13,149036.75,-1068.67,11892.25,147540.14,-559.68,11472.88,150540.14,-778.9,11701.13,149036.75,-849.45,11664.01,149043.53,-1334.51,11475.53,147488.4,-824.03,11053.35,150488.4,-824.03,11053.35,150488.4,-921.16,11279.09,150536.7,-868.12,11030.15,150492.64,-1378.6,11452.33,147492.64,-1378.6,11452.33,147492.64,-1502.18,11664.15,147543.48,-991.7,11241.97,150543.48,-868.12,11030.15,150492.64,-921.16,11279.09,150536.7,-991.7,11241.97,150543.48,-1431.64,11701.27,147536.7,-1334.51,11475.53,147488.4,-1502.18,11664.15,147543.48,-1431.64,11701.27,147536.7,-1431.64,11701.27,147536.7,-921.16,11279.09,150536.7,-1502.18,11664.15,147543.48,-991.7,11241.97,150543.48,-1440.39,11558.24,147518.06,-929.91,11136.06,150518.06,-1246.94,11453.06,149043.48,-1123.36,11241.24,148992.64,-1383.07,11588.4,147512.55,-872.6,11166.22,150512.55,-1079.27,11264.44,148988.4,-1176.4,11490.18,149036.7,-1466.91,11682.71,147540.09,-956.43,11260.53,150540.09,-1176.4,11490.18,149036.7,-1246.94,11453.06,149043.48,-2819.41,10694.28,147486.68,-2108.58,10365.95,150486.68,-2108.58,10365.95,150486.68,-2202.57,10593.26,150533.83,-2152.28,10342.96,150494.52,-2863.11,10671.29,147494.52,-2863.11,10671.29,147494.52,-2983.32,10884.79,147546.37,-2272.49,10556.47,150546.37,-2152.28,10342.96,150494.52,-2202.57,10593.26,150533.83,-2272.49,10556.47,150546.37,-2913.4,10921.59,147533.83,-2819.41,10694.28,147486.68,-2983.32,10884.79,147546.37,-2913.4,10921.59,147533.83,-2913.4,10921.59,147533.83,-2202.57,10593.26,150533.83,-2983.32,10884.79,147546.37,-2272.49,10556.47,150546.37,-2923.21,10778.04,147520.45,-2212.38,10449.71,150520.45,-2627.9,10720.63,149046.37,-2507.69,10507.12,148994.52,-2866.4,10807.93,147510.26,-2155.57,10479.61,150510.26,-2463.99,10530.12,148986.68,-2557.98,10757.42,149033.83,-2948.36,10903.19,147540.1,-2237.53,10574.86,150540.1,-2557.98,10757.42,149033.83,-2627.9,10720.63,149046.37,-3217.71,10484.76,147486.39,-2505.39,10153.63,150486.39,-2505.39,10153.63,150486.39,-2599.32,10380.91,150533.78,-2549.09,10130.64,150494.23,-3261.41,10461.77,147494.23,-3261.41,10461.77,147494.23,-3381.56,10675.25,147546.32,-2669.24,10344.12,150546.32,-2549.09,10130.64,150494.23,-2599.32,10380.91,150533.78,-2669.24,10344.12,150546.32,-3311.64,10712.04,147533.78,-3217.71,10484.76,147486.39,-3381.56,10675.25,147546.32,-3311.64,10712.04,147533.78,-3311.64,10712.04,147533.78,-2599.32,10380.91,150533.78,-3381.56,10675.25,147546.32,-2669.24,10344.12,150546.32,-3321.49,10568.51,147520.28,-2609.17,10237.38,150520.28,-3025.4,10509.68,149046.32,-2905.25,10296.2,148994.23,-3264.68,10598.4,147510.09,-2552.36,10267.27,150510.09,-2861.55,10319.2,148986.39,-2955.48,10546.48,149033.78,-3346.6,10693.65,147540.05,-2634.28,10362.51,150540.05,-2955.48,10546.48,149033.78,-3025.4,10509.68,149046.32,-4702.57,9703.46,147485.34,-3789.9,9466.18,150485.34,-3789.9,9466.18,150485.34,-3880.88,9694.99,150531.11,-3833,9443.5,150496.66,-4745.67,9680.78,147496.66,-4745.67,9680.78,147496.66,-4862.51,9895.99,147549.22,-3949.83,9658.7,150549.22,-3833,9443.5,150496.66,-3880.88,9694.99,150531.11,-3949.83,9658.7,150549.22,-4793.55,9932.27,147531.11,-4702.57,9703.46,147485.34,-4862.51,9895.99,147549.22,-4793.55,9932.27,147531.11,-4793.55,9932.27,147531.11,-3880.88,9694.99,150531.11,-4862.51,9895.99,147549.22,-3949.83,9658.7,150549.22,-4804.09,9788.38,147522.94,-3891.42,9551.1,150522.94,-4406.17,9777.34,149049.22,-4289.34,9562.14,148996.66,-4748.06,9817.87,147508.22,-3835.39,9580.58,150508.22,-4246.24,9584.82,148985.34,-4337.21,9813.63,149031.11,-4828.03,9914.13,147540.17,-3915.35,9676.84,150540.17,-4337.21,9813.63,149031.11,-4406.17,9777.34,149049.22,-5100.89,9493.94,147485.05,-4186.73,9253.85,150485.05,-4186.73,9253.85,150485.05,-4277.63,9482.64,150531.06,-4229.83,9231.17,150496.37,-5143.99,9471.26,147496.37,-5143.99,9471.26,147496.37,-5260.75,9686.44,147549.17,-4346.59,9446.35,150549.17,-4229.83,9231.17,150496.37,-4277.63,9482.64,150531.06,-4346.59,9446.35,150549.17,-5191.8,9722.73,147531.06,-5100.89,9493.94,147485.05,-5260.75,9686.44,147549.17,-5191.8,9722.73,147531.06,-5191.8,9722.73,147531.06,-4277.63,9482.64,150531.06,-5260.75,9686.44,147549.17,-4346.59,9446.35,150549.17,-5202.37,9578.85,147522.77,-4288.21,9338.76,150522.77,-4803.67,9566.4,149049.17,-4686.91,9351.21,148996.37,-5146.34,9608.33,147508.06,-4232.18,9368.24,150508.06,-4643.81,9373.89,148985.05,-4734.71,9602.68,149031.06,-5226.28,9704.58,147540.12,-4312.11,9464.49,150540.12,-4734.71,9602.68,149031.06,-4803.67,9566.4,149049.17,-6585.6,8712.65,147484.62,-5471.09,8566.41,150484.62,-5471.09,8566.41,150484.62,-5559.3,8796.65,150528.62,-5513.4,8544.15,150499.26,-6627.91,8690.39,147499.26,-6627.91,8690.39,147499.26,-6741.51,8907.26,147552.03,-5626.99,8761.02,150552.03,-5513.4,8544.15,150499.26,-5559.3,8796.65,150528.62,-5626.99,8761.02,150552.03,-6673.81,8942.89,147528.62,-6585.6,8712.65,147484.62,-6741.51,8907.26,147552.03,-6673.81,8942.89,147528.62,-6673.81,8942.89,147528.62,-5559.3,8796.65,150528.62,-6741.51,8907.26,147552.03,-5626.99,8761.02,150552.03,-6684.71,8798.82,147525.64,-5570.19,8652.59,150525.64,-6184.25,8834.14,149052.03,-6070.66,8617.27,148999.26,-6629.71,8827.77,147506.62,-5515.19,8681.53,150506.62,-6028.34,8639.53,148984.62,-6116.55,8869.77,149028.62,-6707.66,8925.07,147540.32,-5593.14,8778.84,150540.32,-6116.55,8869.77,149028.62,-6184.25,8834.14,149052.03,-6983.94,8503.11,147484.35,-5867.93,8354.07,150484.35,-5867.93,8354.07,150484.35,-5956.06,8584.3,150528.57,-5910.24,8331.81,150498.98,-7026.25,8480.85,147498.98,-7026.25,8480.85,147498.98,-7139.76,8697.72,147551.98,-6023.75,8548.67,150551.98,-5910.24,8331.81,150498.98,-5956.06,8584.3,150528.57,-6023.75,8548.67,150551.98,-7072.06,8733.34,147528.57,-6983.94,8503.11,147484.35,-7139.76,8697.72,147551.98,-7072.06,8733.34,147528.57,-7072.06,8733.34,147528.57,-5956.06,8584.3,150528.57,-7139.76,8697.72,147551.98,-6023.75,8548.67,150551.98,-7083,8589.28,147525.48,-5967,8440.24,150525.48,-6581.76,8623.19,149051.98,-6468.24,8406.33,148998.98,-7028,8618.23,147506.46,-5911.99,8469.18,150506.46,-6425.93,8428.59,148984.35,-6514.06,8658.82,149028.57,-7105.91,8715.53,147540.28,-5989.9,8566.48,150540.28,-6514.06,8658.82,149028.57,-6581.76,8623.19,149051.98,-8047.04,6723.24,147446.55,-6917.45,6593.64,150446.55,-6917.45,6593.64,150446.55,-7151.82,6594.41,150534.83,-6915.5,6543.76,150443.66,-8045.09,6673.36,147443.66,-8045.09,6673.36,147443.66,-8278.3,6644.2,147530.21,-7148.71,6514.6,150530.21,-6915.5,6543.76,150443.66,-7151.82,6594.41,150534.83,-7148.71,6514.6,150530.21,-8281.41,6724.01,147534.83,-8047.04,6723.24,147446.55,-8278.3,6644.2,147530.21,-8281.41,6724.01,147534.83,-8281.41,6724.01,147534.83,-7151.82,6594.41,150534.83,-8278.3,6644.2,147530.21,-7148.71,6514.6,150530.21,-8161.69,6658.78,147486.93,-7032.11,6529.18,150486.93,-7713.5,6579.4,149030.21,-7480.3,6608.56,148943.66,-8164.23,6723.62,147490.69,-7034.64,6594.02,150490.69,-7482.25,6658.44,148946.55,-7716.62,6659.21,149034.83,-8279.85,6684.11,147532.52,-7150.27,6554.5,150532.52,-7716.62,6659.21,149034.83,-7713.5,6579.4,149030.21,-8023.53,6123.68,147446.81,-6897.14,5993.96,150446.81,-6897.14,5993.96,150446.81,-7131.59,5994.74,150534.87,-6895.19,5944.09,150443.92,-8021.58,6073.8,147443.92,-8021.58,6073.8,147443.92,-8254.86,6044.66,147530.25,-7128.48,5914.94,150530.25,-6895.19,5944.09,150443.92,-7131.59,5994.74,150534.87,-7128.48,5914.94,150530.25,-8257.98,6124.46,147534.87,-8023.53,6123.68,147446.81,-8254.86,6044.66,147530.25,-8257.98,6124.46,147534.87,-8257.98,6124.46,147534.87,-7131.59,5994.74,150534.87,-8254.86,6044.66,147530.25,-7128.48,5914.94,150530.25,-8138.22,6059.23,147487.09,-7011.83,5929.51,150487.09,-7691.67,5979.8,149030.25,-7458.38,6008.94,148943.92,-8140.75,6124.07,147490.84,-7014.36,5994.35,150490.84,-7460.33,6058.82,148946.81,-7694.79,6059.6,149034.87,-8256.42,6084.56,147532.56,-7130.03,5954.84,150532.56,-7694.79,6059.6,149034.87,-7691.67,5979.8,149030.25,-7927.74,3680.09,147447.11,-6816.59,3615.35,150447.11,-6816.59,3615.35,150447.11,-7051.41,3618.06,150534.14,-6814.64,3565.42,150445.31,-7925.79,3630.16,147445.31,-7925.79,3630.16,147445.31,-8159.44,3602.91,147531.26,-7048.29,3538.17,150531.26,-6814.64,3565.42,150445.31,-7051.41,3618.06,150534.14,-7048.29,3538.17,150531.26,-8162.56,3682.8,147534.14,-7927.74,3680.09,147447.11,-8159.44,3602.91,147531.26,-8162.56,3682.8,147534.14,-8162.56,3682.8,147534.14,-7051.41,3618.06,150534.14,-8159.44,3602.91,147531.26,-7048.29,3538.17,150531.26,-8042.61,3616.54,147488.28,-6931.46,3551.79,150488.28,-7603.87,3570.54,149031.26,-7370.21,3597.79,148945.31,-8045.15,3681.45,147490.62,-6934,3616.7,150490.62,-7372.16,3647.72,148947.11,-7606.99,3650.43,149034.14,-8161,3642.86,147532.7,-7049.85,3578.12,150532.7,-7606.99,3650.43,149034.14,-7603.87,3570.54,149031.26,-7904.22,3080.54,147447.37,-6796.27,3015.68,150447.37,-6796.27,3015.68,150447.37,-7031.18,3018.4,150534.18,-6794.32,2965.75,150445.57,-7902.27,3030.61,147445.57,-7902.27,3030.61,147445.57,-8136.01,3003.37,147531.31,-7028.06,2938.51,150531.31,-6794.32,2965.75,150445.57,-7031.18,3018.4,150534.18,-7028.06,2938.51,150531.31,-8139.13,3083.26,147534.18,-7904.22,3080.54,147447.37,-8136.01,3003.37,147531.31,-8139.13,3083.26,147534.18,-8139.13,3083.26,147534.18,-7031.18,3018.4,150534.18,-8136.01,3003.37,147531.31,-7028.06,2938.51,150531.31,-8019.14,3016.99,147488.44,-6911.19,2952.13,150488.44,-7582.03,2970.94,149031.31,-7348.3,2998.18,148945.57,-8021.68,3081.9,147490.78,-6913.73,3017.04,150490.78,-7350.25,3048.11,148947.37,-7585.15,3050.83,149034.18,-8137.57,3043.31,147532.75,-7029.62,2978.45,150532.75,-7585.15,3050.83,149034.18,-7582.03,2970.94,149031.31,-7808.42,636.98,147447.77,-6715.71,637.09,150447.77,-6715.71,637.09,150447.77,-6950.99,641.7,150533.47,-6713.76,587.14,150447.06,-7806.47,587.02,147447.06,-7806.47,587.02,147447.06,-8040.59,561.65,147532.34,-6947.87,561.77,150532.34,-6713.76,587.14,150447.06,-6950.99,641.7,150533.47,-6947.87,561.77,150532.34,-8043.71,641.58,147533.47,-7808.42,636.98,147447.77,-8040.59,561.65,147532.34,-8043.71,641.58,147533.47,-8043.71,641.58,147533.47,-6950.99,641.7,150533.47,-8040.59,561.65,147532.34,-6947.87,561.77,150532.34,-7923.53,574.34,147489.7,-6830.81,574.45,150489.7,-7494.23,561.71,149032.34,-7260.11,587.08,148947.06,-7926.07,639.28,147490.62,-6833.35,639.4,150490.62,-7262.07,637.03,148947.77,-7497.35,641.64,149033.47,-8042.15,601.62,147532.9,-6949.43,601.74,150532.9,-7497.35,641.64,149033.47,-7494.23,561.71,149032.34,-7784.91,37.43,147448.04,-6695.4,37.43,150448.04,-6695.4,37.43,150448.04,-6930.76,42.04,150533.51,-6693.44,-12.52,150447.33,-7782.96,-12.52,147447.33,-7782.96,-12.52,147447.33,-8017.16,-37.89,147532.38,-6927.64,-37.89,150532.38,-6693.44,-12.52,150447.33,-6930.76,42.04,150533.51,-6927.64,-37.89,150532.38,-8020.28,42.04,147533.51,-7784.91,37.43,147448.04,-8017.16,-37.89,147532.38,-8020.28,42.04,147533.51,-8020.28,42.04,147533.51,-6930.76,42.04,150533.51,-8017.16,-37.89,147532.38,-6927.64,-37.89,150532.38,-7900.06,-25.21,147489.85,-6810.54,-25.21,150489.85,-7472.4,-37.89,149032.38,-7238.2,-12.52,148947.33,-7902.59,39.74,147490.77,-6813.08,39.74,150490.77,-7240.15,37.43,148948.04,-7475.52,42.04,149033.51,-8018.72,2.08,147532.95,-6929.2,2.08,150532.95,-7475.52,42.04,149033.51,-7472.4,-37.89,149032.38,25417.28,2073.93,150519.95,25106.31,2055.73,153519.95,25106.31,2055.73,153519.95,25351.62,2099.22,153545.64,25094.73,2104.36,153519.04,25405.69,2122.56,150519.04,25405.69,2122.56,150519.04,25644.04,2195.24,150544.19,25333.08,2177.03,153544.19,25094.73,2104.36,153519.04,25351.62,2099.22,153545.64,25333.08,2177.03,153544.19,25662.58,2117.43,150545.64,25417.28,2073.93,150519.95,25644.04,2195.24,150544.19,25662.58,2117.43,150545.64,25662.58,2117.43,150545.64,25351.62,2099.22,153545.64,25644.04,2195.24,150544.19,25333.08,2177.03,153544.19,25524.87,2158.9,150531.62,25213.91,2140.69,153531.62,25488.56,2186.13,152044.19,25250.21,2113.46,152019.04,25539.93,2095.68,150532.8,25228.97,2077.47,153532.8,25261.8,2064.83,152019.95,25507.1,2108.32,152045.64,25653.31,2156.33,150544.92,25342.35,2138.13,153544.92,25507.1,2108.32,152045.64,25488.56,2186.13,152044.19,25266.25,2634.52,150520.42,24954.23,2616.02,153520.42,24954.23,2616.02,153520.42,25196.22,2675.31,153545.95,24939.55,2663.8,153519.19,25251.58,2682.3,150519.19,25251.58,2682.3,150519.19,25484.76,2770.26,150543.98,25172.74,2751.76,153543.98,24939.55,2663.8,153519.19,25196.22,2675.31,153545.95,25172.74,2751.76,153543.98,25508.24,2693.81,150545.95,25266.25,2634.52,150520.42,25484.76,2770.26,150543.98,25508.24,2693.81,150545.95,25508.24,2693.81,150545.95,25196.22,2675.31,153545.95,25484.76,2770.26,150543.98,25172.74,2751.76,153543.98,25368.17,2726.28,150531.58,25056.15,2707.78,153531.58,25328.75,2761.01,152043.98,25095.57,2673.05,152019.19,25387.25,2664.16,150533.19,25075.22,2645.66,153533.19,25110.24,2625.27,152020.42,25352.23,2684.56,152045.95,25496.5,2732.03,150544.97,25184.48,2713.53,153544.97,25352.23,2684.56,152045.95,25328.75,2761.01,152043.98,24040.25,5165.25,150523.43,23730.55,5120.91,153523.43,23730.55,5120.91,153523.43,23942.57,5252.09,153547.25,23701.95,5161.85,153521.08,24011.65,5206.19,150521.08,24011.65,5206.19,150521.08,24206.5,5361.93,150543.5,23896.8,5317.59,153543.5,23701.95,5161.85,153521.08,23942.57,5252.09,153547.25,23896.8,5317.59,153543.5,24252.27,5296.43,150547.25,24040.25,5165.25,150523.43,24206.5,5361.93,150543.5,24252.27,5296.43,150547.25,24252.27,5296.43,150547.25,23942.57,5252.09,153547.25,24206.5,5361.93,150543.5,23896.8,5317.59,153543.5,24109.07,5284.06,150532.29,23799.37,5239.72,153532.29,24051.65,5339.76,152043.5,23856.8,5184.02,152021.08,24146.26,5230.84,150535.34,23836.56,5186.5,153535.34,23885.4,5143.08,152023.43,24097.42,5274.26,152047.25,24229.38,5329.18,150545.38,23919.68,5284.84,153545.38,24097.42,5274.26,152047.25,24051.65,5339.76,152043.5,23693.93,5631.28,150524.27,23382.03,5585.29,153524.27,23382.03,5585.29,153524.27,23585.17,5729.9,153547.6,23350.87,5624.3,153521.63,23662.77,5670.29,150521.63,23662.77,5670.29,150521.63,23847.21,5838.31,150543.38,23535.32,5792.32,153543.38,23350.87,5624.3,153521.63,23585.17,5729.9,153547.6,23535.32,5792.32,153543.38,23897.07,5775.89,150547.6,23693.93,5631.28,150524.27,23847.21,5838.31,150543.38,23897.07,5775.89,150547.6,23897.07,5775.89,150547.6,23585.17,5729.9,153547.6,23847.21,5838.31,150543.38,23535.32,5792.32,153543.38,23754.99,5754.3,150532.5,23443.09,5708.31,153532.5,23691.27,5815.32,152043.38,23506.82,5647.3,152021.63,23795.5,5703.58,150535.94,23483.6,5657.59,153535.94,23537.98,5608.28,152024.27,23741.12,5752.9,152047.6,23872.14,5807.1,150545.49,23560.25,5761.11,153545.49,23741.12,5752.9,152047.6,23691.27,5815.32,152043.38,21624.2,7535.31,150528.83,21318.63,7460.26,153528.83,21318.63,7460.26,153528.83,21467.61,7660.57,153549.01,21277.05,7487.8,153525.28,21582.62,7562.85,150525.28,21582.62,7562.85,150525.28,21706.66,7779.67,150543.34,21401.08,7704.63,153543.34,21277.05,7487.8,153525.28,21467.61,7660.57,153549.01,21401.08,7704.63,153543.34,21773.18,7735.61,150549.01,21624.2,7535.31,150528.83,21706.66,7779.67,150543.34,21773.18,7735.61,150549.01,21773.18,7735.61,150549.01,21467.61,7660.57,153549.01,21706.66,7779.67,150543.34,21401.08,7704.63,153543.34,21644.64,7671.26,150534.31,21339.06,7596.22,153534.31,21553.87,7742.15,152043.34,21429.83,7525.33,152025.28,21698.69,7635.46,150538.92,21393.12,7560.41,153538.92,21471.41,7497.79,152028.83,21620.4,7698.09,152049.01,21739.92,7757.64,150546.18,21434.35,7682.6,153546.18,21620.4,7698.09,152049.01,21553.87,7742.15,152043.34,21130.9,7841.67,150529.92,20823.03,7762.87,153529.92,20823.03,7762.87,153529.92,20958.87,7972.38,153549.37,20779.79,7787.68,153526.14,21087.66,7866.48,150526.14,21087.66,7866.48,150526.14,21197.55,8090.87,150543.31,20889.68,8012.08,153543.31,20779.79,7787.68,153526.14,20958.87,7972.38,153549.37,20889.68,8012.08,153543.31,21266.74,8051.18,150549.37,21130.9,7841.67,150529.92,21197.55,8090.87,150543.31,21266.74,8051.18,150549.37,21266.74,8051.18,150549.37,20958.87,7972.38,153549.37,21197.55,8090.87,150543.31,20889.68,8012.08,153543.31,21142.6,7978.68,150534.72,20834.74,7899.88,153534.72,21043.62,8051.47,152043.31,20933.72,7827.08,152026.14,21198.82,7946.42,150539.65,20890.95,7867.62,153539.65,20976.97,7802.27,152029.92,21112.81,8011.78,152049.37,21232.15,8071.02,150546.34,20924.28,7992.23,153546.34,21112.81,8011.78,152049.37,21043.62,8051.47,152043.31,18506.4,8852.87,150535.4,18212.32,8741.95,153535.4,18212.32,8741.95,153535.4,18277.52,8983.28,153550.72,18163.59,8752.29,153531.01,18457.68,8863.21,150531.01,18457.68,8863.21,150531.01,18493.66,9110.74,150543.69,18199.57,8999.82,153543.69,18163.59,8752.29,153531.01,18277.52,8983.28,153550.72,18199.57,8999.82,153543.69,18571.61,9094.2,150550.72,18506.4,8852.87,150535.4,18493.66,9110.74,150543.69,18571.61,9094.2,150550.72,18571.61,9094.2,150550.72,18277.52,8983.28,153550.72,18493.66,9110.74,150543.69,18199.57,8999.82,153543.69,18475.67,8986.97,150537.35,18181.58,8876.05,153537.35,18346.61,9055.28,152043.69,18310.64,8807.75,152031.01,18539.01,8973.54,150543.06,18244.92,8862.62,153543.06,18359.36,8797.41,152035.4,18424.57,9038.74,152050.72,18532.64,9102.47,150547.2,18238.55,8991.55,153547.2,18424.57,9038.74,152050.72,18346.61,9055.28,152043.69,17935.02,8956.72,150536.61,17639.9,8839.84,153536.61,17639.9,8839.84,153536.61,17689.55,9084.9,153551.04,17590.63,8847.03,153532.04,17885.75,8963.91,150532.04,17885.75,8963.91,150532.04,17905.84,9213.28,150543.73,17610.72,9096.4,153543.73,17590.63,8847.03,153532.04,17689.55,9084.9,153551.04,17610.72,9096.4,153543.73,17984.67,9201.78,150551.04,17935.02,8956.72,150536.61,17905.84,9213.28,150543.73,17984.67,9201.78,150551.04,17984.67,9201.78,150551.04,17689.55,9084.9,153551.04,17905.84,9213.28,150543.73,17610.72,9096.4,153543.73,17895.8,9088.6,150537.89,17600.68,8971.72,153537.89,17758.28,9154.84,152043.73,17738.19,8905.47,152032.04,17959.85,9079.25,150543.83,17664.73,8962.37,153543.83,17787.46,8898.28,152036.61,17837.11,9143.34,152051.04,17945.25,9207.53,150547.39,17650.13,9090.65,153547.39,17837.11,9143.34,152051.04,17758.28,9154.84,152043.73,16078.69,9227.73,150533.7,15897.97,9075.43,153533.7,15897.97,9075.43,153533.7,15948.07,9320.33,153549.15,15848.56,9082.64,153531.09,16029.28,9234.94,150531.09,16029.28,9234.94,150531.09,16049.74,9484.16,150544.98,15869.02,9331.87,153544.98,15848.56,9082.64,153531.09,15948.07,9320.33,153549.15,15869.02,9331.87,153544.98,16128.79,9472.63,150549.15,16078.69,9227.73,150533.7,16049.74,9484.16,150544.98,16128.79,9472.63,150549.15,16128.79,9472.63,150549.15,15948.07,9320.33,153549.15,16049.74,9484.16,150544.98,15869.02,9331.87,153544.98,16039.51,9359.55,150538.04,15858.79,9207.26,153538.04,15959.38,9408.02,152044.98,15938.92,9158.79,152031.09,16103.74,9350.18,150541.43,15923.02,9197.88,153541.43,15988.33,9151.58,152033.7,16038.43,9396.48,152049.15,16089.27,9478.4,150547.07,15908.55,9326.1,153547.07,16038.43,9396.48,152049.15,15959.38,9408.02,152044.98,15485.02,9314.4,150533.08,15303.42,9155.84,153533.08,15303.42,9155.84,153533.08,15353.49,9400.72,153549.05,15254.01,9163.05,153530.47,15435.61,9321.61,150530.47,15435.61,9321.61,150530.47,15456.03,9570.81,150544.87,15274.43,9412.25,153544.87,15254.01,9163.05,153530.47,15353.49,9400.72,153549.05,15274.43,9412.25,153544.87,15535.09,9559.28,150549.05,15485.02,9314.4,150533.08,15456.03,9570.81,150544.87,15535.09,9559.28,150549.05,15535.09,9559.28,150549.05,15353.49,9400.72,153549.05,15456.03,9570.81,150544.87,15274.43,9412.25,153544.87,15445.82,9446.21,150537.67,15264.22,9287.65,153537.67,15365.23,9491.53,152044.87,15344.81,9242.33,152030.47,15510.05,9436.84,150541.06,15328.45,9278.28,153541.06,15394.22,9235.12,152033.08,15444.29,9480,152049.05,15495.56,9565.04,150546.96,15313.96,9406.49,153546.96,15444.29,9480,152049.05,15365.23,9491.53,152044.87,13628.47,9585.46,150530.2,13561.27,9391.48,153530.2,13561.27,9391.48,153530.2,13611.92,9636.17,153547.16,13511.8,9398.7,153529.56,13579,9592.68,150529.56,13579,9592.68,150529.56,13599.97,9841.69,150546.13,13532.77,9647.72,153546.13,13511.8,9398.7,153529.56,13611.92,9636.17,153547.16,13532.77,9647.72,153546.13,13679.12,9830.14,150547.16,13628.47,9585.46,150530.2,13599.97,9841.69,150546.13,13679.12,9830.14,150547.16,13679.12,9830.14,150547.16,13611.92,9636.17,153547.16,13599.97,9841.69,150546.13,13532.77,9647.72,153546.13,13589.48,9717.19,150537.85,13522.29,9523.21,153537.85,13566.37,9744.71,152046.13,13545.4,9495.69,152029.56,13653.8,9707.8,150538.68,13586.6,9513.83,153538.68,13594.87,9488.47,152030.2,13645.52,9733.16,152047.16,13639.54,9835.92,150546.65,13572.35,9641.95,153546.65,13645.52,9733.16,152047.16,13566.37,9744.71,152046.13,13034.78,9672.14,150529.58,12966.7,9471.9,153529.58,12966.7,9471.9,153529.58,13017.33,9716.56,153547.06,12917.23,9479.12,153528.94,12985.3,9679.36,150528.94,12985.3,9679.36,150528.94,13006.26,9928.34,150546.03,12938.18,9728.11,153546.03,12917.23,9479.12,153528.94,13017.33,9716.56,153547.06,12938.18,9728.11,153546.03,13085.41,9916.79,150547.06,13034.78,9672.14,150529.58,13006.26,9928.34,150546.03,13085.41,9916.79,150547.06,13085.41,9916.79,150547.06,13017.33,9716.56,153547.06,13006.26,9928.34,150546.03,12938.18,9728.11,153546.03,12995.78,9803.85,150537.48,12927.7,9603.61,153537.48,12972.22,9828.23,152046.03,12951.26,9579.24,152028.94,13060.1,9794.47,150538.32,12992.02,9594.23,153538.32,13000.74,9572.02,152029.58,13051.37,9816.67,152047.06,13045.84,9922.57,150546.54,12977.76,9722.33,153546.54,13051.37,9816.67,152047.06,12972.22,9828.23,152046.03,11178.03,9943.24,150526.77,11224.35,9707.58,153526.77,11224.35,9707.58,153526.77,11275.68,9952.02,153545.17,11174.89,9714.8,153528.1,11128.57,9950.45,150528.1,11128.57,9950.45,150528.1,11150.22,10199.22,150547.3,11196.55,9963.57,153547.3,11174.89,9714.8,153528.1,11275.68,9952.02,153545.17,11196.55,9963.57,153547.3,11229.36,10187.68,150545.17,11178.03,9943.24,150526.77,11150.22,10199.22,150547.3,11229.36,10187.68,150545.17,11229.36,10187.68,150545.17,11275.68,9952.02,153545.17,11150.22,10199.22,150547.3,11196.55,9963.57,153547.3,11139.4,10074.84,150537.7,11185.72,9839.19,153537.7,11173.39,10081.4,152047.3,11151.73,9832.63,152028.1,11203.69,10065.46,150535.97,11250.01,9829.8,153535.97,11201.19,9825.41,152026.77,11252.52,10069.85,152045.17,11189.79,10193.45,150546.24,11236.11,9957.8,153546.24,11252.52,10069.85,152045.17,11173.39,10081.4,152047.3,10584.31,10029.93,150526.14,10629.75,9788.01,153526.14,10629.75,9788.01,153526.14,10681.09,10032.41,153545.07,10580.29,9795.23,153527.47,10534.85,10037.15,150527.47,10534.85,10037.15,150527.47,10556.51,10285.87,150547.2,10601.95,10043.96,153547.2,10580.29,9795.23,153527.47,10681.09,10032.41,153545.07,10601.95,10043.96,153547.2,10635.65,10274.33,150545.07,10584.31,10029.93,150526.14,10556.51,10285.87,150547.2,10635.65,10274.33,150545.07,10635.65,10274.33,150545.07,10681.09,10032.41,153545.07,10556.51,10285.87,150547.2,10601.95,10043.96,153547.2,10545.68,10161.51,150537.33,10591.12,9919.59,153537.33,10579.23,10164.92,152047.2,10557.57,9916.19,152027.47,10609.98,10152.13,150535.6,10655.42,9910.21,153535.6,10607.03,9908.97,152026.14,10658.37,10153.37,152045.07,10596.08,10280.1,150546.13,10641.52,10038.18,153546.13,10658.37,10153.37,152045.07,10579.23,10164.92,152047.2,8727.36,10301.06,150523.41,8887.2,10023.73,153523.41,8887.2,10023.73,153523.41,8939.34,10267.89,153543.21,8837.83,10030.94,153526.71,8677.99,10308.27,150526.71,8677.99,10308.27,150526.71,8700.51,10556.75,150548.48,8860.35,10279.42,153548.48,8837.83,10030.94,153526.71,8939.34,10267.89,153543.21,8860.35,10279.42,153548.48,8779.5,10545.22,150543.21,8727.36,10301.06,150523.41,8700.51,10556.75,150548.48,8779.5,10545.22,150543.21,8779.5,10545.22,150543.21,8939.34,10267.89,153543.21,8700.51,10556.75,150548.48,8860.35,10279.42,153548.48,8689.25,10432.51,150537.6,8849.09,10155.18,153537.6,8780.43,10418.09,152048.48,8757.91,10169.6,152026.71,8753.43,10423.14,150533.31,8913.27,10145.81,153533.31,8807.28,10162.4,152023.41,8859.42,10406.56,152043.21,8740.01,10550.99,150545.84,8899.85,10273.66,153545.84,8859.42,10406.56,152043.21,8780.43,10418.09,152048.48,8133.61,10387.76,150522.79,8292.57,10104.17,153522.79,8292.57,10104.17,153522.79,8344.75,10348.28,153543.1,8243.21,10111.37,153526.09,8084.24,10394.97,150526.09,8084.24,10394.97,150526.09,8106.8,10643.4,150548.38,8265.76,10359.81,153548.38,8243.21,10111.37,153526.09,8344.75,10348.28,153543.1,8265.76,10359.81,153548.38,8185.79,10631.88,150543.1,8133.61,10387.76,150522.79,8106.8,10643.4,150548.38,8185.79,10631.88,150543.1,8185.79,10631.88,150543.1,8344.75,10348.28,153543.1,8106.8,10643.4,150548.38,8265.76,10359.81,153548.38,8095.52,10519.19,150537.23,8254.48,10235.59,153537.23,8186.28,10501.61,152048.38,8163.73,10253.17,152026.09,8159.7,10509.82,150532.95,8318.66,10226.23,153532.95,8213.09,10245.97,152022.79,8265.27,10490.08,152043.1,8146.29,10637.64,150545.74,8305.25,10354.05,153545.74,8265.27,10490.08,152043.1,8186.28,10501.61,152048.38,6276.48,10658.94,150520.18,6549.84,10339.93,153520.18,6549.84,10339.93,153520.18,6602.92,10583.78,153541.27,6500.64,10347.11,153525.42,6227.28,10666.12,150525.42,6227.28,10666.12,150525.42,6250.83,10914.28,150549.66,6524.19,10595.27,153549.66,6500.64,10347.11,153525.42,6602.92,10583.78,153541.27,6524.19,10595.27,153549.66,6329.56,10902.79,150541.27,6276.48,10658.94,150520.18,6250.83,10914.28,150549.66,6329.56,10902.79,150541.27,6329.56,10902.79,150541.27,6602.92,10583.78,153541.27,6250.83,10914.28,150549.66,6524.19,10595.27,153549.66,6239.05,10790.2,150537.54,6512.42,10471.19,153537.54,6387.51,10754.77,152049.66,6363.96,10506.61,152025.42,6303.02,10780.86,150530.72,6576.38,10461.85,153530.72,6413.16,10499.43,152020.18,6466.24,10743.28,152041.27,6290.2,10908.53,150545.47,6563.56,10589.52,153545.47,6466.24,10743.28,152041.27,6387.51,10754.77,152049.66,5682.71,10745.65,150519.56,5955.19,10420.37,153519.56,5955.19,10420.37,153519.56,6008.32,10664.17,153541.17,5905.99,10427.55,153524.8,5633.51,10752.83,150524.8,5633.51,10752.83,150524.8,5657.11,11000.93,150549.56,5929.59,10675.66,153549.56,5905.99,10427.55,153524.8,6008.32,10664.17,153541.17,5929.59,10675.66,153549.56,5735.84,10989.44,150541.17,5682.71,10745.65,150519.56,5657.11,11000.93,150549.56,5735.84,10989.44,150541.17,5735.84,10989.44,150541.17,6008.32,10664.17,153541.17,5657.11,11000.93,150549.56,5929.59,10675.66,153549.56,5645.31,10876.88,150537.18,5917.79,10551.61,153537.18,5793.35,10838.29,152049.56,5769.75,10590.19,152024.8,5709.27,10867.54,150530.36,5981.76,10542.27,153530.36,5818.95,10583.01,152019.56,5872.08,10826.8,152041.17,5696.47,10995.19,150545.36,5968.96,10669.91,153545.36,5872.08,10826.8,152041.17,5793.35,10838.29,152049.56,3825.41,11016.85,150517.07,4212.29,10656.16,153517.07,4212.29,10656.16,153517.07,4266.41,10899.68,153539.37,4163.32,10663.31,153524.25,3776.44,11024,150524.25,3776.44,11024,150524.25,3801.19,11271.8,150550.85,4188.07,10911.11,153550.85,4163.32,10663.31,153524.25,4266.41,10899.68,153539.37,4188.07,10911.11,153550.85,3879.53,11260.37,150539.37,3825.41,11016.85,150517.07,3801.19,11271.8,150550.85,3879.53,11260.37,150539.37,3879.53,11260.37,150539.37,4266.41,10899.68,153539.37,3801.19,11271.8,150550.85,4188.07,10911.11,153550.85,3788.81,11147.9,150537.55,4175.7,10787.21,153537.55,3994.63,11091.45,152050.85,3969.88,10843.65,152024.25,3852.47,11138.61,150528.22,4239.35,10777.92,153528.22,4018.85,10836.51,152017.07,4072.97,11080.02,152039.37,3840.36,11266.08,150545.11,4227.24,10905.39,153545.11,4072.97,11080.02,152039.37,3994.63,11091.45,152050.85,3231.62,11103.57,150516.46,3617.62,10736.62,153516.46,3617.62,10736.62,153516.46,3671.8,10980.07,153539.27,3568.65,10743.76,153523.64,3182.65,11110.72,150523.64,3182.65,11110.72,150523.64,3207.46,11358.45,150550.75,3593.46,10991.5,153550.75,3568.65,10743.76,153523.64,3671.8,10980.07,153539.27,3593.46,10991.5,153550.75,3285.8,11347.02,150539.27,3231.62,11103.57,150516.46,3207.46,11358.45,150550.75,3285.8,11347.02,150539.27,3285.8,11347.02,150539.27,3671.8,10980.07,153539.27,3207.46,11358.45,150550.75,3593.46,10991.5,153550.75,3195.06,11234.58,150537.19,3581.06,10867.63,153537.19,3400.46,11174.98,152050.75,3375.65,10927.24,152023.64,3258.71,11225.3,150527.87,3644.71,10858.34,153527.87,3424.62,10920.09,152016.46,3478.8,11163.55,152039.27,3246.63,11352.74,150545.01,3632.63,10985.79,153545.01,3478.8,11163.55,152039.27,3400.46,11174.98,152050.75,1374.16,11374.8,150514.13,1874.56,10972.44,153514.13,1874.56,10972.44,153514.13,1929.82,11215.59,153537.52,1825.91,10979.54,153523.2,1325.5,11381.9,150523.2,1325.5,11381.9,150523.2,1351.57,11629.32,150552.03,1851.97,11226.95,153552.03,1825.91,10979.54,153523.2,1929.82,11215.59,153537.52,1851.97,11226.95,153552.03,1429.42,11617.96,150537.52,1374.16,11374.8,150514.13,1351.57,11629.32,150552.03,1429.42,11617.96,150537.52,1429.42,11617.96,150537.52,1929.82,11215.59,153537.52,1351.57,11629.32,150552.03,1851.97,11226.95,153552.03,1338.54,11505.61,150537.61,1838.94,11103.24,153537.61,1601.77,11428.14,152052.03,1575.71,11180.72,152023.2,1401.79,11496.38,150525.82,1902.19,11094.01,153525.82,1624.36,11173.62,152014.13,1679.62,11416.77,152037.52,1390.49,11623.64,150544.78,1890.9,11221.27,153544.78,1679.62,11416.77,152037.52,1601.77,11428.14,152052.03,780.35,11461.53,150513.53,1279.87,11052.9,153513.53,1279.87,11052.9,153513.53,1335.21,11295.98,153537.42,1231.21,11060,153522.59,731.69,11468.63,150522.59,731.69,11468.63,150522.59,757.84,11715.97,150551.93,1257.36,11307.34,153551.93,1231.21,11060,153522.59,1335.21,11295.98,153537.42,1257.36,11307.34,153551.93,835.69,11704.61,150537.42,780.35,11461.53,150513.53,757.84,11715.97,150551.93,835.69,11704.61,150537.42,835.69,11704.61,150537.42,1335.21,11295.98,153537.42,757.84,11715.97,150551.93,1257.36,11307.34,153551.93,744.77,11592.3,150537.26,1244.29,11183.67,153537.26,1007.6,11511.66,152051.93,981.45,11264.31,152022.59,808.02,11583.07,150525.47,1307.54,11174.44,153525.47,1030.11,11257.21,152013.53,1085.45,11500.3,152037.42,796.77,11710.29,150544.68,1296.29,11301.66,153544.68,1085.45,11500.3,152037.42,1007.6,11511.66,152051.93,-425.36,11266.87,150488.56,80.32,10845.56,153488.56,80.32,10845.56,153488.56,-18.53,11070.56,153536.82,36.39,10822.05,153492.66,-469.29,11243.35,150492.66,-469.29,11243.35,150492.66,-594.5,11454.24,150543.38,-88.82,11032.94,153543.38,36.39,10822.05,153492.66,-18.53,11070.56,153536.82,-88.82,11032.94,153543.38,-524.21,11491.87,150536.82,-425.36,11266.87,150488.56,-594.5,11454.24,150543.38,-524.21,11491.87,150536.82,-524.21,11491.87,150536.82,-18.53,11070.56,153536.82,-594.5,11454.24,150543.38,-88.82,11032.94,153543.38,-531.9,11348.8,150518.02,-26.22,10927.49,153518.02,-341.66,11243.59,152043.38,-216.45,11032.7,151992.66,-474.78,11379.37,150512.69,30.9,10958.06,153512.69,-172.52,11056.21,151988.56,-271.37,11281.21,152036.82,-559.35,11473.05,150540.1,-53.68,11051.75,153540.1,-271.37,11281.21,152036.82,-341.66,11243.59,152043.38,-822.16,11054.56,150488.19,-314.61,10629.79,153488.19,-314.61,10629.79,153488.19,-413.41,10854.75,153536.76,-358.54,10606.28,153492.29,-866.1,11031.05,150492.29,-866.1,11031.05,150492.29,-991.26,11241.9,150543.32,-483.7,10817.12,153543.32,-358.54,10606.28,153492.29,-413.41,10854.75,153536.76,-483.7,10817.12,153543.32,-920.96,11279.52,150536.76,-822.16,11054.56,150488.19,-991.26,11241.9,150543.32,-920.96,11279.52,150536.76,-920.96,11279.52,150536.76,-413.41,10854.75,153536.76,-991.26,11241.9,150543.32,-483.7,10817.12,153543.32,-928.68,11136.47,150517.81,-421.12,10711.7,153517.81,-737.48,11029.51,152043.32,-612.32,10818.66,151992.29,-871.56,11167.04,150512.47,-364.01,10742.27,153512.47,-568.39,10842.18,151988.19,-667.18,11067.13,152036.76,-956.11,11260.71,150540.04,-448.56,10835.94,153540.04,-667.18,11067.13,152036.76,-737.48,11029.51,152043.32,-2106.72,10367.13,150486.4,-1399.33,10037.09,153486.4,-1399.33,10037.09,153486.4,-1494.97,10263.64,153533.88,-1442.89,10013.78,153494.11,-2150.28,10343.82,150494.11,-2150.28,10343.82,150494.11,-2272.05,10556.38,150546.21,-1564.66,10226.34,153546.21,-1442.89,10013.78,153494.11,-1494.97,10263.64,153533.88,-1564.66,10226.34,153546.21,-2202.36,10593.68,150533.88,-2106.72,10367.13,150486.4,-2272.05,10556.38,150546.21,-2202.36,10593.68,150533.88,-2202.36,10593.68,150533.88,-1494.97,10263.64,153533.88,-2272.05,10556.38,150546.21,-1564.66,10226.34,153546.21,-2211.17,10450.1,150520.16,-1503.77,10120.06,153520.16,-1918.36,10391.36,152046.21,-1796.58,10178.8,151994.11,-2154.54,10480.41,150510.14,-1447.15,10150.37,153510.14,-1753.03,10202.11,151986.4,-1848.67,10428.66,152033.88,-2237.21,10575.03,150540.04,-1529.81,10244.99,153540.04,-1848.67,10428.66,152033.88,-1918.36,10391.36,152046.21,-2503.55,10154.82,150486.04,-1794.28,9821.31,153486.04,-1794.28,9821.31,153486.04,-1889.85,10047.83,153533.82,-1837.84,9798,153493.75,-2547.11,10131.51,150493.75,-2547.11,10131.51,150493.75,-2668.81,10344.04,150546.15,-1959.54,10010.53,153546.15,-1837.84,9798,153493.75,-1889.85,10047.83,153533.82,-1959.54,10010.53,153546.15,-2599.12,10381.34,150533.82,-2503.55,10154.82,150486.04,-2668.81,10344.04,150546.15,-2599.12,10381.34,150533.82,-2599.12,10381.34,150533.82,-1889.85,10047.83,153533.82,-2668.81,10344.04,150546.15,-1959.54,10010.53,153546.15,-2607.96,10237.77,150519.95,-1898.69,9904.27,153519.95,-2314.18,10177.28,152046.15,-2192.47,9964.76,151993.75,-2551.34,10268.08,150509.93,-1842.07,9934.57,153509.93,-2148.92,9988.07,151986.04,-2244.49,10214.58,152033.82,-2633.97,10362.69,150539.98,-1924.7,10029.18,153539.98,-2244.49,10214.58,152033.82,-2314.18,10177.28,152046.15,-3788.09,9467.33,150484.93,-2878.98,9228.56,153484.93,-2878.98,9228.56,153484.93,-2971.56,9456.63,153531.14,-2921.94,9205.56,153496.12,-3831.05,9444.34,150496.12,-3831.05,9444.34,150496.12,-3949.41,9658.61,150549.04,-3040.31,9419.84,153549.04,-2921.94,9205.56,153496.12,-2971.56,9456.63,153531.14,-3040.31,9419.84,153549.04,-3880.67,9695.41,150531.14,-3788.09,9467.33,150484.93,-3949.41,9658.61,150549.04,-3880.67,9695.41,150531.14,-3880.67,9695.41,150531.14,-2971.56,9456.63,153531.14,-3949.41,9658.61,150549.04,-3040.31,9419.84,153549.04,-3890.23,9551.47,150522.58,-2981.12,9312.7,153522.58,-3494.86,9539.23,152049.04,-3376.5,9324.95,151996.12,-3834.38,9581.37,150508.03,-2925.27,9342.6,153508.03,-3333.53,9347.95,151984.93,-3426.12,9576.02,152031.14,-3915.04,9677.01,150540.09,-3005.93,9438.24,153540.09,-3426.12,9576.02,152031.14,-3494.86,9539.23,152049.04,-4184.94,9255.01,150484.58,-3273.96,9012.77,153484.58,-3273.96,9012.77,153484.58,-3366.45,9240.82,153531.08,-3316.92,8989.77,153495.76,-4227.9,9232.01,150495.76,-4227.9,9232.01,150495.76,-4346.18,9446.26,150548.98,-3435.19,9204.02,153548.98,-3316.92,8989.77,153495.76,-3366.45,9240.82,153531.08,-3435.19,9204.02,153548.98,-4277.43,9483.06,150531.08,-4184.94,9255.01,150484.58,-4346.18,9446.26,150548.98,-4277.43,9483.06,150531.08,-4277.43,9483.06,150531.08,-3366.45,9240.82,153531.08,-4346.18,9446.26,150548.98,-3435.19,9204.02,153548.98,-4287.04,9339.14,150522.37,-3376.06,9096.9,153522.37,-3890.68,9325.14,152048.98,-3772.41,9110.89,151995.76,-4231.18,9369.03,150507.83,-3320.2,9126.79,153507.83,-3729.45,9133.89,151984.58,-3821.94,9361.94,152031.08,-4311.8,9464.66,150540.03,-3400.82,9222.42,153540.03,-3821.94,9361.94,152031.08,-3890.68,9325.14,152048.98,-5469.33,8567.53,150484.09,-4358.51,8420.02,153484.09,-4358.51,8420.02,153484.09,-4448.27,8649.55,153528.62,-4400.69,8397.44,153498.6,-5511.51,8544.95,150498.6,-5511.51,8544.95,150498.6,-5626.59,8760.93,150551.83,-4515.77,8613.42,153551.83,-4400.69,8397.44,153498.6,-4448.27,8649.55,153528.62,-4515.77,8613.42,153551.83,-5559.09,8797.06,150528.62,-5469.33,8567.53,150484.09,-5626.59,8760.93,150551.83,-5559.09,8797.06,150528.62,-5559.09,8797.06,150528.62,-4448.27,8649.55,153528.62,-5626.59,8760.93,150551.83,-4515.77,8613.42,153551.83,-5569.05,8652.94,150525.22,-4458.23,8505.43,153525.22,-5071.18,8687.18,152051.83,-4956.1,8471.19,151998.6,-5514.21,8682.29,150506.36,-4403.39,8534.78,153506.36,-4913.92,8493.77,151984.09,-5003.68,8723.3,152028.62,-5592.84,8779,150540.22,-4482.02,8631.49,153540.22,-5003.68,8723.3,152028.62,-5071.18,8687.18,152051.83,-5866.2,8355.19,150483.76,-4753.5,8204.21,153483.76,-4753.5,8204.21,153483.76,-4843.16,8433.73,153528.56,-4795.69,8181.63,153498.27,-5908.38,8332.61,150498.27,-5908.38,8332.61,150498.27,-6023.35,8548.58,150551.78,-4910.66,8397.61,153551.78,-4795.69,8181.63,153498.27,-4843.16,8433.73,153528.56,-4910.66,8397.61,153551.78,-5955.86,8584.71,150528.56,-5866.2,8355.19,150483.76,-6023.35,8548.58,150551.78,-5955.86,8584.71,150528.56,-5955.86,8584.71,150528.56,-4843.16,8433.73,153528.56,-6023.35,8548.58,150551.78,-4910.66,8397.61,153551.78,-5965.87,8440.6,150525.02,-4853.17,8289.62,153525.02,-5467.01,8473.09,152051.78,-5352.04,8257.12,151998.27,-5911.03,8469.95,150506.16,-4798.33,8318.97,153506.16,-5309.85,8279.7,151983.76,-5399.51,8509.22,152028.56,-5989.61,8566.64,150540.17,-4876.91,8415.67,153540.17,-5399.51,8509.22,152028.56,-5467.01,8473.09,152051.78,-6917.26,6591.92,150446.39,-5787.62,6462.83,153446.39,-5787.62,6462.83,153446.39,-6021.96,6465.04,153534.72,-5785.94,6412.94,153443.61,-6915.58,6542.03,150443.61,-6915.58,6542.03,150443.61,-7148.91,6514.3,150530.28,-6019.27,6385.21,153530.28,-5785.94,6412.94,153443.61,-6021.96,6465.04,153534.72,-6019.27,6385.21,153530.28,-7151.6,6594.13,150534.72,-6917.26,6591.92,150446.39,-7148.91,6514.3,150530.28,-7151.6,6594.13,150534.72,-7151.6,6594.13,150534.72,-6021.96,6465.04,153534.72,-7148.91,6514.3,150530.28,-6019.27,6385.21,153530.28,-7032.24,6528.16,150486.94,-5902.6,6399.08,153486.94,-6584.09,6449.76,152030.28,-6350.76,6477.48,151943.61,-7034.43,6593.03,150490.56,-5904.79,6463.94,153490.56,-6352.44,6527.38,151946.39,-6586.78,6529.59,152034.72,-7150.26,6554.22,150532.5,-6020.62,6425.13,153532.5,-6586.78,6529.59,152034.72,-6584.09,6449.76,152030.28,-6896.94,5992.25,150446.66,-5770.64,5863.06,153446.66,-5770.64,5863.06,153446.66,-6005.07,5865.28,153534.77,-5768.96,5813.17,153443.88,-6895.26,5942.36,150443.88,-6895.26,5942.36,150443.88,-7128.68,5914.64,150530.32,-6002.38,5785.45,153530.32,-5768.96,5813.17,153443.88,-6005.07,5865.28,153534.77,-6002.38,5785.45,153530.32,-7131.37,5994.47,150534.77,-6896.94,5992.25,150446.66,-7128.68,5914.64,150530.32,-7131.37,5994.47,150534.77,-7131.37,5994.47,150534.77,-6005.07,5865.28,153534.77,-7128.68,5914.64,150530.32,-6002.38,5785.45,153530.32,-7011.97,5928.5,150487.1,-5885.67,5799.31,153487.1,-6565.53,5850.04,152030.32,-6332.11,5877.76,151943.88,-7014.15,5993.36,150490.72,-5887.85,5864.17,153490.72,-6333.79,5927.66,151946.66,-6568.22,5929.87,152034.77,-7130.02,5954.56,150532.55,-6003.72,5825.36,153532.55,-6568.22,5929.87,152034.77,-6565.53,5850.04,152030.32,-6816.39,3613.64,150446.99,-5705.15,3549.15,153446.99,-5705.15,3549.15,153446.99,-5939.94,3553.29,153534.05,-5703.46,3499.21,153445.29,-6814.71,3563.7,150445.29,-6814.71,3563.7,150445.29,-7048.49,3537.88,150531.33,-5937.25,3473.38,153531.33,-5703.46,3499.21,153445.29,-5939.94,3553.29,153534.05,-5937.25,3473.38,153531.33,-7051.19,3617.78,150534.05,-6816.39,3613.64,150446.99,-7048.49,3537.88,150531.33,-7051.19,3617.78,150534.05,-7051.19,3617.78,150534.05,-5939.94,3553.29,153534.05,-7048.49,3537.88,150531.33,-5937.25,3473.38,153531.33,-6931.6,3550.79,150488.31,-5820.36,3486.29,153488.31,-6492.87,3505.63,152031.33,-6259.09,3531.45,151945.29,-6933.79,3615.71,150490.52,-5822.54,3551.22,153490.52,-6260.77,3581.39,151946.99,-6495.56,3585.54,152034.05,-7049.84,3577.83,150532.69,-5938.6,3513.34,153532.69,-6495.56,3585.54,152034.05,-6492.87,3505.63,152031.33,-6796.08,3013.98,150447.26,-5688.17,2949.38,153447.26,-5688.17,2949.38,153447.26,-5923.05,2953.53,153534.09,-5686.48,2899.44,153445.57,-6794.39,2964.03,150445.57,-6794.39,2964.03,150445.57,-7028.26,2938.22,150531.38,-5920.35,2873.62,153531.38,-5686.48,2899.44,153445.57,-5923.05,2953.53,153534.09,-5920.35,2873.62,153531.38,-7030.95,3018.12,150534.09,-6796.08,3013.98,150447.26,-7028.26,2938.22,150531.38,-7030.95,3018.12,150534.09,-7030.95,3018.12,150534.09,-5923.05,2953.53,153534.09,-7028.26,2938.22,150531.38,-5920.35,2873.62,153531.38,-6911.33,2951.12,150488.47,-5803.42,2886.53,153488.47,-6474.31,2905.92,152031.38,-6240.44,2931.73,151945.57,-6913.52,3016.05,150490.68,-5805.61,2951.45,153490.68,-6242.12,2981.68,151947.26,-6477,2985.83,152034.09,-7029.61,2978.17,150532.74,-5921.7,2913.57,153532.74,-6477,2985.83,152034.09,-6474.31,2905.92,152031.38,-6715.52,635.4,150447.69,-5622.66,635.5,153447.69,-5622.66,635.5,153447.69,-5857.92,641.53,153533.39,-5620.98,585.53,153447.08,-6713.83,585.43,150447.08,-6713.83,585.43,150447.08,-6948.08,561.48,150532.41,-5855.22,561.58,153532.41,-5620.98,585.53,153447.08,-5857.92,641.53,153533.39,-5855.22,561.58,153532.41,-6950.77,641.43,150533.39,-6715.52,635.4,150447.69,-6948.08,561.48,150532.41,-6950.77,641.43,150533.39,-6950.77,641.43,150533.39,-5857.92,641.53,153533.39,-6948.08,561.48,150532.41,-5855.22,561.58,153532.41,-6830.95,573.45,150489.74,-5738.1,573.56,153489.74,-6401.65,561.53,152032.41,-6167.41,585.48,151947.08,-6833.14,638.41,150490.54,-5740.29,638.51,153490.54,-6169.09,635.45,151947.69,-6404.34,641.48,152033.39,-6949.42,601.45,150532.9,-5856.57,601.55,153532.9,-6404.34,641.48,152033.39,-6401.65,561.53,152032.41,-6695.2,35.74,150447.96,-5605.69,35.74,153447.96,-5605.69,35.74,153447.96,-5841.02,41.77,153533.43,-5604,-14.23,153447.35,-6693.52,-14.23,150447.35,-6693.52,-14.23,150447.35,-6927.84,-38.18,150532.45,-5838.33,-38.18,153532.45,-5604,-14.23,153447.35,-5841.02,41.77,153533.43,-5838.33,-38.18,153532.45,-6930.54,41.77,150533.43,-6695.2,35.74,150447.96,-6927.84,-38.18,150532.45,-6930.54,41.77,150533.43,-6930.54,41.77,150533.43,-5841.02,41.77,153533.43,-6927.84,-38.18,150532.45,-5838.33,-38.18,153532.45,-6810.68,-26.21,150489.9,-5721.16,-26.21,153489.9,-6383.09,-38.18,152032.45,-6148.76,-14.23,151947.35,-6812.87,38.75,150490.7,-5723.35,38.75,153490.7,-6150.44,35.74,151947.96,-6385.78,41.77,152033.43,-6929.19,1.79,150532.94,-5839.68,1.79,153532.94,-6385.78,41.77,152033.43,-6383.09,-38.18,152032.45,25926.42,-736.01,147520.24,25628.37,-730.18,150520.24,25628.37,-730.18,150520.24,25875.23,-764.54,150544.83,25632.25,-680.33,150520.53,25930.3,-686.16,147520.53,25930.3,-686.16,147520.53,26179.48,-690.61,147545.29,25881.43,-684.78,150545.29,25632.25,-680.33,150520.53,25875.23,-764.54,150544.83,25881.43,-684.78,150545.29,26173.28,-770.37,147544.83,25926.42,-736.01,147520.24,26179.48,-690.61,147545.29,26173.28,-770.37,147544.83,26173.28,-770.37,147544.83,25875.23,-764.54,150544.83,26179.48,-690.61,147545.29,25881.43,-684.78,150545.29,26054.89,-688.39,147532.91,25756.84,-682.55,150532.91,26030.45,-687.7,149045.29,25781.27,-683.24,149020.53,26049.85,-753.19,147532.54,25751.8,-747.36,150532.54,25777.4,-733.09,149020.24,26024.26,-767.46,149044.83,26176.38,-730.49,147545.06,25878.33,-724.66,150545.06,26024.26,-767.46,149044.83,26030.45,-687.7,149045.29,25930.3,686.16,147520.53,25632.25,680.33,150520.53,25632.25,680.33,150520.53,25881.43,684.78,150545.29,25628.37,730.18,150520.24,25926.42,736.01,147520.24,25926.42,736.01,147520.24,26173.28,770.37,147544.83,25875.23,764.54,150544.83,25628.37,730.18,150520.24,25881.43,684.78,150545.29,25875.23,764.54,150544.83,26179.48,690.61,147545.29,25930.3,686.16,147520.53,26173.28,770.37,147544.83,26179.48,690.61,147545.29,26179.48,690.61,147545.29,25881.43,684.78,150545.29,26173.28,770.37,147544.83,25875.23,764.54,150544.83,26049.85,753.19,147532.54,25751.8,747.36,150532.54,26024.26,767.46,149044.83,25777.4,733.09,149020.24,26054.89,688.39,147532.91,25756.84,682.55,150532.91,25781.27,683.24,149020.53,26030.45,687.7,149045.29,26176.38,730.49,147545.06,25878.33,724.66,150545.06,26030.45,687.7,149045.29,26024.26,767.46,149044.83,25049.24,3978.64,147522.9,24751.49,3948.56,150522.9,24751.49,3948.56,150522.9,24981.71,4044.25,150546.71,24729.71,3993.54,150521.19,25027.47,4023.61,147521.19,25027.47,4023.61,147521.19,25244.62,4146.29,147543.97,24946.87,4116.22,150543.97,24729.71,3993.54,150521.19,24981.71,4044.25,150546.71,24946.87,4116.22,150543.97,25279.46,4074.33,147546.71,25049.24,3978.64,147522.9,25244.62,4146.29,147543.97,25279.46,4074.33,147546.71,25279.46,4074.33,147546.71,24981.71,4044.25,150546.71,25244.62,4146.29,147543.97,24946.87,4116.22,150543.97,25136.05,4084.95,147532.58,24838.29,4054.88,150532.58,25095.75,4131.25,149043.97,24878.59,4008.58,149021.19,25164.35,4026.48,147534.8,24866.6,3996.41,150534.8,24900.37,3963.6,149022.9,25130.59,4059.29,149046.71,25262.04,4110.31,147545.34,24964.29,4080.23,150545.34,25130.59,4059.29,149046.71,25095.75,4131.25,149043.97,23027.86,6723.13,147527.29,22731.96,6665.17,150527.29,22731.96,6665.17,150527.29,22911.29,6838.72,150548.34,22695.32,6699.07,150524.34,22991.23,6757.03,147524.34,22991.23,6757.03,147524.34,23148.58,6950.92,147543.6,22852.67,6892.96,150543.6,22695.32,6699.07,150524.34,22911.29,6838.72,150548.34,22852.67,6892.96,150543.6,23207.2,6896.69,147548.34,23027.86,6723.13,147527.29,23148.58,6950.92,147543.6,23207.2,6896.69,147548.34,23207.2,6896.69,147548.34,22911.29,6838.72,150548.34,23148.58,6950.92,147543.6,22852.67,6892.96,150543.6,23069.9,6853.97,147533.97,22774,6796.01,150533.97,23000.63,6921.94,149043.6,22843.27,6728.05,149024.34,23117.53,6809.91,147537.82,22821.63,6751.95,150537.82,22879.91,6694.15,149027.29,23059.25,6867.71,149048.34,23177.89,6923.8,147545.97,22881.98,6865.84,150545.97,23059.25,6867.71,149048.34,23000.63,6921.94,149043.6,20144.45,8541.42,147533.11,19855.67,8450.46,150533.11,19855.67,8450.46,150533.11,19959.41,8677.79,150549.99,19809.25,8468.63,150529.2,20098.04,8559.59,147529.2,20098.04,8559.59,147529.2,20173.92,8797.82,147543.73,19885.14,8706.87,150543.73,19809.25,8468.63,150529.2,19959.41,8677.79,150549.99,19885.14,8706.87,150543.73,20248.19,8768.75,147549.99,20144.45,8541.42,147533.11,20173.92,8797.82,147543.73,20248.19,8768.75,147549.99,20248.19,8768.75,147549.99,19959.41,8677.79,150549.99,20173.92,8797.82,147543.73,19885.14,8706.87,150543.73,20135.98,8678.71,147536.46,19847.2,8587.75,150536.46,20029.53,8752.35,149043.73,19953.65,8514.11,149029.2,20196.32,8655.08,147541.55,19907.54,8564.13,150541.55,20000.06,8495.94,149033.11,20103.8,8723.27,149049.99,20211.06,8783.29,147546.86,19922.27,8692.33,150546.86,20103.8,8723.27,149049.99,20029.53,8752.35,149043.73,17229.69,9222.67,147535.43,17003.81,9092.4,150535.43,17003.81,9092.4,150535.43,17056.19,9336.88,150549.99,16954.52,9100.09,150532.06,17180.4,9230.36,147532.06,17180.4,9230.36,147532.06,17203.21,9479.45,147544.59,16977.32,9349.19,150544.59,16954.52,9100.09,150532.06,17056.19,9336.88,150549.99,16977.32,9349.19,150544.59,17282.07,9467.14,147549.99,17229.69,9222.67,147535.43,17203.21,9479.45,147544.59,17282.07,9467.14,147549.99,17282.07,9467.14,147549.99,17056.19,9336.88,150549.99,17203.21,9479.45,147544.59,16977.32,9349.19,150544.59,17191.8,9354.91,147538.32,16965.92,9224.64,150538.32,17090.27,9414.32,149044.59,17067.46,9165.23,149032.06,17255.88,9344.91,147542.71,17030,9214.64,150542.71,17116.75,9157.53,149035.43,17169.13,9402.01,149049.99,17242.64,9473.3,147547.29,17016.76,9343.03,150547.29,17169.13,9402.01,149049.99,17090.27,9414.32,149044.59,14667.7,9622.74,147531.95,14553.7,9450.1,150531.95,14553.7,9450.1,150531.95,14606.56,9694.39,150548.02,14504.32,9457.81,150530.52,14618.32,9630.45,147530.52,14618.32,9630.45,147530.52,14641.55,9879.35,147545.73,14527.55,9706.72,150545.73,14504.32,9457.81,150530.52,14606.56,9694.39,150548.02,14527.55,9706.72,150545.73,14720.56,9867.02,147548.02,14667.7,9622.74,147531.95,14641.55,9879.35,147545.73,14720.56,9867.02,147548.02,14720.56,9867.02,147548.02,14606.56,9694.39,150548.02,14641.55,9879.35,147545.73,14527.55,9706.72,150545.73,14629.93,9754.9,147538.12,14515.93,9582.27,150538.12,14584.55,9793.04,149045.73,14561.32,9544.13,149030.52,14694.13,9744.88,147539.99,14580.13,9572.24,150539.99,14610.7,9536.42,149031.95,14663.56,9780.7,149048.02,14681.05,9873.19,147546.87,14567.05,9700.55,150546.87,14663.56,9780.7,149048.02,14584.55,9793.04,149045.73,12105.49,10022.86,147528.52,12103.37,9807.86,150528.52,12103.37,9807.86,150528.52,12156.83,10051.91,150546.05,12053.97,9815.57,150529.04,12056.09,10030.57,147529.04,12056.09,10030.57,147529.04,12079.92,10279.25,147546.88,12077.8,10064.25,150546.88,12053.97,9815.57,150529.04,12156.83,10051.91,150546.05,12077.8,10064.25,150546.88,12158.95,10266.91,147546.05,12105.49,10022.86,147528.52,12079.92,10279.25,147546.88,12158.95,10266.91,147546.05,12158.95,10266.91,147546.05,12156.83,10051.91,150546.05,12079.92,10279.25,147546.88,12077.8,10064.25,150546.88,12068,10154.91,147537.96,12065.88,9939.91,150537.96,12078.86,10171.75,149046.88,12055.03,9923.07,149029.04,12132.22,10144.89,147537.29,12130.1,9929.89,150537.29,12104.43,9915.36,149028.52,12157.89,10159.41,149046.05,12119.44,10273.08,147546.46,12117.31,10058.08,150546.46,12157.89,10159.41,149046.05,12078.86,10171.75,149046.88,9543.06,10423.04,147525.16,9652.82,10165.67,150525.16,9652.82,10165.67,150525.16,9707.02,10409.45,150544.09,9603.48,10173.37,150527.63,9493.72,10430.74,147527.63,9493.72,10430.74,147527.63,9518.31,10679.14,147548.04,9628.07,10421.78,150548.04,9603.48,10173.37,150527.63,9707.02,10409.45,150544.09,9628.07,10421.78,150548.04,9597.26,10666.82,147544.09,9543.06,10423.04,147525.16,9518.31,10679.14,147548.04,9597.26,10666.82,147544.09,9597.26,10666.82,147544.09,9707.02,10409.45,150544.09,9518.31,10679.14,147548.04,9628.07,10421.78,150548.04,9506.02,10554.94,147537.83,9615.78,10297.58,150537.83,9573.19,10550.46,149048.04,9548.6,10302.06,149027.63,9570.16,10544.93,147534.63,9679.92,10287.56,150534.63,9597.94,10294.35,149025.16,9652.14,10538.14,149044.09,9557.79,10672.98,147546.07,9667.55,10415.61,150546.07,9652.14,10538.14,149044.09,9573.19,10550.46,149048.04,6980.42,10823.26,147521.9,7202.06,10523.53,150521.9,7202.06,10523.53,150521.9,7257.12,10767.01,150542.16,7152.85,10531.21,150526.31,6931.21,10830.94,147526.31,6931.21,10830.94,147526.31,6956.74,11079.03,147549.21,7178.38,10779.3,150549.21,7152.85,10531.21,150526.31,7257.12,10767.01,150542.16,7178.38,10779.3,150549.21,7035.48,11066.74,147542.16,6980.42,10823.26,147521.9,6956.74,11079.03,147549.21,7035.48,11066.74,147542.16,7035.48,11066.74,147542.16,7257.12,10767.01,150542.16,6956.74,11079.03,147549.21,7178.38,10779.3,150549.21,6943.98,10954.99,147537.76,7165.62,10655.26,150537.76,7067.56,10929.17,149049.21,7042.03,10681.08,149026.31,7007.95,10945,147532.03,7229.59,10645.27,150532.03,7091.24,10673.4,149021.9,7146.3,10916.88,149042.16,6996.11,11072.89,147545.68,7217.75,10773.16,150545.68,7146.3,10916.88,149042.16,7067.56,10929.17,149049.21,4417.58,11223.53,147518.77,4751.1,10881.43,150518.77,4751.1,10881.43,150518.77,4807.13,11124.59,150540.26,4702.1,10889.08,150525.09,4368.57,11231.18,147525.09,4368.57,11231.18,147525.09,4395.2,11478.92,147550.38,4728.72,11136.83,150550.38,4702.1,10889.08,150525.09,4807.13,11124.59,150540.26,4728.72,11136.83,150550.38,4473.61,11466.68,147540.26,4417.58,11223.53,147518.77,4395.2,11478.92,147550.38,4473.61,11466.68,147540.26,4473.61,11466.68,147540.26,4807.13,11124.59,150540.26,4395.2,11478.92,147550.38,4728.72,11136.83,150550.38,4381.89,11355.05,147537.73,4715.41,11012.95,150537.73,4561.96,11307.87,149050.38,4535.33,11060.13,149025.09,4445.6,11345.11,147529.52,4779.12,11003.01,150529.52,4584.34,11052.48,149018.77,4640.37,11295.63,149040.26,4434.41,11472.8,147545.32,4767.93,11130.71,150545.32,4640.37,11295.63,149040.26,4561.96,11307.87,149050.38,1854.56,11623.84,147515.77,2299.96,11239.37,150515.77,2299.96,11239.37,150515.77,2357.07,11482.17,150538.41,2251.23,11246.98,150523.98,1805.83,11631.44,147523.98,1805.83,11631.44,147523.98,1833.7,11878.81,147551.55,2279.1,11494.35,150551.55,2251.23,11246.98,150523.98,2357.07,11482.17,150538.41,2279.1,11494.35,150551.55,1911.67,11866.64,147538.41,1854.56,11623.84,147515.77,1833.7,11878.81,147551.55,1911.67,11866.64,147538.41,1911.67,11866.64,147538.41,2357.07,11482.17,150538.41,1833.7,11878.81,147551.55,2279.1,11494.35,150551.55,1819.76,11755.13,147537.77,2265.16,11370.66,150537.77,2056.4,11686.58,149051.55,2028.53,11439.21,149023.98,1883.11,11745.24,147527.09,2328.51,11360.77,150527.09,2077.26,11431.61,149015.77,2134.37,11674.41,149038.41,1872.68,11872.72,147544.98,2318.08,11488.26,150544.98,2134.37,11674.41,149038.41,2056.4,11686.58,149051.55,-7776.04,7761.55,147449.29,-6646.98,7618.27,150449.29,-6646.98,7618.27,150449.29,-6838.2,7759.56,150528.01,-6671.71,7575.43,150456.56,-7800.77,7718.71,147456.56,-7800.77,7718.71,147456.56,-8006.84,7834.29,147539.63,-6877.79,7691.01,150539.63,-6671.71,7575.43,150456.56,-6838.2,7759.56,150528.01,-6877.79,7691.01,150539.63,-7967.26,7902.83,147528.01,-7776.04,7761.55,147449.29,-8006.84,7834.29,147539.63,-7967.26,7902.83,147528.01,-7967.26,7902.83,147528.01,-6838.2,7759.56,150528.01,-8006.84,7834.29,147539.63,-6877.79,7691.01,150539.63,-7903.81,7776.5,147498.09,-6774.75,7633.22,150498.09,-7442.31,7762.65,149039.63,-7236.24,7647.07,148956.56,-7871.65,7832.19,147488.65,-6742.59,7688.92,150488.65,-7211.51,7689.91,148949.29,-7402.73,7831.19,149028.01,-7987.05,7868.56,147533.82,-6857.99,7725.28,150533.82,-7402.73,7831.19,149028.01,-7442.31,7762.65,149039.63,-7975.63,4901.88,147446.95,-6856.86,4804.65,150446.95,-6856.86,4804.65,150446.95,-7091.5,4806.4,150534.5,-6854.91,4754.75,150444.6,-7973.68,4851.98,147444.6,-7973.68,4851.98,147444.6,-8207.15,4823.78,147530.75,-7088.38,4726.55,150530.75,-6854.91,4754.75,150444.6,-7091.5,4806.4,150534.5,-7088.38,4726.55,150530.75,-8210.27,4903.63,147534.5,-7975.63,4901.88,147446.95,-8207.15,4823.78,147530.75,-8210.27,4903.63,147534.5,-8210.27,4903.63,147534.5,-7091.5,4806.4,150534.5,-8207.15,4823.78,147530.75,-7088.38,4726.55,150530.75,-8090.42,4837.88,147487.68,-6971.65,4740.65,150487.68,-7647.77,4775.17,149030.75,-7414.3,4803.36,148944.6,-8092.95,4902.76,147490.72,-6974.18,4805.53,150490.72,-7416.25,4853.27,148946.95,-7650.89,4855.02,149034.5,-8208.71,4863.71,147532.63,-7089.94,4766.48,150532.63,-7650.89,4855.02,149034.5,-7647.77,4775.17,149030.75,-7856.32,1858.75,147447.56,-6755.99,1826.38,150447.56,-6755.99,1826.38,150447.56,-6991.09,1830.05,150533.83,-6754.04,1776.44,150446.3,-7854.37,1808.81,147446.3,-7854.37,1808.81,147446.3,-8088.3,1782.51,147531.82,-6987.97,1750.14,150531.82,-6754.04,1776.44,150446.3,-6991.09,1830.05,150533.83,-6987.97,1750.14,150531.82,-8091.42,1862.42,147533.83,-7856.32,1858.75,147447.56,-8088.3,1782.51,147531.82,-8091.42,1862.42,147533.83,-8091.42,1862.42,147533.83,-6991.09,1830.05,150533.83,-8088.3,1782.51,147531.82,-6987.97,1750.14,150531.82,-7971.34,1795.66,147489.06,-6871,1763.29,150489.06,-7538.13,1766.32,149031.82,-7304.21,1792.62,148946.3,-7973.87,1860.59,147490.69,-6873.54,1828.22,150490.69,-7306.16,1842.57,148947.56,-7541.25,1846.24,149033.83,-8089.86,1822.47,147532.82,-6989.53,1790.09,150532.82,-7541.25,1846.24,149033.83,-7538.13,1766.32,149031.82,25628.51,-730.04,150518.91,25316.98,-723.99,153518.91,25316.98,-723.99,153518.91,25563.71,-758.47,153544.6,25320.87,-674.14,153519.21,25632.4,-680.19,150519.21,25632.4,-680.19,150519.21,25881.47,-684.76,150545.09,25569.94,-678.71,153545.09,25320.87,-674.14,153519.21,25563.71,-758.47,153544.6,25569.94,-678.71,153545.09,25875.24,-764.51,150544.6,25628.51,-730.04,150518.91,25881.47,-684.76,150545.09,25875.24,-764.51,150544.6,25875.24,-764.51,150544.6,25563.71,-758.47,153544.6,25881.47,-684.76,150545.09,25569.94,-678.71,153545.09,25756.94,-682.48,150532.15,25445.4,-676.43,153532.15,25725.7,-681.73,152045.09,25476.64,-677.17,152019.21,25751.87,-747.28,150531.75,25440.34,-741.23,153531.75,25472.74,-727.01,152018.91,25719.47,-761.49,152044.6,25878.35,-724.64,150544.84,25566.82,-718.59,153544.84,25719.47,-761.49,152044.6,25725.7,-681.73,152045.09,25632.4,680.19,150519.21,25320.87,674.14,153519.21,25320.87,674.14,153519.21,25569.94,678.71,153545.09,25316.98,723.99,153518.91,25628.51,730.04,150518.91,25628.51,730.04,150518.91,25875.24,764.51,150544.6,25563.71,758.47,153544.6,25316.98,723.99,153518.91,25569.94,678.71,153545.09,25563.71,758.47,153544.6,25881.47,684.76,150545.09,25632.4,680.19,150519.21,25875.24,764.51,150544.6,25881.47,684.76,150545.09,25881.47,684.76,150545.09,25569.94,678.71,153545.09,25875.24,764.51,150544.6,25563.71,758.47,153544.6,25751.87,747.28,150531.75,25440.34,741.23,153531.75,25719.47,761.49,152044.6,25472.74,727.01,152018.91,25756.94,682.48,150532.15,25445.4,676.43,153532.15,25476.64,677.17,152019.21,25725.7,681.73,152045.09,25878.35,724.64,150544.84,25566.82,718.59,153544.84,25725.7,681.73,152045.09,25719.47,761.49,152044.6,24752.1,3947.75,150521.74,24440.83,3916.53,153521.74,24440.83,3916.53,153521.74,24670.63,4012.95,153546.58,24418.92,3961.44,153519.93,24730.19,3992.65,150519.93,24730.19,3992.65,150519.93,24946.85,4116.02,150543.69,24635.58,4084.8,153543.69,24418.92,3961.44,153519.93,24670.63,4012.95,153546.58,24635.58,4084.8,153543.69,24981.91,4044.17,150546.58,24752.1,3947.75,150521.74,24946.85,4116.02,150543.69,24981.91,4044.17,150546.58,24981.91,4044.17,150546.58,24670.63,4012.95,153546.58,24946.85,4116.02,150543.69,24635.58,4084.8,153543.69,24838.52,4054.34,150531.81,24527.25,4023.12,153531.81,24791.21,4100.41,152043.69,24574.55,3977.05,152019.93,24867,3995.96,150534.16,24555.73,3964.74,153534.16,24596.46,3932.14,152021.74,24826.27,4028.56,152046.58,24964.38,4080.09,150545.14,24653.1,4048.88,153545.14,24826.27,4028.56,152046.58,24791.21,4100.41,152043.69,22733.45,6664.11,150526.42,22424.02,6603.84,153526.42,22424.02,6603.84,153526.42,22602.25,6778.43,153548.31,22387.2,6637.52,153523.3,22696.63,6697.79,150523.3,22696.63,6697.79,150523.3,22852.76,6892.59,150543.31,22543.34,6832.32,153543.31,22387.2,6637.52,153523.3,22602.25,6778.43,153548.31,22543.34,6832.32,153543.31,22911.67,6838.7,150548.31,22733.45,6664.11,150526.42,22852.76,6892.59,150543.31,22911.67,6838.7,150548.31,22911.67,6838.7,150548.31,22602.25,6778.43,153548.31,22852.76,6892.59,150543.31,22543.34,6832.32,153543.31,22774.69,6795.19,150533.3,22465.27,6734.92,153533.3,22698.05,6862.46,152043.31,22541.92,6667.66,152023.3,22822.56,6751.41,150537.36,22513.14,6691.13,153537.36,22578.74,6633.97,152026.42,22756.96,6808.56,152048.31,22882.22,6865.65,150545.81,22572.79,6805.37,153545.81,22756.96,6808.56,152048.31,22698.05,6862.46,152043.31,19858.17,8449.77,150532.6,19556.17,8355,153532.6,19556.17,8355,153532.6,19657.92,8583.18,153550.06,19509.62,8372.78,153528.48,19811.62,8467.55,150528.48,19811.62,8467.55,150528.48,19885.44,8706.41,150543.46,19583.44,8611.63,153543.46,19509.62,8372.78,153528.48,19657.92,8583.18,153550.06,19583.44,8611.63,153543.46,19959.92,8677.95,150550.06,19858.17,8449.77,150532.6,19885.44,8706.41,150543.46,19959.92,8677.95,150550.06,19959.92,8677.95,150550.06,19657.92,8583.18,153550.06,19885.44,8706.41,150543.46,19583.44,8611.63,153543.46,19848.53,8586.98,150535.97,19546.53,8492.21,153535.97,19734.44,8659.02,152043.46,19660.62,8420.17,152028.48,19909.04,8563.86,150541.33,19607.04,8469.09,153541.33,19707.17,8402.38,152032.6,19808.92,8630.57,152050.06,19922.68,8692.18,150546.76,19620.68,8597.41,153546.76,19808.92,8630.57,152050.06,19734.44,8659.02,152043.46,17006.88,9092.22,150535.15,16768.96,8957.63,153535.15,16768.96,8957.63,153535.15,16818.82,9202.61,153550.1,16719.61,8964.83,153531.56,16957.53,9099.42,150531.56,16957.53,9099.42,150531.56,16977.78,9348.72,150544.35,16739.86,9214.14,153544.35,16719.61,8964.83,153531.56,16818.82,9202.61,153550.1,16739.86,9214.14,153544.35,17056.74,9337.2,150550.1,17006.88,9092.22,150535.15,16977.78,9348.72,150544.35,17056.74,9337.2,150550.1,17056.74,9337.2,150550.1,16818.82,9202.61,153550.1,16977.78,9348.72,150544.35,16739.86,9214.14,153544.35,16967.66,9224.07,150537.96,16729.74,9089.48,153537.96,16858.82,9281.43,152044.35,16838.57,9032.13,152031.56,17031.81,9214.71,150542.63,16793.89,9080.12,153542.63,16887.92,9024.93,152035.15,16937.78,9269.91,152050.1,17017.26,9342.96,150547.23,16779.34,9208.37,153547.23,16937.78,9269.91,152050.1,16858.82,9281.43,152044.35,14556.77,9449.92,150531.63,14432.37,9273.66,153531.63,14432.37,9273.66,153531.63,14482.72,9518.44,153548.1,14382.92,9280.87,153530.01,14507.32,9457.14,150530.01,14507.32,9457.14,150530.01,14528,9706.25,150545.5,14403.6,9529.99,153545.5,14382.92,9280.87,153530.01,14482.72,9518.44,153548.1,14403.6,9529.99,153545.5,14607.12,9694.71,150548.1,14556.77,9449.92,150531.63,14528,9706.25,150545.5,14607.12,9694.71,150548.1,14607.12,9694.71,150548.1,14482.72,9518.44,153548.1,14528,9706.25,150545.5,14403.6,9529.99,153545.5,14517.66,9581.7,150537.76,14393.26,9405.43,153537.76,14465.8,9618.12,152045.5,14445.12,9369.01,152030.01,14581.94,9572.32,150539.87,14457.54,9396.05,153539.87,14494.57,9361.79,152031.63,14544.92,9606.57,152048.1,14567.56,9700.48,150546.8,14443.16,9524.21,153546.8,14544.92,9606.57,152048.1,14465.8,9618.12,152045.5,12106.42,9807.68,150528.16,12095.54,9589.74,153528.16,12095.54,9589.74,153528.16,12146.52,9834.29,153546.11,12046.07,9596.96,153528.51,12056.95,9814.9,150528.51,12056.95,9814.9,150528.51,12078.24,10063.78,150546.67,12067.36,9845.84,153546.67,12046.07,9596.96,153528.51,12146.52,9834.29,153546.11,12067.36,9845.84,153546.67,12157.4,10052.23,150546.11,12106.42,9807.68,150528.16,12078.24,10063.78,150546.67,12157.4,10052.23,150546.11,12157.4,10052.23,150546.11,12146.52,9834.29,153546.11,12078.24,10063.78,150546.67,12067.36,9845.84,153546.67,12067.59,9939.34,150537.59,12056.71,9721.4,153537.59,12072.8,9954.81,152046.67,12051.51,9705.93,152028.51,12131.91,9929.96,150537.14,12121.03,9712.01,153537.14,12100.98,9698.71,152028.16,12151.96,9943.26,152046.11,12117.82,10058.01,150546.39,12106.94,9840.06,153546.39,12151.96,9943.26,152046.11,12072.8,9954.81,152046.67,9655.85,10165.49,150524.76,9758.49,9905.87,153524.76,9758.49,9905.87,153524.76,9810.23,10150.15,153544.13,9709.07,9913.08,153527.08,9606.43,10172.7,150527.08,9606.43,10172.7,150527.08,9628.51,10421.31,150547.84,9731.15,10161.69,153547.84,9709.07,9913.08,153527.08,9810.23,10150.15,153544.13,9731.15,10161.69,153547.84,9707.58,10409.77,150544.13,9655.85,10165.49,150524.76,9628.51,10421.31,150547.84,9707.58,10409.77,150544.13,9707.58,10409.77,150544.13,9810.23,10150.15,153544.13,9628.51,10421.31,150547.84,9731.15,10161.69,153547.84,9617.47,10297.01,150537.46,9720.11,10037.39,153537.46,9679.83,10291.5,152047.84,9657.75,10042.89,152027.08,9681.72,10287.63,150534.45,9784.36,10028.01,153534.45,9707.17,10035.68,152024.76,9758.9,10279.96,152044.13,9668.05,10415.54,150545.99,9770.69,10155.92,153545.99,9758.9,10279.96,152044.13,9679.83,10291.5,152047.84,7205.07,10523.35,150521.47,7421.23,10222.05,153521.47,7421.23,10222.05,153521.47,7473.84,10466.03,153542.18,7371.93,10229.24,153525.74,7155.77,10530.54,150525.74,7155.77,10530.54,150525.74,7178.81,10778.84,150549.02,7394.97,10477.54,153549.02,7371.93,10229.24,153525.74,7473.84,10466.03,153542.18,7394.97,10477.54,153549.02,7257.68,10767.33,150542.18,7205.07,10523.35,150521.47,7178.81,10778.84,150549.02,7257.68,10767.33,150542.18,7257.68,10767.33,150542.18,7473.84,10466.03,153542.18,7178.81,10778.84,150549.02,7394.97,10477.54,153549.02,7167.29,10654.69,150537.38,7383.45,10353.39,153537.38,7286.89,10628.19,152049.02,7263.85,10379.89,152025.74,7231.37,10645.34,150531.82,7447.53,10344.04,153531.82,7313.15,10372.7,152021.47,7365.76,10616.68,152042.18,7218.25,10773.09,150545.6,7434.41,10471.78,153545.6,7365.76,10616.68,152042.18,7286.89,10628.19,152049.02,4754.08,10881.25,150518.3,5083.76,10538.27,153518.3,5083.76,10538.27,153518.3,5137.37,10781.92,153540.26,5034.67,10545.43,153524.51,4704.98,10888.41,150524.51,4704.98,10888.41,150524.51,4729.14,11136.37,150550.21,5058.83,10793.38,153550.21,5034.67,10545.43,153524.51,5137.37,10781.92,153540.26,5058.83,10793.38,153550.21,4807.69,11124.9,150540.26,4754.08,10881.25,150518.3,4729.14,11136.37,150550.21,4807.69,11124.9,150540.26,4807.69,11124.9,150540.26,5137.37,10781.92,153540.26,4729.14,11136.37,150550.21,5058.83,10793.38,153550.21,4717.06,11012.39,150537.36,5046.75,10669.41,153537.36,4893.98,10964.87,152050.21,4869.82,10716.92,152024.51,4780.88,11003.08,150529.28,5110.57,10660.09,153529.28,4918.92,10709.76,152018.3,4972.53,10953.41,152040.26,4768.42,11130.63,150545.23,5098.1,10787.65,153545.23,4972.53,10953.41,152040.26,4893.98,10964.87,152050.21,2302.9,11239.18,150515.28,2746.1,10854.52,153515.28,2746.1,10854.52,153515.28,2800.82,11097.83,153538.39,2697.29,10861.65,153523.4,2254.09,11246.31,150523.4,2254.09,11246.31,150523.4,2279.51,11493.89,150551.39,2722.71,11109.23,153551.39,2697.29,10861.65,153523.4,2800.82,11097.83,153538.39,2722.71,11109.23,153551.39,2357.62,11482.49,150538.39,2302.9,11239.18,150515.28,2279.51,11493.89,150551.39,2357.62,11482.49,150538.39,2357.62,11482.49,150538.39,2800.82,11097.83,153538.39,2279.51,11493.89,150551.39,2722.71,11109.23,153551.39,2266.8,11370.1,150537.4,2710,10985.44,153537.4,2501.11,11301.56,152051.39,2475.69,11053.98,152023.4,2330.26,11360.84,150526.83,2773.46,10976.18,153526.83,2524.5,11046.85,152015.28,2579.22,11290.16,152038.39,2318.57,11488.19,150544.89,2761.77,11103.53,153544.89,2579.22,11290.16,152038.39,2501.11,11301.56,152051.39,-6646.84,7618.56,150449.26,-5518.6,7473.85,153449.26,-5518.6,7473.85,153449.26,-5709.97,7614.91,153528.03,-5543.31,7430.98,153456.48,-6671.54,7575.7,150456.48,-6671.54,7575.7,150456.48,-6877.73,7691.04,150539.59,-5749.5,7546.32,153539.59,-5543.31,7430.98,153456.48,-5709.97,7614.91,153528.03,-5749.5,7546.32,153539.59,-6838.2,7759.62,150528.03,-6646.84,7618.56,150449.26,-6877.73,7691.04,150539.59,-6838.2,7759.62,150528.03,-6838.2,7759.62,150528.03,-5709.97,7614.91,153528.03,-6877.73,7691.04,150539.59,-5749.5,7546.32,153539.59,-6774.64,7633.37,150498.04,-5646.4,7488.65,153498.04,-6313.61,7618.68,152039.59,-6107.42,7503.34,151956.48,-6742.52,7689.09,150488.65,-5614.29,7544.38,153488.65,-6082.72,7546.21,151949.26,-6274.09,7687.27,152028.03,-6857.97,7725.33,150533.81,-5729.73,7580.62,153533.81,-6274.09,7687.27,152028.03,-6313.61,7618.68,152039.59,-6856.67,4802.94,150446.81,-5737.89,4706.1,153446.81,-5737.89,4706.1,153446.81,-5972.51,4709.29,153534.41,-5736.21,4656.18,153444.57,-6854.99,4753.02,150444.57,-6854.99,4753.02,150444.57,-7088.59,4726.25,150530.82,-5969.81,4629.41,153530.82,-5736.21,4656.18,153444.57,-5972.51,4709.29,153534.41,-5969.81,4629.41,153530.82,-7091.28,4806.13,150534.41,-6856.67,4802.94,150446.81,-7088.59,4726.25,150530.82,-7091.28,4806.13,150534.41,-7091.28,4806.13,150534.41,-5972.51,4709.29,153534.41,-7088.59,4726.25,150530.82,-5969.81,4629.41,153530.82,-6971.79,4739.64,150487.7,-5853.01,4642.8,153487.7,-6529.2,4677.83,152030.82,-6295.6,4704.6,151944.57,-6973.97,4804.54,150490.61,-5855.2,4707.69,153490.61,-6297.28,4754.52,151946.81,-6531.89,4757.71,152034.41,-7089.93,4766.19,150532.62,-5971.16,4669.35,153532.62,-6531.89,4757.71,152034.41,-6529.2,4677.83,152030.82,-6755.8,1824.68,150447.46,-5655.42,1792.44,153447.46,-5655.42,1792.44,153447.46,-5890.48,1797.53,153533.74,-5653.73,1742.48,153446.31,-6754.11,1774.72,150446.31,-6754.11,1774.72,150446.31,-6988.17,1749.84,150531.89,-5887.79,1717.6,153531.89,-5653.73,1742.48,153446.31,-5890.48,1797.53,153533.74,-5887.79,1717.6,153531.89,-6990.86,1829.78,150533.74,-6755.8,1824.68,150447.46,-6988.17,1749.84,150531.89,-6990.86,1829.78,150533.74,-6990.86,1829.78,150533.74,-5890.48,1797.53,153533.74,-6988.17,1749.84,150531.89,-5887.79,1717.6,153531.89,-6871.14,1762.28,150489.1,-5770.76,1730.04,153489.1,-6437.98,1733.72,152031.89,-6203.92,1758.6,151946.31,-6873.33,1827.23,150490.6,-5772.95,1794.98,153490.6,-6205.61,1808.56,151947.46,-6440.67,1813.65,152033.74,-6989.52,1789.81,150532.81,-5889.14,1757.56,153532.81,-6440.67,1813.65,152033.74,-6437.98,1733.72,152031.89,-7566.05,19.51,147550,-7826.99,6700.78,147550,-7826.99,6700.78,147550,-7826.35,6852.23,147550,-7826.35,6852.23,147550,-7812.61,7003.06,147550,-7812.61,7003.06,147550,-7785.89,7152.14,147550,-7785.89,7152.14,147550,-7746.37,7298.35,147550,-7746.37,7298.35,147550,-7694.36,7440.6,147550,-7694.36,7440.6,147550,-7630.24,7577.81,147550,-7630.24,7577.81,147550,-7554.5,7708.97,147550,-7554.5,7708.97,147550,-7467.71,7833.08,147550,-7467.71,7833.08,147550,-7370.51,7949.23,147550,-7370.51,7949.23,147550,-7263.62,8056.54,147550,-7263.62,8056.54,147550,-7147.86,8154.21,147550,-7147.86,8154.21,147550,-7024.09,8241.49,147550,-7024.09,8241.49,147550,-6893.24,8317.76,147550,-6893.24,8317.76,147550,-857.92,11493.53,147550,-857.92,11493.53,147550,-731.7,11553.64,147550,-731.7,11553.64,147550,-601.09,11603.48,147550,-601.09,11603.48,147550,-466.92,11642.73,147550,-466.92,11642.73,147550,-330.04,11671.15,147550,-330.04,11671.15,147550,-191.34,11688.56,147550,-191.34,11688.56,147550,-51.68,11694.83,147550,-51.68,11694.83,147550,88.03,11689.94,147550,88.03,11689.94,147550,226.9,11673.91,147550,226.9,11673.91,147550,18157.38,8874.99,147550,18157.38,8874.99,147550,18912.95,8723.59,147550,18912.95,8723.59,147550,19652.77,8507.99,147550,19652.77,8507.99,147550,20371.39,8229.77,147550,20371.39,8229.77,147550,21063.51,7890.98,147550,21063.51,7890.98,147550,21724.05,7494.12,147550,21724.05,7494.12,147550,22348.15,7042.1,147550,22348.15,7042.1,147550,22931.21,6538.26,147550,22931.21,6538.26,147550,23468.93,5986.3,147550,23468.93,5986.3,147550,23957.37,5390.28,147550,23957.37,5390.28,147550,24392.93,4754.59,147550,24392.93,4754.59,147550,24772.4,4083.9,147550,24772.4,4083.9,147550,25092.99,3383.16,147550,25092.99,3383.16,147550,25352.34,2657.52,147550,25352.34,2657.52,147550,25548.54,1912.33,147550,25548.54,1912.33,147550,25680.15,1153.05,147550,25680.15,1153.05,147550,25746.2,385.3,147550,25746.2,385.3,147550,25746.2,-385.3,147550,25746.2,-385.3,147550,25680.15,-1153.05,147550,25680.15,-1153.05,147550,25548.54,-1912.33,147550,25548.54,-1912.33,147550,25352.34,-2657.52,147550,25352.34,-2657.52,147550,25092.99,-3383.16,147550,25092.99,-3383.16,147550,24772.4,-4083.9,147550,24772.4,-4083.9,147550,24392.93,-4754.59,147550,24392.93,-4754.59,147550,23957.37,-5390.28,147550,23957.37,-5390.28,147550,23468.93,-5986.3,147550,23468.93,-5986.3,147550,22931.21,-6538.26,147550,22931.21,-6538.26,147550,22348.15,-7042.1,147550,22348.15,-7042.1,147550,21724.05,-7494.12,147550,21724.05,-7494.12,147550,21063.51,-7890.98,147550,21063.51,-7890.98,147550,20371.39,-8229.77,147550,20371.39,-8229.77,147550,19652.77,-8507.99,147550,19652.77,-8507.99,147550,18912.95,-8723.59,147550,18912.95,-8723.59,147550,18157.38,-8874.99,147550,18157.38,-8874.99,147550,18226.78,-9319.6,147550,18157.38,-8874.99,147350,18912.95,-8723.59,147350,18912.95,-8723.59,147350,19652.77,-8507.99,147350,19652.77,-8507.99,147350,20371.39,-8229.77,147350,20371.39,-8229.77,147350,21063.51,-7890.98,147350,21063.51,-7890.98,147350,21724.05,-7494.12,147350,21724.05,-7494.12,147350,22348.15,-7042.1,147350,22348.15,-7042.1,147350,22931.21,-6538.26,147350,22931.21,-6538.26,147350,23468.93,-5986.3,147350,23468.93,-5986.3,147350,23957.37,-5390.28,147350,23957.37,-5390.28,147350,24392.93,-4754.59,147350,24392.93,-4754.59,147350,24772.4,-4083.9,147350,24772.4,-4083.9,147350,25092.99,-3383.16,147350,25092.99,-3383.16,147350,25352.34,-2657.52,147350,25352.34,-2657.52,147350,25548.54,-1912.33,147350,25548.54,-1912.33,147350,25680.15,-1153.05,147350,25680.15,-1153.05,147350,25746.2,-385.3,147350,25746.2,-385.3,147350,25746.2,385.3,147350,25746.2,385.3,147350,25680.15,1153.05,147350,25680.15,1153.05,147350,25548.54,1912.33,147350,25548.54,1912.33,147350,25352.34,2657.52,147350,25352.34,2657.52,147350,25092.99,3383.16,147350,25092.99,3383.16,147350,24772.4,4083.9,147350,24772.4,4083.9,147350,24392.93,4754.59,147350,24392.93,4754.59,147350,23957.37,5390.28,147350,23957.37,5390.28,147350,23468.93,5986.3,147350,23468.93,5986.3,147350,22931.21,6538.26,147350,22931.21,6538.26,147350,22348.15,7042.1,147350,22348.15,7042.1,147350,21724.05,7494.12,147350,21724.05,7494.12,147350,21063.51,7890.98,147350,21063.51,7890.98,147350,20371.39,8229.77,147350,20371.39,8229.77,147350,19652.77,8507.99,147350,19652.77,8507.99,147350,18912.95,8723.59,147350,18912.95,8723.59,147350,18157.38,8874.99,147350,18157.38,8874.99,147350,226.9,11673.91,147350,226.9,11673.91,147350,88.03,11689.94,147350,88.03,11689.94,147350,-51.68,11694.83,147350,-51.68,11694.83,147350,-191.34,11688.56,147350,-191.34,11688.56,147350,-330.04,11671.15,147350,-330.04,11671.15,147350,-466.92,11642.73,147350,-466.92,11642.73,147350,-601.09,11603.48,147350,-601.09,11603.48,147350,-731.7,11553.64,147350,-731.7,11553.64,147350,-857.92,11493.53,147350,-857.92,11493.53,147350,-6893.24,8317.76,147350,-6893.24,8317.76,147350,-7024.09,8241.49,147350,-7024.09,8241.49,147350,-7147.86,8154.21,147350,-7147.86,8154.21,147350,-7263.62,8056.54,147350,-7263.62,8056.54,147350,-7370.51,7949.23,147350,-7370.51,7949.23,147350,-7467.71,7833.08,147350,-7467.71,7833.08,147350,-7554.5,7708.97,147350,-7554.5,7708.97,147350,-7630.24,7577.81,147350,-7630.24,7577.81,147350,-7694.36,7440.6,147350,-7694.36,7440.6,147350,-7746.37,7298.35,147350,-7746.37,7298.35,147350,-7785.89,7152.14,147350,-7785.89,7152.14,147350,-7812.61,7003.06,147350,-7812.61,7003.06,147350,-7826.35,6852.23,147350,-7826.35,6852.23,147350,-7826.99,6700.78,147350,-7826.99,6700.78,147350,-7566.05,19.51,147350,-7566.05,19.51,147350,-8015.71,1.95,147460,18226.78,-9319.6,147460,18157.38,-8874.99,147350,18226.78,-9319.6,147550,18226.78,-9319.6,147460,-8015.71,1.95,147550,-7566.05,19.51,147550,-8015.71,1.95,147460,-8015.71,1.95,147550,-8015.71,1.95,147550,-8276.65,6683.22,147550,-8276.65,6683.22,147550,-8275.84,6873.62,147550,-8275.84,6873.62,147550,-8258.57,7063.23,147550,-8258.57,7063.23,147550,-8224.97,7250.65,147550,-8224.97,7250.65,147550,-8175.29,7434.45,147550,-8175.29,7434.45,147550,-8109.91,7613.27,147550,-8109.91,7613.27,147550,-8029.31,7785.77,147550,-8029.31,7785.77,147550,-7934.09,7950.65,147550,-7934.09,7950.65,147550,-7824.98,8106.69,147550,-7824.98,8106.69,147550,-7702.78,8252.7,147550,-7702.78,8252.7,147550,-7568.42,8387.6,147550,-7568.42,8387.6,147550,-7422.89,8510.38,147550,-7422.89,8510.38,147550,-7267.29,8620.12,147550,-7267.29,8620.12,147550,-7102.79,8715.99,147550,-7102.79,8715.99,147550,-1067.46,11891.77,147550,-1067.46,11891.77,147550,-908.79,11967.33,147550,-908.79,11967.33,147550,-744.6,12029.98,147550,-744.6,12029.98,147550,-575.93,12079.33,147550,-575.93,12079.33,147550,-403.85,12115.06,147550,-403.85,12115.06,147550,-229.48,12136.94,147550,-229.48,12136.94,147550,-53.91,12144.83,147550,-53.91,12144.83,147550,121.72,12138.68,147550,121.72,12138.68,147550,296.31,12118.53,147550,296.31,12118.53,147550,18226.78,9319.6,147550,18226.78,9319.6,147550,19020.21,9160.62,147550,19020.21,9160.62,147550,19797.09,8934.21,147550,19797.09,8934.21,147550,20551.71,8642.06,147550,20551.71,8642.06,147550,21278.51,8286.3,147550,21278.51,8286.3,147550,21972.14,7869.56,147550,21972.14,7869.56,147550,22627.5,7394.9,147550,22627.5,7394.9,147550,23239.77,6865.81,147550,23239.77,6865.81,147550,23804.43,6286.2,147550,23804.43,6286.2,147550,24317.34,5660.32,147550,24317.34,5660.32,147550,24774.72,4992.78,147550,24774.72,4992.78,147550,25173.2,4288.5,147550,25173.2,4288.5,147550,25509.85,3552.65,147550,25509.85,3552.65,147550,25782.2,2790.66,147550,25782.2,2790.66,147550,25988.23,2008.13,147550,25988.23,2008.13,147550,26126.43,1210.82,147550,26126.43,1210.82,147550,26195.78,404.6,147550,26195.78,404.6,147550,26195.78,-404.6,147550,26195.78,-404.6,147550,26126.43,-1210.82,147550,26126.43,-1210.82,147550,25988.23,-2008.13,147550,25988.23,-2008.13,147550,25782.2,-2790.66,147550,25782.2,-2790.66,147550,25509.85,-3552.65,147550,25509.85,-3552.65,147550,25173.2,-4288.5,147550,25173.2,-4288.5,147550,24774.72,-4992.78,147550,24774.72,-4992.78,147550,24317.34,-5660.32,147550,24317.34,-5660.32,147550,23804.43,-6286.2,147550,23804.43,-6286.2,147550,23239.77,-6865.81,147550,23239.77,-6865.81,147550,22627.5,-7394.9,147550,22627.5,-7394.9,147550,21972.14,-7869.56,147550,21972.14,-7869.56,147550,21278.51,-8286.3,147550,21278.51,-8286.3,147550,20551.71,-8642.06,147550,20551.71,-8642.06,147550,19797.09,-8934.21,147550,19797.09,-8934.21,147550,19020.21,-9160.62,147550,19020.21,-9160.62,147550,18226.78,-9319.6,147550,-8015.71,1.95,147460,-8276.65,6683.22,147460,-8276.65,6683.22,147460,-8275.84,6873.62,147460,-8275.84,6873.62,147460,-8258.57,7063.23,147460,-8258.57,7063.23,147460,-8224.97,7250.65,147460,-8224.97,7250.65,147460,-8175.29,7434.45,147460,-8175.29,7434.45,147460,-8109.91,7613.27,147460,-8109.91,7613.27,147460,-8029.31,7785.77,147460,-8029.31,7785.77,147460,-7934.09,7950.65,147460,-7934.09,7950.65,147460,-7824.98,8106.69,147460,-7824.98,8106.69,147460,-7702.78,8252.7,147460,-7702.78,8252.7,147460,-7568.42,8387.6,147460,-7568.42,8387.6,147460,-7422.89,8510.38,147460,-7422.89,8510.38,147460,-7267.29,8620.12,147460,-7267.29,8620.12,147460,-7102.79,8715.99,147460,-7102.79,8715.99,147460,-1067.46,11891.77,147460,-1067.46,11891.77,147460,-908.79,11967.33,147460,-908.79,11967.33,147460,-744.6,12029.98,147460,-744.6,12029.98,147460,-575.93,12079.33,147460,-575.93,12079.33,147460,-403.85,12115.06,147460,-403.85,12115.06,147460,-229.48,12136.94,147460,-229.48,12136.94,147460,-53.91,12144.83,147460,-53.91,12144.83,147460,121.72,12138.68,147460,121.72,12138.68,147460,296.31,12118.53,147460,296.31,12118.53,147460,18226.78,9319.6,147460,18226.78,9319.6,147460,19020.21,9160.62,147460,19020.21,9160.62,147460,19797.09,8934.21,147460,19797.09,8934.21,147460,20551.71,8642.06,147460,20551.71,8642.06,147460,21278.51,8286.3,147460,21278.51,8286.3,147460,21972.14,7869.56,147460,21972.14,7869.56,147460,22627.5,7394.9,147460,22627.5,7394.9,147460,23239.77,6865.81,147460,23239.77,6865.81,147460,23804.43,6286.2,147460,23804.43,6286.2,147460,24317.34,5660.32,147460,24317.34,5660.32,147460,24774.72,4992.78,147460,24774.72,4992.78,147460,25173.2,4288.5,147460,25173.2,4288.5,147460,25509.85,3552.65,147460,25509.85,3552.65,147460,25782.2,2790.66,147460,25782.2,2790.66,147460,25988.23,2008.13,147460,25988.23,2008.13,147460,26126.43,1210.82,147460,26126.43,1210.82,147460,26195.78,404.6,147460,26195.78,404.6,147460,26195.78,-404.6,147460,26195.78,-404.6,147460,26126.43,-1210.82,147460,26126.43,-1210.82,147460,25988.23,-2008.13,147460,25988.23,-2008.13,147460,25782.2,-2790.66,147460,25782.2,-2790.66,147460,25509.85,-3552.65,147460,25509.85,-3552.65,147460,25173.2,-4288.5,147460,25173.2,-4288.5,147460,24774.72,-4992.78,147460,24774.72,-4992.78,147460,24317.34,-5660.32,147460,24317.34,-5660.32,147460,23804.43,-6286.2,147460,23804.43,-6286.2,147460,23239.77,-6865.81,147460,23239.77,-6865.81,147460,22627.5,-7394.9,147460,22627.5,-7394.9,147460,21972.14,-7869.56,147460,21972.14,-7869.56,147460,21278.51,-8286.3,147460,21278.51,-8286.3,147460,20551.71,-8642.06,147460,20551.71,-8642.06,147460,19797.09,-8934.21,147460,19797.09,-8934.21,147460,19020.21,-9160.62,147460,19020.21,-9160.62,147460,18226.78,-9319.6,147460,-7790.88,10.73,147405,-8051.82,6692,147405,-8051.82,6692,147405,-8051.09,6862.92,147405,-8051.09,6862.92,147405,-8035.59,7033.15,147405,-8035.59,7033.15,147405,-8005.43,7201.39,147405,-8005.43,7201.39,147405,-7960.83,7366.4,147405,-7960.83,7366.4,147405,-7902.13,7526.93,147405,-7902.13,7526.93,147405,-7829.78,7681.79,147405,-7829.78,7681.79,147405,-7744.3,7829.81,147405,-7744.3,7829.81,147405,-7646.34,7969.89,147405,-7646.34,7969.89,147405,-7536.64,8100.97,147405,-7536.64,8100.97,147405,-7416.02,8222.07,147405,-7416.02,8222.07,147405,-7285.38,8332.29,147405,-7285.38,8332.29,147405,-7145.69,8430.81,147405,-7145.69,8430.81,147405,-6998.01,8516.87,147405,-6998.01,8516.87,147405,-962.69,11692.65,147405,-962.69,11692.65,147405,-820.25,11760.48,147405,-820.25,11760.48,147405,-672.85,11816.73,147405,-672.85,11816.73,147405,-521.42,11861.03,147405,-521.42,11861.03,147405,-366.95,11893.1,147405,-366.95,11893.1,147405,-210.41,11912.75,147405,-210.41,11912.75,147405,-52.8,11919.83,147405,-52.8,11919.83,147405,104.88,11914.31,147405,104.88,11914.31,147405,261.61,11896.22,147405,261.61,11896.22,147405,18192.08,9097.29,147405,18192.08,9097.29,147405,18966.58,8942.1,147405,18966.58,8942.1,147405,19724.93,8721.1,147405,19724.93,8721.1,147405,20461.55,8435.91,147405,20461.55,8435.91,147405,21171.01,8088.64,147405,21171.01,8088.64,147405,21848.1,7681.84,147405,21848.1,7681.84,147405,22487.83,7218.5,147405,22487.83,7218.5,147405,23085.49,6702.04,147405,23085.49,6702.04,147405,23636.68,6136.25,147405,23636.68,6136.25,147405,24137.36,5525.3,147405,24137.36,5525.3,147405,24583.83,4873.68,147405,24583.83,4873.68,147405,24972.8,4186.2,147405,24972.8,4186.2,147405,25301.42,3467.91,147405,25301.42,3467.91,147405,25567.27,2724.09,147405,25567.27,2724.09,147405,25768.38,1960.23,147405,25768.38,1960.23,147405,25903.29,1181.94,147405,25903.29,1181.94,147405,25970.99,394.95,147405,25970.99,394.95,147405,25970.99,-394.95,147405,25970.99,-394.95,147405,25903.29,-1181.94,147405,25903.29,-1181.94,147405,25768.38,-1960.23,147405,25768.38,-1960.23,147405,25567.27,-2724.09,147405,25567.27,-2724.09,147405,25301.42,-3467.91,147405,25301.42,-3467.91,147405,24972.8,-4186.2,147405,24972.8,-4186.2,147405,24583.83,-4873.68,147405,24583.83,-4873.68,147405,24137.36,-5525.3,147405,24137.36,-5525.3,147405,23636.68,-6136.25,147405,23636.68,-6136.25,147405,23085.49,-6702.04,147405,23085.49,-6702.04,147405,22487.83,-7218.5,147405,22487.83,-7218.5,147405,21848.1,-7681.84,147405,21848.1,-7681.84,147405,21171.01,-8088.64,147405,21171.01,-8088.64,147405,20461.55,-8435.91,147405,20461.55,-8435.91,147405,19724.93,-8721.1,147405,19724.93,-8721.1,147405,18966.58,-8942.1,147405,18966.58,-8942.1,147405,18192.08,-9097.29,147405,-8276.65,6683.22,147460,-7826.99,6700.78,147350,-7102.79,8715.99,147460,-6893.24,8317.76,147350,-1067.46,11891.77,147460,-857.92,11493.53,147350,296.31,12118.53,147460,226.9,11673.91,147350,18226.78,9319.6,147460,18157.38,8874.99,147350,26204.47,0,147460,25754.47,0,147350,-7790.88,10.73,147550,-8051.82,6692,147550,-8051.82,6692,147550,-8051.09,6862.92,147550,-8051.09,6862.92,147550,-8035.59,7033.15,147550,-8035.59,7033.15,147550,-8005.43,7201.39,147550,-8005.43,7201.39,147550,-7960.83,7366.4,147550,-7960.83,7366.4,147550,-7902.13,7526.93,147550,-7902.13,7526.93,147550,-7829.78,7681.79,147550,-7829.78,7681.79,147550,-7744.3,7829.81,147550,-7744.3,7829.81,147550,-7646.34,7969.89,147550,-7646.34,7969.89,147550,-7536.64,8100.97,147550,-7536.64,8100.97,147550,-7416.02,8222.07,147550,-7416.02,8222.07,147550,-7285.38,8332.29,147550,-7285.38,8332.29,147550,-7145.69,8430.81,147550,-7145.69,8430.81,147550,-6998.01,8516.87,147550,-6998.01,8516.87,147550,-962.69,11692.65,147550,-962.69,11692.65,147550,-820.25,11760.48,147550,-820.25,11760.48,147550,-672.85,11816.73,147550,-672.85,11816.73,147550,-521.42,11861.03,147550,-521.42,11861.03,147550,-366.95,11893.1,147550,-366.95,11893.1,147550,-210.41,11912.75,147550,-210.41,11912.75,147550,-52.8,11919.83,147550,-52.8,11919.83,147550,104.88,11914.31,147550,104.88,11914.31,147550,261.61,11896.22,147550,261.61,11896.22,147550,18192.08,9097.29,147550,18192.08,9097.29,147550,18966.58,8942.1,147550,18966.58,8942.1,147550,19724.93,8721.1,147550,19724.93,8721.1,147550,20461.55,8435.91,147550,20461.55,8435.91,147550,21171.01,8088.64,147550,21171.01,8088.64,147550,21848.1,7681.84,147550,21848.1,7681.84,147550,22487.83,7218.5,147550,22487.83,7218.5,147550,23085.49,6702.04,147550,23085.49,6702.04,147550,23636.68,6136.25,147550,23636.68,6136.25,147550,24137.36,5525.3,147550,24137.36,5525.3,147550,24583.83,4873.68,147550,24583.83,4873.68,147550,24972.8,4186.2,147550,24972.8,4186.2,147550,25301.42,3467.91,147550,25301.42,3467.91,147550,25567.27,2724.09,147550,25567.27,2724.09,147550,25768.38,1960.23,147550,25768.38,1960.23,147550,25903.29,1181.94,147550,25903.29,1181.94,147550,25970.99,394.95,147550,25970.99,394.95,147550,25970.99,-394.95,147550,25970.99,-394.95,147550,25903.29,-1181.94,147550,25903.29,-1181.94,147550,25768.38,-1960.23,147550,25768.38,-1960.23,147550,25567.27,-2724.09,147550,25567.27,-2724.09,147550,25301.42,-3467.91,147550,25301.42,-3467.91,147550,24972.8,-4186.2,147550,24972.8,-4186.2,147550,24583.83,-4873.68,147550,24583.83,-4873.68,147550,24137.36,-5525.3,147550,24137.36,-5525.3,147550,23636.68,-6136.25,147550,23636.68,-6136.25,147550,23085.49,-6702.04,147550,23085.49,-6702.04,147550,22487.83,-7218.5,147550,22487.83,-7218.5,147550,21848.1,-7681.84,147550,21848.1,-7681.84,147550,21171.01,-8088.64,147550,21171.01,-8088.64,147550,20461.55,-8435.91,147550,20461.55,-8435.91,147550,19724.93,-8721.1,147550,19724.93,-8721.1,147550,18966.58,-8942.1,147550,18966.58,-8942.1,147550,18192.08,-9097.29,147550,-7826.99,6700.78,147550,-8276.65,6683.22,147550,-6893.24,8317.76,147550,-7102.79,8715.99,147550,-857.92,11493.53,147550,-1067.46,11891.77,147550,226.9,11673.91,147550,296.31,12118.53,147550,18157.38,8874.99,147550,18226.78,9319.6,147550,25754.47,0,147550,26204.47,0,147550,-8015.71,1.95,147505,-8276.65,6683.22,147505,-8276.65,6683.22,147505,-8275.84,6873.62,147505,-8275.84,6873.62,147505,-8258.57,7063.23,147505,-8258.57,7063.23,147505,-8224.97,7250.65,147505,-8224.97,7250.65,147505,-8175.29,7434.45,147505,-8175.29,7434.45,147505,-8109.91,7613.27,147505,-8109.91,7613.27,147505,-8029.31,7785.77,147505,-8029.31,7785.77,147505,-7934.09,7950.65,147505,-7934.09,7950.65,147505,-7824.98,8106.69,147505,-7824.98,8106.69,147505,-7702.78,8252.7,147505,-7702.78,8252.7,147505,-7568.42,8387.6,147505,-7568.42,8387.6,147505,-7422.89,8510.38,147505,-7422.89,8510.38,147505,-7267.29,8620.12,147505,-7267.29,8620.12,147505,-7102.79,8715.99,147505,-7102.79,8715.99,147505,-1067.46,11891.77,147505,-1067.46,11891.77,147505,-908.79,11967.33,147505,-908.79,11967.33,147505,-744.6,12029.98,147505,-744.6,12029.98,147505,-575.93,12079.33,147505,-575.93,12079.33,147505,-403.85,12115.06,147505,-403.85,12115.06,147505,-229.48,12136.94,147505,-229.48,12136.94,147505,-53.91,12144.83,147505,-53.91,12144.83,147505,121.72,12138.68,147505,121.72,12138.68,147505,296.31,12118.53,147505,296.31,12118.53,147505,18226.78,9319.6,147505,18226.78,9319.6,147505,19020.21,9160.62,147505,19020.21,9160.62,147505,19797.09,8934.21,147505,19797.09,8934.21,147505,20551.71,8642.06,147505,20551.71,8642.06,147505,21278.51,8286.3,147505,21278.51,8286.3,147505,21972.14,7869.56,147505,21972.14,7869.56,147505,22627.5,7394.9,147505,22627.5,7394.9,147505,23239.77,6865.81,147505,23239.77,6865.81,147505,23804.43,6286.2,147505,23804.43,6286.2,147505,24317.34,5660.32,147505,24317.34,5660.32,147505,24774.72,4992.78,147505,24774.72,4992.78,147505,25173.2,4288.5,147505,25173.2,4288.5,147505,25509.85,3552.65,147505,25509.85,3552.65,147505,25782.2,2790.66,147505,25782.2,2790.66,147505,25988.23,2008.13,147505,25988.23,2008.13,147505,26126.43,1210.82,147505,26126.43,1210.82,147505,26195.78,404.6,147505,26195.78,404.6,147505,26195.78,-404.6,147505,26195.78,-404.6,147505,26126.43,-1210.82,147505,26126.43,-1210.82,147505,25988.23,-2008.13,147505,25988.23,-2008.13,147505,25782.2,-2790.66,147505,25782.2,-2790.66,147505,25509.85,-3552.65,147505,25509.85,-3552.65,147505,25173.2,-4288.5,147505,25173.2,-4288.5,147505,24774.72,-4992.78,147505,24774.72,-4992.78,147505,24317.34,-5660.32,147505,24317.34,-5660.32,147505,23804.43,-6286.2,147505,23804.43,-6286.2,147505,23239.77,-6865.81,147505,23239.77,-6865.81,147505,22627.5,-7394.9,147505,22627.5,-7394.9,147505,21972.14,-7869.56,147505,21972.14,-7869.56,147505,21278.51,-8286.3,147505,21278.51,-8286.3,147505,20551.71,-8642.06,147505,20551.71,-8642.06,147505,19797.09,-8934.21,147505,19797.09,-8934.21,147505,19020.21,-9160.62,147505,19020.21,-9160.62,147505,18226.78,-9319.6,147505,-8276.65,6683.22,147550,-8276.65,6683.22,147460,-7102.79,8715.99,147550,-7102.79,8715.99,147460,-1067.46,11891.77,147550,-1067.46,11891.77,147460,296.31,12118.53,147550,296.31,12118.53,147460,18226.78,9319.6,147550,18226.78,9319.6,147460,26204.47,0,147550,26204.47,0,147460,-6476.44,16.85,150550,-6697.31,6568.51,150550,-6697.31,6568.51,150550,-6695.94,6718.29,150550,-6695.94,6718.29,150550,-6681.77,6867.41,150550,-6681.77,6867.41,150550,-6654.91,7014.77,150550,-6654.91,7014.77,150550,-6615.53,7159.29,150550,-6615.53,7159.29,150550,-6563.95,7299.92,150550,-6563.95,7299.92,150550,-6500.53,7435.62,150550,-6500.53,7435.62,150550,-6425.73,7565.39,150550,-6425.73,7565.39,150550,-6340.11,7688.3,150550,-6340.11,7688.3,150550,-6244.3,7803.44,150550,-6244.3,7803.44,150550,-6138.99,7909.95,150550,-6138.99,7909.95,150550,-6024.96,8007.08,150550,-6024.96,8007.08,150550,-5903.04,8094.1,150550,-5903.04,8094.1,150550,-5774.12,8170.37,150550,-5774.12,8170.37,150550,-345.81,11075.81,150550,-345.81,11075.81,150550,-220.6,11136.56,150550,-220.6,11136.56,150550,-90.96,11187.16,150550,-90.96,11187.16,150550,42.29,11227.29,150550,42.29,11227.29,150550,178.31,11256.72,150550,178.31,11256.72,150550,316.23,11275.24,150550,316.23,11275.24,150550,455.2,11282.74,150550,455.2,11282.74,150550,594.32,11279.18,150550,594.32,11279.18,150550,732.71,11264.58,150550,732.71,11264.58,150550,17880.02,8762.21,150550,17880.02,8762.21,150550,18631.52,8619.15,150550,18631.52,8619.15,150550,19367.86,8411.76,150550,19367.86,8411.76,150550,20083.55,8141.59,150550,20083.55,8141.59,150550,20773.26,7810.66,150550,20773.26,7810.66,150550,21431.82,7421.43,150550,21431.82,7421.43,150550,22054.34,6976.82,150550,22054.34,6976.82,150550,22636.16,6480.14,150550,22636.16,6480.14,150550,23172.94,5935.09,150550,23172.94,5935.09,150550,23660.67,5345.75,150550,23660.67,5345.75,150550,24095.72,4716.51,150550,24095.72,4716.51,150550,24474.83,4052.07,150550,24474.83,4052.07,150550,24795.19,3357.38,150550,24795.19,3357.38,150550,25054.39,2637.65,150550,25054.39,2637.65,150550,25250.5,1898.22,150550,25250.5,1898.22,150550,25382.06,1144.63,150550,25382.06,1144.63,150550,25448.08,382.49,150550,25448.08,382.49,150550,25448.08,-382.49,150550,25448.08,-382.49,150550,25382.06,-1144.63,150550,25382.06,-1144.63,150550,25250.5,-1898.22,150550,25250.5,-1898.22,150550,25054.39,-2637.65,150550,25054.39,-2637.65,150550,24795.19,-3357.38,150550,24795.19,-3357.38,150550,24474.83,-4052.07,150550,24474.83,-4052.07,150550,24095.72,-4716.51,150550,24095.72,-4716.51,150550,23660.67,-5345.75,150550,23660.67,-5345.75,150550,23172.94,-5935.09,150550,23172.94,-5935.09,150550,22636.16,-6480.14,150550,22636.16,-6480.14,150550,22054.34,-6976.82,150550,22054.34,-6976.82,150550,21431.82,-7421.43,150550,21431.82,-7421.43,150550,20773.26,-7810.66,150550,20773.26,-7810.66,150550,20083.55,-8141.59,150550,20083.55,-8141.59,150550,19367.86,-8411.76,150550,19367.86,-8411.76,150550,18631.52,-8619.15,150550,18631.52,-8619.15,150550,17880.02,-8762.21,150550,17880.02,-8762.21,150550,17945.01,-9207.49,150550,17880.02,-8762.21,150350,18631.52,-8619.15,150350,18631.52,-8619.15,150350,19367.86,-8411.76,150350,19367.86,-8411.76,150350,20083.55,-8141.59,150350,20083.55,-8141.59,150350,20773.26,-7810.66,150350,20773.26,-7810.66,150350,21431.82,-7421.43,150350,21431.82,-7421.43,150350,22054.34,-6976.82,150350,22054.34,-6976.82,150350,22636.16,-6480.14,150350,22636.16,-6480.14,150350,23172.94,-5935.09,150350,23172.94,-5935.09,150350,23660.67,-5345.75,150350,23660.67,-5345.75,150350,24095.72,-4716.51,150350,24095.72,-4716.51,150350,24474.83,-4052.07,150350,24474.83,-4052.07,150350,24795.19,-3357.38,150350,24795.19,-3357.38,150350,25054.39,-2637.65,150350,25054.39,-2637.65,150350,25250.5,-1898.22,150350,25250.5,-1898.22,150350,25382.06,-1144.63,150350,25382.06,-1144.63,150350,25448.08,-382.49,150350,25448.08,-382.49,150350,25448.08,382.49,150350,25448.08,382.49,150350,25382.06,1144.63,150350,25382.06,1144.63,150350,25250.5,1898.22,150350,25250.5,1898.22,150350,25054.39,2637.65,150350,25054.39,2637.65,150350,24795.19,3357.38,150350,24795.19,3357.38,150350,24474.83,4052.07,150350,24474.83,4052.07,150350,24095.72,4716.51,150350,24095.72,4716.51,150350,23660.67,5345.75,150350,23660.67,5345.75,150350,23172.94,5935.09,150350,23172.94,5935.09,150350,22636.16,6480.14,150350,22636.16,6480.14,150350,22054.34,6976.82,150350,22054.34,6976.82,150350,21431.82,7421.43,150350,21431.82,7421.43,150350,20773.26,7810.66,150350,20773.26,7810.66,150350,20083.55,8141.59,150350,20083.55,8141.59,150350,19367.86,8411.76,150350,19367.86,8411.76,150350,18631.52,8619.15,150350,18631.52,8619.15,150350,17880.02,8762.21,150350,17880.02,8762.21,150350,732.71,11264.58,150350,732.71,11264.58,150350,594.32,11279.18,150350,594.32,11279.18,150350,455.2,11282.74,150350,455.2,11282.74,150350,316.23,11275.24,150350,316.23,11275.24,150350,178.31,11256.72,150350,178.31,11256.72,150350,42.29,11227.29,150350,42.29,11227.29,150350,-90.96,11187.16,150350,-90.96,11187.16,150350,-220.6,11136.56,150350,-220.6,11136.56,150350,-345.81,11075.81,150350,-345.81,11075.81,150350,-5774.12,8170.37,150350,-5774.12,8170.37,150350,-5903.04,8094.1,150350,-5903.04,8094.1,150350,-6024.96,8007.08,150350,-6024.96,8007.08,150350,-6138.99,7909.95,150350,-6138.99,7909.95,150350,-6244.3,7803.44,150350,-6244.3,7803.44,150350,-6340.11,7688.3,150350,-6340.11,7688.3,150350,-6425.73,7565.39,150350,-6425.73,7565.39,150350,-6500.53,7435.62,150350,-6500.53,7435.62,150350,-6563.95,7299.92,150350,-6563.95,7299.92,150350,-6615.53,7159.29,150350,-6615.53,7159.29,150350,-6654.91,7014.77,150350,-6654.91,7014.77,150350,-6681.77,6867.41,150350,-6681.77,6867.41,150350,-6695.94,6718.29,150350,-6695.94,6718.29,150350,-6697.31,6568.51,150350,-6697.31,6568.51,150350,-6476.44,16.85,150350,-6476.44,16.85,150350,-6926.19,1.68,150460,17945.01,-9207.49,150460,17880.02,-8762.21,150350,17945.01,-9207.49,150550,17945.01,-9207.49,150460,-6926.19,1.68,150550,-6476.44,16.85,150550,-6926.19,1.68,150460,-6926.19,1.68,150550,-6926.19,1.68,150550,-7147.05,6553.35,150550,-7147.05,6553.35,150550,-7145.34,6741.65,150550,-7145.34,6741.65,150550,-7127.52,6929.11,150550,-7127.52,6929.11,150550,-7093.75,7114.36,150550,-7093.75,7114.36,150550,-7044.25,7296.04,150550,-7044.25,7296.04,150550,-6979.4,7472.83,150550,-6979.4,7472.83,150550,-6899.67,7643.42,150550,-6899.67,7643.42,150550,-6805.64,7806.57,150550,-6805.64,7806.57,150550,-6698.01,7961.08,150550,-6698.01,7961.08,150550,-6577.56,8105.83,150550,-6577.56,8105.83,150550,-6445.17,8239.74,150550,-6445.17,8239.74,150550,-6301.81,8361.83,150550,-6301.81,8361.83,150550,-6148.54,8471.23,150550,-6148.54,8471.23,150550,-5986.47,8567.11,150550,-5986.47,8567.11,150550,-558.17,11472.56,150550,-558.17,11472.56,150550,-400.76,11548.92,150550,-400.76,11548.92,150550,-237.78,11612.53,150550,-237.78,11612.53,150550,-70.27,11662.99,150550,-70.27,11662.99,150550,100.73,11699.98,150550,100.73,11699.98,150550,274.12,11723.27,150550,274.12,11723.27,150550,448.82,11732.7,150550,448.82,11732.7,150550,623.71,11728.22,150550,623.71,11728.22,150550,797.7,11709.86,150550,797.7,11709.86,150550,17945.01,9207.49,150550,17945.01,9207.49,150550,18734.69,9057.16,150550,18734.69,9057.16,150550,19508.45,8839.23,150550,19508.45,8839.23,150550,20260.51,8555.34,150550,20260.51,8555.34,150550,20985.27,8207.59,150550,20985.27,8207.59,150550,21677.3,7798.58,150550,21677.3,7798.58,150550,22331.46,7331.37,150550,22331.46,7331.37,150550,22942.84,6809.45,150550,22942.84,6809.45,150550,23506.9,6236.7,150550,23506.9,6236.7,150550,24019.42,5617.41,150550,24019.42,5617.41,150550,24476.58,4956.19,150550,24476.58,4956.19,150550,24874.96,4257.99,150550,24874.96,4257.99,150550,25211.59,3528,150550,25211.59,3528,150550,25483.96,2771.69,150550,25483.96,2771.69,150550,25690.03,1994.69,150550,25690.03,1994.69,150550,25828.28,1202.8,150550,25828.28,1202.8,150550,25897.66,401.93,150550,25897.66,401.93,150550,25897.66,-401.93,150550,25897.66,-401.93,150550,25828.28,-1202.8,150550,25828.28,-1202.8,150550,25690.03,-1994.69,150550,25690.03,-1994.69,150550,25483.96,-2771.69,150550,25483.96,-2771.69,150550,25211.59,-3528,150550,25211.59,-3528,150550,24874.96,-4257.99,150550,24874.96,-4257.99,150550,24476.58,-4956.19,150550,24476.58,-4956.19,150550,24019.42,-5617.41,150550,24019.42,-5617.41,150550,23506.9,-6236.7,150550,23506.9,-6236.7,150550,22942.84,-6809.45,150550,22942.84,-6809.45,150550,22331.46,-7331.37,150550,22331.46,-7331.37,150550,21677.3,-7798.58,150550,21677.3,-7798.58,150550,20985.27,-8207.59,150550,20985.27,-8207.59,150550,20260.51,-8555.34,150550,20260.51,-8555.34,150550,19508.45,-8839.23,150550,19508.45,-8839.23,150550,18734.69,-9057.16,150550,18734.69,-9057.16,150550,17945.01,-9207.49,150550,-6926.19,1.68,150460,-7147.05,6553.35,150460,-7147.05,6553.35,150460,-7145.34,6741.65,150460,-7145.34,6741.65,150460,-7127.52,6929.11,150460,-7127.52,6929.11,150460,-7093.75,7114.36,150460,-7093.75,7114.36,150460,-7044.25,7296.04,150460,-7044.25,7296.04,150460,-6979.4,7472.83,150460,-6979.4,7472.83,150460,-6899.67,7643.42,150460,-6899.67,7643.42,150460,-6805.64,7806.57,150460,-6805.64,7806.57,150460,-6698.01,7961.08,150460,-6698.01,7961.08,150460,-6577.56,8105.83,150460,-6577.56,8105.83,150460,-6445.17,8239.74,150460,-6445.17,8239.74,150460,-6301.81,8361.83,150460,-6301.81,8361.83,150460,-6148.54,8471.23,150460,-6148.54,8471.23,150460,-5986.47,8567.11,150460,-5986.47,8567.11,150460,-558.17,11472.56,150460,-558.17,11472.56,150460,-400.76,11548.92,150460,-400.76,11548.92,150460,-237.78,11612.53,150460,-237.78,11612.53,150460,-70.27,11662.99,150460,-70.27,11662.99,150460,100.73,11699.98,150460,100.73,11699.98,150460,274.12,11723.27,150460,274.12,11723.27,150460,448.82,11732.7,150460,448.82,11732.7,150460,623.71,11728.22,150460,623.71,11728.22,150460,797.7,11709.86,150460,797.7,11709.86,150460,17945.01,9207.49,150460,17945.01,9207.49,150460,18734.69,9057.16,150460,18734.69,9057.16,150460,19508.45,8839.23,150460,19508.45,8839.23,150460,20260.51,8555.34,150460,20260.51,8555.34,150460,20985.27,8207.59,150460,20985.27,8207.59,150460,21677.3,7798.58,150460,21677.3,7798.58,150460,22331.46,7331.37,150460,22331.46,7331.37,150460,22942.84,6809.45,150460,22942.84,6809.45,150460,23506.9,6236.7,150460,23506.9,6236.7,150460,24019.42,5617.41,150460,24019.42,5617.41,150460,24476.58,4956.19,150460,24476.58,4956.19,150460,24874.96,4257.99,150460,24874.96,4257.99,150460,25211.59,3528,150460,25211.59,3528,150460,25483.96,2771.69,150460,25483.96,2771.69,150460,25690.03,1994.69,150460,25690.03,1994.69,150460,25828.28,1202.8,150460,25828.28,1202.8,150460,25897.66,401.93,150460,25897.66,401.93,150460,25897.66,-401.93,150460,25897.66,-401.93,150460,25828.28,-1202.8,150460,25828.28,-1202.8,150460,25690.03,-1994.69,150460,25690.03,-1994.69,150460,25483.96,-2771.69,150460,25483.96,-2771.69,150460,25211.59,-3528,150460,25211.59,-3528,150460,24874.96,-4257.99,150460,24874.96,-4257.99,150460,24476.58,-4956.19,150460,24476.58,-4956.19,150460,24019.42,-5617.41,150460,24019.42,-5617.41,150460,23506.9,-6236.7,150460,23506.9,-6236.7,150460,22942.84,-6809.45,150460,22942.84,-6809.45,150460,22331.46,-7331.37,150460,22331.46,-7331.37,150460,21677.3,-7798.58,150460,21677.3,-7798.58,150460,20985.27,-8207.59,150460,20985.27,-8207.59,150460,20260.51,-8555.34,150460,20260.51,-8555.34,150460,19508.45,-8839.23,150460,19508.45,-8839.23,150460,18734.69,-9057.16,150460,18734.69,-9057.16,150460,17945.01,-9207.49,150460,-6701.31,9.27,150405,-6922.18,6560.93,150405,-6922.18,6560.93,150405,-6920.64,6729.97,150405,-6920.64,6729.97,150405,-6904.65,6898.26,150405,-6904.65,6898.26,150405,-6874.33,7064.56,150405,-6874.33,7064.56,150405,-6829.89,7227.67,150405,-6829.89,7227.67,150405,-6771.68,7386.37,150405,-6771.68,7386.37,150405,-6700.1,7539.52,150405,-6700.1,7539.52,150405,-6615.69,7685.98,150405,-6615.69,7685.98,150405,-6519.06,7824.69,150405,-6519.06,7824.69,150405,-6410.93,7954.63,150405,-6410.93,7954.63,150405,-6292.08,8074.85,150405,-6292.08,8074.85,150405,-6163.38,8184.46,150405,-6163.38,8184.46,150405,-6025.79,8282.66,150405,-6025.79,8282.66,150405,-5880.3,8368.74,150405,-5880.3,8368.74,150405,-451.99,11274.19,150405,-451.99,11274.19,150405,-310.68,11342.74,150405,-310.68,11342.74,150405,-164.37,11399.84,150405,-164.37,11399.84,150405,-13.99,11445.14,150405,-13.99,11445.14,150405,139.52,11478.35,150405,139.52,11478.35,150405,295.18,11499.25,150405,295.18,11499.25,150405,452.01,11507.72,150405,452.01,11507.72,150405,609.01,11503.7,150405,609.01,11503.7,150405,765.2,11487.22,150405,765.2,11487.22,150405,17912.52,8984.85,150405,17912.52,8984.85,150405,18683.1,8838.16,150405,18683.1,8838.16,150405,19438.15,8625.5,150405,19438.15,8625.5,150405,20172.03,8348.46,150405,20172.03,8348.46,150405,20879.26,8009.12,150405,20879.26,8009.12,150405,21554.56,7610.01,150405,21554.56,7610.01,150405,22192.9,7154.1,150405,22192.9,7154.1,150405,22789.5,6644.79,150405,22789.5,6644.79,150405,23339.92,6085.9,150405,23339.92,6085.9,150405,23840.05,5481.58,150405,23840.05,5481.58,150405,24286.15,4836.35,150405,24286.15,4836.35,150405,24674.9,4155.03,150405,24674.9,4155.03,150405,25003.39,3442.69,150405,25003.39,3442.69,150405,25269.17,2704.67,150405,25269.17,2704.67,150405,25470.27,1946.45,150405,25470.27,1946.45,150405,25605.17,1173.71,150405,25605.17,1173.71,150405,25672.87,392.21,150405,25672.87,392.21,150405,25672.87,-392.21,150405,25672.87,-392.21,150405,25605.17,-1173.71,150405,25605.17,-1173.71,150405,25470.27,-1946.45,150405,25470.27,-1946.45,150405,25269.17,-2704.67,150405,25269.17,-2704.67,150405,25003.39,-3442.69,150405,25003.39,-3442.69,150405,24674.9,-4155.03,150405,24674.9,-4155.03,150405,24286.15,-4836.35,150405,24286.15,-4836.35,150405,23840.05,-5481.58,150405,23840.05,-5481.58,150405,23339.92,-6085.9,150405,23339.92,-6085.9,150405,22789.5,-6644.79,150405,22789.5,-6644.79,150405,22192.9,-7154.1,150405,22192.9,-7154.1,150405,21554.56,-7610.01,150405,21554.56,-7610.01,150405,20879.26,-8009.12,150405,20879.26,-8009.12,150405,20172.03,-8348.46,150405,20172.03,-8348.46,150405,19438.15,-8625.5,150405,19438.15,-8625.5,150405,18683.1,-8838.16,150405,18683.1,-8838.16,150405,17912.52,-8984.85,150405,-7147.05,6553.35,150460,-6697.31,6568.51,150350,-5986.47,8567.11,150460,-5774.12,8170.37,150350,-558.17,11472.56,150460,-345.81,11075.81,150350,797.7,11709.86,150460,732.71,11264.58,150350,17945.01,9207.49,150460,17880.02,8762.21,150350,25906.35,0,150460,25456.35,0,150350,-6701.31,9.27,150550,-6922.18,6560.93,150550,-6922.18,6560.93,150550,-6920.64,6729.97,150550,-6920.64,6729.97,150550,-6904.65,6898.26,150550,-6904.65,6898.26,150550,-6874.33,7064.56,150550,-6874.33,7064.56,150550,-6829.89,7227.67,150550,-6829.89,7227.67,150550,-6771.68,7386.37,150550,-6771.68,7386.37,150550,-6700.1,7539.52,150550,-6700.1,7539.52,150550,-6615.69,7685.98,150550,-6615.69,7685.98,150550,-6519.06,7824.69,150550,-6519.06,7824.69,150550,-6410.93,7954.63,150550,-6410.93,7954.63,150550,-6292.08,8074.85,150550,-6292.08,8074.85,150550,-6163.38,8184.46,150550,-6163.38,8184.46,150550,-6025.79,8282.66,150550,-6025.79,8282.66,150550,-5880.3,8368.74,150550,-5880.3,8368.74,150550,-451.99,11274.19,150550,-451.99,11274.19,150550,-310.68,11342.74,150550,-310.68,11342.74,150550,-164.37,11399.84,150550,-164.37,11399.84,150550,-13.99,11445.14,150550,-13.99,11445.14,150550,139.52,11478.35,150550,139.52,11478.35,150550,295.18,11499.25,150550,295.18,11499.25,150550,452.01,11507.72,150550,452.01,11507.72,150550,609.01,11503.7,150550,609.01,11503.7,150550,765.2,11487.22,150550,765.2,11487.22,150550,17912.52,8984.85,150550,17912.52,8984.85,150550,18683.1,8838.16,150550,18683.1,8838.16,150550,19438.15,8625.5,150550,19438.15,8625.5,150550,20172.03,8348.46,150550,20172.03,8348.46,150550,20879.26,8009.12,150550,20879.26,8009.12,150550,21554.56,7610.01,150550,21554.56,7610.01,150550,22192.9,7154.1,150550,22192.9,7154.1,150550,22789.5,6644.79,150550,22789.5,6644.79,150550,23339.92,6085.9,150550,23339.92,6085.9,150550,23840.05,5481.58,150550,23840.05,5481.58,150550,24286.15,4836.35,150550,24286.15,4836.35,150550,24674.9,4155.03,150550,24674.9,4155.03,150550,25003.39,3442.69,150550,25003.39,3442.69,150550,25269.17,2704.67,150550,25269.17,2704.67,150550,25470.27,1946.45,150550,25470.27,1946.45,150550,25605.17,1173.71,150550,25605.17,1173.71,150550,25672.87,392.21,150550,25672.87,392.21,150550,25672.87,-392.21,150550,25672.87,-392.21,150550,25605.17,-1173.71,150550,25605.17,-1173.71,150550,25470.27,-1946.45,150550,25470.27,-1946.45,150550,25269.17,-2704.67,150550,25269.17,-2704.67,150550,25003.39,-3442.69,150550,25003.39,-3442.69,150550,24674.9,-4155.03,150550,24674.9,-4155.03,150550,24286.15,-4836.35,150550,24286.15,-4836.35,150550,23840.05,-5481.58,150550,23840.05,-5481.58,150550,23339.92,-6085.9,150550,23339.92,-6085.9,150550,22789.5,-6644.79,150550,22789.5,-6644.79,150550,22192.9,-7154.1,150550,22192.9,-7154.1,150550,21554.56,-7610.01,150550,21554.56,-7610.01,150550,20879.26,-8009.12,150550,20879.26,-8009.12,150550,20172.03,-8348.46,150550,20172.03,-8348.46,150550,19438.15,-8625.5,150550,19438.15,-8625.5,150550,18683.1,-8838.16,150550,18683.1,-8838.16,150550,17912.52,-8984.85,150550,-6697.31,6568.51,150550,-7147.05,6553.35,150550,-5774.12,8170.37,150550,-5986.47,8567.11,150550,-345.81,11075.81,150550,-558.17,11472.56,150550,732.71,11264.58,150550,797.7,11709.86,150550,17880.02,8762.21,150550,17945.01,9207.49,150550,25456.35,0,150550,25906.35,0,150550,-6926.19,1.68,150505,-7147.05,6553.35,150505,-7147.05,6553.35,150505,-7145.34,6741.65,150505,-7145.34,6741.65,150505,-7127.52,6929.11,150505,-7127.52,6929.11,150505,-7093.75,7114.36,150505,-7093.75,7114.36,150505,-7044.25,7296.04,150505,-7044.25,7296.04,150505,-6979.4,7472.83,150505,-6979.4,7472.83,150505,-6899.67,7643.42,150505,-6899.67,7643.42,150505,-6805.64,7806.57,150505,-6805.64,7806.57,150505,-6698.01,7961.08,150505,-6698.01,7961.08,150505,-6577.56,8105.83,150505,-6577.56,8105.83,150505,-6445.17,8239.74,150505,-6445.17,8239.74,150505,-6301.81,8361.83,150505,-6301.81,8361.83,150505,-6148.54,8471.23,150505,-6148.54,8471.23,150505,-5986.47,8567.11,150505,-5986.47,8567.11,150505,-558.17,11472.56,150505,-558.17,11472.56,150505,-400.76,11548.92,150505,-400.76,11548.92,150505,-237.78,11612.53,150505,-237.78,11612.53,150505,-70.27,11662.99,150505,-70.27,11662.99,150505,100.73,11699.98,150505,100.73,11699.98,150505,274.12,11723.27,150505,274.12,11723.27,150505,448.82,11732.7,150505,448.82,11732.7,150505,623.71,11728.22,150505,623.71,11728.22,150505,797.7,11709.86,150505,797.7,11709.86,150505,17945.01,9207.49,150505,17945.01,9207.49,150505,18734.69,9057.16,150505,18734.69,9057.16,150505,19508.45,8839.23,150505,19508.45,8839.23,150505,20260.51,8555.34,150505,20260.51,8555.34,150505,20985.27,8207.59,150505,20985.27,8207.59,150505,21677.3,7798.58,150505,21677.3,7798.58,150505,22331.46,7331.37,150505,22331.46,7331.37,150505,22942.84,6809.45,150505,22942.84,6809.45,150505,23506.9,6236.7,150505,23506.9,6236.7,150505,24019.42,5617.41,150505,24019.42,5617.41,150505,24476.58,4956.19,150505,24476.58,4956.19,150505,24874.96,4257.99,150505,24874.96,4257.99,150505,25211.59,3528,150505,25211.59,3528,150505,25483.96,2771.69,150505,25483.96,2771.69,150505,25690.03,1994.69,150505,25690.03,1994.69,150505,25828.28,1202.8,150505,25828.28,1202.8,150505,25897.66,401.93,150505,25897.66,401.93,150505,25897.66,-401.93,150505,25897.66,-401.93,150505,25828.28,-1202.8,150505,25828.28,-1202.8,150505,25690.03,-1994.69,150505,25690.03,-1994.69,150505,25483.96,-2771.69,150505,25483.96,-2771.69,150505,25211.59,-3528,150505,25211.59,-3528,150505,24874.96,-4257.99,150505,24874.96,-4257.99,150505,24476.58,-4956.19,150505,24476.58,-4956.19,150505,24019.42,-5617.41,150505,24019.42,-5617.41,150505,23506.9,-6236.7,150505,23506.9,-6236.7,150505,22942.84,-6809.45,150505,22942.84,-6809.45,150505,22331.46,-7331.37,150505,22331.46,-7331.37,150505,21677.3,-7798.58,150505,21677.3,-7798.58,150505,20985.27,-8207.59,150505,20985.27,-8207.59,150505,20260.51,-8555.34,150505,20260.51,-8555.34,150505,19508.45,-8839.23,150505,19508.45,-8839.23,150505,18734.69,-9057.16,150505,18734.69,-9057.16,150505,17945.01,-9207.49,150505,-7147.05,6553.35,150550,-7147.05,6553.35,150460,-5986.47,8567.11,150550,-5986.47,8567.11,150460,-558.17,11472.56,150550,-558.17,11472.56,150460,797.7,11709.86,150550,797.7,11709.86,150460,17945.01,9207.49,150550,17945.01,9207.49,150460,25906.35,0,150550,25906.35,0,150460,-5386.84,14.07,153550,-5567.58,6436.64,153550,-5567.58,6436.64,153550,-5565.49,6584.49,153550,-5565.49,6584.49,153550,-5550.93,6731.63,153550,-5550.93,6731.63,153550,-5524,6877.02,153550,-5524,6877.02,153550,-5484.89,7019.62,153550,-5484.89,7019.62,153550,-5433.89,7158.41,153550,-5433.89,7158.41,153550,-5371.35,7292.39,153550,-5371.35,7292.39,153550,-5297.72,7420.62,153550,-5297.72,7420.62,153550,-5213.53,7542.17,153550,-5213.53,7542.17,153550,-5119.38,7656.18,153550,-5119.38,7656.18,153550,-5015.94,7761.84,153550,-5015.94,7761.84,153550,-4903.95,7858.39,153550,-4903.95,7858.39,153550,-4784.21,7945.14,153550,-4784.21,7945.14,153550,-4657.57,8021.47,153550,-4657.57,8021.47,153550,163.72,10656.59,153550,163.72,10656.59,153550,288.03,10718.27,153550,288.03,10718.27,153550,416.85,10769.9,153550,416.85,10769.9,153550,549.35,10811.16,153550,549.35,10811.16,153550,684.7,10841.79,153550,684.7,10841.79,153550,822.05,10861.61,153550,822.05,10861.61,153550,960.54,10870.47,153550,960.54,10870.47,153550,1099.3,10868.34,153550,1099.3,10868.34,153550,1237.45,10855.21,153550,1237.45,10855.21,153550,17590.12,8644.6,153550,17590.12,8644.6,153550,18337.31,8510.25,153550,18337.31,8510.25,153550,19069.99,8311.45,153550,19069.99,8311.45,153550,19782.61,8049.7,153550,19782.61,8049.7,153550,20469.78,7726.98,153550,20469.78,7726.98,153550,21126.28,7345.74,153550,21126.28,7345.74,153550,21747.15,6908.86,153550,21747.15,6908.86,153550,22327.68,6419.65,153550,22327.68,6419.65,153550,22863.48,5881.82,153550,22863.48,5881.82,153550,23350.48,5299.44,153550,23350.48,5299.44,153550,23785.01,4676.93,153550,23785.01,4676.93,153550,24163.77,4018.99,153550,24163.77,4018.99,153550,24483.88,3330.61,153550,24483.88,3330.61,153550,24742.93,2617,153550,24742.93,2617,153550,24938.96,1883.57,153550,24938.96,1883.57,153550,25070.47,1135.88,153550,25070.47,1135.88,153550,25136.48,379.59,153550,25136.48,379.59,153550,25136.48,-379.59,153550,25136.48,-379.59,153550,25070.47,-1135.88,153550,25070.47,-1135.88,153550,24938.96,-1883.57,153550,24938.96,-1883.57,153550,24742.93,-2617,153550,24742.93,-2617,153550,24483.88,-3330.61,153550,24483.88,-3330.61,153550,24163.77,-4018.99,153550,24163.77,-4018.99,153550,23785.01,-4676.93,153550,23785.01,-4676.93,153550,23350.48,-5299.44,153550,23350.48,-5299.44,153550,22863.48,-5881.82,153550,22863.48,-5881.82,153550,22327.68,-6419.65,153550,22327.68,-6419.65,153550,21747.15,-6908.86,153550,21747.15,-6908.86,153550,21126.28,-7345.74,153550,21126.28,-7345.74,153550,20469.78,-7726.98,153550,20469.78,-7726.98,153550,19782.61,-8049.7,153550,19782.61,-8049.7,153550,19069.99,-8311.45,153550,19069.99,-8311.45,153550,18337.31,-8510.25,153550,18337.31,-8510.25,153550,17590.12,-8644.6,153550,17590.12,-8644.6,153550,17650.41,-9090.54,153550,17590.12,-8644.6,153350,18337.31,-8510.25,153350,18337.31,-8510.25,153350,19069.99,-8311.45,153350,19069.99,-8311.45,153350,19782.61,-8049.7,153350,19782.61,-8049.7,153350,20469.78,-7726.98,153350,20469.78,-7726.98,153350,21126.28,-7345.74,153350,21126.28,-7345.74,153350,21747.15,-6908.86,153350,21747.15,-6908.86,153350,22327.68,-6419.65,153350,22327.68,-6419.65,153350,22863.48,-5881.82,153350,22863.48,-5881.82,153350,23350.48,-5299.44,153350,23350.48,-5299.44,153350,23785.01,-4676.93,153350,23785.01,-4676.93,153350,24163.77,-4018.99,153350,24163.77,-4018.99,153350,24483.88,-3330.61,153350,24483.88,-3330.61,153350,24742.93,-2617,153350,24742.93,-2617,153350,24938.96,-1883.57,153350,24938.96,-1883.57,153350,25070.47,-1135.88,153350,25070.47,-1135.88,153350,25136.48,-379.59,153350,25136.48,-379.59,153350,25136.48,379.59,153350,25136.48,379.59,153350,25070.47,1135.88,153350,25070.47,1135.88,153350,24938.96,1883.57,153350,24938.96,1883.57,153350,24742.93,2617,153350,24742.93,2617,153350,24483.88,3330.61,153350,24483.88,3330.61,153350,24163.77,4018.99,153350,24163.77,4018.99,153350,23785.01,4676.93,153350,23785.01,4676.93,153350,23350.48,5299.44,153350,23350.48,5299.44,153350,22863.48,5881.82,153350,22863.48,5881.82,153350,22327.68,6419.65,153350,22327.68,6419.65,153350,21747.15,6908.86,153350,21747.15,6908.86,153350,21126.28,7345.74,153350,21126.28,7345.74,153350,20469.78,7726.98,153350,20469.78,7726.98,153350,19782.61,8049.7,153350,19782.61,8049.7,153350,19069.99,8311.45,153350,19069.99,8311.45,153350,18337.31,8510.25,153350,18337.31,8510.25,153350,17590.12,8644.6,153350,17590.12,8644.6,153350,1237.45,10855.21,153350,1237.45,10855.21,153350,1099.3,10868.34,153350,1099.3,10868.34,153350,960.54,10870.47,153350,960.54,10870.47,153350,822.05,10861.61,153350,822.05,10861.61,153350,684.7,10841.79,153350,684.7,10841.79,153350,549.35,10811.16,153350,549.35,10811.16,153350,416.85,10769.9,153350,416.85,10769.9,153350,288.03,10718.27,153350,288.03,10718.27,153350,163.72,10656.59,153350,163.72,10656.59,153350,-4657.57,8021.47,153350,-4657.57,8021.47,153350,-4784.21,7945.14,153350,-4784.21,7945.14,153350,-4903.95,7858.39,153350,-4903.95,7858.39,153350,-5015.94,7761.84,153350,-5015.94,7761.84,153350,-5119.38,7656.18,153350,-5119.38,7656.18,153350,-5213.53,7542.17,153350,-5213.53,7542.17,153350,-5297.72,7420.62,153350,-5297.72,7420.62,153350,-5371.35,7292.39,153350,-5371.35,7292.39,153350,-5433.89,7158.41,153350,-5433.89,7158.41,153350,-5484.89,7019.62,153350,-5484.89,7019.62,153350,-5524,6877.02,153350,-5524,6877.02,153350,-5550.93,6731.63,153350,-5550.93,6731.63,153350,-5565.49,6584.49,153350,-5565.49,6584.49,153350,-5567.58,6436.64,153350,-5567.58,6436.64,153350,-5386.84,14.07,153350,-5386.84,14.07,153350,-5836.66,1.41,153460,17650.41,-9090.54,153460,17590.12,-8644.6,153350,17650.41,-9090.54,153550,17650.41,-9090.54,153460,-5836.66,1.41,153550,-5386.84,14.07,153550,-5836.66,1.41,153460,-5836.66,1.41,153550,-5836.66,1.41,153550,-6017.41,6423.98,153550,-6017.41,6423.98,153550,-6014.78,6609.85,153550,-6014.78,6609.85,153550,-5996.47,6794.83,153550,-5996.47,6794.83,153550,-5962.62,6977.6,153550,-5962.62,6977.6,153550,-5913.45,7156.87,153550,-5913.45,7156.87,153550,-5849.33,7331.34,153550,-5849.33,7331.34,153550,-5770.71,7499.78,153550,-5770.71,7499.78,153550,-5678.15,7660.98,153550,-5678.15,7660.98,153550,-5572.31,7813.79,153550,-5572.31,7813.79,153550,-5453.95,7957.12,153550,-5453.95,7957.12,153550,-5323.91,8089.95,153550,-5323.91,8089.95,153550,-5183.12,8211.33,153550,-5183.12,8211.33,153550,-5032.59,8320.38,153550,-5032.59,8320.38,153550,-4873.39,8416.34,153550,-4873.39,8416.34,153550,-52.1,11051.46,153550,-52.1,11051.46,153550,104.18,11129,153550,104.18,11129,153550,266.12,11193.9,153550,266.12,11193.9,153550,432.69,11245.78,153550,432.69,11245.78,153550,602.84,11284.29,153550,602.84,11284.29,153550,775.52,11309.19,153550,775.52,11309.19,153550,949.62,11320.34,153550,949.62,11320.34,153550,1124.06,11317.66,153550,1124.06,11317.66,153550,1297.74,11301.16,153550,1297.74,11301.16,153550,17650.41,9090.54,153550,17650.41,9090.54,153550,18436.14,8949.27,153550,18436.14,8949.27,153550,19206.62,8740.21,153550,19206.62,8740.21,153550,19956,8464.96,153550,19956,8464.96,153550,20678.61,8125.59,153550,20678.61,8125.59,153550,21368.98,7724.68,153550,21368.98,7724.68,153550,22021.88,7265.26,153550,22021.88,7265.26,153550,22632.36,6750.82,153550,22632.36,6750.82,153550,23195.79,6185.25,153550,23195.79,6185.25,153550,23707.92,5572.82,153550,23707.92,5572.82,153550,24164.87,4918.19,153550,24164.87,4918.19,153550,24563.16,4226.31,153550,24563.16,4226.31,153550,24899.79,3502.42,153550,24899.79,3502.42,153550,25172.21,2752,153550,25172.21,2752,153550,25378.34,1980.74,153550,25378.34,1980.74,153550,25516.64,1194.48,153550,25516.64,1194.48,153550,25586.05,399.17,153550,25586.05,399.17,153550,25586.05,-399.17,153550,25586.05,-399.17,153550,25516.64,-1194.48,153550,25516.64,-1194.48,153550,25378.34,-1980.74,153550,25378.34,-1980.74,153550,25172.21,-2752,153550,25172.21,-2752,153550,24899.79,-3502.42,153550,24899.79,-3502.42,153550,24563.16,-4226.31,153550,24563.16,-4226.31,153550,24164.87,-4918.19,153550,24164.87,-4918.19,153550,23707.92,-5572.82,153550,23707.92,-5572.82,153550,23195.79,-6185.25,153550,23195.79,-6185.25,153550,22632.36,-6750.82,153550,22632.36,-6750.82,153550,22021.88,-7265.26,153550,22021.88,-7265.26,153550,21368.98,-7724.68,153550,21368.98,-7724.68,153550,20678.61,-8125.59,153550,20678.61,-8125.59,153550,19956,-8464.96,153550,19956,-8464.96,153550,19206.62,-8740.21,153550,19206.62,-8740.21,153550,18436.14,-8949.27,153550,18436.14,-8949.27,153550,17650.41,-9090.54,153550,-5836.66,1.41,153460,-6017.41,6423.98,153460,-6017.41,6423.98,153460,-6014.78,6609.85,153460,-6014.78,6609.85,153460,-5996.47,6794.83,153460,-5996.47,6794.83,153460,-5962.62,6977.6,153460,-5962.62,6977.6,153460,-5913.45,7156.87,153460,-5913.45,7156.87,153460,-5849.33,7331.34,153460,-5849.33,7331.34,153460,-5770.71,7499.78,153460,-5770.71,7499.78,153460,-5678.15,7660.98,153460,-5678.15,7660.98,153460,-5572.31,7813.79,153460,-5572.31,7813.79,153460,-5453.95,7957.12,153460,-5453.95,7957.12,153460,-5323.91,8089.95,153460,-5323.91,8089.95,153460,-5183.12,8211.33,153460,-5183.12,8211.33,153460,-5032.59,8320.38,153460,-5032.59,8320.38,153460,-4873.39,8416.34,153460,-4873.39,8416.34,153460,-52.1,11051.46,153460,-52.1,11051.46,153460,104.18,11129,153460,104.18,11129,153460,266.12,11193.9,153460,266.12,11193.9,153460,432.69,11245.78,153460,432.69,11245.78,153460,602.84,11284.29,153460,602.84,11284.29,153460,775.52,11309.19,153460,775.52,11309.19,153460,949.62,11320.34,153460,949.62,11320.34,153460,1124.06,11317.66,153460,1124.06,11317.66,153460,1297.74,11301.16,153460,1297.74,11301.16,153460,17650.41,9090.54,153460,17650.41,9090.54,153460,18436.14,8949.27,153460,18436.14,8949.27,153460,19206.62,8740.21,153460,19206.62,8740.21,153460,19956,8464.96,153460,19956,8464.96,153460,20678.61,8125.59,153460,20678.61,8125.59,153460,21368.98,7724.68,153460,21368.98,7724.68,153460,22021.88,7265.26,153460,22021.88,7265.26,153460,22632.36,6750.82,153460,22632.36,6750.82,153460,23195.79,6185.25,153460,23195.79,6185.25,153460,23707.92,5572.82,153460,23707.92,5572.82,153460,24164.87,4918.19,153460,24164.87,4918.19,153460,24563.16,4226.31,153460,24563.16,4226.31,153460,24899.79,3502.42,153460,24899.79,3502.42,153460,25172.21,2752,153460,25172.21,2752,153460,25378.34,1980.74,153460,25378.34,1980.74,153460,25516.64,1194.48,153460,25516.64,1194.48,153460,25586.05,399.17,153460,25586.05,399.17,153460,25586.05,-399.17,153460,25586.05,-399.17,153460,25516.64,-1194.48,153460,25516.64,-1194.48,153460,25378.34,-1980.74,153460,25378.34,-1980.74,153460,25172.21,-2752,153460,25172.21,-2752,153460,24899.79,-3502.42,153460,24899.79,-3502.42,153460,24563.16,-4226.31,153460,24563.16,-4226.31,153460,24164.87,-4918.19,153460,24164.87,-4918.19,153460,23707.92,-5572.82,153460,23707.92,-5572.82,153460,23195.79,-6185.25,153460,23195.79,-6185.25,153460,22632.36,-6750.82,153460,22632.36,-6750.82,153460,22021.88,-7265.26,153460,22021.88,-7265.26,153460,21368.98,-7724.68,153460,21368.98,-7724.68,153460,20678.61,-8125.59,153460,20678.61,-8125.59,153460,19956,-8464.96,153460,19956,-8464.96,153460,19206.62,-8740.21,153460,19206.62,-8740.21,153460,18436.14,-8949.27,153460,18436.14,-8949.27,153460,17650.41,-9090.54,153460,-5611.75,7.74,153405,-5792.49,6430.31,153405,-5792.49,6430.31,153405,-5790.14,6597.17,153405,-5790.14,6597.17,153405,-5773.7,6763.23,153405,-5773.7,6763.23,153405,-5743.31,6927.31,153405,-5743.31,6927.31,153405,-5699.17,7088.24,153405,-5699.17,7088.24,153405,-5641.61,7244.87,153405,-5641.61,7244.87,153405,-5571.03,7396.09,153405,-5571.03,7396.09,153405,-5487.93,7540.8,153405,-5487.93,7540.8,153405,-5392.92,7677.98,153405,-5392.92,7677.98,153405,-5286.66,7806.65,153405,-5286.66,7806.65,153405,-5169.92,7925.9,153405,-5169.92,7925.9,153405,-5043.54,8034.86,153405,-5043.54,8034.86,153405,-4908.4,8132.76,153405,-4908.4,8132.76,153405,-4765.48,8218.91,153405,-4765.48,8218.91,153405,55.81,10854.03,153405,55.81,10854.03,153405,196.11,10923.63,153405,196.11,10923.63,153405,341.48,10981.9,153405,341.48,10981.9,153405,491.02,11028.47,153405,491.02,11028.47,153405,643.77,11063.04,153405,643.77,11063.04,153405,798.78,11085.4,153405,798.78,11085.4,153405,955.08,11095.41,153405,955.08,11095.41,153405,1111.68,11093,153405,1111.68,11093,153405,1267.6,11078.19,153405,1267.6,11078.19,153405,17620.27,8867.57,153405,17620.27,8867.57,153405,18386.73,8729.76,153405,18386.73,8729.76,153405,19138.31,8525.83,153405,19138.31,8525.83,153405,19869.31,8257.33,153405,19869.31,8257.33,153405,20574.19,7926.29,153405,20574.19,7926.29,153405,21247.63,7535.21,153405,21247.63,7535.21,153405,21884.51,7087.06,153405,21884.51,7087.06,153405,22480.02,6585.24,153405,22480.02,6585.24,153405,23029.64,6033.53,153405,23029.64,6033.53,153405,23529.2,5436.13,153405,23529.2,5436.13,153405,23974.94,4797.56,153405,23974.94,4797.56,153405,24363.46,4122.65,153405,24363.46,4122.65,153405,24691.84,3416.51,153405,24691.84,3416.51,153405,24957.57,2684.5,153405,24957.57,2684.5,153405,25158.65,1932.16,153405,25158.65,1932.16,153405,25293.56,1165.18,153405,25293.56,1165.18,153405,25361.27,389.38,153405,25361.27,389.38,153405,25361.27,-389.38,153405,25361.27,-389.38,153405,25293.56,-1165.18,153405,25293.56,-1165.18,153405,25158.65,-1932.16,153405,25158.65,-1932.16,153405,24957.57,-2684.5,153405,24957.57,-2684.5,153405,24691.84,-3416.51,153405,24691.84,-3416.51,153405,24363.46,-4122.65,153405,24363.46,-4122.65,153405,23974.94,-4797.56,153405,23974.94,-4797.56,153405,23529.2,-5436.13,153405,23529.2,-5436.13,153405,23029.64,-6033.53,153405,23029.64,-6033.53,153405,22480.02,-6585.24,153405,22480.02,-6585.24,153405,21884.51,-7087.06,153405,21884.51,-7087.06,153405,21247.63,-7535.21,153405,21247.63,-7535.21,153405,20574.19,-7926.29,153405,20574.19,-7926.29,153405,19869.31,-8257.33,153405,19869.31,-8257.33,153405,19138.31,-8525.83,153405,19138.31,-8525.83,153405,18386.73,-8729.76,153405,18386.73,-8729.76,153405,17620.27,-8867.57,153405,-6017.41,6423.98,153460,-5567.58,6436.64,153350,-4873.39,8416.34,153460,-4657.57,8021.47,153350,-52.1,11051.46,153460,163.72,10656.59,153350,1297.74,11301.16,153460,1237.45,10855.21,153350,17650.41,9090.54,153460,17590.12,8644.6,153350,25594.74,0,153460,25144.74,0,153350,-5611.75,7.74,153550,-5792.49,6430.31,153550,-5792.49,6430.31,153550,-5790.14,6597.17,153550,-5790.14,6597.17,153550,-5773.7,6763.23,153550,-5773.7,6763.23,153550,-5743.31,6927.31,153550,-5743.31,6927.31,153550,-5699.17,7088.24,153550,-5699.17,7088.24,153550,-5641.61,7244.87,153550,-5641.61,7244.87,153550,-5571.03,7396.09,153550,-5571.03,7396.09,153550,-5487.93,7540.8,153550,-5487.93,7540.8,153550,-5392.92,7677.98,153550,-5392.92,7677.98,153550,-5286.66,7806.65,153550,-5286.66,7806.65,153550,-5169.92,7925.9,153550,-5169.92,7925.9,153550,-5043.54,8034.86,153550,-5043.54,8034.86,153550,-4908.4,8132.76,153550,-4908.4,8132.76,153550,-4765.48,8218.91,153550,-4765.48,8218.91,153550,55.81,10854.03,153550,55.81,10854.03,153550,196.11,10923.63,153550,196.11,10923.63,153550,341.48,10981.9,153550,341.48,10981.9,153550,491.02,11028.47,153550,491.02,11028.47,153550,643.77,11063.04,153550,643.77,11063.04,153550,798.78,11085.4,153550,798.78,11085.4,153550,955.08,11095.41,153550,955.08,11095.41,153550,1111.68,11093,153550,1111.68,11093,153550,1267.6,11078.19,153550,1267.6,11078.19,153550,17620.27,8867.57,153550,17620.27,8867.57,153550,18386.73,8729.76,153550,18386.73,8729.76,153550,19138.31,8525.83,153550,19138.31,8525.83,153550,19869.31,8257.33,153550,19869.31,8257.33,153550,20574.19,7926.29,153550,20574.19,7926.29,153550,21247.63,7535.21,153550,21247.63,7535.21,153550,21884.51,7087.06,153550,21884.51,7087.06,153550,22480.02,6585.24,153550,22480.02,6585.24,153550,23029.64,6033.53,153550,23029.64,6033.53,153550,23529.2,5436.13,153550,23529.2,5436.13,153550,23974.94,4797.56,153550,23974.94,4797.56,153550,24363.46,4122.65,153550,24363.46,4122.65,153550,24691.84,3416.51,153550,24691.84,3416.51,153550,24957.57,2684.5,153550,24957.57,2684.5,153550,25158.65,1932.16,153550,25158.65,1932.16,153550,25293.56,1165.18,153550,25293.56,1165.18,153550,25361.27,389.38,153550,25361.27,389.38,153550,25361.27,-389.38,153550,25361.27,-389.38,153550,25293.56,-1165.18,153550,25293.56,-1165.18,153550,25158.65,-1932.16,153550,25158.65,-1932.16,153550,24957.57,-2684.5,153550,24957.57,-2684.5,153550,24691.84,-3416.51,153550,24691.84,-3416.51,153550,24363.46,-4122.65,153550,24363.46,-4122.65,153550,23974.94,-4797.56,153550,23974.94,-4797.56,153550,23529.2,-5436.13,153550,23529.2,-5436.13,153550,23029.64,-6033.53,153550,23029.64,-6033.53,153550,22480.02,-6585.24,153550,22480.02,-6585.24,153550,21884.51,-7087.06,153550,21884.51,-7087.06,153550,21247.63,-7535.21,153550,21247.63,-7535.21,153550,20574.19,-7926.29,153550,20574.19,-7926.29,153550,19869.31,-8257.33,153550,19869.31,-8257.33,153550,19138.31,-8525.83,153550,19138.31,-8525.83,153550,18386.73,-8729.76,153550,18386.73,-8729.76,153550,17620.27,-8867.57,153550,-5567.58,6436.64,153550,-6017.41,6423.98,153550,-4657.57,8021.47,153550,-4873.39,8416.34,153550,163.72,10656.59,153550,-52.1,11051.46,153550,1237.45,10855.21,153550,1297.74,11301.16,153550,17590.12,8644.6,153550,17650.41,9090.54,153550,25144.74,0,153550,25594.74,0,153550,-5836.66,1.41,153505,-6017.41,6423.98,153505,-6017.41,6423.98,153505,-6014.78,6609.85,153505,-6014.78,6609.85,153505,-5996.47,6794.83,153505,-5996.47,6794.83,153505,-5962.62,6977.6,153505,-5962.62,6977.6,153505,-5913.45,7156.87,153505,-5913.45,7156.87,153505,-5849.33,7331.34,153505,-5849.33,7331.34,153505,-5770.71,7499.78,153505,-5770.71,7499.78,153505,-5678.15,7660.98,153505,-5678.15,7660.98,153505,-5572.31,7813.79,153505,-5572.31,7813.79,153505,-5453.95,7957.12,153505,-5453.95,7957.12,153505,-5323.91,8089.95,153505,-5323.91,8089.95,153505,-5183.12,8211.33,153505,-5183.12,8211.33,153505,-5032.59,8320.38,153505,-5032.59,8320.38,153505,-4873.39,8416.34,153505,-4873.39,8416.34,153505,-52.1,11051.46,153505,-52.1,11051.46,153505,104.18,11129,153505,104.18,11129,153505,266.12,11193.9,153505,266.12,11193.9,153505,432.69,11245.78,153505,432.69,11245.78,153505,602.84,11284.29,153505,602.84,11284.29,153505,775.52,11309.19,153505,775.52,11309.19,153505,949.62,11320.34,153505,949.62,11320.34,153505,1124.06,11317.66,153505,1124.06,11317.66,153505,1297.74,11301.16,153505,1297.74,11301.16,153505,17650.41,9090.54,153505,17650.41,9090.54,153505,18436.14,8949.27,153505,18436.14,8949.27,153505,19206.62,8740.21,153505,19206.62,8740.21,153505,19956,8464.96,153505,19956,8464.96,153505,20678.61,8125.59,153505,20678.61,8125.59,153505,21368.98,7724.68,153505,21368.98,7724.68,153505,22021.88,7265.26,153505,22021.88,7265.26,153505,22632.36,6750.82,153505,22632.36,6750.82,153505,23195.79,6185.25,153505,23195.79,6185.25,153505,23707.92,5572.82,153505,23707.92,5572.82,153505,24164.87,4918.19,153505,24164.87,4918.19,153505,24563.16,4226.31,153505,24563.16,4226.31,153505,24899.79,3502.42,153505,24899.79,3502.42,153505,25172.21,2752,153505,25172.21,2752,153505,25378.34,1980.74,153505,25378.34,1980.74,153505,25516.64,1194.48,153505,25516.64,1194.48,153505,25586.05,399.17,153505,25586.05,399.17,153505,25586.05,-399.17,153505,25586.05,-399.17,153505,25516.64,-1194.48,153505,25516.64,-1194.48,153505,25378.34,-1980.74,153505,25378.34,-1980.74,153505,25172.21,-2752,153505,25172.21,-2752,153505,24899.79,-3502.42,153505,24899.79,-3502.42,153505,24563.16,-4226.31,153505,24563.16,-4226.31,153505,24164.87,-4918.19,153505,24164.87,-4918.19,153505,23707.92,-5572.82,153505,23707.92,-5572.82,153505,23195.79,-6185.25,153505,23195.79,-6185.25,153505,22632.36,-6750.82,153505,22632.36,-6750.82,153505,22021.88,-7265.26,153505,22021.88,-7265.26,153505,21368.98,-7724.68,153505,21368.98,-7724.68,153505,20678.61,-8125.59,153505,20678.61,-8125.59,153505,19956,-8464.96,153505,19956,-8464.96,153505,19206.62,-8740.21,153505,19206.62,-8740.21,153505,18436.14,-8949.27,153505,18436.14,-8949.27,153505,17650.41,-9090.54,153505,-6017.41,6423.98,153550,-6017.41,6423.98,153460,-4873.39,8416.34,153550,-4873.39,8416.34,153460,-52.1,11051.46,153550,-52.1,11051.46,153460,1297.74,11301.16,153550,1297.74,11301.16,153460,17650.41,9090.54,153550,17650.41,9090.54,153460,25594.74,0,153550,25594.74,0,153460,24670.63,-4012.95,153546.58,24670.45,-4012.87,153546.56,24635.58,-4084.8,153543.69,24670.63,-4012.95,153546.58,24749.17,-3947.45,150550,24981.55,-4044.13,150550,24671.6,-4010.52,153460,24453.24,-3917.78,153402.09,24670.45,-4012.87,153546.56,24671.6,-4010.52,153460,24946.2,-4115.95,150550,24727.07,-3992.34,150550,24431.14,-3962.66,153402.08,24636.75,-4081.43,153460,24636.75,-4081.43,153460,24635.18,-4084.58,153543.65,24981.55,-4044.13,150550,24946.2,-4115.95,150550,24727.07,-3992.34,150550,24431.14,-3962.66,153402.08,24635.18,-4084.58,153543.65,24635.58,-4084.8,153543.69,24453.24,-3917.78,153402.09,24749.17,-3947.45,150550,24946.2,-4115.95,150550,24635.58,-4084.8,153543.69,24981.55,-4044.13,150550,24670.63,-4012.95,153546.58,24865.36,-3995.79,150550,24566.32,-3965.8,153432.08,24826.27,-4028.56,152046.58,24596.46,-3932.14,152021.74,24836.63,-4054.15,150550,24537.6,-4024.16,153432.07,24574.55,-3977.05,152019.93,24791.21,-4100.41,152043.69,24963.88,-4080.04,150550,24653.1,-4048.88,153545.14,24791.21,-4100.41,152043.69,24826.27,-4028.56,152046.58,22602.25,-6778.43,153548.31,22602.23,-6778.41,153548.3,22543.34,-6832.32,153543.31,22602.25,-6778.43,153548.31,22852.76,-6892.59,150543.31,22852.6,-6892.39,150543.29,22911.67,-6838.7,150548.31,22852.76,-6892.59,150543.31,22852.76,-6892.59,150543.31,22852.44,-6892.53,150546.41,22911.67,-6838.7,150548.31,22602.25,-6778.43,153548.31,22731.02,-6663.64,150550,22911.41,-6838.58,150550,22911.41,-6838.58,150550,22911.48,-6838.52,150548.28,22605.98,-6774.99,153460,22436.89,-6606.34,153401.69,22602.23,-6778.41,153548.3,22605.98,-6774.99,153460,22852.07,-6892.46,150550,22693.87,-6697.26,150550,22852.6,-6892.39,150543.29,22852.44,-6892.53,150546.41,22399.75,-6639.96,153401.69,22547.21,-6828.17,153460,22547.21,-6828.17,153460,22543.02,-6831.93,153543.27,22901.44,-6847.77,150550,22852.07,-6892.46,150550,22852.44,-6892.53,150546.41,22901.44,-6847.77,150550,22693.87,-6697.26,150550,22399.75,-6639.96,153401.69,22543.02,-6831.93,153543.27,22543.34,-6832.32,153543.31,22436.89,-6606.34,153401.69,22731.02,-6663.64,150550,22911.48,-6838.52,150548.28,22911.67,-6838.7,150548.31,22852.07,-6892.46,150550,22543.34,-6832.32,153543.31,22821.26,-6751.15,150550,22524.03,-6693.26,153431.74,22756.96,-6808.56,152048.31,22578.74,-6633.97,152026.42,22882.22,-6865.65,150545.81,22882,-6865.6,150547.9,22881.78,-6865.56,150550,22572.79,-6805.37,153545.81,22698.05,-6862.46,152043.31,22756.96,-6808.56,152048.31,22772.97,-6794.86,150550,22475.75,-6736.96,153431.74,22541.92,-6667.66,152023.3,22698.05,-6862.46,152043.31,19583.44,-8611.63,153543.46,19632.99,-8592.7,153547.85,19885.44,-8706.41,150543.46,19885.38,-8706.23,150543.45,19959.92,-8677.95,150550.06,19885.44,-8706.41,150543.46,19885.44,-8706.41,150543.46,19885.15,-8706.32,150546.38,19959.92,-8677.95,150550.06,19658.16,-8583.25,153547.66,19856.42,-8449.22,150550,19959.59,-8677.22,150550,19664.62,-8580.81,153460,19569.41,-8359.15,153401.09,19658.16,-8583.25,153547.66,19664.62,-8580.81,153460,19884.78,-8706.2,150550,19809.45,-8466.87,150550,19885.38,-8706.23,150543.45,19885.15,-8706.32,150546.38,19522.44,-8376.8,153401.11,19590.06,-8608.62,153460,19590.06,-8608.62,153460,19583.28,-8611.12,153543.43,19938.17,-8686.13,150550,19884.78,-8706.2,150550,19885.15,-8706.32,150546.38,19911.71,-8696.25,150547.53,19911.71,-8696.25,150547.53,19938.17,-8686.13,150550,19632.99,-8592.7,153547.85,19658.16,-8583.25,153547.66,19809.45,-8466.87,150550,19522.44,-8376.8,153401.11,19583.28,-8611.12,153543.43,19583.44,-8611.63,153543.46,19569.41,-8359.15,153401.09,19856.42,-8449.22,150550,19959.59,-8677.22,150550,19959.92,-8677.95,150550.06,19884.78,-8706.2,150550,19583.44,-8611.63,153543.46,19922.68,-8692.18,150546.76,19922.52,-8692.13,150548.38,19922.35,-8692.08,150550,19620.68,-8597.41,153546.76,19734.44,-8659.02,152043.46,19808.92,-8630.57,152050.06,19908.17,-8563.59,150550,19618.13,-8472.57,153431.23,19808.92,-8630.57,152050.06,19707.17,-8402.38,152032.6,19847.12,-8586.54,150550,19557.07,-8495.52,153431.27,19660.62,-8420.17,152028.48,19734.44,-8659.02,152043.46,25196.22,-2675.31,153545.95,25195.98,-2675.25,153545.93,25172.74,-2751.76,153543.98,25196.22,-2675.31,153545.95,25263.18,-2634.34,150550,25507.82,-2693.78,150550,25196.44,-2673.72,153460,24966.53,-2616.75,153402.18,25195.98,-2675.25,153545.93,25196.44,-2673.72,153460,25484.13,-2770.22,150550,25248.37,-2682.11,150550,24951.72,-2664.52,153402.18,25173.1,-2749.15,153460,25173.1,-2749.15,153460,25172.33,-2751.61,153543.94,25507.82,-2693.78,150550,25484.13,-2770.22,150550,25248.37,-2682.11,150550,24951.72,-2664.52,153402.18,25172.33,-2751.61,153543.94,25172.74,-2751.76,153543.98,24966.53,-2616.75,153402.18,25263.18,-2634.34,150550,25484.13,-2770.22,150550,25172.74,-2751.76,153543.98,25507.82,-2693.78,150550,25196.22,-2675.31,153545.95,25385.5,-2664.06,150550,25085.73,-2646.29,153432.16,25352.23,-2684.56,152045.95,25110.24,-2625.27,152020.42,25366.25,-2726.17,150550,25066.49,-2708.39,153432.15,25095.57,-2673.05,152019.19,25328.75,-2761.01,152043.98,25495.98,-2732,150550,25184.48,-2713.53,153544.97,25328.75,-2761.01,152043.98,25352.23,-2684.56,152045.95,23942.57,-5252.09,153547.25,23942.45,-5252.01,153547.24,23896.8,-5317.59,153543.5,23942.57,-5252.09,153547.25,24206.5,-5361.93,150543.5,24206.26,-5361.75,150543.47,24252.27,-5296.43,150547.25,24206.5,-5361.93,150543.5,24206.5,-5361.93,150543.5,24206.17,-5361.88,150546.72,24252.27,-5296.43,150547.25,23942.57,-5252.09,153547.25,24037.51,-5164.86,150550,24251.94,-5296.36,150550,24251.94,-5296.36,150550,24252.01,-5296.27,150547.23,23944.52,-5249.05,153460,23743.09,-5122.71,153401.95,23942.45,-5252.01,153547.24,23944.52,-5249.05,153460,24205.83,-5361.84,150550,24008.66,-5205.76,150550,24206.26,-5361.75,150543.47,24206.17,-5361.88,150546.72,23714.25,-5163.61,153401.94,23898.97,-5313.73,153460,23898.97,-5313.73,153460,23896.43,-5317.3,153543.46,24248.87,-5300.8,150550,24205.83,-5361.84,150550,24206.17,-5361.88,150546.72,24248.87,-5300.8,150550,24008.66,-5205.76,150550,23714.25,-5163.61,153401.94,23896.43,-5317.3,153543.46,23896.8,-5317.59,153543.5,23743.09,-5122.71,153401.95,24037.51,-5164.86,150550,24252.01,-5296.27,150547.23,24252.27,-5296.43,150547.25,24205.83,-5361.84,150550,23896.8,-5317.59,153543.5,24144.75,-5230.62,150550,23847.23,-5188.03,153431.96,24097.42,-5274.26,152047.25,23885.4,-5143.08,152023.43,24229.38,-5329.18,150545.38,24229.15,-5329.14,150547.68,24228.91,-5329.11,150550,23919.68,-5284.84,153545.38,24051.65,-5339.76,152043.5,24097.42,-5274.26,152047.25,24107.24,-5283.8,150550,23809.73,-5241.21,153431.95,23856.8,-5184.02,152021.08,24051.65,-5339.76,152043.5,23585.17,-5729.9,153547.6,23585.1,-5729.85,153547.6,23535.32,-5792.32,153543.38,23585.17,-5729.9,153547.6,23847.21,-5838.31,150543.38,23847,-5838.12,150543.35,23897.07,-5775.89,150547.6,23847.21,-5838.31,150543.38,23847.21,-5838.31,150543.38,23846.88,-5838.26,150546.57,23897.07,-5775.89,150547.6,23585.17,-5729.9,153547.6,23691.25,-5630.88,150550,23896.76,-5775.81,150550,23896.76,-5775.81,150550,23896.83,-5775.72,150547.58,23587.7,-5726.6,153460,23394.75,-5587.16,153401.88,23585.1,-5729.85,153547.6,23587.7,-5726.6,153460,23846.53,-5838.21,150550,23659.82,-5669.86,150550,23847,-5838.12,150543.35,23846.88,-5838.26,150546.57,23363.32,-5626.14,153401.87,23538.02,-5788.22,153460,23538.02,-5788.22,153460,23534.95,-5791.99,153543.33,23891.52,-5782.43,150550,23846.53,-5838.21,150550,23846.88,-5838.26,150546.57,23891.52,-5782.43,150550,23659.82,-5669.86,150550,23363.32,-5626.14,153401.87,23534.95,-5791.99,153543.33,23535.32,-5792.32,153543.38,23394.75,-5587.16,153401.88,23691.25,-5630.88,150550,23896.83,-5775.72,150547.58,23897.07,-5775.89,150547.6,23846.53,-5838.21,150550,23535.32,-5792.32,153543.38,23794.04,-5703.37,150550,23494.42,-5659.19,153431.9,23741.12,-5752.9,152047.6,23537.98,-5608.28,152024.27,23872.14,-5807.1,150545.49,23871.91,-5807.07,150547.74,23871.67,-5807.03,150550,23560.25,-5761.11,153545.49,23691.27,-5815.32,152043.38,23741.12,-5752.9,152047.6,23753.17,-5754.03,150550,23453.55,-5709.85,153431.9,23506.82,-5647.3,152021.63,23691.27,-5815.32,152043.38,21401.08,-7704.63,153543.34,21456.95,-7667.63,153548.1,21706.66,-7779.67,150543.34,21706.54,-7779.47,150543.32,21773.18,-7735.61,150549.01,21706.66,-7779.67,150543.34,21706.66,-7779.67,150543.34,21706.35,-7779.6,150546.35,21773.18,-7735.61,150549.01,21467.67,-7660.58,153548.48,21622.04,-7534.78,150550,21772.99,-7735.46,150550,21772.99,-7735.46,150550,21773.04,-7735.42,150548.99,21472.58,-7657.34,153460,21331.6,-7463.45,153401.46,21467.67,-7660.58,153548.48,21472.58,-7657.34,153460,21705.98,-7779.51,150550,21580.1,-7562.23,150550,21706.54,-7779.47,150543.32,21706.35,-7779.6,150546.35,21289.66,-7490.9,153401.47,21406.12,-7700.77,153460,21406.12,-7700.77,153460,21400.83,-7704.19,153543.3,21758.11,-7745.38,150550,21705.98,-7779.51,150550,21706.35,-7779.6,150546.35,21758.11,-7745.38,150550,21456.95,-7667.63,153548.1,21467.67,-7660.58,153548.48,21580.1,-7562.23,150550,21289.66,-7490.9,153401.47,21400.83,-7704.19,153543.3,21401.08,-7704.63,153543.34,21331.6,-7463.45,153401.46,21622.04,-7534.78,150550,21773.04,-7735.42,150548.99,21773.18,-7735.61,150549.01,21705.98,-7779.51,150550,21401.08,-7704.63,153543.34,21697.56,-7635.18,150550,21404.06,-7563.1,153431.55,21620.4,-7698.09,152049.01,21471.41,-7497.79,152028.83,21739.92,-7757.64,150546.18,21739.72,-7757.59,150548.09,21739.53,-7757.55,150550,21434.35,-7682.6,153546.18,21553.87,-7742.15,152043.34,21620.4,-7698.09,152049.01,21643.04,-7670.87,150550,21349.53,-7598.79,153431.56,21429.83,-7525.33,152025.28,21553.87,-7742.15,152043.34,20889.68,-8012.08,153543.31,20941.64,-7982.27,153547.86,21197.55,-8090.87,150543.31,21197.45,-8090.68,150543.29,21266.74,-8051.18,150549.37,21197.55,-8090.87,150543.31,21197.55,-8090.87,150543.31,21197.24,-8090.79,150546.29,21266.74,-8051.18,150549.37,20959,-7972.41,153548.14,21128.84,-7841.14,150550,21266.58,-8051.01,150550,21266.58,-8051.01,150550,21266.62,-8050.99,150549.35,20964.48,-7969.29,153460,20836.23,-7766.25,153401.36,20959,-7972.41,153548.14,20964.48,-7969.29,153460,21196.86,-8090.7,150550,21085.21,-7865.85,150550,21197.45,-8090.68,150543.29,21197.24,-8090.79,150546.29,20792.59,-7790.96,153401.37,20895.29,-8008.34,153460,20895.29,-8008.34,153460,20889.45,-8011.6,153543.27,21249.44,-8060.92,150550,21196.86,-8090.7,150550,21197.24,-8090.79,150546.29,21223.4,-8075.88,150547.49,21223.4,-8075.88,150547.49,21249.44,-8060.92,150550,20941.64,-7982.27,153547.86,20959,-7972.41,153548.14,21085.21,-7865.85,150550,20792.59,-7790.96,153401.37,20889.45,-8011.6,153543.27,20889.68,-8012.08,153543.31,20836.23,-7766.25,153401.36,21128.84,-7841.14,150550,21266.62,-8050.99,150549.35,21266.74,-8051.18,150549.37,21196.86,-8090.7,150550,20889.68,-8012.08,153543.31,21197.76,-7946.15,150550,20902.06,-7870.47,153431.46,21112.81,-8011.78,152049.37,20976.97,-7802.27,152029.92,21232.15,-8071.02,150546.34,21231.96,-8070.98,150548.17,21231.77,-8070.93,150550,20924.28,-7992.23,153546.34,21043.62,-8051.47,152043.31,21112.81,-8011.78,152049.37,21141.03,-7978.27,150550,20845.33,-7902.59,153431.48,20933.72,-7827.08,152026.14,21043.62,-8051.47,152043.31,18199.57,-8999.82,153543.69,18246.96,-8989.76,153547.96,18493.66,-9110.74,150543.69,18493.63,-9110.58,150543.68,18571.61,-9094.2,150550.72,18493.66,-9110.74,150543.69,18493.66,-9110.74,150543.69,18493.37,-9110.63,150546.59,18571.61,-9094.2,150550.72,18277.91,-8983.43,153546.81,18504.97,-8852.33,150550,18568.56,-9082.92,150550,18285.12,-8981.93,153460,18225.51,-8746.93,153400.79,18277.91,-8983.43,153546.81,18285.12,-8981.93,153460,18493.04,-9110.5,150550,18455.82,-8862.51,150550,18493.63,-9110.58,150543.68,18493.37,-9110.63,150546.59,18176.35,-8757.1,153400.84,18207,-8997.79,153460,18207,-8997.79,153460,18199.49,-8999.27,153543.66,18545.97,-9099.55,150550,18493.04,-9110.5,150550,18493.37,-9110.63,150546.59,18519.72,-9105.12,150547.61,18519.72,-9105.12,150547.61,18545.97,-9099.55,150550,18246.96,-8989.76,153547.96,18277.91,-8983.43,153546.81,18455.82,-8862.51,150550,18176.35,-8757.1,153400.84,18199.49,-8999.27,153543.66,18199.57,-8999.82,153543.69,18225.51,-8746.93,153400.79,18504.97,-8852.33,150550,18568.56,-9082.92,150550,18571.61,-9094.2,150550.72,18493.04,-9110.5,150550,18199.57,-8999.82,153543.69,18532.64,-9102.47,150547.2,18532.5,-9102.42,150548.6,18532.36,-9102.37,150550,18238.55,-8991.55,153547.2,18346.61,-9055.28,152043.69,18424.57,-9038.74,152050.72,18538.33,-8973.28,150550,18255.91,-8866.76,153430.98,18424.57,-9038.74,152050.72,18359.36,-8797.41,152035.4,18474.43,-8986.51,150550,18192,-8879.99,153431.04,18310.64,-8807.75,152031.01,18346.61,-9055.28,152043.69,17885.75,-8963.91,150532.04,17590.63,-8847.03,153532.04,17590.63,-8847.03,153532.04,17610.72,-9096.4,153543.73,17610.72,-9096.4,153543.73,17656.84,-9089.67,153548.01,17905.84,-9213.28,150543.73,17885.75,-8963.91,150532.04,17984.67,-9201.78,150551.04,17905.84,-9213.28,150543.73,17905.84,-9213.28,150543.73,17610.72,-9096.4,153543.73,17984.67,-9201.78,150551.04,17690.05,-9085.09,153545.95,17933.71,-8956.2,150550,17981.09,-9184.1,150550,17697.59,-9084.04,153460,17653.28,-8845.14,153400.66,17690.05,-9085.09,153545.95,17697.59,-9084.04,153460,17656.84,-9089.67,153548.01,17690.05,-9085.09,153545.95,17653.28,-8845.14,153400.66,17933.71,-8956.2,150550,17981.09,-9184.1,150550,17984.67,-9201.78,150551.04,17895.8,-9088.6,150537.89,17600.68,-8971.72,153537.89,17738.19,-8905.47,152032.04,17758.28,-9154.84,152043.73,17959.24,-9079.01,150550,17675.84,-8966.77,153430.87,17837.11,-9143.34,152051.04,17787.46,-8898.28,152036.61,17945.25,-9207.53,150547.39,17650.13,-9090.65,153547.39,17758.28,-9154.84,152043.73,17837.11,-9143.34,152051.04,23622.87,-5149.19,154463.95,23817.57,-5305.65,154482.33,23651.65,-5108.36,154465.87,23728.92,-5119.79,153550,23863.63,-5240.31,154485.4,23651.65,-5108.36,154465.87,23817.57,-5305.65,154482.33,23863.63,-5240.31,154485.4,23896.67,-5317.36,153544.67,23896.49,-5317.22,153544.66,23942.73,-5252.02,153547.74,23896.67,-5317.36,153544.67,23896.67,-5317.36,153544.67,23896.42,-5317.32,153547.71,23942.73,-5252.02,153547.74,23863.63,-5240.31,154485.4,23728.92,-5119.79,153550,23942.49,-5251.96,153550,23942.49,-5251.96,153550,23942.53,-5251.9,153547.73,23896.23,-5317.3,153550,23699.97,-5160.61,153550,23896.49,-5317.22,153544.66,23896.42,-5317.32,153547.71,23937.47,-5259.14,153550,23896.23,-5317.3,153550,23896.42,-5317.32,153547.71,23917.02,-5288.25,153547.95,23917.02,-5288.25,153547.95,23937.47,-5259.14,153550,23699.97,-5160.61,153550,23622.87,-5149.19,154463.95,23942.53,-5251.9,153547.73,23942.73,-5252.02,153547.74,23896.23,-5317.3,153550,23817.57,-5305.65,154482.33,23835.73,-5185.89,153550,23757.64,-5174.33,154475.64,23903.18,-5246.16,154016.57,23691.21,-5114.21,153997.04,23798.1,-5238.95,153550,23720.22,-5227.42,154473.14,23662.42,-5155.05,153995.12,23857.12,-5311.51,154013.5,23919.7,-5284.69,153546.21,23919.54,-5284.67,153548.1,23919.38,-5284.64,153550,23840.6,-5272.98,154483.87,23857.12,-5311.51,154013.5,23903.18,-5246.16,154016.57,23251.34,-5608.07,154666.9,23435.38,-5776.94,154685.24,23282.71,-5569.2,154669.13,23380.65,-5584,153550,23485.57,-5714.75,154688.81,23282.71,-5569.2,154669.13,23435.38,-5776.94,154685.24,23485.57,-5714.75,154688.81,23535.22,-5792.03,153544.41,23535.05,-5791.87,153544.4,23585.41,-5729.83,153547.98,23535.22,-5792.03,153544.41,23535.22,-5792.03,153544.41,23534.95,-5791.99,153547.45,23585.41,-5729.83,153547.98,23485.57,-5714.75,154688.81,23380.65,-5584,153550,23585.17,-5729.76,153550,23585.17,-5729.76,153550,23585.22,-5729.7,153547.96,23534.73,-5791.95,153550,23349.08,-5622.84,153550,23535.05,-5791.87,153544.4,23534.95,-5791.99,153547.45,23578.35,-5738.28,153550,23534.73,-5791.95,153550,23534.95,-5791.99,153547.45,23556.72,-5765.15,153547.87,23556.72,-5765.15,153547.87,23578.35,-5738.28,153550,23349.08,-5622.84,153550,23251.34,-5608.07,154666.9,23585.22,-5729.7,153547.96,23585.41,-5729.83,153547.98,23534.73,-5791.95,153550,23435.38,-5776.94,154685.24,23482.94,-5656.9,153550,23384.14,-5641.97,154678.97,23535.49,-5722.29,154118.39,23332.63,-5576.74,154098.72,23441.91,-5707.4,153550,23343.36,-5692.5,154676.07,23301.26,-5615.61,154096.49,23485.3,-5784.48,154114.82,23560.31,-5760.93,153546.2,23560.15,-5760.91,153548.1,23559.98,-5760.88,153550,23460.48,-5745.84,154687.02,23485.3,-5784.48,154114.82,23535.49,-5722.29,154118.39,21063.95,-7433.27,155865.94,21186.78,-7650.92,155882.17,21105.74,-7406,155869.15,21318.36,-7458.87,153550,21253.64,-7607.3,155887.3,21105.74,-7406,155869.15,21186.78,-7650.92,155882.17,21253.64,-7607.3,155887.3,21401.15,-7704.23,153544,21401.05,-7704.05,153543.98,21468.01,-7660.6,153549.13,21401.15,-7704.23,153544,21401.15,-7704.23,153544,21400.87,-7704.16,153546.97,21468.01,-7660.6,153549.13,21253.64,-7607.3,155887.3,21318.36,-7458.87,153550,21467.84,-7660.46,153550,21467.84,-7660.46,153550,21467.88,-7660.44,153549.12,21400.6,-7704.09,153550,21276.28,-7486.06,153550,21401.05,-7704.05,153543.98,21400.87,-7704.16,153546.97,21452.14,-7670.78,153550,21400.6,-7704.09,153550,21400.87,-7704.16,153546.97,21426.57,-7687.49,153547.74,21426.57,-7687.49,153547.74,21452.14,-7670.78,153550,21276.28,-7486.06,153550,21063.95,-7433.27,155865.94,21467.88,-7660.44,153549.12,21468.01,-7660.6,153549.13,21400.6,-7704.09,153550,21186.78,-7650.92,155882.17,21393.14,-7559.73,153550,21179.69,-7506.65,155878.23,21360.82,-7633.95,154718.22,21212.92,-7432.65,154700.07,21338.44,-7595.08,153550,21125.37,-7542.09,155874.05,21171.13,-7459.92,154696.86,21293.96,-7677.58,154713.08,21434.58,-7682.42,153546.56,21434.42,-7682.38,153548.28,21434.26,-7682.34,153550,21220.21,-7629.11,155884.73,21293.96,-7677.58,154713.08,21360.82,-7633.95,154718.22,20537.1,-7723.29,156155.18,20645.51,-7948.53,156170.67,20580.56,-7698.81,156158.63,20823.16,-7761.47,153550,20715.05,-7909.35,156176.19,20580.56,-7698.81,156158.63,20645.51,-7948.53,156170.67,20715.05,-7909.35,156176.19,20889.8,-8011.63,153543.93,20889.71,-8011.45,153543.92,20959.33,-7972.45,153549.46,20889.8,-8011.63,153543.93,20889.8,-8011.63,153543.93,20889.52,-8011.56,153546.88,20959.33,-7972.45,153549.46,20715.05,-7909.35,156176.19,20823.16,-7761.47,153550,20959.19,-7972.3,153550,20959.19,-7972.3,153550,20959.22,-7972.29,153549.44,20889.23,-8011.48,153550,20779.38,-7785.87,153550,20889.71,-8011.45,153543.92,20889.52,-8011.56,153546.88,20941.29,-7982.47,153550,20889.23,-8011.48,153550,20889.52,-8011.56,153546.88,20915.46,-7997.03,153547.72,20915.46,-7997.03,153547.72,20941.29,-7982.47,153550,20779.38,-7785.87,153550,20537.1,-7723.29,156155.18,20959.22,-7972.29,153549.44,20959.33,-7972.45,153549.46,20889.23,-8011.48,153550,20645.51,-7948.53,156170.67,20891.22,-7866.95,153550,20647.8,-7804.08,156167.41,20837.19,-7940.9,154862.83,20702.7,-7730.36,154845.26,20834.31,-7898.68,153550,20591.31,-7835.91,156162.92,20659.24,-7754.84,154841.81,20767.65,-7980.08,154857.3,20924.56,-7992.04,153546.69,20924.41,-7992,153548.35,20924.26,-7991.96,153550,20680.28,-7928.94,156173.43,20767.65,-7980.08,154857.3,20837.19,-7940.9,154862.83,17791.64,-8609.39,157664.26,17825.42,-8857.28,157675.85,17840.49,-8599.51,157668.35,18213.76,-8741.13,153550,17903.57,-8841.48,157682.39,17840.49,-8599.51,157668.35,17825.42,-8857.28,157675.85,17903.57,-8841.48,157682.39,18199.9,-8999.35,153544.17,18199.88,-8999.2,153544.16,18278.06,-8983.55,153550.71,18199.9,-8999.35,153544.17,18199.9,-8999.35,153544.17,18199.64,-8999.24,153547.13,18278.06,-8983.55,153550.71,17903.57,-8841.48,157682.39,18213.76,-8741.13,153550,18274.87,-8971.35,153550,18199.37,-8999.15,153550,18164.55,-8750.86,153550,18199.88,-8999.2,153544.16,18199.64,-8999.24,153547.13,18251.9,-8988.76,153550,18199.37,-8999.15,153550,18199.64,-8999.24,153547.13,18225.81,-8994.03,153547.81,18225.81,-8994.03,153547.81,18251.9,-8988.76,153550,18164.55,-8750.86,153550,17791.64,-8609.39,157664.26,18274.87,-8971.35,153550,18278.06,-8983.55,153550.71,18199.37,-8999.15,153550,17825.42,-8857.28,157675.85,18245.94,-8862.35,153550,17872.03,-8720.5,157675.37,18090.81,-8912.52,155616.55,18027.73,-8670.55,155602.51,18238.98,-8991.45,153547.44,18238.86,-8991.41,153548.72,18238.75,-8991.36,153550,17864.5,-8849.38,157679.12,18012.66,-8928.31,155610.01,18090.81,-8912.52,155616.55,18181.96,-8875,153550,17808.53,-8733.33,157670.05,17978.89,-8680.42,155598.42,18012.66,-8928.31,155610.01,17593.49,-8846.31,153533.55,17186.37,-8684.47,157997.12,17186.37,-8684.47,157997.12,17204,-8934.07,158007.78,17235.74,-8677.79,158001.38,17641.75,-8839.19,153550,17282.99,-8923.39,158014.59,17235.74,-8677.79,158001.38,17204,-8934.07,158007.78,17282.99,-8923.39,158014.59,17611.12,-9095.91,153544.2,17593.49,-8846.31,153533.55,17690.11,-9085.23,153551.02,17611.12,-9095.91,153544.2,17611.12,-9095.91,153544.2,17204,-8934.07,158007.78,17690.11,-9085.23,153551.02,17282.99,-8923.39,158014.59,17641.75,-8839.19,153550,17686.46,-9066.25,153550,17686.46,-9066.25,153550,17690.11,-9085.23,153551.02,17665.98,-8962.23,153550,17259.37,-8800.59,158007.99,17486.55,-9004.31,155782.81,17439.3,-8758.71,155769.59,17602.31,-8971.11,153538.87,17195.19,-8809.27,158002.45,17389.93,-8765.39,155765.33,17407.56,-9014.99,155775.99,17650.62,-9090.57,153547.61,17243.5,-8928.73,158011.18,17407.56,-9014.99,155775.99,17486.55,-9004.31,155782.81,24981.71,-4044.25,150546.71,24981.54,-4044.18,150546.69,24946.87,-4116.22,150543.97,24981.71,-4044.25,150546.71,25046.55,-3978.37,147550,25279.14,-4074.3,147550,24982.62,-4041.95,150460,24763.49,-3949.77,150401.97,24981.54,-4044.18,150546.69,24982.62,-4041.95,150460,25244.03,-4146.23,147550,25024.61,-4023.33,147550,24741.55,-3994.73,150401.96,24947.98,-4113.01,150460,24947.98,-4113.01,150460,24946.5,-4116.01,150543.93,25279.14,-4074.3,147550,25244.03,-4146.23,147550,25024.61,-4023.33,147550,24741.55,-3994.73,150401.96,24946.5,-4116.01,150543.93,24946.87,-4116.22,150543.97,24763.49,-3949.77,150401.97,25046.55,-3978.37,147550,25244.03,-4146.23,147550,24946.87,-4116.22,150543.97,25279.14,-4074.3,147550,24981.71,-4044.25,150546.71,25162.85,-4026.33,147550,24876.81,-3997.44,150431.98,25130.59,-4059.29,149046.71,24900.37,-3963.6,149022.9,25134.32,-4084.78,147550,24848.28,-4055.89,150431.97,24878.59,-4008.58,149021.19,25095.75,-4131.25,149043.97,25261.58,-4110.26,147550,24964.29,-4080.23,150545.34,25095.75,-4131.25,149043.97,25130.59,-4059.29,149046.71,22911.29,-6838.72,150548.34,22911.28,-6838.71,150548.33,22852.67,-6892.96,150543.6,22911.29,-6838.72,150548.34,23148.58,-6950.92,147543.6,23148.42,-6950.73,147543.58,23207.2,-6896.69,147548.34,23148.58,-6950.92,147543.6,23148.58,-6950.92,147543.6,23148.28,-6950.86,147546.65,23207.2,-6896.69,147548.34,22911.29,-6838.72,150548.34,23025.62,-6722.69,147550,23206.95,-6896.58,147550,23206.95,-6896.58,147550,23207.02,-6896.51,147548.32,22914.81,-6835.45,150460,22744.36,-6667.6,150401.59,22911.28,-6838.71,150548.33,22914.81,-6835.45,150460,23147.95,-6950.8,147550,22988.7,-6756.53,147550,23148.42,-6950.73,147543.58,23148.28,-6950.86,147546.65,22707.43,-6701.44,150401.59,22856.34,-6888.99,150460,22856.34,-6888.99,150460,22852.38,-6892.59,150543.57,23196.99,-6905.86,147550,23147.95,-6950.8,147550,23148.28,-6950.86,147546.65,23196.99,-6905.86,147550,22988.7,-6756.53,147550,22707.43,-6701.44,150401.59,22852.38,-6892.59,150543.57,22852.67,-6892.96,150543.6,22744.36,-6667.6,150401.59,23025.62,-6722.69,147550,23207.02,-6896.51,147548.32,23207.2,-6896.69,147548.34,23147.95,-6950.8,147550,22852.67,-6892.96,150543.6,23116.33,-6809.67,147550,22832.1,-6754,150431.66,23059.25,-6867.71,149048.34,22879.91,-6694.15,149027.29,23177.89,-6923.8,147545.97,23177.69,-6923.76,147547.98,23177.49,-6923.73,147550,22881.98,-6865.84,150545.97,23000.63,-6921.94,149043.6,23059.25,-6867.71,149048.34,23068.32,-6853.66,147550,22784.09,-6797.99,150431.66,22843.27,-6728.05,149024.34,23000.63,-6921.94,149043.6,19885.14,-8706.87,150543.73,19934.53,-8687.53,150547.89,20173.92,-8797.82,147543.73,20173.87,-8797.65,147543.72,20248.19,-8768.75,147549.99,20173.92,-8797.82,147543.73,20173.92,-8797.82,147543.73,20173.65,-8797.74,147546.62,20248.19,-8768.75,147549.99,19959.63,-8677.86,150547.71,20142.83,-8540.91,147550,20248.11,-8768.58,147550,20248.11,-8768.58,147550,20248.11,-8768.58,147549.98,19965.74,-8675.49,150460,19868.38,-8454.47,150401.02,19959.63,-8677.86,150547.71,19965.74,-8675.49,150460,20173.32,-8797.63,147550,20096.03,-8558.96,147550,20173.87,-8797.65,147543.72,20173.65,-8797.74,147546.62,19821.59,-8472.52,150401.05,19891.43,-8703.94,150460,19891.43,-8703.94,150460,19884.99,-8706.38,150543.7,20226.64,-8777.06,147550,20173.32,-8797.63,147550,20173.65,-8797.74,147546.62,20200.19,-8787.43,147547.63,20200.19,-8787.43,147547.63,20226.64,-8777.06,147550,19934.53,-8687.53,150547.89,19959.63,-8677.86,150547.71,20096.03,-8558.96,147550,19821.59,-8472.52,150401.05,19884.99,-8706.38,150543.7,19885.14,-8706.87,150543.73,19868.38,-8454.47,150401.02,20142.83,-8540.91,147550,20248.11,-8768.58,147549.98,20248.19,-8768.75,147549.99,20173.32,-8797.63,147550,19885.14,-8706.87,150543.73,20195.51,-8654.83,147550,19918.16,-8567.47,150431.18,20103.8,-8723.27,149049.99,20000.06,-8495.94,149033.11,20211.06,-8783.29,147546.86,20210.91,-8783.24,147548.43,20210.75,-8783.19,147550,19922.27,-8692.33,150546.86,20029.53,-8752.35,149043.73,20103.8,-8723.27,149049.99,20134.68,-8678.3,147550,19857.33,-8590.94,150431.21,19953.65,-8514.11,149029.2,20029.53,-8752.35,149043.73,25508.1,-2693.89,150546.11,25507.88,-2693.83,150546.09,25484.79,-2770.39,150544.25,25508.1,-2693.89,150546.11,25561.55,-2652.81,147550,25806.21,-2711.7,147550,25508.31,-2692.39,150460,25277.77,-2635.86,150402.06,25507.88,-2693.83,150546.09,25508.31,-2692.39,150460,25782.71,-2788.19,147550,25546.86,-2700.62,147550,25263.08,-2683.67,150402.05,25485.14,-2767.91,150460,25485.14,-2767.91,150460,25484.41,-2770.25,150544.21,25806.21,-2711.7,147550,25782.71,-2788.19,147550,25546.86,-2700.62,147550,25263.08,-2683.67,150402.05,25484.41,-2770.25,150544.21,25484.79,-2770.39,150544.25,25277.77,-2635.86,150402.06,25561.55,-2652.81,147550,25782.71,-2788.19,147550,25484.79,-2770.39,150544.25,25806.21,-2711.7,147550,25508.1,-2693.89,150546.11,25683.88,-2682.25,147550,25397.12,-2665.12,150432.05,25657.35,-2702.8,149046.11,25415.12,-2644.06,149021.66,25664.78,-2744.4,147550,25378.02,-2727.27,150432.05,25400.55,-2691.88,149020.5,25634.03,-2779.31,149044.25,25794.46,-2749.94,147550,25496.44,-2732.14,150545.18,25634.03,-2779.31,149044.25,25657.35,-2702.8,149046.11,24252.01,-5296.5,150547.34,24251.9,-5296.43,150547.33,24206.49,-5362.19,150543.78,24252.01,-5296.5,150547.34,24502.71,-5404.89,147543.78,24502.49,-5404.72,147543.76,24548.23,-5339.2,147547.34,24502.71,-5404.89,147543.78,24502.71,-5404.89,147543.78,24502.4,-5404.85,147546.94,24548.23,-5339.2,147547.34,24252.01,-5296.5,150547.34,24333.05,-5208.52,147550,24547.92,-5339.14,147550,24547.92,-5339.14,147550,24547.98,-5339.05,147547.32,24253.84,-5293.62,150460,24051.46,-5167.93,150401.84,24251.9,-5296.43,150547.33,24253.84,-5293.62,150460,24502.09,-5404.8,147550,24304.39,-5249.55,147550,24502.49,-5404.72,147543.76,24502.4,-5404.85,147546.94,24022.8,-5208.95,150401.83,24208.55,-5358.5,150460,24208.55,-5358.5,150460,24206.14,-5361.92,150543.75,24544.67,-5343.87,147550,24502.09,-5404.8,147550,24502.4,-5404.85,147546.94,24523.61,-5374.37,147547.65,24523.61,-5374.37,147547.65,24544.67,-5343.87,147550,24304.39,-5249.55,147550,24022.8,-5208.95,150401.83,24206.14,-5361.92,150543.75,24206.49,-5362.19,150543.78,24051.46,-5167.93,150401.84,24333.05,-5208.52,147550,24547.98,-5339.05,147547.32,24548.23,-5339.2,147547.34,24502.09,-5404.8,147550,24206.49,-5362.19,150543.78,24440.51,-5273.84,147550,24155.95,-5232.82,150431.87,24400.12,-5317.85,149047.34,24187.46,-5187.53,149024.49,24525.47,-5372.05,147545.56,24525.25,-5372.01,147547.78,24525.03,-5371.98,147550,24229.25,-5329.34,150545.56,24354.6,-5383.54,149043.78,24400.12,-5317.85,149047.34,24403.24,-5327.18,147550,24118.69,-5286.16,150431.86,24159.02,-5228.59,149022.27,24354.6,-5383.54,149043.78,23896.75,-5775.96,150547.67,23896.68,-5775.91,150547.67,23847.19,-5838.63,150543.67,23896.75,-5775.96,150547.67,24145.48,-5882.88,147543.67,24145.28,-5882.7,147543.65,24195.05,-5820.21,147547.67,24145.48,-5882.88,147543.67,24145.48,-5882.88,147543.67,24145.17,-5882.83,147546.8,24195.05,-5820.21,147547.67,23896.75,-5775.96,150547.67,23988.63,-5676.24,147550,24194.76,-5820.14,147550,24194.76,-5820.14,147550,24194.83,-5820.05,147547.65,23899.13,-5772.83,150460,23705.07,-5634.17,150401.77,23896.68,-5775.91,150547.67,23899.13,-5772.83,150460,24144.85,-5882.78,147550,23957.4,-5715.37,147550,24145.28,-5882.7,147543.65,24145.17,-5882.83,147546.8,23673.84,-5673.3,150401.77,23849.74,-5834.71,150460,23849.74,-5834.71,150460,23846.84,-5838.32,150543.63,24189.42,-5826.94,147550,24144.85,-5882.78,147550,24145.17,-5882.83,147546.8,24189.42,-5826.94,147550,23957.4,-5715.37,147550,23673.84,-5673.3,150401.77,23846.84,-5838.32,150543.63,23847.19,-5838.63,150543.67,23705.07,-5634.17,150401.77,23988.63,-5676.24,147550,24194.83,-5820.05,147547.65,24195.05,-5820.21,147547.67,24144.85,-5882.78,147550,23847.19,-5838.63,150543.67,24091.73,-5748.21,147550,23805.18,-5705.7,150431.81,24045.9,-5798.09,149047.67,23841.94,-5654.48,149025.27,24170.27,-5851.55,147545.67,24170.05,-5851.51,147547.83,24169.84,-5851.48,147550,23871.97,-5807.29,150545.67,23996.33,-5860.75,149043.67,24045.9,-5798.09,149047.67,24051.13,-5799.08,147550,23764.58,-5756.57,150431.81,23810.96,-5693.64,149022.77,23996.33,-5860.75,149043.67,21706.5,-7780.08,150543.62,21762.05,-7742.76,150548.14,21998.7,-7852.21,147543.62,21998.58,-7852.02,147543.61,22064.95,-7807.7,147549.01,21998.7,-7852.21,147543.62,21998.7,-7852.21,147543.62,21998.41,-7852.14,147546.6,22064.95,-7807.7,147549.01,21772.8,-7735.58,150548.5,21912.55,-7607.9,147550,22064.77,-7807.56,147550,22064.77,-7807.56,147550,22064.82,-7807.52,147548.99,21777.44,-7732.48,150460,21634.83,-7539.34,150401.38,21772.8,-7735.58,150548.5,21777.44,-7732.48,150460,21998.07,-7852.06,147550,21870.81,-7635.64,147550,21998.58,-7852.02,147543.61,21998.41,-7852.14,147546.6,21593.09,-7567.08,150401.38,21711.27,-7776.36,150460,21711.27,-7776.36,150460,21706.25,-7779.66,150543.59,22049.99,-7817.56,147550,21998.07,-7852.06,147550,21998.41,-7852.14,147546.6,22024.26,-7834.87,147547.61,22024.26,-7834.87,147547.61,22049.99,-7817.56,147550,21762.05,-7742.76,150548.14,21772.8,-7735.58,150548.5,21870.81,-7635.64,147550,21593.09,-7567.08,150401.38,21706.25,-7779.66,150543.59,21706.5,-7780.08,150543.62,21634.83,-7539.34,150401.38,21912.55,-7607.9,147550,22064.82,-7807.52,147548.99,22064.95,-7807.7,147549.01,21998.07,-7852.06,147550,21706.5,-7780.08,150543.62,21988.71,-7707.79,147550,21708.05,-7638.51,150431.48,21918.85,-7771.64,149049.01,21768.44,-7572.33,149029.56,22031.82,-7829.96,147546.31,22031.65,-7829.91,147548.15,22031.47,-7829.87,147550,21739.62,-7757.82,150546.31,21852.6,-7816.14,149043.62,21918.85,-7771.64,149049.01,21934.44,-7743.85,147550,21653.79,-7674.57,150431.49,21727.03,-7600.14,149026.2,21852.6,-7816.14,149043.62,21197.34,-8091.32,150543.59,21249,-8061.17,150547.9,21491.73,-8166.97,147543.59,21491.64,-8166.79,147543.58,21560.65,-8126.76,147549.34,21491.73,-8166.97,147543.59,21491.73,-8166.97,147543.59,21491.44,-8166.9,147546.54,21560.65,-8126.76,147549.34,21266.38,-8051.13,150548.17,21421.24,-7917.78,147550,21560.49,-8126.6,147550,21560.49,-8126.6,147550,21560.53,-8126.58,147549.32,21271.55,-8048.13,150460,21141.45,-7845.88,150401.28,21266.38,-8051.13,150548.17,21271.55,-8048.13,150460,21491.1,-8166.81,147550,21377.81,-7942.83,147550,21491.64,-8166.79,147543.58,21491.44,-8166.9,147546.54,21098.02,-7870.92,150401.29,21202.66,-8087.72,150460,21202.66,-8087.72,150460,21197.12,-8090.87,150543.56,21543.5,-8136.6,147550,21491.1,-8166.81,147550,21491.44,-8166.9,147546.54,21517.53,-8151.77,147547.59,21517.53,-8151.77,147547.59,21543.5,-8136.6,147550,21249,-8061.17,150547.9,21266.38,-8051.13,150548.17,21377.81,-7942.83,147550,21098.02,-7870.92,150401.29,21197.12,-8090.87,150543.56,21197.34,-8091.32,150543.59,21141.45,-7845.88,150401.28,21421.24,-7917.78,147550,21560.53,-8126.58,147549.32,21560.65,-8126.76,147549.34,21491.1,-8166.81,147550,21197.34,-8091.32,150543.59,21490.91,-8022.26,147550,21208.16,-7949.6,150431.39,21413.46,-8088.93,149049.34,21275.95,-7880.45,149030.59,21526.19,-8146.87,147546.47,21526.02,-8146.82,147548.23,21525.84,-8146.78,147550,21231.8,-8071.21,150546.47,21344.54,-8129.15,149043.59,21413.46,-8088.93,149049.34,21434.46,-8054.82,147550,21151.71,-7982.15,150431.41,21232.88,-7905.58,149027,21344.54,-8129.15,149043.59,18493.26,-9111.19,150543.94,18540.62,-9100.69,150548,18774.5,-9217.61,147543.94,18774.47,-9217.45,147543.93,18852.33,-9200.36,147550.62,18774.5,-9217.61,147543.94,18774.5,-9217.61,147543.94,18774.23,-9217.51,147546.83,18852.33,-9200.36,147550.62,18571.44,-9094.07,150546.9,18783.49,-8959.13,147550,18849.52,-9190.33,147550,18578.28,-9092.58,150460,18516.25,-8858,150400.75,18571.44,-9094.07,150546.9,18578.28,-9092.58,150460,18773.93,-9217.4,147550,18734.46,-8969.76,147550,18774.47,-9217.45,147543.93,18774.23,-9217.51,147546.83,18467.21,-8868.63,150400.79,18500.33,-9109.18,150460,18500.33,-9109.18,150460,18493.18,-9110.67,150543.91,18826.91,-9205.91,147550,18773.93,-9217.4,147550,18774.23,-9217.51,147546.83,18800.61,-9211.74,147547.71,18800.61,-9211.74,147547.71,18826.91,-9205.91,147550,18540.62,-9100.69,150548,18571.44,-9094.07,150546.9,18734.46,-8969.76,147550,18467.21,-8868.63,150400.79,18493.18,-9110.67,150543.91,18493.26,-9111.19,150543.94,18516.25,-8858,150400.75,18783.49,-8959.13,147550,18849.52,-9190.33,147550,18852.33,-9200.36,147550.62,18773.93,-9217.4,147550,18493.26,-9111.19,150543.94,18813.41,-9208.98,147547.28,18813.28,-9208.94,147548.64,18813.16,-9208.89,147550,18532.17,-9102.56,150547.28,18633.88,-9164.4,149043.94,18711.71,-9147.15,149050.62,18817.94,-9079.76,147550,18547.86,-8977.56,150430.94,18711.71,-9147.15,149050.62,18644.21,-8906.42,149035.75,18754.19,-9093.58,147550,18484.11,-8991.38,150431,18595.57,-8917.21,149031.57,18633.88,-9164.4,149043.94,18165,-9076.62,147532.54,17882.73,-8964.58,150532.54,17882.73,-8964.58,150532.54,17905.37,-9213.74,150543.98,17905.37,-9213.74,150543.98,17951.51,-9206.54,150548.05,18187.64,-9325.78,147543.98,18165,-9076.62,147532.54,18266.38,-9313.49,147550.93,18187.64,-9325.78,147543.98,18187.64,-9325.78,147543.98,17905.37,-9213.74,150543.98,18266.38,-9313.49,147550.93,17984.57,-9201.63,150546.09,18212.98,-9068.44,147550,18262.94,-9297.34,147550,17991.73,-9200.55,150460,17944.76,-8961.99,150400.62,17984.57,-9201.63,150546.09,17991.73,-9200.55,150460,17951.51,-9206.54,150548.05,17984.57,-9201.63,150546.09,17944.76,-8961.99,150400.62,18212.98,-9068.44,147550,18262.94,-9297.34,147550,18266.38,-9313.49,147550.93,18176.32,-9201.2,147538.26,17894.05,-9089.16,150538.26,18023.86,-9020.6,149032.54,18046.51,-9269.76,149043.98,18239.72,-9190.98,147550,17968.67,-9083.4,150430.84,18125.25,-9257.47,149050.93,18073.08,-9012.92,149036.89,18227.01,-9319.63,147547.45,17944.74,-9207.6,150547.45,18046.51,-9269.76,149043.98,18125.25,-9257.47,149050.93,25351.62,-2099.22,153545.64,25351.33,-2099.17,153545.61,25333.08,-2177.03,153544.19,25351.62,-2099.22,153545.64,25414.16,-2073.75,150550,25662.13,-2117.4,150550,25351.57,-2098.17,153460,25118.52,-2056.44,153402.21,25351.33,-2099.17,153545.61,25351.57,-2098.17,153460,25643.44,-2195.2,150550,25402.48,-2122.38,150550,25106.84,-2105.07,153402.2,25333.18,-2174.93,153460,25333.18,-2174.93,153460,25332.7,-2176.91,153544.15,25662.13,-2117.4,150550,25643.44,-2195.2,150550,25402.48,-2122.38,150550,25106.84,-2105.07,153402.2,25332.7,-2176.91,153544.15,25333.08,-2177.03,153544.19,25118.52,-2056.44,153402.21,25414.16,-2073.75,150550,25643.44,-2195.2,150550,25333.08,-2177.03,153544.19,25662.13,-2117.4,150550,25351.62,-2099.22,153545.64,25538.15,-2095.58,150550,25239.39,-2078.09,153432.19,25507.1,-2108.32,152045.64,25261.8,-2064.83,152019.95,25522.96,-2158.79,150550,25224.21,-2141.3,153432.17,25250.21,-2113.46,152019.04,25488.56,-2186.13,152044.19,25652.79,-2156.3,150550,25342.35,-2138.13,153544.92,25488.56,-2186.13,152044.19,25507.1,-2108.32,152045.64,25662.49,-2117.48,150545.82,25662.22,-2117.43,150545.79,25644.06,-2195.32,150544.45,25662.49,-2117.48,150545.82,25711.66,-2091.71,147550,25959.57,-2135.01,147550,25662.44,-2116.49,150460,25428.83,-2075.02,150402.09,25662.22,-2117.43,150545.79,25662.44,-2116.49,150460,25941,-2212.84,147550,25700.05,-2140.35,147550,25417.23,-2123.66,150402.08,25644.15,-2193.32,150460,25644.15,-2193.32,150460,25643.7,-2195.21,150544.41,25959.57,-2135.01,147550,25941,-2212.84,147550,25700.05,-2140.35,147550,25417.23,-2123.66,150402.08,25643.7,-2195.21,150544.41,25644.06,-2195.32,150544.45,25428.83,-2075.02,150402.09,25711.66,-2091.71,147550,25941,-2212.84,147550,25644.06,-2195.32,150544.45,25959.57,-2135.01,147550,25662.49,-2117.48,150545.82,25835.62,-2113.36,147550,25549.81,-2096.5,150432.08,25811.24,-2126.26,149045.82,25565.77,-2083.1,149021.22,25820.53,-2176.6,147550,25534.73,-2159.73,150432.07,25554.24,-2131.75,149020.37,25792.8,-2204.09,149044.45,25950.29,-2173.93,147550,25653.27,-2156.4,150545.13,25792.8,-2204.09,149044.45,25811.24,-2126.26,149045.82],ns={type:"change"},rs={type:"start"},is={type:"end"},as=function(e){g(n,e);var t=x(n);function n(e,r){var i;w(this,n),(i=t.call(this)).object=e,i.domElement=r,i.domElement.style.touchAction="none",i.enabled=!0,i.target=new Ct,i.minDistance=0,i.maxDistance=1/0,i.minZoom=0,i.maxZoom=1/0,i.minPolarAngle=0,i.maxPolarAngle=Math.PI,i.minAzimuthAngle=-1/0,i.maxAzimuthAngle=1/0,i.enableDamping=!1,i.dampingFactor=.05,i.enableZoom=!0,i.zoomSpeed=1,i.enableRotate=!0,i.rotateSpeed=1,i.enablePan=!0,i.panSpeed=1,i.screenSpacePanning=!0,i.keyPanSpeed=7,i.autoRotate=!1,i.autoRotateSpeed=2,i.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},i.mouseButtons={LEFT:C,MIDDLE:L,RIGHT:A},i.touches={ONE:P,TWO:D},i.target0=i.target.clone(),i.position0=i.object.position.clone(),i.zoom0=i.object.zoom,i._domElementKeyEvents=null,i.getPolarAngle=function(){return u.phi},i.getAzimuthalAngle=function(){return u.theta},i.getDistance=function(){return this.object.position.distanceTo(this.target)},i.listenToKeyEvents=function(e){e.addEventListener("keydown",te),this._domElementKeyEvents=e},i.saveState=function(){a.target0.copy(a.target),a.position0.copy(a.object.position),a.zoom0=a.object.zoom},i.reset=function(){a.target.copy(a.target0),a.object.position.copy(a.position0),a.object.zoom=a.zoom0,a.object.updateProjectionMatrix(),a.dispatchEvent(ns),a.update(),s=o.NONE},i.update=function(){var t=new Ct,n=(new kt).setFromUnitVectors(e.up,new Ct(0,1,0)),r=n.clone().invert(),i=new Ct,p=new kt,m=2*Math.PI;return function(){var e=a.object.position;t.copy(e).sub(a.target),t.applyQuaternion(n),u.setFromVector3(t),a.autoRotate&&s===o.NONE&&I(2*Math.PI/60/60*a.autoRotateSpeed),a.enableDamping?(u.theta+=c.theta*a.dampingFactor,u.phi+=c.phi*a.dampingFactor):(u.theta+=c.theta,u.phi+=c.phi);var v=a.minAzimuthAngle,g=a.maxAzimuthAngle;return isFinite(v)&&isFinite(g)&&(v<-Math.PI?v+=m:v>Math.PI&&(v-=m),g<-Math.PI?g+=m:g>Math.PI&&(g-=m),u.theta=v<=g?Math.max(v,Math.min(g,u.theta)):u.theta>(v+g)/2?Math.max(v,u.theta):Math.min(g,u.theta)),u.phi=Math.max(a.minPolarAngle,Math.min(a.maxPolarAngle,u.phi)),u.makeSafe(),u.radius*=d,u.radius=Math.max(a.minDistance,Math.min(a.maxDistance,u.radius)),!0===a.enableDamping?a.target.addScaledVector(f,a.dampingFactor):a.target.add(f),t.setFromSpherical(u),t.applyQuaternion(r),e.copy(a.target).add(t),a.object.lookAt(a.target),!0===a.enableDamping?(c.theta*=1-a.dampingFactor,c.phi*=1-a.dampingFactor,f.multiplyScalar(1-a.dampingFactor)):(c.set(0,0,0),f.set(0,0,0)),d=1,!!(h||i.distanceToSquared(a.object.position)>l||8*(1-p.dot(a.object.quaternion))>l)&&(a.dispatchEvent(ns),i.copy(a.object.position),p.copy(a.object.quaternion),h=!1,!0)}}(),i.dispose=function(){a.domElement.removeEventListener("contextmenu",ne),a.domElement.removeEventListener("pointerdown",K),a.domElement.removeEventListener("pointercancel",J),a.domElement.removeEventListener("wheel",ee),a.domElement.removeEventListener("pointermove",Q),a.domElement.removeEventListener("pointerup",$),null!==a._domElementKeyEvents&&a._domElementKeyEvents.removeEventListener("keydown",te)};var a=v(i),o={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6},s=o.NONE,l=1e-6,u=new es,c=new es,d=1,f=new Ct,h=!1,p=new tt,m=new tt,g=new tt,y=new tt,_=new tt,x=new tt,b=new tt,S=new tt,M=new tt,E=[],T={};function k(){return Math.pow(.95,a.zoomSpeed)}function I(e){c.theta-=e}function O(e){c.phi-=e}var z=function(){var e=new Ct;return function(t,n){e.setFromMatrixColumn(n,0),e.multiplyScalar(-t),f.add(e)}}(),U=function(){var e=new Ct;return function(t,n){!0===a.screenSpacePanning?e.setFromMatrixColumn(n,1):(e.setFromMatrixColumn(n,0),e.crossVectors(a.object.up,e)),e.multiplyScalar(t),f.add(e)}}(),F=function(){var e=new Ct;return function(t,n){var r=a.domElement;if(a.object.isPerspectiveCamera){var i=a.object.position;e.copy(i).sub(a.target);var o=e.length();o*=Math.tan(a.object.fov/2*Math.PI/180),z(2*t*o/r.clientHeight,a.object.matrix),U(2*n*o/r.clientHeight,a.object.matrix)}else a.object.isOrthographicCamera?(z(t*(a.object.right-a.object.left)/a.object.zoom/r.clientWidth,a.object.matrix),U(n*(a.object.top-a.object.bottom)/a.object.zoom/r.clientHeight,a.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),a.enablePan=!1)}}();function B(e){a.object.isPerspectiveCamera?d/=e:a.object.isOrthographicCamera?(a.object.zoom=Math.max(a.minZoom,Math.min(a.maxZoom,a.object.zoom*e)),a.object.updateProjectionMatrix(),h=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),a.enableZoom=!1)}function V(e){a.object.isPerspectiveCamera?d*=e:a.object.isOrthographicCamera?(a.object.zoom=Math.max(a.minZoom,Math.min(a.maxZoom,a.object.zoom/e)),a.object.updateProjectionMatrix(),h=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),a.enableZoom=!1)}function H(e){p.set(e.clientX,e.clientY)}function G(e){y.set(e.clientX,e.clientY)}function W(){if(1===E.length)p.set(E[0].pageX,E[0].pageY);else{var e=.5*(E[0].pageX+E[1].pageX),t=.5*(E[0].pageY+E[1].pageY);p.set(e,t)}}function j(){if(1===E.length)y.set(E[0].pageX,E[0].pageY);else{var e=.5*(E[0].pageX+E[1].pageX),t=.5*(E[0].pageY+E[1].pageY);y.set(e,t)}}function q(){var e=E[0].pageX-E[1].pageX,t=E[0].pageY-E[1].pageY,n=Math.sqrt(e*e+t*t);b.set(0,n)}function X(e){if(1==E.length)m.set(e.pageX,e.pageY);else{var t=ae(e),n=.5*(e.pageX+t.x),r=.5*(e.pageY+t.y);m.set(n,r)}g.subVectors(m,p).multiplyScalar(a.rotateSpeed);var i=a.domElement;I(2*Math.PI*g.x/i.clientHeight),O(2*Math.PI*g.y/i.clientHeight),p.copy(m)}function Y(e){if(1===E.length)_.set(e.pageX,e.pageY);else{var t=ae(e),n=.5*(e.pageX+t.x),r=.5*(e.pageY+t.y);_.set(n,r)}x.subVectors(_,y).multiplyScalar(a.panSpeed),F(x.x,x.y),y.copy(_)}function Z(e){var t=ae(e),n=e.pageX-t.x,r=e.pageY-t.y,i=Math.sqrt(n*n+r*r);S.set(0,i),M.set(0,Math.pow(S.y/b.y,a.zoomSpeed)),B(M.y),b.copy(S)}function K(e){!1!==a.enabled&&(0===E.length&&(a.domElement.setPointerCapture(e.pointerId),a.domElement.addEventListener("pointermove",Q),a.domElement.addEventListener("pointerup",$)),function(e){E.push(e)}(e),"touch"===e.pointerType?function(e){switch(ie(e),E.length){case 1:switch(a.touches.ONE){case P:if(!1===a.enableRotate)return;W(),s=o.TOUCH_ROTATE;break;case R:if(!1===a.enablePan)return;j(),s=o.TOUCH_PAN;break;default:s=o.NONE}break;case 2:switch(a.touches.TWO){case D:if(!1===a.enableZoom&&!1===a.enablePan)return;a.enableZoom&&q(),a.enablePan&&j(),s=o.TOUCH_DOLLY_PAN;break;case N:if(!1===a.enableZoom&&!1===a.enableRotate)return;a.enableZoom&&q(),a.enableRotate&&W(),s=o.TOUCH_DOLLY_ROTATE;break;default:s=o.NONE}break;default:s=o.NONE}s!==o.NONE&&a.dispatchEvent(rs)}(e):function(e){var t;switch(e.button){case 0:t=a.mouseButtons.LEFT;break;case 1:t=a.mouseButtons.MIDDLE;break;case 2:t=a.mouseButtons.RIGHT;break;default:t=-1}switch(t){case L:if(!1===a.enableZoom)return;!function(e){b.set(e.clientX,e.clientY)}(e),s=o.DOLLY;break;case C:if(e.ctrlKey||e.metaKey||e.shiftKey){if(!1===a.enablePan)return;G(e),s=o.PAN}else{if(!1===a.enableRotate)return;H(e),s=o.ROTATE}break;case A:if(e.ctrlKey||e.metaKey||e.shiftKey){if(!1===a.enableRotate)return;H(e),s=o.ROTATE}else{if(!1===a.enablePan)return;G(e),s=o.PAN}break;default:s=o.NONE}s!==o.NONE&&a.dispatchEvent(rs)}(e))}function Q(e){!1!==a.enabled&&("touch"===e.pointerType?function(e){switch(ie(e),s){case o.TOUCH_ROTATE:if(!1===a.enableRotate)return;X(e),a.update();break;case o.TOUCH_PAN:if(!1===a.enablePan)return;Y(e),a.update();break;case o.TOUCH_DOLLY_PAN:if(!1===a.enableZoom&&!1===a.enablePan)return;!function(e){a.enableZoom&&Z(e),a.enablePan&&Y(e)}(e),a.update();break;case o.TOUCH_DOLLY_ROTATE:if(!1===a.enableZoom&&!1===a.enableRotate)return;!function(e){a.enableZoom&&Z(e),a.enableRotate&&X(e)}(e),a.update();break;default:s=o.NONE}}(e):function(e){switch(s){case o.ROTATE:if(!1===a.enableRotate)return;!function(e){m.set(e.clientX,e.clientY),g.subVectors(m,p).multiplyScalar(a.rotateSpeed);var t=a.domElement;I(2*Math.PI*g.x/t.clientHeight),O(2*Math.PI*g.y/t.clientHeight),p.copy(m),a.update()}(e);break;case o.DOLLY:if(!1===a.enableZoom)return;!function(e){S.set(e.clientX,e.clientY),M.subVectors(S,b),M.y>0?B(k()):M.y<0&&V(k()),b.copy(S),a.update()}(e);break;case o.PAN:if(!1===a.enablePan)return;!function(e){_.set(e.clientX,e.clientY),x.subVectors(_,y).multiplyScalar(a.panSpeed),F(x.x,x.y),y.copy(_),a.update()}(e)}}(e))}function $(e){re(e),0===E.length&&(a.domElement.releasePointerCapture(e.pointerId),a.domElement.removeEventListener("pointermove",Q),a.domElement.removeEventListener("pointerup",$)),a.dispatchEvent(is),s=o.NONE}function J(e){re(e)}function ee(e){!1!==a.enabled&&!1!==a.enableZoom&&s===o.NONE&&(e.preventDefault(),a.dispatchEvent(rs),function(e){e.deltaY<0?V(k()):e.deltaY>0&&B(k()),a.update()}(e),a.dispatchEvent(is))}function te(e){!1!==a.enabled&&!1!==a.enablePan&&function(e){var t=!1;switch(e.code){case a.keys.UP:e.ctrlKey||e.metaKey||e.shiftKey?O(2*Math.PI*a.rotateSpeed/a.domElement.clientHeight):F(0,a.keyPanSpeed),t=!0;break;case a.keys.BOTTOM:e.ctrlKey||e.metaKey||e.shiftKey?O(-2*Math.PI*a.rotateSpeed/a.domElement.clientHeight):F(0,-a.keyPanSpeed),t=!0;break;case a.keys.LEFT:e.ctrlKey||e.metaKey||e.shiftKey?I(2*Math.PI*a.rotateSpeed/a.domElement.clientHeight):F(a.keyPanSpeed,0),t=!0;break;case a.keys.RIGHT:e.ctrlKey||e.metaKey||e.shiftKey?I(-2*Math.PI*a.rotateSpeed/a.domElement.clientHeight):F(-a.keyPanSpeed,0),t=!0}t&&(e.preventDefault(),a.update())}(e)}function ne(e){!1!==a.enabled&&e.preventDefault()}function re(e){delete T[e.pointerId];for(var t=0;t<E.length;t++)if(E[t].pointerId==e.pointerId)return void E.splice(t,1)}function ie(e){var t=T[e.pointerId];void 0===t&&(t=new tt,T[e.pointerId]=t),t.set(e.pageX,e.pageY)}function ae(e){var t=e.pointerId===E[0].pointerId?E[1]:E[0];return T[t.pointerId]}return a.domElement.addEventListener("contextmenu",ne),a.domElement.addEventListener("pointerdown",K),a.domElement.addEventListener("pointercancel",J),a.domElement.addEventListener("wheel",ee,{passive:!1}),i.update(),i}return T(n)}(Ge),os=n(184);function ss(){var e=(0,t.useRef)();return(0,t.useEffect)((function(){if(""==e.current.innerHTML){var t=new xo,n=new kr(35,window.innerWidth/window.innerHeight,.1,754928),r=new yo;r.setSize(window.innerWidth,window.innerHeight),r.setClearColor(16777215),e.current.appendChild(r.domElement);var i=function(e,t){for(var n=new bo({color:t}),r=new ir,i=[],a=0;a<e.length;a++)i.push(e[a]);r.setAttribute("position",new Kn(i,3)),r.computeBoundingSphere();var o=r.boundingSphere.center;return r.applyMatrix4((new an).makeRotationX(-Math.PI/2)),new Ao(r.translate(-o.x,-o.y,-o.z),n)}(ts,0);t.add(i);var a=new as(n,r.domElement);n.position.x=-10164,n.position.y=-2.81,n.position.z=55164,n.near=1,a.update();!function e(){requestAnimationFrame(e),r.render(t,n),i.rotation.y+=5e-4}()}}),[]),(0,os.jsx)("div",{ref:e})}r.createRoot(document.getElementById("root")).render((0,os.jsx)(t.StrictMode,{children:(0,os.jsx)(ss,{})}))}()}();
//# sourceMappingURL=main.ec67c9ad.js.map